
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import TYPE_CHECKING
from ....gadgets.tlobject import TLRequest
from ....gadgets.byteutils import Long, Writer


if TYPE_CHECKING:
    from ...types.input_peer import TypeInputPeer


class ViewSponsoredMessage(TLRequest[bool]):
    """
    Mark a specific [sponsored message](https://core.telegram.org/api/sponsored-messages) as read
    """

    _id = 0X673AD8F1
    _result_id = 0X43B904E1

    def __init__(
        self,
        peer: 'TypeInputPeer',
        random_id: bytes = None
    ):

        """
        Mark a specific [sponsored message](https://core.telegram.org/api/sponsored-messages) as read

        Args:
            peer ('TypeInputPeer'): The channel/bot where the ad is located
            random_id (bytes, optional): The ad's unique ID.
        """

        self.peer = peer
        self.random_id = Long.to_bytes(Long()) if random_id is None else random_id

    def to_bytes(self, boxed: bool=True):
        with Writer(b'\xf1\xd8:g' if boxed else b'') as writer:
            writer.object(
                self.peer,
                group_id=0X995DB9DF
            )
            writer.bytes(self.random_id)

            return writer.getvalue()