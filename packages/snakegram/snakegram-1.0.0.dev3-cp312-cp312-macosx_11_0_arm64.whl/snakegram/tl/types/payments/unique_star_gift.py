
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import List, TYPE_CHECKING
from ....gadgets.tlobject import TLObject
from ....gadgets.byteutils import Writer


if TYPE_CHECKING:
    from ..user import TypeUser
    from ..star_gift import TypeStarGift
    from ....gadgets.byteutils import Reader


class UniqueStarGift(TLObject, family='TypePaymentsUniqueStarGift'):
    _id = 0XCAA2F60B
    _group_id = 0XAE501323

    def __init__(
        self,
        gift: 'TypeStarGift',
        users: List['TypeUser']
    ):

        self.gift = gift
        self.users = users

    def to_bytes(self, boxed: bool=True):
        with Writer(b'\x0b\xf6\xa2\xca' if boxed else b'') as writer:
            writer.object(
                self.gift,
                group_id=0X87440C7B
            )
            writer.vector(
                self.users,
                lambda value: writer.object(
                    value,
                    group_id=0X9BABE43A
                )
            )

            return writer.getvalue()

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        gift_ = reader.object(
            group_id=0X87440C7B
        )

        users_ = reader.vector(
            lambda: reader.object(
                group_id=0X9BABE43A
            )
        )

        return cls(
            gift=gift_,
            users=users_
        )

TypePaymentsUniqueStarGift = UniqueStarGift