
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import TYPE_CHECKING
from ....gadgets.tlobject import TLRequest
from ....gadgets.byteutils import Writer
from ...types.stats.broadcast_revenue_stats import TypeStatsBroadcastRevenueStats


if TYPE_CHECKING:
    from ...types.input_peer import TypeInputPeer


class GetBroadcastRevenueStats(TLRequest[TypeStatsBroadcastRevenueStats]):
    """
    Get [channel ad revenue statistics](https://core.telegram.org/api/revenue).

    Raises:
        `400`ChannelInvalidError: The provided channel is invalid.
        `400`ChatAdminRequiredError: You must be an admin in this chat to do this.
        `400`PeerIdInvalidError: The provided peer id is invalid.

    """

    _id = 0XF788EE19
    _result_id = 0XC77BF809

    def __init__(
        self,
        peer: 'TypeInputPeer',
        dark: bool = False
    ):

        """
        Get [channel ad revenue statistics](https://core.telegram.org/api/revenue).

        Args:
            peer ('TypeInputPeer'): Get ad revenue stats for the specified channel or bot
            dark (bool, optional): Whether to enable dark theme for graph colors
        """

        self.peer = peer
        self.dark = dark

    def to_bytes(self, boxed: bool=True):
        with Writer(b'\x19\xee\x88\xf7' if boxed else b'') as writer:
            with writer.flag() as flags:
                flags(self.dark, 0)
                writer.object(
                    self.peer,
                    group_id=0X995DB9DF
                )

            return writer.getvalue()