
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import TYPE_CHECKING
from ....gadgets.tlobject import TLObject
from ....gadgets.byteutils import Writer


if TYPE_CHECKING:
    from ..stats_graph import TypeStatsGraph
    from ....gadgets.byteutils import Reader
    from ..stars_revenue_status import TypeStarsRevenueStatus


class StarsRevenueStats(TLObject, family='TypePaymentsStarsRevenueStats'):
    """
    [Star revenue statistics, see here](https://core.telegram.org/api/stars) for more info.
    """

    _id = 0XC92BB73B
    _group_id = 0X51B5B14C

    def __init__(
        self,
        revenue_graph: 'TypeStatsGraph',
        status: 'TypeStarsRevenueStatus',
        usd_rate: float
    ):

        """
        [Star revenue statistics, see here](https://core.telegram.org/api/stars) for more info.

        Args:
            revenue_graph ('TypeStatsGraph'): Star revenue graph (number of earned stars)
            status ('TypeStarsRevenueStatus'): Current balance, current withdrawable balance and overall earned Telegram Stars
            usd_rate (float): Current conversion rate of Telegram Stars to USD
        """

        self.revenue_graph = revenue_graph
        self.status = status
        self.usd_rate = usd_rate

    def to_bytes(self, boxed: bool=True):
        with Writer(b';\xb7+\xc9' if boxed else b'') as writer:
            writer.object(
                self.revenue_graph,
                group_id=0XAFAEA986
            )
            writer.object(
                self.status,
                group_id=0XC576A749
            )
            writer.double(self.usd_rate)

            return writer.getvalue()

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        revenue_graph_ = reader.object(
            group_id=0XAFAEA986
        )

        status_ = reader.object(
            group_id=0XC576A749
        )

        usd_rate_ = reader.double()

        return cls(
            revenue_graph=revenue_graph_,
            status=status_,
            usd_rate=usd_rate_
        )

TypePaymentsStarsRevenueStats = StarsRevenueStats