
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import TYPE_CHECKING, Optional
from ....gadgets.tlobject import TLRequest
from ....gadgets.byteutils import Writer
from ...types.messages.affected_history import TypeMessagesAffectedHistory


if TYPE_CHECKING:
    from ...types.input_peer import TypeInputPeer


class ReadReactions(TLRequest[TypeMessagesAffectedHistory]):
    """
    Mark [message reactions](https://core.telegram.org/api/reactions) as read

    Raises:
        `400`PeerIdInvalidError: The provided peer id is invalid.

    """

    _id = 0X54AA7F8E
    _result_id = 0XC038BDBA

    def __init__(
        self,
        peer: 'TypeInputPeer',
        top_msg_id: Optional[int] = None
    ):

        """
        Mark [message reactions](https://core.telegram.org/api/reactions) as read

        Args:
            peer ('TypeInputPeer'): Peer
            top_msg_id (Optional[int], optional): Mark as read only reactions to messages within the specified [forum topic](https://core.telegram.org/api/forum#forum-topics)
        """

        self.peer = peer
        self.top_msg_id = top_msg_id

    def to_bytes(self, boxed: bool=True):
        with Writer(b'\x8e\x7f\xaaT' if boxed else b'') as writer:
            with writer.flag() as flags:
                writer.object(
                    self.peer,
                    group_id=0X995DB9DF
                )

                if flags(self.top_msg_id, 0):
                    writer.int(self.top_msg_id)

            return writer.getvalue()