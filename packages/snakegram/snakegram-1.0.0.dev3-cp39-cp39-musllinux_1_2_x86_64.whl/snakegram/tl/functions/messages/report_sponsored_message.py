
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import TYPE_CHECKING
from ....gadgets.tlobject import TLRequest
from ....gadgets.byteutils import Long, Writer
from ...types.channels.sponsored_message_report_result import TypeChannelsSponsoredMessageReportResult


if TYPE_CHECKING:
    from ...types.input_peer import TypeInputPeer


class ReportSponsoredMessage(TLRequest[TypeChannelsSponsoredMessageReportResult]):
    """
    Report a [sponsored message](https://core.telegram.org/api/sponsored-messages), see [here](https://core.telegram.org/api/sponsored-messages#reporting-sponsored-messages) for more info on the full flow.
    """

    _id = 0X1AF3DBB8
    _result_id = 0XA14AF036

    def __init__(
        self,
        peer: 'TypeInputPeer',
        option: bytes,
        random_id: bytes = None
    ):

        """
        Report a [sponsored message](https://core.telegram.org/api/sponsored-messages), see [here](https://core.telegram.org/api/sponsored-messages#reporting-sponsored-messages) for more info on the full flow.

        Args:
            peer ('TypeInputPeer'): The channel/bot where the ad is located
            option (bytes): Chosen report option, initially an empty string, see [here](https://core.telegram.org/api/sponsored-messages#reporting-sponsored-messages) for more info on the full flow.
            random_id (bytes, optional): The ad's unique ID.
        """

        self.peer = peer
        self.option = option
        self.random_id = Long.to_bytes(Long()) if random_id is None else random_id

    def to_bytes(self, boxed: bool=True):
        with Writer(b'\xb8\xdb\xf3\x1a' if boxed else b'') as writer:
            writer.object(
                self.peer,
                group_id=0X995DB9DF
            )
            writer.bytes(self.random_id)
            writer.bytes(self.option)

            return writer.getvalue()