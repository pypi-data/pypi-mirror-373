
#                     !!! WARNING !!!
#             This is an auto-generated file!
#                 Generated by [Builder].
# Any manual modifications will be lost upon regeneration.
#             DO NOT EDIT THIS FILE DIRECTLY.

from typing import TYPE_CHECKING
from ...gadgets.tlobject import TLObject
from ...gadgets.byteutils import Writer


if TYPE_CHECKING:
    from .peer import TypePeer
    from ...gadgets.byteutils import Reader


class SavedDialog(TLObject, family='TypeSavedDialog'):
    """
    Represents a [saved dialog](https://core.telegram.org/api/saved-messages).
    """

    _id = 0XBD87CB6C
    _group_id = 0XD5377DC5

    def __init__(
        self,
        peer: 'TypePeer',
        top_message: int,
        pinned: bool = False
    ):

        """
        Represents a [saved dialog](https://core.telegram.org/api/saved-messages).

        Args:
            peer ('TypePeer'): The dialog
            top_message (int): The latest message ID
            pinned (bool, optional): Is the dialog pinned
        """

        self.peer = peer
        self.top_message = top_message
        self.pinned = pinned

    def to_bytes(self, boxed: bool=True):
        with Writer(b'l\xcb\x87\xbd' if boxed else b'') as writer:
            with writer.flag() as flags:
                flags(self.pinned, 2)
                writer.object(
                    self.peer,
                    group_id=0XB4DECBCA
                )
                writer.int(self.top_message)

            return writer.getvalue()

    @classmethod
    def from_reader(cls, reader: 'Reader'):
        flags = reader.flag()
        peer_ = reader.object(
            group_id=0XB4DECBCA
        )

        top_message_ = reader.int()

        return cls(
            peer=peer_,
            top_message=top_message_,
            pinned=flags(2)
        )

TypeSavedDialog = SavedDialog