[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "jetson-cli"
dynamic = ["version"]
description = "Command-line interface for NVIDIA Jetson setup and configuration"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "Jetson Setup Team", email = "support@jetson-setup.com"},
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console", 
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11", 
    "Programming Language :: Python :: 3.12",
    "Topic :: System :: Systems Administration",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Utilities",
]
dependencies = [
    "click>=8.0.0",
    "pyyaml>=6.0",
    "tabulate>=0.9.0",
    "packaging>=20.0",
    "psutil>=5.8.0",
    "rich>=12.0.0",
]
keywords = ["jetson", "nvidia", "embedded", "ai", "ml", "docker", "containers", "setup"]

[project.urls]
Homepage = "https://github.com/your-org/jetson-setup"
Documentation = "https://github.com/your-org/jetson-setup/blob/main/README.md"
Repository = "https://github.com/your-org/jetson-setup.git"
"Bug Reports" = "https://github.com/your-org/jetson-setup/issues"

[project.scripts]
jetson-cli = "jetson_cli.cli:main"

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov>=2.0",
    "black>=22.0",
    "flake8>=4.0",
    "isort>=5.0",
    "bump2version>=1.0",
]

[tool.setuptools_scm]
write_to = "jetson_cli/_version.py"

[tool.setuptools.packages.find]
include = ["jetson_cli*"]

[tool.setuptools.package-data]
jetson_cli = ["scripts/*", "config/*"]

[tool.black]
line-length = 88
target-version = ["py38", "py39", "py310", "py311", "py312"]
include = '\.pyi?$'
extend-exclude = '''
/(
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]