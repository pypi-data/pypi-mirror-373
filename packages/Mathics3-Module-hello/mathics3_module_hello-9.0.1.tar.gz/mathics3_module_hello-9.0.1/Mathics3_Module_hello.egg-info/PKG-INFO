Metadata-Version: 2.4
Name: Mathics3-Module-hello
Version: 9.0.1
Summary: Mathics3 Hello, World! module
Maintainer-email: Mathics Group <mathics-devel@googlegroups.com>
License-Expression: GPL-3.0-or-later
Project-URL: Homepage, https://github.com/Mathics3/Mathics3-Module-hello
Project-URL: Downloads, https://github.com/Mathics3/Mathics3_module-hello/releases
Keywords: Mathematica,Wolfram,Interpreter,Shell,Math,CAS
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Science/Research
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Classifier: Programming Language :: Python :: Implementation :: CPython
Classifier: Programming Language :: Python :: Implementation :: PyPy
Classifier: Topic :: Scientific/Engineering
Classifier: Topic :: Scientific/Engineering :: Mathematics
Classifier: Topic :: Software Development :: Interpreters
Requires-Python: >=3.10
Description-Content-Type: text/x-rst
License-File: COPYING.txt
Requires-Dist: Mathics3-Module-Base>=9.0.0
Requires-Dist: Mathics3>=9.0.0
Provides-Extra: dev
Requires-Dist: pytest; extra == "dev"
Dynamic: license-file

This is a Mathics3 Python Module showing the classic "Hello, World!"
The purpose is to demonstrate how to write a Mathics3 Python Module which extends Mathics3 by adding a function, but written in Python.

You can also use this as a template to clone if you want to create your own Mathics3 Module.

To install in development mode (run code from the source tree):

::

   $ make develop


After installing inside Mathics3, you can load this using the
``LoadModule[]`` function.

Then the function ```Hello[]`` is available::

      $ mathicsscript
      In[1]:= LoadModule["pymathics.hello"]
      Out[1]= pymathics.hello

      In[2]:= Hello[]
      Out[2]:= Hello, World!

      In[2]:= Hello["everyone"]
      Out[2]:= Hello, everyone!

You can test with ``pytest``::

     $ pytest test

or simply::

     $ make check
