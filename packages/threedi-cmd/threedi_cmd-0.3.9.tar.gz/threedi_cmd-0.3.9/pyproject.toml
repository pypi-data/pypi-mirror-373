[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "threedi-cmd"
version = "0.3.9"
dependencies = [
    "threedi-api-client",
    "PyYAML>=5.1",
    "websockets>=14.1",
    "arrow>=0.14.4",
    "Jinja2>=2.10.1",
    "jinja2-time>=0.2.0",
    "slackclient>=2.8.2",
    "click>=7.1.2",
    "requests>=2.25.0",
    "rich>=9.4.0",
    "typer>=0.3.2",
    "threedi-schema>=0.300.26",  # This depends on the schema used in the API workers
]
requires-python = ">=3.10"
authors = [
    { name="Jelle Prins", email="jelle.prins@nelen-schuurmans.nl" }, 
]
maintainers = [
    { name="Jelle Prins", email="jelle.prins@nelen-schuurmans.nl" }, 
    { name="Daan van Ingen", email="daan.vaningen@nelen-schuurmans.nl" }
]
description = "Python 3Di command line client"
readme = "README.md"
license = {file = "LICENSE"}
keywords = ["3Di, client, command line, scenario"]
classifiers = [
    "Intended Audience :: Developers",
    "License :: OSI Approved :: BSD License",
    "Natural Language :: English",
    "Programming Language :: Python :: 3",
    "Topic :: Scientific/Engineering",
]

[project.urls]
Repository = "https://github.com/nens/threedi-cmd"

[project.optional-dependencies]
test = ["pytest"]

[project.scripts]
scenarios = "threedi_cmd.commands.scenarios:scenario_app"
suite = "threedi_cmd.commands.suite:suite_app"
live = "threedi_cmd.commands.active_simulations:active_sims_app"
api = "threedi_cmd.commands.api:api_app"
3Di_cmd = "threedi_cmd.commands.main:app"

[tool.ruff]
line-length = 90
exclude = [".git", ".mypy_cache", ".venv", ".vscode"]


[tool.zest.releaser]
create-wheel = true
python-file-with-version = "threedi_cmd/version.py"