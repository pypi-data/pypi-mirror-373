[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "session-mgmt-mcp"
version = "0.1.0"
description = "Claude Session Management MCP Server - comprehensive session management functionality for Claude Code"
authors = [
    {name = "Les Leslie", email = "les@wedgwoodwebworks.com"}
]
readme = "README.md"
license = "MIT"
requires-python = ">=3.13"
keywords = ["mcp", "claude", "session-management", "ai", "assistant"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: System Shells",
    "Topic :: Utilities",
]

dependencies = [
    "fastmcp>=2.0.0",
    "duckdb>=0.9.0",
    "numpy>=1.24.0",
    "tiktoken>=0.5.0",
]

[project.optional-dependencies]
embeddings = [
    "onnxruntime",
    "transformers",
]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "pytest-xdist>=3.0.0",
    "pytest-timeout>=2.1.0",
    "pytest-benchmark>=4.0.0",
    "hypothesis>=6.70.0",
    "coverage>=7.0.0",
    "psutil>=5.9.0",
]

[project.scripts]
session-mgmt-mcp = "session_mgmt_mcp.server:main"

[project.urls]
Homepage = "https://github.com/lesleslie/session-mgmt-mcp"
Repository = "https://github.com/lesleslie/session-mgmt-mcp"
Issues = "https://github.com/lesleslie/session-mgmt-mcp/issues"

[dependency-groups]
dev = [
    "crackerjack",
]

[tool.ruff]
target-version = "py313"
line-length = 88
fix = true
unsafe-fixes = true
show-fixes = true
output-format = "full"

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint]
extend-select = [
    "C901",
    "F",
    "I",
    "UP",
]
ignore = [
    "E402",
    "F821",
]
fixable = [
    "ALL",
]

[tool.ruff.lint.mccabe]
max-complexity = 13

[tool.pyright]
verboseOutput = true
include = [
    "crackerjack",
]
exclude = [
    "scratch",
    ".venv",
    "build",
    "dist",
    "tests/*",
    "examples/*",
    "crackerjack/mcp/*",
    "crackerjack/plugins/*",
]
extraPaths = [
    ".venv/lib/python3.13/site-packages/",
]
typeCheckingMode = "strict"
reportMissingTypeStubs = false
reportOptionalMemberAccess = "warning"
reportOptionalCall = "warning"
reportUnknownMemberType = "warning"
reportUnknownVariableType = false
reportUnknownArgumentType = "warning"
reportInvalidTypeForm = "warning"
reportUnknownLambdaType = "warning"
reportUnknownParameterType = "warning"
reportPrivateUsage = "warning"
reportUnnecessaryTypeIgnoreComment = "warning"
reportUnnecessaryComparison = "warning"
reportConstantRedefinition = "warning"
pythonVersion = "3.13"

[tool.bandit]
target = [
    "crackerjack",
]
skips = [
    "B101",
    "B110",
    "B112",
    "B404",
    "B603",
    "B607",
]
exclude_dirs = [
    "tests/data",
]

[tool.vulture]
min_confidence = 86
paths = [
    "crackerjack",
]
ignore_names = [
    "cls",
]

[tool.refurb]
enable_all = true
quiet = true
python_version = "3.13"

[tool.complexipy]
default_pattern = "**/*.py"
exclude_patterns = [
    "**/tests/**",
    "**/test_*.py",
]
max_complexity = 15

[tool.codespell]
skip = "*/data/*"
quiet-level = 3
ignore-words-list = "crate,uptodate,nd,nin"

[tool.creosote]
paths = [
    "crackerjack",
]
deps-file = "pyproject.toml"
exclude-deps = [
    "hatchling",
    "pre-commit",
    "pytest",
    "pytest-asyncio",
    "pytest-cov",
    "pytest-mock",
    "pytest-xdist",
    "pytest-benchmark",
    "pyfiglet",
    "pyyaml",
    "uv",
    "tomli-w",
    "google-crc32c",
    "pytest-timeout",
    "keyring",
    "inflection",
    "pydantic-settings",
    "pyleak",
    "bandit",
    "vulture",
    "pyright",
    "creosote",
    "refurb",
    "complexipy",
    "codespell",
    "fastapi",
    "fastmcp",
    "uvicorn",
    "websockets",
    "watchdog",
    "ruff",
]

# Example session-mgmt-mcp configuration
# Uncomment and customize as needed

# [tool.session-mgmt-mcp]
# # Server settings
# debug = false
# server_host = "localhost"
# server_port = 3000
# enable_websockets = true

# [tool.session-mgmt-mcp.database]
# # Database configuration
# path = "~/.claude/data/reflection.duckdb"
# connection_timeout = 30
# enable_multi_project = true
# enable_full_text_search = true

# [tool.session-mgmt-mcp.search]
# # Search and embedding settings
# enable_semantic_search = true
# embedding_model = "all-MiniLM-L6-v2"
# enable_faceted_search = true
# max_facet_values = 50

# [tool.session-mgmt-mcp.token_optimization]
# # Token optimization settings
# enable_optimization = true
# default_max_tokens = 4000
# preferred_strategy = "auto"
# track_usage = true

# [tool.session-mgmt-mcp.session]
# # Session management
# auto_checkpoint_interval = 1800  # 30 minutes
# enable_auto_commit = true
# session_retention_days = 365

# [tool.session-mgmt-mcp.logging]
# # Logging configuration
# level = "INFO"
# enable_file_logging = true
# log_file_path = "~/.claude/logs/session-mgmt.log"
