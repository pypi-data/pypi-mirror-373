[build-system]
requires = ["setuptools>=74.1", "wheel", "numpy"]
build-backend = "setuptools.build_meta"

[project]
name = "skais-mapper"
dynamic = ["version"]
description = "A framework for generating deep-learning SKA radio telescope & cosmological hydrodynamical simulation data"
readme = {file = "README.org", content-type = "text/plain"}
requires-python = ">=3.10"
license = "GPL-3.0-or-later"
license-files = ["LICEN[CS]E*"]
authors = [
  {name = "Philipp Denzel", email = "phdenzel@gmail.com"},
]
maintainers = [
  {name = "Philipp Denzel", email = "phdenzel@gmail.com"},
]
keywords = ["cosmological simulations", "illustris-tng", "radio mocks"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Cython",
    "Programming Language :: Python :: Implementation :: CPython",
    "Operating System :: Unix",
    "Operating System :: POSIX :: Linux",
    "Operating System :: MacOS",
    "Topic :: Scientific/Engineering :: Image Processing",
    "Topic :: Scientific/Engineering :: Astronomy",
    ]

dependencies = [
    "numpy",
    "scipy",
    "tqdm",
    "astropy",
    "h5py",
    "Pillow",
    "matplotlib",
    "gitpython",
    "chuchichaestli>=0.2.9",
    "hydra-core>=1.3.2",
]

[project.optional-dependencies]
nn = [
    "torch>=2.7.1",
]
dev = [
    "pytest>=8.3.5",
    "pytest-cov>=5.0.0",
    "ruff>=0.12.5",
]
docs = [
    "mkdocs>=1.6.1",
    "mkdocs-api-autonav>=0.3.0",
    "mkdocs-material>=9.6.16",
    "mkdocstrings[python]>=0.30.0",
]

[dependency-groups]
dev = [
    "cibuildwheel>=2.23.3",
    "pytest>=8.3.5",
    "pytest-cov>=5.0.0",
    "ruff>=0.12.5",
]
docs = [
    "mkdocs>=1.6.1",
    "mkdocs-api-autonav>=0.3.0",
    "mkdocs-material>=9.6.16",
    "mkdocstrings[python]>=0.30.0",
]

[project.urls]
Documentation = "https://github.com/phdenzel/skais-mapper#readme"
Homepage = "https://github.com/phdenzel/skais-mapper"
Repository = "https://github.com/phdenzel/skais-mapper.git"
Issues = "https://github.com/phdenzel/skais-mapper/issues"

[project.scripts]
"skais-mapper" = "skais_mapper.__main__:main"
"skais-mapper-generate" = "skais_mapper.generate:run"
"skais-mapper-configure" = "skais_mapper.configure:create"

[tool.setuptools]
ext-modules = [
    { name = "skais_mapper.raytrace", sources = ["skais_mapper/raytrace.c"], include-dirs = ["numpy.get_include()"]}
]

[tool.setuptools.dynamic]
version = {attr = "skais_mapper.__about__.__version__"}

[tool.setuptools.packages.find]
exclude = ["outputs"]

[tool.cibuildwheel]
build = ["cp312-*", "cp311-*", "cp310-*"]

# Linting, flaking, etc.
[tool.ruff]
line-length = 100
lint.select = ["E", "F", "D"]  # "D" includes pydocstyle rules
lint.ignore = ["D200", "D212", "D415"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.mypy]
python_version = "3.12"
ignore_missing_imports = true
warn_return_any = true
warn_unused_configs = true

# exclude = [
#     '^file1\.py$',  # TOML literal string (single-quotes, no escaping necessary)
#     "^file2\\.py$",  # TOML basic string (double-quotes, backslash and other characters need escaping)
# ]

# Testing & coverage
[tool.coverage.run]
source_pkgs = ["skais_mapper", "tests"]
branch = true
parallel = true
omit = [
  "skais_mapper/__about__.py",
]

[tool.coverage.paths]
pyverto = ["skais_mapper", "*/skais_mapper"]
tests = ["tests", "*/skais_mapper/tests"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]

[[tool.uv.index]]
name = "testpypi"
url = "https://test.pypi.org/simple/"
publish-url = "https://test.pypi.org/legacy/"
explicit = true
