[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "atlas-init"
dynamic = ["version"]
description = ''
readme = "readme.md"
requires-python = ">=3.13"
license = "MIT"
keywords = []
authors = [{ name = "EspenAlbert", email = "albertespen@gmail.com" }]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.13",
]
dependencies = [
  "appdirs==1.4.4",
  "boto3==1.35.92",
  "GitPython==3.1.42",
  "humanize==4.9.0",
  "inflection==0.5.1",
  "motor==3.7.1",
  "mypy-boto3-cloudformation==1.37.22",
  "orjson==3.10.13",
  "python-hcl2==7.1.0",
  "pygithub==2.6.1",
  "pydot==4.0.1",
  "requests==2.32.2",
  "pydantic-settings==2.7.1",
  "questionary==2.1.0",
  "rich==14.0.0",
  "stringcase==1.2.0",
  "tenacity==9.0.0",
  "typer>=0.15.1",
  "ask-shell>=0.0.5",
  "model-lib",
  "zero-3rdparty==1.0.0b5",
  "mypy-boto3-iam>=1.40.0",
]

# [tool.uv.sources]
# ask-shell = { path = "../py-libs/ask-shell" }
# model-lib = {path = "../py-libs/model-lib"}
# zero-3rdparty = {path = "../py-libs/zero-3rdparty"}

[project.scripts]
atlas-init = "atlas_init.cli:typer_main"
tf-dep = "atlas_init.tf_ext.tf_dep:typer_main"
tf-ext = "atlas_init.tf_ext.typer_app:typer_main"
sdk-ext = "atlas_init.sdk_ext.typer_app:typer_main"

[project.urls]
Documentation = "https://github.com/EspenAlbert/atlas-init#readme"
Issues = "https://github.com/EspenAlbert/atlas-init/issues"
Source = "https://github.com/EspenAlbert/atlas-init"

[tool.hatch.version]
path = "atlas_init/__init__.py"

[tool.pytest.ini_options]
addopts = "-vv --tb=short --log-cli-level=INFO --ignore=.venv/* --capture=no --ignore=./test_atlas_init/test_tf_ext/testdata/dataclasses/examples_test.py --ignore=./test_atlas_init/test_tf_ext/livedata/modules/option-2-alternative/examples_test.py"
# addopts = "-vv --tb=short --log-cli-level=INFO --ignore=.venv/* --capture=no --ignore=./test_atlas_init/test_tf_ext/testdata/dataclasses/examples_test.py --ignore=./test_atlas_init/test_tf_ext/livedata/modules/option-2-alternative/examples_test.py --force-regen"
testpaths = ["test_atlas_init"]
asyncio_default_fixture_loop_scope = "function"
filterwarnings = [
    "ignore::pytest.PytestRemovedIn9Warning",
]

[tool.bandit]
exclude_dirs = ["test_*", "atlas_init/cli_tf/hcl/*"]
skips= ["B101"]

[tool.pyright]
include = ["atlas_init"]
exclude = ["atlas_init/humps.py", "atlas_init/cli_tf/schema.py"]

[tool.coverage.run]
source_pkgs = ["atlas_init"]
branch = true
parallel = true
concurrency = ["multiprocessing"]

[tool.coverage.paths]
atlas_init = ["atlas_init"]

[tool.coverage.report]
omit=["*_test.py"]
exclude_lines = ["no cov", "if __name__ == .__main__.:", "if TYPE_CHECKING:"]

[tool.hatch.build.targets.wheel]
only-include = ["atlas_init"]

[tool.hatch.build.targets.sdist]
only-include = ["atlas_init"]

[tool.ruff]
line-length = 120
extend-exclude = ["atlas_init/humps.py", "atlas_init/cli_tf/schema.py"]

[tool.ruff.lint]
extend-ignore = [
  "TC003",
  "G004",
  "TRY003",
  "S101",
  "EM102",
  "FBT001",
  "B008",    # https://docs.astral.sh/ruff/rules/function-call-in-default-argument/
  "TC002",  # https://docs.astral.sh/ruff/rules/typing-only-third-party-import/
  "TC001",  # https://docs.astral.sh/ruff/rules/typing-only-first-party-import/
  "PERF401", # https://docs.astral.sh/ruff/rules/manual-list-comprehension/
  "UP040",   #  Type alias `ResourceTypes` uses `TypeAlias` annotation instead of the `type` keyword
]

[tool.ruff.lint.per-file-ignores]
"atlas_init/cli_helper/run_manager.py" = ["SLF001"]
"scripts/*.py" = ["INP001", "T201"]
"test_atlas_init/test_tf_ext/test_py_gen/test_make_post_init_line_from_field.py" = ["F821"]

[dependency-groups]
dev = [
  "bandit==1.8.0",
  "hatchling==1.24.2",
  "pyright==1.1.399",
  "pytest==8.3.4",
  "pytest-cov==6.0.0",
  "pytest-asyncio==1.0.0",
  "pytest-regressions==2.5.0",
  "pytest-subtests==0.14.1",
  "ruff>=0.11.5",
] # used to make it simpler to sync venv with IDE
