import{_ as C,C as x,E as S,q as r,v as s,b as l,B as o,F as u,A as h,D as R,w as A,d as N,y as f,x as v,z as y,a as _}from"./main-BERoK-j2.js";import{C as I}from"./confirm-dialog-Bc3Bw4Wf.js";import{useAdminStore as w}from"./admin-D7dHJsJ4.js";import{V as p}from"./forwardRefs-CGimG8CQ.js";import{c as T}from"./VSelect-CP3Eb9Go.js";import"./VDialog-B1OSC1f5.js";import"./VSelectionControl-3mF3UtxV.js";import"./ssrBoot-_TndNOM6.js";import"./VDivider-6KdInZc6.js";import"./VCheckboxBtn-CqdpagcB.js";const k=[{title:"Libraries",tasks:[{value:"poll",title:"Poll All Libraries",desc:"Update Libraries if changes detected"},{value:"poll_force",title:"Force Update All Libraries",desc:"Forcibly update all comics in all libraries",confirm:"This can take a long time"},{value:"force_update_all_failed_imports",title:"Update All Failed Imports",desc:"Forcibly update all failed imports in all libraries",confirm:"This can take a long time"},{value:"watchdog_sync",title:"Sync Watchdog with DB",desc:"Ensure the Watchdog file watcher is enabled per database preferences for each library"},{value:"import_abort",title:"Abort Running Import",desc:"Abort the current running import after the current import subtask is complete"}]},{title:"Covers",tasks:[{value:"purge_comic_covers",title:"Remove Comic Covers",desc:"from every library",confirm:"Are you sure?"},{value:"create_all_comic_covers",title:"Create All Comic Covers",desc:"Pre-generate covers for every comic in every library and all custom covers",confirm:"Are you sure?"},{value:"force_update_groups",title:"Update Group Timestamps",desc:"Force the update of group timestamps. Will bust the browser cache for browser views and covers."}]},{title:"Search Index",tasks:[{value:"search_index_optimize",title:"Optimize Search Index",desc:"Merge Search Index for optimal lookup time. Runs nightly."},{value:"search_index_remove_stale",title:"Clean Stale Index Entries",desc:"Clean search index entries that are no longer in the library."},{value:"search_index_clear",title:"Clear Search Index",desc:"of all entries",confirm:"Are you sure? Resyncing the search index can take a while."},{value:"db_fts_integrity_check",title:"Integrity Check Search Index",desc:"Repairs Search Index on failure. Runs nightly"},{value:"db_fts_rebuild",title:"Repair Search Index",desc:"Probably faster than Rebuild if the integrity check fails."},{value:"search_index_abort",title:"Abort Search Index Sync",desc:"Aborts search index sync tasks."},{value:"search_index_update",title:"Sync Search Index",desc:"with recently changed comics.",confirm:"This can take a long time"},{value:"search_index_rebuild",title:"Rebuild Search Index Using Sync.",desc:"Delete and rebuild the search index from scratch using the syncer.",confirm:"This can take a long time"}]},{title:"Database",tasks:[{value:"db_vacuum",title:"Optimize & Compact Database",desc:"Run the sqlite3 OPTIMIZE and VACUUM pragmas. Runs nightly"},{value:"db_backup",title:"Backup Database",desc:"Runs nightly"},{value:"db_foreign_key_check",title:"Remove Illegal Foreign Keys",desc:"Check for and remove illegal foreign keys. Mark affected comics for update. Runs nightly."},{value:"db_integrity_check",title:"Check Database Integrity",desc:"Check logs for results. Runs nightly.",confirm:"Can take a while on large databases, Are you sure?"}]},{title:"Codex Software",tasks:[{value:"codex_latest_version",title:"Check for Codex Latest Version",desc:"Check PyPi for the latest version of Codex"},{value:"codex_update",title:"Update Codex",desc:"If Codex updates to a new version, it will restart",confirm:"Are you sure?"},{value:"codex_restart",title:"Restart Codex Server",desc:"Immediately",confirm:"Are you sure?"},{value:"codex_shutdown",title:"Shutdown Codex Server",desc:"Immediately",confirm:"Are you sure?"}]},{title:"Cleanup",tasks:[{value:"cleanup_fks",title:"Remove Orphan Tags",desc:"After deleting comics, unused linked objects remain in case new comics use them. Runs nightly."},{value:"cleanup_db_custom_covers",title:"Remove Orphan Database Custom Covers",desc:"Remove Custom Covers from the db that no longer represent custom cover images on disk. Runs nightly."},{value:"cleanup_sessions",title:"Cleanup Sessions",desc:"Remove corrupt and expired sessions. Runs nightly."},{value:"cleanup_covers",title:"Remove Orphan Cover Thumbnails",desc:"no longer have source comics or custom images. Runs nightly."},{value:"cleanup_bookmarks",title:"Remove Orphan Bookmarks",desc:"Owned by no session or user. Runs nightly."},{value:"adopt_folders",title:"Adopt Orphan Folders",desc:"Move orphaned folders from the top of the folder tree to under their correct parent. Runs nightly and at startup."},{value:"librarian_clear_status",title:"Clear Librarian Statuses",desc:"Mark all Librarian tasks finished."},{value:"janitor_nightly",title:"Run Nightly Maintenance",desc:"Runs several tasks above that also run nightly.",confirm:"Launches several tasks that run nightly anyway."}]},{title:"Notify",tasks:[{value:"notify_admin_flags_changed",title:"Notify Admin Flags Changed",desc:"Notify all users that admin flags have changed."},{value:"notify_bookmark_changed",title:"Notify Bookmark Changed",desc:"Notify only your user that a bookmark changed."},{value:"notify_covers_changed",title:"Notify Covers Changed",desc:"Notify all users that covers have changed."},{value:"notify_failed_imports_changed",title:"Notify Failed Imports Changed",desc:"Notify admin users that failed imports have changed"},{value:"notify_groups_changed",title:"Notify Groups Changed",desc:"Notify all users that ACL groups have changed."},{value:"notify_library_changed",title:"Notify Library Changed ",desc:"Notify all users libraries have changed."},{value:"notify_librarian_status",title:"Notify Librarian Status",desc:"Notify admin users that a librarian job status changed.."},{value:"notify_users_changed",title:"Notify Users Changed",desc:"Notify one user that their users changed or all users if a user was deleted."}]}],m=["Notify"];Object.freeze(m);const L={name:"AdminTasksTab",components:{ConfirmDialog:I},data(){return{SELECT_GROUPS:m,selectValues:{Notify:"notify_library_changed"},tasks:k}},computed:{...S(R,{formSuccess:e=>e.form.success,formErrors:e=>e.form.errors}),selectMaps(){const e={};for(const i of k)if(m.includes(i.title)){e[i.title]={};for(const n of i.tasks)e[i.title][n.value]=n}return e}},methods:{...x(w,["librarianTask"]),selectAttr(e,i){const n=this.selectValues[e];return this.selectMaps[e][n][i]}}},V={id:"tasks"},D={key:0,id:"success"},E={key:1,id:"error"},U={key:2,id:"noRecentTask"},B={key:0},O={class:"taskBox"},F={class:"taskDesc"},M={key:1,class:"taskBox"},P={class:"taskDesc"};function z(e,i,n,G,c,d){const g=A("ConfirmDialog");return s(),r("div",V,[l("div",null,[i[0]||(i[0]=l("span",{id:"lastTaskLabel"},"Last Task Queued:",-1)),l("span",null,[e.formSuccess?(s(),r("span",D,o(e.formSuccess),1)):e.formErrors&&e.formErrors.length>0?(s(),r("span",E,[(s(!0),r(u,null,h(e.formErrors,t=>(s(),r("span",{key:t},o(t),1))),128))])):(s(),r("span",U,"No recent task"))])]),(s(!0),r(u,null,h(c.tasks,t=>(s(),r("div",{key:t.title,"fixed-header":"",class:"taskGroup"},[l("h3",null,o(t.title),1),c.SELECT_GROUPS.includes(t.title)?(s(),r("div",M,[_(T,{items:t.tasks,"model-value":c.selectValues[t.title],"onUpdate:modelValue":a=>c.selectValues[t.title]=a},null,8,["items","model-value","onUpdate:modelValue"]),_(p,{block:"",onClick:a=>e.librarianTask(c.selectValues[t.title],d.selectAttr(t.title,"title"))},{default:v(()=>[y(o(d.selectAttr(t.title,"title")),1)]),_:2},1032,["onClick"]),l("div",P,o(d.selectAttr(t.title,"desc")),1)])):(s(),r("div",B,[(s(!0),r(u,null,h(t.tasks,a=>(s(),r("div",{key:a.value,class:N(["trow",{selected:!1}])},[l("div",O,[a.confirm?(s(),f(g,{key:0,"button-text":a.title,"title-text":a.title,text:a.confirm,block:!0,"confirm-text":"Confirm",onConfirm:b=>e.librarianTask(a.value,a.title)},null,8,["button-text","title-text","text","onConfirm"])):(s(),f(p,{key:1,block:"",onClick:b=>e.librarianTask(a.value,a.title)},{default:v(()=>[y(o(a.title),1)]),_:2},1032,["onClick"])),l("div",F,o(a.desc),1)])]))),128))]))]))),128))])}const $=C(L,[["render",z],["__scopeId","data-v-6e06e355"]]);export{$ as default};
