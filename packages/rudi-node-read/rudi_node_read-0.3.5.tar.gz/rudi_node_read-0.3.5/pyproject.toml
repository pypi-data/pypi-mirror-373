[build-system]
requires = ["setuptools>=67.0"]
build-backend = "setuptools.build_meta"

[project]
name = "rudi-node-read"
version = "0.3.5"
authors = [{ name = "Olivier Martineau", email = "olivier.martineau@irisa.fr" }]
maintainers = [
    { name = "Olivier Martineau", email = "olivier.martineau@irisa.fr" },
]
description = "Use the external API of a RUDI Producer node"
readme = "README.md"
requires-python = ">=3.10"
license = "EUPL-1.2"
license-files = ["LICENSE.md"]
classifiers = [
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Natural Language :: English",
    "Operating System :: OS Independent",
]
keywords = [
    "rudi-node-read",
    "rudi-node-get",
    "RUDI",
    "producer node",
    "RUDI node",
    "rudinode",
    "open-data",
    "Univ. Rennes",
]
dynamic = ["dependencies", "optional-dependencies"]

[project.urls]
Homepage = "https://github.com/OlivierMartineau/rudi-node-read"
Documentation = "https://app.swaggerhub.com/apis/OlivierMartineau/RUDI-PRODUCER"
Changelog = "https://github.com/OlivierMartineau/rudi-node-read/blob/release/CHANGELOG.md"
Repository = "https://github.com/OlivierMartineau/rudi-node-read"

# ----- Tool: black
[tool.black]
line-length = 120
target-version = ['py310']

# ----- Tool: commitizen
[tool.commitizen]
name = "cz_conventional_commits"
version = "0.3.5"
version_files = ["pyproject.toml:version"]

# ----- Tool: pyright
[tool.pyright]
exclude = ["**/node_modules", "**/__pycache__"]
include = ["src"]
pythonVersion = "3.10"
reportMissingImports = true
reportDuplicateImport = true
reportUnusedImport = true
reportImportCycles = true
venvPath = "."
venv = ".venv"

# ----- Tool: pytest
[tool.pytest.ini_options]
pythonpath = ["src"]
norecursedirs = ["*.egg", ".eggs", "dist", "build", "lib"]
addopts = [
    "-ra",
    "--cov=rudi_node_read",
    "--cov-report=term-missing",
    "--cov-report=html",
]

# ----- Tool: setuptools
[tool.setuptools.packages.find]
where = ["src"]
include = ["rudi_node_read*"]

[tool.setuptools.dynamic]
dependencies = { file = ["requirements.txt"] }
optional-dependencies = { dev = { file = ["requirements-dev.txt"] } }
