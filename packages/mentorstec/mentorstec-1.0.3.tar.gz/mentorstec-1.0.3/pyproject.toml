[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "mentorstec"
dynamic = ["version"]
description = "Mentorstec - centralized event logging and monitoring"
readme = "README.md"
license = "MIT"
requires-python = ">=3.8"
authors = [
    {name = "Mentorstec", email = "diego@mentorstec.com.br"},
]
keywords = [
    "azure",
    "event-hub", 
    "logging",
    "monitoring",
    "exceptions",
    "mentorstec",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: System :: Logging",
    "Topic :: System :: Monitoring",
]
dependencies = [
    "azure-servicebus>=7.0.0",
    "backports.zoneinfo>=0.2.1;python_version<'3.9'",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-cov",
    "black",
    "ruff",
    "mypy",
    "build",
    "twine",
]
powerbi = [
    "adal>=1.2.0",
    "requests>=2.25.0",
]
dremio = [
    "requests>=2.25.0",
]

[project.urls]
Homepage = "https://github.com/Mentorstec/mentorstec"
Repository = "https://github.com/Mentorstec/mentorstec"
Issues = "https://github.com/Mentorstec/mentorstec/issues"
Documentation = "https://github.com/Mentorstec/mentorstec#readme"

[tool.hatch.version]
path = "mentorstec/__init__.py"

[tool.hatch.build.targets.wheel]
packages = ["mentorstec"]

[tool.black]
line-length = 88
target-version = ["py38"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
target-version = "py38"
line-length = 88

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers"
testpaths = [
    "tests",
]