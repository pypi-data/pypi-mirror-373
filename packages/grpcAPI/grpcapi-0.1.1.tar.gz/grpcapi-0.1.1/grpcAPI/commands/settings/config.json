{
  // Protocol buffer generation paths
  "proto_path": "grpcAPI/proto",
  "lib_path": "grpcAPI/lib",
  
  // Development settings
  "lint": true, // Enable proto validation by default
  
  // Server configuration
  "host": "localhost",
  "port": 50051,
  // Protocol buffer compilation settings
  "compile_proto": {
    "clean_services": true, // Remove unused service files
    "overwrite": false,     // Preserve existing files
    "zipcompress": false,   // Generate individual files
    "outdir": "dist"
  },
  // Comment formatting preferences
  "format_proto": {
    "max_char_per_line": 80,   // Line length limit
    "title_case": "none",      // Case transformation: none, camel, pascal, snake
    "comment_style": "multiline", // Comment style for generated code
    "add_input_output_types": false // Include input/output types in comments
  },
  
  /* Service filtering configuration
     Controls which services are included/excluded during compilation */
  "service_filter": {
    "package": {
      "include": [],
      "exclude": []
    },
    "module": {
      "include": [],
      "exclude": []
    },
    "tags": {
      "include": [],
      "exclude": []
    },
    "rule_logic": "AND"
  },
  // gRPC server configuration
  "server": {
    "compression": "gzip",
    "maximum_concurrent_rpcs": 100,
    "options": []
  },
  
  // Server plugins configuration
  "plugins": {
    "health_check": {}, // Health check endpoint
    "reflection": {},   // gRPC reflection service
    "server_logger": {  // Server logging plugin
      "level": "INFO",
      "handlers": ["console"],
      "filename": ".",
      "propagate": false
    }
  },
  "tls": {
    "enabled": false,
    // "certificate": "credentials/server.crt",
    // "key": "credentials/server.key",
    // "ca": "credentials/ca.crt"
  },  
  "app_log_level": "INFO", // Application-wide log level
  /* Python logging configuration
     Standard Python logging.config.dictConfig format */
  "logger": {
    "version": 1,
    "disable_existing_loggers": false,
    
    // Log message formatters
    "formatters": {
      "short": {
        "format": "[%(asctime)s]: %(message)s"
      },
      "default": {
        "format": "[%(asctime)s] [%(levelname)s] %(name)s: %(message)s"
      },
      "detailed": {
        "format": "[%(asctime)s] [%(levelname)s] %(name)s (%(filename)s:%(lineno)d): %(message)s"
      }
    },
    
    // Log output handlers
    "handlers": {
      "console": {
        "class": "logging.StreamHandler",
        "level": "DEBUG",
        "formatter": "short"
      },
      "file": {
        "class": "logging.FileHandler",
        "filename": "app.log",  // Log file location
        "mode": "a",            // Append mode
        "level": "INFO",
        "formatter": "default"
      }
    },
    
    // Named logger configurations
    "loggers": {
      "grpcAPI": {
        "handlers": ["console"],
        "level": "ERROR",
        "propagate": false
      }
    },
    
    // Root logger (catches all unspecified loggers)
    "root": {
      "handlers": ["console"],
      "level": "WARNING"
    }
  },
  "app_environ": {
    "DATABASE_URL": "sqlite+aiosqlite:///./test.db"
  }
}
