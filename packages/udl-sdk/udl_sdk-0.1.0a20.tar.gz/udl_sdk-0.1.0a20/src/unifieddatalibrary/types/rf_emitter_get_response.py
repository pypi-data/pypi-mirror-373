# File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.

from typing import List, Optional
from datetime import datetime
from typing_extensions import Literal

from pydantic import Field as FieldInfo

from .._models import BaseModel
from .shared.entity_full import EntityFull
from .shared.location_full import LocationFull
from .shared.organization_full import OrganizationFull

__all__ = ["RfEmitterGetResponse", "RfEmitterDetail"]


class RfEmitterDetail(BaseModel):
    classification_marking: str = FieldInfo(alias="classificationMarking")
    """Classification marking of the data in IC/CAPCO Portion-marked format."""

    data_mode: Literal["REAL", "TEST", "SIMULATED", "EXERCISE"] = FieldInfo(alias="dataMode")
    """Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:

    EXERCISE:&nbsp;Data pertaining to a government or military exercise. The data
    may include both real and simulated data.

    REAL:&nbsp;Data collected or produced that pertains to real-world objects,
    events, and analysis.

    SIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world
    datasets.

    TEST:&nbsp;Specific datasets used to evaluate compliance with specifications and
    requirements, and for validating technical, functional, and performance
    characteristics.
    """

    id_rf_emitter: str = FieldInfo(alias="idRFEmitter")
    """Unique identifier of the parent RF Emitter."""

    source: str
    """Source of the data."""

    id: Optional[str] = None
    """Unique identifier of the record, auto-generated by the system."""

    alternate_facility_name: Optional[str] = FieldInfo(alias="alternateFacilityName", default=None)
    """Alternate facility name for this RF Emitter."""

    alt_name: Optional[str] = FieldInfo(alias="altName", default=None)
    """Optional alternate name or alias for this RF Emitter."""

    antenna_diameter: Optional[float] = FieldInfo(alias="antennaDiameter", default=None)
    """For parabolic/dish antennas, the diameter of the antenna in meters."""

    antenna_size: Optional[List[float]] = FieldInfo(alias="antennaSize", default=None)
    """
    Array with 1-2 values specifying the length and width (for rectangular) and just
    length for dipole antennas in meters.
    """

    barrage_noise_bandwidth: Optional[float] = FieldInfo(alias="barrageNoiseBandwidth", default=None)
    """Barrage noise bandwidth in Mhz."""

    created_at: Optional[datetime] = FieldInfo(alias="createdAt", default=None)
    """Time the row was created in the database, auto-populated by the system."""

    created_by: Optional[str] = FieldInfo(alias="createdBy", default=None)
    """
    Application user who created the row in the database, auto-populated by the
    system.
    """

    description: Optional[str] = None
    """Detailed description of the RF Emitter."""

    designator: Optional[str] = None
    """Designator of this RF Emitter."""

    doppler_noise: Optional[float] = FieldInfo(alias="dopplerNoise", default=None)
    """Doppler noise value in Mhz."""

    drfm_instantaneous_bandwidth: Optional[float] = FieldInfo(alias="drfmInstantaneousBandwidth", default=None)
    """Digital Form Radio Memory instantaneous bandwidth in Mhz."""

    family: Optional[str] = None
    """Family of this RF Emitter type."""

    manufacturer_org: Optional[OrganizationFull] = FieldInfo(alias="manufacturerOrg", default=None)
    """An organization such as a corporation, manufacturer, consortium, government,
    etc.

    An organization may have parent and child organizations as well as link to a
    former organization if this org previously existed as another organization.
    """

    manufacturer_org_id: Optional[str] = FieldInfo(alias="manufacturerOrgId", default=None)
    """Unique identifier of the organization which manufactures this RF Emitter."""

    notes: Optional[str] = None
    """Notes on the RF Emitter."""

    num_bits: Optional[int] = FieldInfo(alias="numBits", default=None)
    """Number of bits."""

    num_channels: Optional[int] = FieldInfo(alias="numChannels", default=None)
    """Number of channels."""

    origin: Optional[str] = None
    """
    Originating system or organization which produced the data, if different from
    the source. The origin may be different than the source if the source was a
    mediating system which forwarded the data on behalf of the origin system. If
    null, the source may be assumed to be the origin.
    """

    orig_network: Optional[str] = FieldInfo(alias="origNetwork", default=None)
    """
    The originating source network on which this record was created, auto-populated
    by the system.
    """

    production_facility_location: Optional[LocationFull] = FieldInfo(alias="productionFacilityLocation", default=None)
    """
    Model representation of a location, which is a specific fixed point on the earth
    and is used to denote the locations of fixed sensors, operating units, etc.
    """

    production_facility_location_id: Optional[str] = FieldInfo(alias="productionFacilityLocationId", default=None)
    """
    Unique identifier of the location of the production facility for this RF
    Emitter.
    """

    production_facility_name: Optional[str] = FieldInfo(alias="productionFacilityName", default=None)
    """Name of the production facility for this RF Emitter."""

    receiver_bandwidth: Optional[float] = FieldInfo(alias="receiverBandwidth", default=None)
    """Receiver bandwidth in Mhz."""

    receiver_sensitivity: Optional[float] = FieldInfo(alias="receiverSensitivity", default=None)
    """Receiver sensitivity in dBm."""

    receiver_type: Optional[str] = FieldInfo(alias="receiverType", default=None)
    """Type or name of receiver."""

    secondary_notes: Optional[str] = FieldInfo(alias="secondaryNotes", default=None)
    """Secondary notes on the RF Emitter."""

    system_sensitivity_end: Optional[float] = FieldInfo(alias="systemSensitivityEnd", default=None)
    """
    Receiver sensitivity is the lowest power level at which the receiver can detect
    an RF signal and demodulate data. Sensitivity is purely a receiver specification
    and is independent of the transmitter. End sensitivity range, in dBm.
    """

    system_sensitivity_start: Optional[float] = FieldInfo(alias="systemSensitivityStart", default=None)
    """
    Receiver sensitivity is the lowest power level at which the receiver can detect
    an RF signal and demodulate data. Sensitivity is purely a receiver specification
    and is independent of the transmitter. Start sensitivity range, in dBm.
    """

    transmit_power: Optional[float] = FieldInfo(alias="transmitPower", default=None)
    """Transmit power in Watts."""

    transmitter_bandwidth: Optional[float] = FieldInfo(alias="transmitterBandwidth", default=None)
    """Transmitter bandwidth in Mhz."""

    transmitter_frequency: Optional[float] = FieldInfo(alias="transmitterFrequency", default=None)
    """Transmitter frequency in Mhz."""

    updated_at: Optional[datetime] = FieldInfo(alias="updatedAt", default=None)
    """Time the row was last updated in the database, auto-populated by the system."""

    updated_by: Optional[str] = FieldInfo(alias="updatedBy", default=None)
    """
    Application user who updated the row in the database, auto-populated by the
    system.
    """

    urls: Optional[List[str]] = None
    """Array of URLs containing additional information on this RF Emitter."""


class RfEmitterGetResponse(BaseModel):
    classification_marking: str = FieldInfo(alias="classificationMarking")
    """Classification marking of the data in IC/CAPCO Portion-marked format."""

    data_mode: Literal["REAL", "TEST", "SIMULATED", "EXERCISE"] = FieldInfo(alias="dataMode")
    """Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:

    EXERCISE:&nbsp;Data pertaining to a government or military exercise. The data
    may include both real and simulated data.

    REAL:&nbsp;Data collected or produced that pertains to real-world objects,
    events, and analysis.

    SIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world
    datasets.

    TEST:&nbsp;Specific datasets used to evaluate compliance with specifications and
    requirements, and for validating technical, functional, and performance
    characteristics.
    """

    name: str
    """Unique name of this RF Emitter."""

    source: str
    """Source of the data."""

    id: Optional[str] = None
    """Unique identifier of the record, auto-generated by the system."""

    created_at: Optional[datetime] = FieldInfo(alias="createdAt", default=None)
    """Time the row was created in the database, auto-populated by the system."""

    created_by: Optional[str] = FieldInfo(alias="createdBy", default=None)
    """
    Application user who created the row in the database, auto-populated by the
    system.
    """

    entity: Optional[EntityFull] = None
    """
    An entity is a generic representation of any object within a space/SSA system
    such as sensors, on-orbit objects, RF Emitters, space craft buses, etc. An
    entity can have an operating unit, a location (if terrestrial), and statuses.
    """

    id_entity: Optional[str] = FieldInfo(alias="idEntity", default=None)
    """ID of the parent entity for this rfemitter."""

    origin: Optional[str] = None
    """
    Originating system or organization which produced the data, if different from
    the source. The origin may be different than the source if the source was a
    mediating system which forwarded the data on behalf of the origin system. If
    null, the source may be assumed to be the origin.
    """

    orig_network: Optional[str] = FieldInfo(alias="origNetwork", default=None)
    """
    The originating source network on which this record was created, auto-populated
    by the system.
    """

    rf_emitter_details: Optional[List[RfEmitterDetail]] = FieldInfo(alias="rfEmitterDetails", default=None)
    """Read-only details for this RFEmitter."""

    type: Optional[str] = None
    """Type of this RF Emitter."""

    updated_at: Optional[datetime] = FieldInfo(alias="updatedAt", default=None)
    """Time the row was last updated in the database, auto-populated by the system."""

    updated_by: Optional[str] = FieldInfo(alias="updatedBy", default=None)
    """
    Application user who updated the row in the database, auto-populated by the
    system.
    """
