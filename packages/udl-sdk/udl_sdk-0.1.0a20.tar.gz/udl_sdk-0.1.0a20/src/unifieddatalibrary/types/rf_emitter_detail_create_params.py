# File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.

from __future__ import annotations

from typing import List, Iterable
from typing_extensions import Literal, Required, Annotated, TypedDict

from .._utils import PropertyInfo

__all__ = ["RfEmitterDetailCreateParams"]


class RfEmitterDetailCreateParams(TypedDict, total=False):
    classification_marking: Required[Annotated[str, PropertyInfo(alias="classificationMarking")]]
    """Classification marking of the data in IC/CAPCO Portion-marked format."""

    data_mode: Required[Annotated[Literal["REAL", "TEST", "SIMULATED", "EXERCISE"], PropertyInfo(alias="dataMode")]]
    """Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:

    EXERCISE:&nbsp;Data pertaining to a government or military exercise. The data
    may include both real and simulated data.

    REAL:&nbsp;Data collected or produced that pertains to real-world objects,
    events, and analysis.

    SIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world
    datasets.

    TEST:&nbsp;Specific datasets used to evaluate compliance with specifications and
    requirements, and for validating technical, functional, and performance
    characteristics.
    """

    id_rf_emitter: Required[Annotated[str, PropertyInfo(alias="idRFEmitter")]]
    """Unique identifier of the parent RF Emitter."""

    source: Required[str]
    """Source of the data."""

    id: str
    """Unique identifier of the record, auto-generated by the system."""

    alternate_facility_name: Annotated[str, PropertyInfo(alias="alternateFacilityName")]
    """Alternate facility name for this RF Emitter."""

    alt_name: Annotated[str, PropertyInfo(alias="altName")]
    """Optional alternate name or alias for this RF Emitter."""

    antenna_diameter: Annotated[float, PropertyInfo(alias="antennaDiameter")]
    """For parabolic/dish antennas, the diameter of the antenna in meters."""

    antenna_size: Annotated[Iterable[float], PropertyInfo(alias="antennaSize")]
    """
    Array with 1-2 values specifying the length and width (for rectangular) and just
    length for dipole antennas in meters.
    """

    barrage_noise_bandwidth: Annotated[float, PropertyInfo(alias="barrageNoiseBandwidth")]
    """Barrage noise bandwidth in Mhz."""

    description: str
    """Detailed description of the RF Emitter."""

    designator: str
    """Designator of this RF Emitter."""

    doppler_noise: Annotated[float, PropertyInfo(alias="dopplerNoise")]
    """Doppler noise value in Mhz."""

    drfm_instantaneous_bandwidth: Annotated[float, PropertyInfo(alias="drfmInstantaneousBandwidth")]
    """Digital Form Radio Memory instantaneous bandwidth in Mhz."""

    family: str
    """Family of this RF Emitter type."""

    manufacturer_org_id: Annotated[str, PropertyInfo(alias="manufacturerOrgId")]
    """Unique identifier of the organization which manufactures this RF Emitter."""

    notes: str
    """Notes on the RF Emitter."""

    num_bits: Annotated[int, PropertyInfo(alias="numBits")]
    """Number of bits."""

    num_channels: Annotated[int, PropertyInfo(alias="numChannels")]
    """Number of channels."""

    origin: str
    """
    Originating system or organization which produced the data, if different from
    the source. The origin may be different than the source if the source was a
    mediating system which forwarded the data on behalf of the origin system. If
    null, the source may be assumed to be the origin.
    """

    production_facility_location_id: Annotated[str, PropertyInfo(alias="productionFacilityLocationId")]
    """
    Unique identifier of the location of the production facility for this RF
    Emitter.
    """

    production_facility_name: Annotated[str, PropertyInfo(alias="productionFacilityName")]
    """Name of the production facility for this RF Emitter."""

    receiver_bandwidth: Annotated[float, PropertyInfo(alias="receiverBandwidth")]
    """Receiver bandwidth in Mhz."""

    receiver_sensitivity: Annotated[float, PropertyInfo(alias="receiverSensitivity")]
    """Receiver sensitivity in dBm."""

    receiver_type: Annotated[str, PropertyInfo(alias="receiverType")]
    """Type or name of receiver."""

    secondary_notes: Annotated[str, PropertyInfo(alias="secondaryNotes")]
    """Secondary notes on the RF Emitter."""

    system_sensitivity_end: Annotated[float, PropertyInfo(alias="systemSensitivityEnd")]
    """
    Receiver sensitivity is the lowest power level at which the receiver can detect
    an RF signal and demodulate data. Sensitivity is purely a receiver specification
    and is independent of the transmitter. End sensitivity range, in dBm.
    """

    system_sensitivity_start: Annotated[float, PropertyInfo(alias="systemSensitivityStart")]
    """
    Receiver sensitivity is the lowest power level at which the receiver can detect
    an RF signal and demodulate data. Sensitivity is purely a receiver specification
    and is independent of the transmitter. Start sensitivity range, in dBm.
    """

    transmit_power: Annotated[float, PropertyInfo(alias="transmitPower")]
    """Transmit power in Watts."""

    transmitter_bandwidth: Annotated[float, PropertyInfo(alias="transmitterBandwidth")]
    """Transmitter bandwidth in Mhz."""

    transmitter_frequency: Annotated[float, PropertyInfo(alias="transmitterFrequency")]
    """Transmitter frequency in Mhz."""

    urls: List[str]
    """Array of URLs containing additional information on this RF Emitter."""
