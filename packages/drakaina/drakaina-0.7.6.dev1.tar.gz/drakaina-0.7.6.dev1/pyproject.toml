[project]
name = "drakaina"
version = "0.7.6-dev-01"
description = "Module for simple RPC microservice implementation"
authors = [{ name = "Aleksey Terentyev", email = "terentyev.a@pm.me" }]
requires-python = ">=3.10"
readme = "README.md"
license = {file = "LICENSE"}
keywords = [
    "rpc",
    "jsonrpc",
    "openrpc",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Web Environment",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Networking",
    "Topic :: Internet :: WWW/HTTP :: WSGI :: Application",
]
dependencies = [
    "typing-extensions>=4.14.1,<5",
    "pyjwt>=2.10.1,<3",
]

[project.urls]
homepage = "https://gitlab.com/tau_lex/drakaina"
source = "https://gitlab.com/tau_lex/drakaina"
issues = "https://gitlab.com/tau_lex/drakaina/-/issues"

[project.optional-dependencies]
ujson = ["ujson>=5.10.0,<6"]
orjson = ["orjson>=3.11.1,<4"]
msgpack = ["msgpack>=1.1.1,<2"]
docs = ["docstring-parser>=0.15,<0.16"]
events = [
    "kombu>=5.5.4,<6",
    "mashumaro~=3.16",
]

[project.scripts]
publish_test = "drakaina._scripts:publish_test"

[dependency-groups]
dev = [
    "pre-commit>=3.7.0,<4",
    "ruff>=0.1.15,<0.2",
    "twine>=5.1.1,<6",
    "build>=1.3.0,<2",
    "msgpack>=1.1.1,<2",
    "orjson>=3.11.1,<4",
    "ujson>=5.10.0,<6",
    "pyjwt>=2.10.1,<3",
    "django>=3.2",
    "redis>=6.4.0",
    "fakeredis>=2.30.3",
    "httpx>=0.27.2,<1",
    "pytest>=8.4.1,<9",
    "pytest-asyncio>=0.23.8,<1",
    "pytest-cov>=5.0.0,<6",
]

[build-system]
requires = ["setuptools>=69,<76"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
include = ["drakaina"]
exclude = ["tests"]

[tool.uv]
default-groups = [
    "dev",
]

[tool.pytest.ini_options]
cache_dir = ".pytest_cache"
testpaths = "tests"
addopts = "-vl --cov=drakaina --cov-report=term-missing --tb=auto --capture=sys"

[tool.pyright]
include = ["drakaina"]
exclude = [
    "**/__pycache__",
]
#stubPath = "stubs"
pythonVersion = "3.10"
typeCheckingMode = "basic"

[tool.ruff]
target-version = "py310"
line-length = 80

lint.select = ["E", "F", "I", "UP", "SIM"]
lint.ignore = []

lint.fixable = ["A", "B", "C", "D", "E", "F", "I", "UP"]
lint.unfixable = []
lint.per-file-ignores = {}

# Allow unused variables when underscore-prefixed.
lint.dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

exclude = [
    ".git",
    ".idea",
    ".pytest_cache",
    ".ruff_cache",
    ".venv",
    ".vscode",
    "content",
    "dist",
    "venv",
]

[tool.ruff.lint.flake8-tidy-imports]
# Disallow all relative imports.
ban-relative-imports = "all"

[tool.ruff.lint.isort]
force-single-line = true

[tool.ruff.lint.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10
