package query

import (
    "context"
    "fmt"
    
    "{{project}}/internal/domain/projection"
)

// Get{{Name}}Query 获取{{name}}查询
type Get{{Name}}Query struct {
    ID string
}

// Get{{Name}}Handler 获取{{name}}处理器
type Get{{Name}}Handler struct {
    projection projection.{{Name}}Projection
}

// NewGet{{Name}}Handler 创建处理器实例
func NewGet{{Name}}Handler(proj projection.{{Name}}Projection) *Get{{Name}}Handler {
    return &Get{{Name}}Handler{
        projection: proj,
    }
}

// Handle 处理获取{{name}}查询
func (h *Get{{Name}}Handler) Handle(ctx context.Context, query Get{{Name}}Query) (*{{Name}}Response, error) {
    // 从投影查询数据
    result, err := h.projection.Get(ctx, query.ID)
    if err != nil {
        return nil, fmt.Errorf("failed to get %s: %w", {{name}}, err)
    }
    
    if result == nil {
        return nil, fmt.Errorf("%s not found", {{name}})
    }
    
    return &{{Name}}Response{
        Data: result,
    }, nil
}

// {{Name}}Response 查询响应
type {{Name}}Response struct {
    Data *{{Name}}ProjectionModel `json:"data"`
}