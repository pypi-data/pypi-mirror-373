package event

import (
    "context"
    "fmt"
    
    "{{project}}/internal/domain/event"
    "{{project}}/internal/domain/projection"
)

// {{EventName}}Handler {{event_name}}事件处理器
type {{EventName}}Handler struct {
    projection projection.{{Name}}Projection
}

// New{{EventName}}Handler 创建处理器实例
func New{{EventName}}Handler(proj projection.{{Name}}Projection) *{{EventName}}Handler {
    return &{{EventName}}Handler{
        projection: proj,
    }
}

// Handle 处理{{event_name}}事件
func (h *{{EventName}}Handler) Handle(ctx context.Context, event *event.{{EventName}}) error {
    // 更新投影
    if err := h.projection.Project(ctx, event); err != nil {
        return fmt.Errorf("failed to project event: %w", err)
    }
    
    return nil
}