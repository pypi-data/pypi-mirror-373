# SPDX-FileCopyrightText: Daniele Nicolodi <daniele@grinta.net>
# SPDX-License-Identifier: Apache-2.0 OR LGPL-2.1-or-later

name: build
on:
  push:
    tags:
      - 'v[0-9]*'
  workflow_dispatch:

jobs:

  wheels:
    runs-on: ${{ matrix.os }}-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu
            architecture: x86_64
          - os: ubuntu
            architecture: aarch64
          - os: macos
            architecture: x86_64
          - os: macos
            architecture: arm64
          - os: windows
            architecture: x86
          - os: windows
            architecture: AMD64
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-qemu-action@v2
        with:
          platforms: arm64
        if: runner.os == 'Linux' && matrix.architecture == 'aarch64'
      - uses: bus1/cabuild/action/msdevshell@v1
        with:
          architecture: x64
        if: runner.os == 'Windows' && matrix.architecture == 'AMD64'
      - uses: bus1/cabuild/action/msdevshell@v1
        with:
          architecture: x86
        if: runner.os == 'Windows' && matrix.architecture == 'x86'
      - uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      - run: pipx run --python 3.13 cibuildwheel~=3.1.0
        env:
          CIBW_ENABLE: cpython-freethreading
          CIBW_SKIP: '*-musllinux*'
          CIBW_ARCHS: ${{ matrix.architecture }}
          CIBW_TEST_COMMAND: python {project}/test.py
      - uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}-${{ matrix.architecture }}
          path: wheelhouse/*.whl

  sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: python -m pip install build
      - run: python -m build --sdist
      - uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: dist/*.tar.gz

  upload:
    needs:
      - wheels
      - sdist
    runs-on: ubuntu-latest
    environment: upload
    permissions:
      id-token: write
    steps:
      - uses: actions/download-artifact@v4
        with:
          merge-multiple: true
          path: dist
      - uses: pypa/gh-action-pypi-publish@release/v1
