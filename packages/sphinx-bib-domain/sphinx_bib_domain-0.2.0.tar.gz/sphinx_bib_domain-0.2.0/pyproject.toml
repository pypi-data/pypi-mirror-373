## pyproject.toml -*- mode: toml  -*-

[project]
name            = "sphinx_bib_domain"
version = "0.2.0"
description     = ""
readme          = "README.md"
requires-python = ">=3.12"
license-files   = ["LICENSE"]
keywords        = []
authors         = [
  {name         = "John Grey", email = "jgrey.n.plus.one+bibdomain@gmail.com"},
]
classifiers     = [
  "Programming Language :: Python"
]

##-- dependencies
dependencies   = [
    "bibtex-bibble>=0.3.1",
    "docutils>=0.21.2",
    "jgdv>=1.0.1",
    "sphinx>=8.2.3",
]

##-- end dependencies

##-- urls
[project.urls]
homepage      = "https://github.com/jgrey4296/sphinx_bib_domain"
documentation = "https://readthedocs.org/sphinx_bib_domain"
repository    = "https://github.com/jgrey4296/sphinx_bib_domain"
changelog     = "https://github.com//sphinx_bib_domain/blob/master/CHANGELOG.md"

##-- end urls

##-- scripts
[project.scripts]
# sphinx_bib_domain = "sphinx_bib_domain.__main__:main"

[project.gui-scripts]
# spam-gui      = "spam:main_gui"

[project.entry-points."sphinx.builders"]
bibhtml = "sphinx_bib_domain.builder.BibDomainHTMLBuilder"

##-- end scripts

##-- build-system
[build-system]
requires       = ["hatchling>=1.13"]
build-backend  = "hatchling.build"

[tool.hatch.build]
skip-excluded-dirs  = true
# directory         = ".temp/build"  # or HATCH_BUILD_LOCATION

[tool.hatch.build.targets.sdist]
packages   = ["sphinx_bib_domain"]
artifacts  = ["*.so"]
exclude    = [
    ".temp", "**.rst",
    "sphinx_bib_domain/*/__tests", "sphinx_bib_domain/_docs", "sphinx_bib_domain/__tests",
]

[tool.hatch.build.targets.wheel]
packages   = ["sphinx_bib_domain"]
artifacts  = ["*.so"]
exclude    = [
    ".temp", "**.rst",
    "sphinx_bib_domain/*/__tests", "sphinx_bib_domain/__tests",
    "sphinx_bib_domain/_docs",
]

##-- end build-system

# Tools #######################################################################

##-- pytest
# https://docs.pytest.org/en/8.2.x/reference/reference.html#ini-options-ref
[tool.pytest.ini_options]
cache_dir       = ".temp/pytest_cache"
log_file        = ".temp/logs/pytest.log"

log_cli         = false
log_level       = "DEBUG"
log_cli_level   = "INFO"
# log_format      = "%(levelname)s %(name)s : %(message)s"
log_format      = "%(levelname)s %(module)s %(lineno)s : %(message)s"
log_file_level  = "DEBUG"
log_file_format = "%(asctime)s %(levelname)s %(name)s : %(message)s"

##-- end pytest

##-- sphinx
[tool.sphinx]
author     = "John Grey"
copyright  = "2024-11-08"
extensions = ['sphinx.ext.doctest', 'sphinx.ext.autodoc', 'sphinx.ext.autosummary', 'sphinx.ext.napoleon']
templates  = ['_templates']
exclude    = ['**/flycheck_*.py']

[tool.sphinx.autosummary]
generate = true

[tool.sphinx.autodoc]
add_module_names   = false
inherit_docstrings = true

[tool.sphinx.autodoc.defaults]
members           = true
undoc-members     = true
private-members   = false
special-members   = false
inherited-members = true
show-inheritance  = true

[tool.sphinx.html]
theme       = 'alabaster'
static      = ['_static']

[tool.sphinx.html.options]

##-- end sphinx

##-- bumpver
[tool.bumpver]
current_version    = "0.1.0"
version_pattern    = "MAJOR.MINOR.PATCH"
commit_message     = "[bump]: version {old_version} -> {new_version}"
tag_message        = "{new_version}"
tag_scope          = "default"
commit             = true
# tag                = true
# push             = true
# pre_commit_hook  = ""
# post_commit_hook = ""

[tool.bumpver.file_patterns]
"pyproject.toml"   = [
                   '^version\s+=\s+"{version}"',
                   '^current_version\s+=\s+"{version}"'
]
"docs/conf.py"     = ["^release = '{version}'"]
"README.md"        = ["^Version : {version}  "]
"sphinx_bib_domain/__init__.py" = [
    '^__version__\s+=\s+"{version}"',
    # '^__version__\s+:\s+Final\[str\]\s+=\s+"{version}"'
]

##-- end bumpver

##-- isort
# https://pycqa.github.io/isort/docs/configuration/options.html
[tool.isort]
color_output           = false
py_version             = 311
# profile                = "black"
comment_prefix         = "#"
sections               = [
"FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"
]
default_section        = "THIRDPARTY"
lines_after_imports    = -1
lines_between_sections = 1
lines_between_types    = 0

import_heading_future      = "Imports:"
import_heading_stdlib      = "##-- stdlib imports"
import_heading_thirdparty  = "##-- 3rd party imports"
import_heading_firstparty  = "##-- 1st party imports"
import_heading_localfolder = ""

import_footer_future      = ""
import_footer_stdlib      = "##-- end stdlib imports"
import_footer_thirdparty  = "##-- end 3rd party imports"
import_footer_firstparty  = "##-- end 1st party imports"
import_footer_localfolder = ""

add_imports            = []

##-- end isort

##-- mypy
# https://mypy.readthedocs.io/en/stable/config_file.html
[tool.mypy]
python_version      = "3.12"
warn_return_any     = true
warn_unused_configs = true
incremental         = true
exclude             = [] # regexs to ignore
cache_dir           = ".temp/mypy_cache"
follow_imports      = "skip"
ignore_missing_imports = false
# mypy_path = [".venv/"]
# Per-module options:
# [[tool.mypy.overrides]]
# module                = "blah"
# disallow_untyped_defs = true

##-- end mypy

[tool.uv.sources]

[dependency-groups]
dev = [
    "ipython>=9.4.0",
    "mypy>=1.17.1",
    "sh>=2.2.2",
    "towncrier>=24.8.0",
    "types-docutils>=0.22.0.20250822",
]
test =[
    "pydot>=4.0.1",
    "pytest>=8.3.5",
    "pytest-cov>=6.0.0",
    "pytest-mock>=3.14.0",
    "tox>=4.28.4",
    "tox-uv>=1.27.0",
    "ruff>=0.12.8",
]
docs = [
    "myst-parser>=4.0.1",
    "sphinx>=8.2.3",
    "sphinx-autoapi>=3.6.0",
    "sphinx-rtd-theme>=3.0.2",
    "pydot>=4.0.1",
    "tox>=4.28.4",
    "tox-uv>=1.27.0",
]
