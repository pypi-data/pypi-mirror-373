"""
Molecular integrals over Gaussian basis functions generated by sympleints.
See https://github.com/eljost/sympleints for more information.

sympleints version: 0.1.dev79+g63f1ef8.d20230515
symppy version: 1.10.1

sympleints was executed with the following arguments:
	lmax = 4
	lauxmax = 6
	write = False
	out_dir = devel_ints
	keys = ['~2c2e', '~3c2e_sph']
	sph = False
	opt_basic = True
	normalize = cgto
"""

"""

        Dipole integrals are given in the order:
        for cart_dir in (x, y, z):
            for bf_a in basis_functions_a:
                for bf_b in basis_functions_b:
                    dipole_integrals(cart_dir, bf_a, bf_b)

        So for <s_a|Î¼|s_b> it will be:

            <s_a|x|s_b>
            <s_a|y|s_b>
            <s_a|z|s_b>
        
"""

import numpy


def dipole3d_00(ax, da, A, bx, db, B, R):
    """Cartesian 3D (ss) dipole moment integrals.
    The origin is at R.

    Generated code; DO NOT modify by hand!"""

    result = numpy.zeros((3, 1, 1), dtype=float)

    x0 = (ax + bx) ** (-1.0)
    x1 = ax * bx * x0
    x2 = (
        5.568327996831708
        * da
        * db
        * x0**1.5
        * numpy.exp(-x1 * ((A[0] - B[0]) ** 2 + (A[1] - B[1]) ** 2 + (A[2] - B[2]) ** 2))
    )

    # 3 item(s)
    result[0, 0, 0] = numpy.sum(x2 * (x0 * (ax * A[0] + bx * B[0]) - R[0]))
    result[1, 0, 0] = numpy.sum(x2 * (x0 * (ax * A[1] + bx * B[1]) - R[1]))
    result[2, 0, 0] = numpy.sum(x2 * (x0 * (ax * A[2] + bx * B[2]) - R[2]))
    return result


def dipole3d_01(ax, da, A, bx, db, B, R):
    """Cartesian 3D (sp) dipole moment integrals.
    The origin is at R.

    Generated code; DO NOT modify by hand!"""

    result = numpy.zeros((3, 1, 3), dtype=float)

    x0 = (ax + bx) ** (-1.0)
    x1 = 0.5 * x0
    x2 = -x0 * (ax * A[0] + bx * B[0])
    x3 = x2 + B[0]
    x4 = x2 + R[0]
    x5 = ax * bx * x0
    x6 = (
        5.568327996831708
        * da
        * db
        * x0**1.5
        * numpy.exp(-x5 * ((A[0] - B[0]) ** 2 + (A[1] - B[1]) ** 2 + (A[2] - B[2]) ** 2))
    )
    x7 = -x0 * (ax * A[1] + bx * B[1])
    x8 = x7 + B[1]
    x9 = x4 * x6
    x10 = -x0 * (ax * A[2] + bx * B[2])
    x11 = x10 + B[2]
    x12 = x7 + R[1]
    x13 = x12 * x6
    x14 = x10 + R[2]
    x15 = x14 * x6

    # 9 item(s)
    result[0, 0, 0] = numpy.sum(x6 * (x1 + x3 * x4))
    result[0, 0, 1] = numpy.sum(x8 * x9)
    result[0, 0, 2] = numpy.sum(x11 * x9)
    result[1, 0, 0] = numpy.sum(x13 * x3)
    result[1, 0, 1] = numpy.sum(x6 * (x1 + x12 * x8))
    result[1, 0, 2] = numpy.sum(x11 * x13)
    result[2, 0, 0] = numpy.sum(x15 * x3)
    result[2, 0, 1] = numpy.sum(x15 * x8)
    result[2, 0, 2] = numpy.sum(x6 * (x1 + x11 * x14))
    return result


def dipole3d_02(ax, da, A, bx, db, B, R):
    """Cartesian 3D (sd) dipole moment integrals.
    The origin is at R.

    Generated code; DO NOT modify by hand!"""

    result = numpy.zeros((3, 1, 6), dtype=float)

    x0 = (ax + bx) ** (-1.0)
    x1 = x0 * (ax * A[0] + bx * B[0])
    x2 = -x1
    x3 = x2 + B[0]
    x4 = x2 + R[0]
    x5 = x3 * x4
    x6 = ax * bx * x0
    x7 = (
        5.568327996831708
        * da
        * db
        * x0**1.5
        * numpy.exp(-x6 * ((A[0] - B[0]) ** 2 + (A[1] - B[1]) ** 2 + (A[2] - B[2]) ** 2))
    )
    x8 = 1.732050807568877 * x7
    x9 = 0.1666666666666667 * x8
    x10 = x0 * (ax * A[1] + bx * B[1])
    x11 = -x10
    x12 = x11 + B[1]
    x13 = 0.5 * x0
    x14 = x7 * (x13 + x5)
    x15 = x0 * (ax * A[2] + bx * B[2])
    x16 = -x15
    x17 = x16 + B[2]
    x18 = x12**2 + x13
    x19 = 0.3333333333333333 * x8
    x20 = x19 * x4
    x21 = x17 * x7
    x22 = x13 + x17**2
    x23 = x13 + x3**2
    x24 = x11 + R[1]
    x25 = x19 * x24
    x26 = x12 * x24
    x27 = x7 * (x13 + x26)
    x28 = x16 + R[2]
    x29 = x19 * x28
    x30 = x17 * x28
    x31 = x7 * (x13 + x30)

    # 18 item(s)
    result[0, 0, 0] = numpy.sum(
        -x9 * (x0 * (-2.0 * x1 + B[0] + R[0]) + x3 * (x0 + 2.0 * x5))
    )
    result[0, 0, 1] = numpy.sum(-x12 * x14)
    result[0, 0, 2] = numpy.sum(-x14 * x17)
    result[0, 0, 3] = numpy.sum(-x18 * x20)
    result[0, 0, 4] = numpy.sum(-x12 * x21 * x4)
    result[0, 0, 5] = numpy.sum(-x20 * x22)
    result[1, 0, 0] = numpy.sum(-x23 * x25)
    result[1, 0, 1] = numpy.sum(-x27 * x3)
    result[1, 0, 2] = numpy.sum(-x21 * x24 * x3)
    result[1, 0, 3] = numpy.sum(
        -x9 * (x0 * (-2.0 * x10 + B[1] + R[1]) + x12 * (x0 + 2.0 * x26))
    )
    result[1, 0, 4] = numpy.sum(-x17 * x27)
    result[1, 0, 5] = numpy.sum(-x22 * x25)
    result[2, 0, 0] = numpy.sum(-x23 * x29)
    result[2, 0, 1] = numpy.sum(-x12 * x28 * x3 * x7)
    result[2, 0, 2] = numpy.sum(-x3 * x31)
    result[2, 0, 3] = numpy.sum(-x18 * x29)
    result[2, 0, 4] = numpy.sum(-x12 * x31)
    result[2, 0, 5] = numpy.sum(
        -x9 * (x0 * (-2.0 * x15 + B[2] + R[2]) + x17 * (x0 + 2.0 * x30))
    )
    return result


def dipole3d_03(ax, da, A, bx, db, B, R):
    """Cartesian 3D (sf) dipole moment integrals.
    The origin is at R.

    Generated code; DO NOT modify by hand!"""

    result = numpy.zeros((3, 1, 10), dtype=float)

    x0 = (ax + bx) ** (-1.0)
    x1 = x0 * (ax * A[0] + bx * B[0])
    x2 = -x1
    x3 = x2 + B[0]
    x4 = x3**2
    x5 = 3.0 * x0
    x6 = x2 + R[0]
    x7 = x3 * x6
    x8 = x0 * (-2.0 * x1 + B[0] + R[0]) + x3 * (x0 + 2.0 * x7)
    x9 = ax * bx * x0
    x10 = (
        5.568327996831708
        * da
        * db
        * numpy.exp(-x9 * ((A[0] - B[0]) ** 2 + (A[1] - B[1]) ** 2 + (A[2] - B[2]) ** 2))
    )
    x11 = x0**1.5 * x10
    x12 = 3.872983346207417 * x11
    x13 = 0.01666666666666667 * x12
    x14 = x0 * (ax * A[1] + bx * B[1])
    x15 = -x14
    x16 = x15 + B[1]
    x17 = x11 * x16
    x18 = 1.732050807568877
    x19 = 0.1666666666666667 * x18
    x20 = x19 * x8
    x21 = x0 * (ax * A[2] + bx * B[2])
    x22 = -x21
    x23 = x22 + B[2]
    x24 = x11 * x23
    x25 = x16**2
    x26 = 0.5 * x0
    x27 = 0.3333333333333333 * x18
    x28 = x27 * (x25 + x26)
    x29 = x26 + x7
    x30 = x0**1.5 * x10
    x31 = x29 * x30
    x32 = x23**2
    x33 = x27 * (x26 + x32)
    x34 = 0.06666666666666667 * x12
    x35 = x34 * x6
    x36 = 1.5 * x0
    x37 = x16 * (x25 + x36)
    x38 = x23 * (x32 + x36)
    x39 = x15 + R[1]
    x40 = x34 * x39
    x41 = x3 * (x36 + x4)
    x42 = x16 * x39
    x43 = x26 + x42
    x44 = x30 * x43
    x45 = x27 * (x26 + x4)
    x46 = x0 * (-2.0 * x14 + B[1] + R[1]) + x16 * (x0 + 2.0 * x42)
    x47 = x19 * x46
    x48 = x11 * x3
    x49 = x22 + R[2]
    x50 = x34 * x49
    x51 = x23 * x49
    x52 = x26 + x51
    x53 = x30 * x52
    x54 = x0 * (-2.0 * x21 + B[2] + R[2]) + x23 * (x0 + 2.0 * x51)
    x55 = x19 * x54

    # 30 item(s)
    result[0, 0, 0] = numpy.sum(x13 * (x0 * (2.0 * x4 + x5 + 4.0 * x7) + 2.0 * x3 * x8))
    result[0, 0, 1] = numpy.sum(x17 * x20)
    result[0, 0, 2] = numpy.sum(x20 * x24)
    result[0, 0, 3] = numpy.sum(x28 * x31)
    result[0, 0, 4] = numpy.sum(x16 * x24 * x29)
    result[0, 0, 5] = numpy.sum(x31 * x33)
    result[0, 0, 6] = numpy.sum(x35 * x37)
    result[0, 0, 7] = numpy.sum(x24 * x28 * x6)
    result[0, 0, 8] = numpy.sum(x17 * x33 * x6)
    result[0, 0, 9] = numpy.sum(x35 * x38)
    result[1, 0, 0] = numpy.sum(x40 * x41)
    result[1, 0, 1] = numpy.sum(x44 * x45)
    result[1, 0, 2] = numpy.sum(x24 * x39 * x45)
    result[1, 0, 3] = numpy.sum(x47 * x48)
    result[1, 0, 4] = numpy.sum(x24 * x3 * x43)
    result[1, 0, 5] = numpy.sum(x33 * x39 * x48)
    result[1, 0, 6] = numpy.sum(
        x13 * (x0 * (2.0 * x25 + 4.0 * x42 + x5) + 2.0 * x16 * x46)
    )
    result[1, 0, 7] = numpy.sum(x24 * x47)
    result[1, 0, 8] = numpy.sum(x33 * x44)
    result[1, 0, 9] = numpy.sum(x38 * x40)
    result[2, 0, 0] = numpy.sum(x41 * x50)
    result[2, 0, 1] = numpy.sum(x17 * x45 * x49)
    result[2, 0, 2] = numpy.sum(x45 * x53)
    result[2, 0, 3] = numpy.sum(x28 * x48 * x49)
    result[2, 0, 4] = numpy.sum(x17 * x3 * x52)
    result[2, 0, 5] = numpy.sum(x48 * x55)
    result[2, 0, 6] = numpy.sum(x37 * x50)
    result[2, 0, 7] = numpy.sum(x28 * x53)
    result[2, 0, 8] = numpy.sum(x17 * x55)
    result[2, 0, 9] = numpy.sum(
        x13 * (x0 * (2.0 * x32 + x5 + 4.0 * x51) + 2.0 * x23 * x54)
    )
    return result


def dipole3d_04(ax, da, A, bx, db, B, R):
    """Cartesian 3D (sg) dipole moment integrals.
    The origin is at R.

    Generated code; DO NOT modify by hand!"""

    result = numpy.zeros((3, 1, 15), dtype=float)

    x0 = 0.5 / (ax + bx)
    x1 = (ax + bx) ** (-1.0)
    x2 = -x1 * (ax * A[0] + bx * B[0])
    x3 = -x2 - B[0]
    x4 = ax * bx * x1
    x5 = numpy.exp(-x4 * (A[0] - B[0]) ** 2)
    x6 = 1.772453850905516 * numpy.sqrt(x1)
    x7 = x5 * x6
    x8 = x3 * x7
    x9 = -x2 - R[0]
    x10 = x7 * x9
    x11 = x0 * (x10 + x8)
    x12 = x0 * x7
    x13 = x8 * x9
    x14 = x12 + x13
    x15 = x14 * x3
    x16 = x3**2 * x7
    x17 = x12 + x16
    x18 = x3 * (2.0 * x12 + x17)
    x19 = 3.0 * x12
    x20 = x11 + x15
    x21 = x0 * (2.0 * x13 + x16 + x19) + x20 * x3
    x22 = numpy.exp(-x4 * (A[1] - B[1]) ** 2)
    x23 = da * db
    x24 = numpy.exp(-x4 * (A[2] - B[2]) ** 2)
    x25 = 3.141592653589793 * x1 * x24
    x26 = x23 * x25
    x27 = x22 * x26
    x28 = 0.09759000729485332
    x29 = x27 * x28
    x30 = -x1 * (ax * A[1] + bx * B[1])
    x31 = -x30 - B[1]
    x32 = 0.2581988897471611
    x33 = x27 * x32
    x34 = x21 * x33
    x35 = -x1 * (ax * A[2] + bx * B[2])
    x36 = -x35 - B[2]
    x37 = x22 * x6
    x38 = x31**2 * x37
    x39 = x0 * x37
    x40 = x38 + x39
    x41 = x24 * x6
    x42 = 0.3333333333333333 * x23
    x43 = x20 * x42
    x44 = 1.732050807568877
    x45 = x31 * x44
    x46 = x25 * x36
    x47 = x36**2 * x41
    x48 = x0 * x41
    x49 = x47 + x48
    x50 = x31 * (2.0 * x39 + x40)
    x51 = x23 * x32
    x52 = x14 * x51
    x53 = x36 * x41
    x54 = x40 * x42
    x55 = x14 * x44
    x56 = x31 * x37
    x57 = x42 * x49
    x58 = x36 * (2.0 * x48 + x49)
    x59 = 3.0 * x39
    x60 = x28 * x5
    x61 = x26 * x60
    x62 = x61 * (x0 * (3.0 * x38 + x59) + x31 * x50)
    x63 = x36 * x5
    x64 = x26 * x32
    x65 = x50 * x64
    x66 = x31 * x5
    x67 = 3.141592653589793 * x1 * x22
    x68 = x51 * x67
    x69 = x58 * x68
    x70 = 3.0 * x48
    x71 = x23 * x60 * x67
    x72 = x71 * (x0 * (3.0 * x47 + x70) + x36 * x58)
    x73 = -x30 - R[1]
    x74 = x29 * (x0 * (3.0 * x16 + x19) + x18 * x3)
    x75 = x56 * x73
    x76 = x39 + x75
    x77 = x51 * x76
    x78 = x18 * x33
    x79 = x37 * x73
    x80 = x0 * (x56 + x79)
    x81 = x31 * x76
    x82 = x80 + x81
    x83 = x42 * x82
    x84 = x44 * x76
    x85 = x17 * x42
    x86 = x3 * x5
    x87 = x0 * (x38 + x59 + 2.0 * x75) + x31 * x82
    x88 = x64 * x87
    x89 = -x35 - R[2]
    x90 = x53 * x89
    x91 = x48 + x90
    x92 = x51 * x91
    x93 = x41 * x89
    x94 = x44 * x91
    x95 = x0 * (x53 + x93)
    x96 = x36 * x91
    x97 = x95 + x96
    x98 = x42 * x97
    x99 = x0 * (x47 + x70 + 2.0 * x90) + x36 * x97
    x100 = x68 * x99

    # 45 item(s)
    result[0, 0, 0] = numpy.sum(x29 * (x0 * (3.0 * x11 + 3.0 * x15 + x18) + x21 * x3))
    result[0, 0, 1] = numpy.sum(x31 * x34)
    result[0, 0, 2] = numpy.sum(x34 * x36)
    result[0, 0, 3] = numpy.sum(x40 * x41 * x43)
    result[0, 0, 4] = numpy.sum(x22 * x43 * x45 * x46)
    result[0, 0, 5] = numpy.sum(x37 * x43 * x49)
    result[0, 0, 6] = numpy.sum(x41 * x50 * x52)
    result[0, 0, 7] = numpy.sum(x53 * x54 * x55)
    result[0, 0, 8] = numpy.sum(x55 * x56 * x57)
    result[0, 0, 9] = numpy.sum(x37 * x52 * x58)
    result[0, 0, 10] = numpy.sum(x62 * x9)
    result[0, 0, 11] = numpy.sum(x63 * x65 * x9)
    result[0, 0, 12] = numpy.sum(x10 * x40 * x57)
    result[0, 0, 13] = numpy.sum(x66 * x69 * x9)
    result[0, 0, 14] = numpy.sum(x72 * x9)
    result[1, 0, 0] = numpy.sum(x73 * x74)
    result[1, 0, 1] = numpy.sum(x18 * x41 * x77)
    result[1, 0, 2] = numpy.sum(x36 * x73 * x78)
    result[1, 0, 3] = numpy.sum(x17 * x41 * x83)
    result[1, 0, 4] = numpy.sum(x53 * x84 * x85)
    result[1, 0, 5] = numpy.sum(x17 * x57 * x79)
    result[1, 0, 6] = numpy.sum(x86 * x88)
    result[1, 0, 7] = numpy.sum(x44 * x46 * x83 * x86)
    result[1, 0, 8] = numpy.sum(x57 * x8 * x84)
    result[1, 0, 9] = numpy.sum(x69 * x73 * x86)
    result[1, 0, 10] = numpy.sum(x61 * (x0 * (x50 + 3.0 * x80 + 3.0 * x81) + x31 * x87))
    result[1, 0, 11] = numpy.sum(x63 * x88)
    result[1, 0, 12] = numpy.sum(x49 * x7 * x83)
    result[1, 0, 13] = numpy.sum(x58 * x7 * x77)
    result[1, 0, 14] = numpy.sum(x72 * x73)
    result[2, 0, 0] = numpy.sum(x74 * x89)
    result[2, 0, 1] = numpy.sum(x31 * x78 * x89)
    result[2, 0, 2] = numpy.sum(x18 * x37 * x92)
    result[2, 0, 3] = numpy.sum(x17 * x54 * x93)
    result[2, 0, 4] = numpy.sum(x56 * x85 * x94)
    result[2, 0, 5] = numpy.sum(x17 * x37 * x98)
    result[2, 0, 6] = numpy.sum(x65 * x86 * x89)
    result[2, 0, 7] = numpy.sum(x54 * x8 * x94)
    result[2, 0, 8] = numpy.sum(x45 * x67 * x86 * x98)
    result[2, 0, 9] = numpy.sum(x100 * x86)
    result[2, 0, 10] = numpy.sum(x62 * x89)
    result[2, 0, 11] = numpy.sum(x50 * x7 * x92)
    result[2, 0, 12] = numpy.sum(x40 * x7 * x98)
    result[2, 0, 13] = numpy.sum(x100 * x66)
    result[2, 0, 14] = numpy.sum(x71 * (x0 * (x58 + 3.0 * x95 + 3.0 * x96) + x36 * x99))
    return result


def dipole3d_10(ax, da, A, bx, db, B, R):
    """Cartesian 3D (ps) dipole moment integrals.
    The origin is at R.

    Generated code; DO NOT modify by hand!"""

    result = numpy.zeros((3, 3, 1), dtype=float)

    x0 = (ax + bx) ** (-1.0)
    x1 = 0.5 * x0
    x2 = -x0 * (ax * A[0] + bx * B[0])
    x3 = x2 + A[0]
    x4 = x2 + R[0]
    x5 = ax * bx * x0
    x6 = (
        5.568327996831708
        * da
        * db
        * x0**1.5
        * numpy.exp(-x5 * ((A[0] - B[0]) ** 2 + (A[1] - B[1]) ** 2 + (A[2] - B[2]) ** 2))
    )
    x7 = -x0 * (ax * A[1] + bx * B[1])
    x8 = x7 + A[1]
    x9 = x4 * x6
    x10 = -x0 * (ax * A[2] + bx * B[2])
    x11 = x10 + A[2]
    x12 = x7 + R[1]
    x13 = x12 * x6
    x14 = x10 + R[2]
    x15 = x14 * x6

    # 9 item(s)
    result[0, 0, 0] = numpy.sum(x6 * (x1 + x3 * x4))
    result[0, 1, 0] = numpy.sum(x8 * x9)
    result[0, 2, 0] = numpy.sum(x11 * x9)
    result[1, 0, 0] = numpy.sum(x13 * x3)
    result[1, 1, 0] = numpy.sum(x6 * (x1 + x12 * x8))
    result[1, 2, 0] = numpy.sum(x11 * x13)
    result[2, 0, 0] = numpy.sum(x15 * x3)
    result[2, 1, 0] = numpy.sum(x15 * x8)
    result[2, 2, 0] = numpy.sum(x6 * (x1 + x11 * x14))
    return result


def dipole3d_11(ax, da, A, bx, db, B, R):
    """Cartesian 3D (pp) dipole moment integrals.
    The origin is at R.

    Generated code; DO NOT modify by hand!"""

    result = numpy.zeros((3, 3, 3), dtype=float)

    x0 = (ax + bx) ** (-1.0)
    x1 = x0 * (ax * A[0] + bx * B[0])
    x2 = -x1
    x3 = x2 + B[0]
    x4 = x2 + R[0]
    x5 = x3 * x4
    x6 = x2 + A[0]
    x7 = 0.5 * x0
    x8 = ax * bx * x0
    x9 = (
        5.568327996831708
        * da
        * db
        * numpy.sqrt(x0)
        * numpy.exp(-x8 * ((A[0] - B[0]) ** 2 + (A[1] - B[1]) ** 2 + (A[2] - B[2]) ** 2))
    )
    x10 = x7 * x9
    x11 = x0 * (ax * A[1] + bx * B[1])
    x12 = -x11
    x13 = x12 + B[1]
    x14 = x0 * x9
    x15 = x14 * (x4 * x6 + x7)
    x16 = x0 * (ax * A[2] + bx * B[2])
    x17 = -x16
    x18 = x17 + B[2]
    x19 = x12 + A[1]
    x20 = x14 * (x5 + x7)
    x21 = x13 * x19 + x7
    x22 = x14 * x4
    x23 = x17 + A[2]
    x24 = x18 * x23 + x7
    x25 = x3 * x6 + x7
    x26 = x12 + R[1]
    x27 = x14 * x26
    x28 = x13 * x26
    x29 = x14 * (x28 + x7)
    x30 = x14 * (x19 * x26 + x7)
    x31 = x17 + R[2]
    x32 = x14 * x31
    x33 = x18 * x31
    x34 = x14 * (x33 + x7)
    x35 = x14 * (x23 * x31 + x7)

    # 27 item(s)
    result[0, 0, 0] = numpy.sum(
        -x10 * (x0 * (-2.0 * x1 + B[0] + R[0]) + x6 * (x0 + 2.0 * x5))
    )
    result[0, 0, 1] = numpy.sum(-x13 * x15)
    result[0, 0, 2] = numpy.sum(-x15 * x18)
    result[0, 1, 0] = numpy.sum(-x19 * x20)
    result[0, 1, 1] = numpy.sum(-x21 * x22)
    result[0, 1, 2] = numpy.sum(-x18 * x19 * x22)
    result[0, 2, 0] = numpy.sum(-x20 * x23)
    result[0, 2, 1] = numpy.sum(-x13 * x22 * x23)
    result[0, 2, 2] = numpy.sum(-x22 * x24)
    result[1, 0, 0] = numpy.sum(-x25 * x27)
    result[1, 0, 1] = numpy.sum(-x29 * x6)
    result[1, 0, 2] = numpy.sum(-x18 * x27 * x6)
    result[1, 1, 0] = numpy.sum(-x3 * x30)
    result[1, 1, 1] = numpy.sum(
        -x10 * (x0 * (-2.0 * x11 + B[1] + R[1]) + x19 * (x0 + 2.0 * x28))
    )
    result[1, 1, 2] = numpy.sum(-x18 * x30)
    result[1, 2, 0] = numpy.sum(-x23 * x27 * x3)
    result[1, 2, 1] = numpy.sum(-x23 * x29)
    result[1, 2, 2] = numpy.sum(-x24 * x27)
    result[2, 0, 0] = numpy.sum(-x25 * x32)
    result[2, 0, 1] = numpy.sum(-x13 * x32 * x6)
    result[2, 0, 2] = numpy.sum(-x34 * x6)
    result[2, 1, 0] = numpy.sum(-x19 * x3 * x32)
    result[2, 1, 1] = numpy.sum(-x21 * x32)
    result[2, 1, 2] = numpy.sum(-x19 * x34)
    result[2, 2, 0] = numpy.sum(-x3 * x35)
    result[2, 2, 1] = numpy.sum(-x13 * x35)
    result[2, 2, 2] = numpy.sum(
        -x10 * (x0 * (-2.0 * x16 + B[2] + R[2]) + x23 * (x0 + 2.0 * x33))
    )
    return result


def dipole3d_12(ax, da, A, bx, db, B, R):
    """Cartesian 3D (pd) dipole moment integrals.
    The origin is at R.

    Generated code; DO NOT modify by hand!"""

    result = numpy.zeros((3, 3, 6), dtype=float)

    x0 = (ax + bx) ** (-1.0)
    x1 = 3.0 * x0
    x2 = x0 * (ax * A[0] + bx * B[0])
    x3 = -x2
    x4 = x3 + A[0]
    x5 = x3 + B[0]
    x6 = x4 * x5
    x7 = 2.0 * x6
    x8 = x3 + R[0]
    x9 = x4 * x8
    x10 = x5 * x8
    x11 = 2.0 * x10
    x12 = -2.0 * x2 + B[0]
    x13 = x0 * (x12 + R[0])
    x14 = x0 + x11
    x15 = x13 + x14 * x4
    x16 = 1.732050807568877
    x17 = ax * bx * x0
    x18 = (
        5.568327996831708
        * da
        * db
        * numpy.exp(-x17 * ((A[0] - B[0]) ** 2 + (A[1] - B[1]) ** 2 + (A[2] - B[2]) ** 2))
    )
    x19 = numpy.sqrt(x0) * x18
    x20 = x0 * x19
    x21 = x16 * x20
    x22 = 0.08333333333333333 * x21
    x23 = x0 * (ax * A[1] + bx * B[1])
    x24 = -x23
    x25 = x24 + B[1]
    x26 = 0.5 * x0
    x27 = x19 * x26
    x28 = x15 * x27
    x29 = x0 * (ax * A[2] + bx * B[2])
    x30 = -x29
    x31 = x30 + B[2]
    x32 = 0.3333333333333333 * x25**2 + 0.3333333333333333 * x26
    x33 = x26 + x9
    x34 = x0**1.5 * x18
    x35 = x16 * x34
    x36 = x33 * x35
    x37 = x20 * x31
    x38 = 0.3333333333333333 * x26 + 0.3333333333333333 * x31**2
    x39 = x24 + A[1]
    x40 = 0.1666666666666667 * x21
    x41 = x40 * (x13 + x14 * x5)
    x42 = x25 * x39
    x43 = x26 + x42
    x44 = x10 + x26
    x45 = x34 * x44
    x46 = -2.0 * x23 + B[1]
    x47 = 2.0 * x42
    x48 = x0 * (x46 + A[1]) + x25 * (x0 + x47)
    x49 = x40 * x8
    x50 = x21 * x8
    x51 = x30 + A[2]
    x52 = x20 * x25
    x53 = x31 * x51
    x54 = x26 + x53
    x55 = -2.0 * x29 + B[2]
    x56 = 2.0 * x53
    x57 = x0 * (x55 + A[2]) + x31 * (x0 + x56)
    x58 = x0 * (x12 + A[0]) + x5 * (x0 + x7)
    x59 = x24 + R[1]
    x60 = x40 * x59
    x61 = x26 + x6
    x62 = x25 * x59
    x63 = x26 + x62
    x64 = x34 * x63
    x65 = x0 * (x46 + R[1])
    x66 = 2.0 * x62
    x67 = x0 + x66
    x68 = x40 * (x25 * x67 + x65)
    x69 = x21 * x59
    x70 = x39 * x59
    x71 = x26 + x70
    x72 = x35 * x71
    x73 = 0.3333333333333333 * x26 + 0.3333333333333333 * x5**2
    x74 = x39 * x67 + x65
    x75 = x27 * x74
    x76 = x20 * x5
    x77 = x30 + R[2]
    x78 = x40 * x77
    x79 = x31 * x77
    x80 = x26 + x79
    x81 = x34 * x80
    x82 = x21 * x77
    x83 = x0 * (x55 + R[2])
    x84 = 2.0 * x79
    x85 = x0 + x84
    x86 = x40 * (x31 * x85 + x83)
    x87 = x51 * x77
    x88 = x26 + x87
    x89 = x35 * x88
    x90 = x51 * x85 + x83
    x91 = x27 * x90

    # 54 item(s)
    result[0, 0, 0] = numpy.sum(x22 * (x0 * (x1 + x11 + x7 + 2.0 * x9) + 2.0 * x15 * x5))
    result[0, 0, 1] = numpy.sum(x25 * x28)
    result[0, 0, 2] = numpy.sum(x28 * x31)
    result[0, 0, 3] = numpy.sum(x32 * x36)
    result[0, 0, 4] = numpy.sum(x25 * x33 * x37)
    result[0, 0, 5] = numpy.sum(x36 * x38)
    result[0, 1, 0] = numpy.sum(x39 * x41)
    result[0, 1, 1] = numpy.sum(x43 * x45)
    result[0, 1, 2] = numpy.sum(x37 * x39 * x44)
    result[0, 1, 3] = numpy.sum(x48 * x49)
    result[0, 1, 4] = numpy.sum(x37 * x43 * x8)
    result[0, 1, 5] = numpy.sum(x38 * x39 * x50)
    result[0, 2, 0] = numpy.sum(x41 * x51)
    result[0, 2, 1] = numpy.sum(x44 * x51 * x52)
    result[0, 2, 2] = numpy.sum(x45 * x54)
    result[0, 2, 3] = numpy.sum(x32 * x50 * x51)
    result[0, 2, 4] = numpy.sum(x52 * x54 * x8)
    result[0, 2, 5] = numpy.sum(x49 * x57)
    result[1, 0, 0] = numpy.sum(x58 * x60)
    result[1, 0, 1] = numpy.sum(x61 * x64)
    result[1, 0, 2] = numpy.sum(x37 * x59 * x61)
    result[1, 0, 3] = numpy.sum(x4 * x68)
    result[1, 0, 4] = numpy.sum(x37 * x4 * x63)
    result[1, 0, 5] = numpy.sum(x38 * x4 * x69)
    result[1, 1, 0] = numpy.sum(x72 * x73)
    result[1, 1, 1] = numpy.sum(x5 * x75)
    result[1, 1, 2] = numpy.sum(x37 * x5 * x71)
    result[1, 1, 3] = numpy.sum(
        x22 * (x0 * (x1 + x47 + x66 + 2.0 * x70) + 2.0 * x25 * x74)
    )
    result[1, 1, 4] = numpy.sum(x31 * x75)
    result[1, 1, 5] = numpy.sum(x38 * x72)
    result[1, 2, 0] = numpy.sum(x51 * x69 * x73)
    result[1, 2, 1] = numpy.sum(x51 * x63 * x76)
    result[1, 2, 2] = numpy.sum(x54 * x59 * x76)
    result[1, 2, 3] = numpy.sum(x51 * x68)
    result[1, 2, 4] = numpy.sum(x54 * x64)
    result[1, 2, 5] = numpy.sum(x57 * x60)
    result[2, 0, 0] = numpy.sum(x58 * x78)
    result[2, 0, 1] = numpy.sum(x52 * x61 * x77)
    result[2, 0, 2] = numpy.sum(x61 * x81)
    result[2, 0, 3] = numpy.sum(x32 * x4 * x82)
    result[2, 0, 4] = numpy.sum(x4 * x52 * x80)
    result[2, 0, 5] = numpy.sum(x4 * x86)
    result[2, 1, 0] = numpy.sum(x39 * x73 * x82)
    result[2, 1, 1] = numpy.sum(x43 * x76 * x77)
    result[2, 1, 2] = numpy.sum(x39 * x76 * x80)
    result[2, 1, 3] = numpy.sum(x48 * x78)
    result[2, 1, 4] = numpy.sum(x43 * x81)
    result[2, 1, 5] = numpy.sum(x39 * x86)
    result[2, 2, 0] = numpy.sum(x73 * x89)
    result[2, 2, 1] = numpy.sum(x5 * x52 * x88)
    result[2, 2, 2] = numpy.sum(x5 * x91)
    result[2, 2, 3] = numpy.sum(x32 * x89)
    result[2, 2, 4] = numpy.sum(x25 * x91)
    result[2, 2, 5] = numpy.sum(
        x22 * (x0 * (x1 + x56 + x84 + 2.0 * x87) + 2.0 * x31 * x90)
    )
    return result


def dipole3d_13(ax, da, A, bx, db, B, R):
    """Cartesian 3D (pf) dipole moment integrals.
    The origin is at R.

    Generated code; DO NOT modify by hand!"""

    result = numpy.zeros((3, 3, 10), dtype=float)

    x0 = (ax + bx) ** (-1.0)
    x1 = x0 * (ax * A[0] + bx * B[0])
    x2 = -x1
    x3 = x2 + B[0]
    x4 = x2 + R[0]
    x5 = x3 * x4
    x6 = 2.0 * x5
    x7 = x0 + x6
    x8 = x3 * x7
    x9 = x2 + A[0]
    x10 = x7 * x9
    x11 = -2.0 * x1 + B[0]
    x12 = x11 + R[0]
    x13 = 3.0 * x0
    x14 = x3 * x9
    x15 = 2.0 * x14
    x16 = x0 * (x11 + A[0]) + x3 * (x0 + x15)
    x17 = x4 * x9
    x18 = x0 * x12
    x19 = x10 + x18
    x20 = 2.0 * x3
    x21 = x0 * (x13 + x15 + 2.0 * x17 + x6) + x19 * x20
    x22 = 3.872983346207417
    x23 = ax * bx * x0
    x24 = (
        5.568327996831708
        * da
        * db
        * numpy.exp(-x23 * ((A[0] - B[0]) ** 2 + (A[1] - B[1]) ** 2 + (A[2] - B[2]) ** 2))
    )
    x25 = numpy.sqrt(x0) * x24
    x26 = x0 * x25
    x27 = x22 * x26
    x28 = 0.01666666666666667 * x27
    x29 = x0 * (ax * A[1] + bx * B[1])
    x30 = -x29
    x31 = x30 + B[1]
    x32 = 1.732050807568877
    x33 = x31 * x32
    x34 = 0.08333333333333333 * x26
    x35 = x21 * x34
    x36 = x0 * (ax * A[2] + bx * B[2])
    x37 = -x36
    x38 = x37 + B[2]
    x39 = x32 * x38
    x40 = x31**2
    x41 = 0.5 * x0
    x42 = x40 + x41
    x43 = x0**1.5 * x24
    x44 = 0.1666666666666667 * x32
    x45 = x43 * x44
    x46 = x19 * x45
    x47 = x25 * x38 * x41
    x48 = x38**2
    x49 = x41 + x48
    x50 = 1.5 * x0
    x51 = x31 * (x40 + x50)
    x52 = x43 * (x17 + x41)
    x53 = 0.06666666666666667 * x22
    x54 = x52 * x53
    x55 = 0.3333333333333333 * x52
    x56 = x38 * (x48 + x50)
    x57 = x30 + A[1]
    x58 = x3**2
    x59 = x13 + 2.0 * x58
    x60 = x18 + x8
    x61 = x28 * (x0 * (4.0 * x5 + x59) + x20 * x60)
    x62 = x31 * x57
    x63 = x41 + x62
    x64 = x45 * x60
    x65 = x26 * x44
    x66 = x38 * x65
    x67 = -2.0 * x29 + B[1]
    x68 = 2.0 * x62
    x69 = x0 * (x67 + A[1]) + x31 * (x0 + x68)
    x70 = x43 * (x41 + x5)
    x71 = x44 * x70
    x72 = 0.3333333333333333 * x32
    x73 = x49 * x72
    x74 = x13 + 2.0 * x40
    x75 = 2.0 * x31
    x76 = x0 * (4.0 * x62 + x74) + x69 * x75
    x77 = x28 * x4
    x78 = x4 * x43
    x79 = 0.06666666666666667 * x27
    x80 = x4 * x79
    x81 = x37 + A[2]
    x82 = x31 * x65
    x83 = x38 * x81
    x84 = x41 + x83
    x85 = x42 * x72
    x86 = -2.0 * x36 + B[2]
    x87 = 2.0 * x83
    x88 = x0 * (x86 + A[2]) + x38 * (x0 + x87)
    x89 = x13 + 2.0 * x48
    x90 = 2.0 * x38
    x91 = x0 * (4.0 * x83 + x89) + x88 * x90
    x92 = x0 * (4.0 * x14 + x59) + x16 * x20
    x93 = x30 + R[1]
    x94 = x28 * x93
    x95 = x31 * x93
    x96 = x43 * (x41 + x95)
    x97 = x44 * x96
    x98 = x14 + x41
    x99 = x67 + R[1]
    x100 = x0 * x99
    x101 = 2.0 * x95
    x102 = x0 + x101
    x103 = x102 * x31
    x104 = x100 + x103
    x105 = x104 * x45
    x106 = x43 * x73
    x107 = x28 * (x0 * (x74 + 4.0 * x95) + x104 * x75)
    x108 = x79 * x93
    x109 = x3 * (x50 + x58)
    x110 = x57 * x93
    x111 = x110 + x41
    x112 = x111 * x43
    x113 = x112 * x53
    x114 = x41 + x58
    x115 = x102 * x57
    x116 = x100 + x115
    x117 = x116 * x45
    x118 = 0.3333333333333333 * x114
    x119 = x0 * (x101 + 2.0 * x110 + x13 + x68) + x116 * x75
    x120 = x119 * x34
    x121 = x3 * x32
    x122 = x114 * x72
    x123 = x122 * x43
    x124 = x3 * x65
    x125 = x37 + R[2]
    x126 = x125 * x28
    x127 = x125 * x38
    x128 = x43 * (x127 + x41)
    x129 = x128 * x44
    x130 = x43 * x85
    x131 = x86 + R[2]
    x132 = x0 * x131
    x133 = 2.0 * x127
    x134 = x0 + x133
    x135 = x134 * x38
    x136 = x132 + x135
    x137 = x136 * x45
    x138 = x125 * x79
    x139 = x28 * (x0 * (4.0 * x127 + x89) + x136 * x90)
    x140 = x125 * x81
    x141 = x140 + x41
    x142 = x141 * x43
    x143 = x142 * x53
    x144 = x134 * x81
    x145 = x132 + x144
    x146 = x145 * x45
    x147 = x0 * (x13 + x133 + 2.0 * x140 + x87) + x145 * x90
    x148 = x147 * x34

    # 90 item(s)
    result[0, 0, 0] = numpy.sum(
        -x28 * (x0 * (2.0 * x10 + x12 * x13 + x16 + x8) + x21 * x3)
    )
    result[0, 0, 1] = numpy.sum(-x33 * x35)
    result[0, 0, 2] = numpy.sum(-x35 * x39)
    result[0, 0, 3] = numpy.sum(-x42 * x46)
    result[0, 0, 4] = numpy.sum(-x19 * x31 * x47)
    result[0, 0, 5] = numpy.sum(-x46 * x49)
    result[0, 0, 6] = numpy.sum(-x51 * x54)
    result[0, 0, 7] = numpy.sum(-x39 * x42 * x55)
    result[0, 0, 8] = numpy.sum(-x33 * x49 * x55)
    result[0, 0, 9] = numpy.sum(-x54 * x56)
    result[0, 1, 0] = numpy.sum(-x57 * x61)
    result[0, 1, 1] = numpy.sum(-x63 * x64)
    result[0, 1, 2] = numpy.sum(-x57 * x60 * x66)
    result[0, 1, 3] = numpy.sum(-x69 * x71)
    result[0, 1, 4] = numpy.sum(-x38 * x63 * x70)
    result[0, 1, 5] = numpy.sum(-x57 * x70 * x73)
    result[0, 1, 6] = numpy.sum(-x76 * x77)
    result[0, 1, 7] = numpy.sum(-x4 * x66 * x69)
    result[0, 1, 8] = numpy.sum(-x63 * x73 * x78)
    result[0, 1, 9] = numpy.sum(-x56 * x57 * x80)
    result[0, 2, 0] = numpy.sum(-x61 * x81)
    result[0, 2, 1] = numpy.sum(-x60 * x81 * x82)
    result[0, 2, 2] = numpy.sum(-x64 * x84)
    result[0, 2, 3] = numpy.sum(-x70 * x81 * x85)
    result[0, 2, 4] = numpy.sum(-x31 * x70 * x84)
    result[0, 2, 5] = numpy.sum(-x71 * x88)
    result[0, 2, 6] = numpy.sum(-x51 * x80 * x81)
    result[0, 2, 7] = numpy.sum(-x78 * x84 * x85)
    result[0, 2, 8] = numpy.sum(-x4 * x82 * x88)
    result[0, 2, 9] = numpy.sum(-x77 * x91)
    result[1, 0, 0] = numpy.sum(-x92 * x94)
    result[1, 0, 1] = numpy.sum(-x16 * x97)
    result[1, 0, 2] = numpy.sum(-x16 * x66 * x93)
    result[1, 0, 3] = numpy.sum(-x105 * x98)
    result[1, 0, 4] = numpy.sum(-x38 * x96 * x98)
    result[1, 0, 5] = numpy.sum(-x106 * x93 * x98)
    result[1, 0, 6] = numpy.sum(-x107 * x9)
    result[1, 0, 7] = numpy.sum(-x104 * x66 * x9)
    result[1, 0, 8] = numpy.sum(-x73 * x9 * x96)
    result[1, 0, 9] = numpy.sum(-x108 * x56 * x9)
    result[1, 1, 0] = numpy.sum(-x109 * x113)
    result[1, 1, 1] = numpy.sum(-x114 * x117)
    result[1, 1, 2] = numpy.sum(-x112 * x118 * x39)
    result[1, 1, 3] = numpy.sum(-x120 * x121)
    result[1, 1, 4] = numpy.sum(-x116 * x3 * x47)
    result[1, 1, 5] = numpy.sum(-x106 * x111 * x3)
    result[1, 1, 6] = numpy.sum(
        -x28 * (x0 * (x103 + 2.0 * x115 + x13 * x99 + x69) + x119 * x31)
    )
    result[1, 1, 7] = numpy.sum(-x120 * x39)
    result[1, 1, 8] = numpy.sum(-x117 * x49)
    result[1, 1, 9] = numpy.sum(-x113 * x56)
    result[1, 2, 0] = numpy.sum(-x108 * x109 * x81)
    result[1, 2, 1] = numpy.sum(-x122 * x81 * x96)
    result[1, 2, 2] = numpy.sum(-x123 * x84 * x93)
    result[1, 2, 3] = numpy.sum(-x104 * x124 * x81)
    result[1, 2, 4] = numpy.sum(-x3 * x84 * x96)
    result[1, 2, 5] = numpy.sum(-x124 * x88 * x93)
    result[1, 2, 6] = numpy.sum(-x107 * x81)
    result[1, 2, 7] = numpy.sum(-x105 * x84)
    result[1, 2, 8] = numpy.sum(-x88 * x97)
    result[1, 2, 9] = numpy.sum(-x91 * x94)
    result[2, 0, 0] = numpy.sum(-x126 * x92)
    result[2, 0, 1] = numpy.sum(-x125 * x16 * x82)
    result[2, 0, 2] = numpy.sum(-x129 * x16)
    result[2, 0, 3] = numpy.sum(-x125 * x130 * x98)
    result[2, 0, 4] = numpy.sum(-x128 * x31 * x98)
    result[2, 0, 5] = numpy.sum(-x137 * x98)
    result[2, 0, 6] = numpy.sum(-x138 * x51 * x9)
    result[2, 0, 7] = numpy.sum(-x128 * x85 * x9)
    result[2, 0, 8] = numpy.sum(-x136 * x82 * x9)
    result[2, 0, 9] = numpy.sum(-x139 * x9)
    result[2, 1, 0] = numpy.sum(-x109 * x138 * x57)
    result[2, 1, 1] = numpy.sum(-x123 * x125 * x63)
    result[2, 1, 2] = numpy.sum(-x122 * x128 * x57)
    result[2, 1, 3] = numpy.sum(-x124 * x125 * x69)
    result[2, 1, 4] = numpy.sum(-x128 * x3 * x63)
    result[2, 1, 5] = numpy.sum(-x124 * x136 * x57)
    result[2, 1, 6] = numpy.sum(-x126 * x76)
    result[2, 1, 7] = numpy.sum(-x129 * x69)
    result[2, 1, 8] = numpy.sum(-x137 * x63)
    result[2, 1, 9] = numpy.sum(-x139 * x57)
    result[2, 2, 0] = numpy.sum(-x109 * x143)
    result[2, 2, 1] = numpy.sum(-x118 * x142 * x33)
    result[2, 2, 2] = numpy.sum(-x114 * x146)
    result[2, 2, 3] = numpy.sum(-x130 * x141 * x3)
    result[2, 2, 4] = numpy.sum(-x145 * x25 * x3 * x31 * x41)
    result[2, 2, 5] = numpy.sum(-x121 * x148)
    result[2, 2, 6] = numpy.sum(-x143 * x51)
    result[2, 2, 7] = numpy.sum(-x146 * x42)
    result[2, 2, 8] = numpy.sum(-x148 * x33)
    result[2, 2, 9] = numpy.sum(
        -x28 * (x0 * (x13 * x131 + x135 + 2.0 * x144 + x88) + x147 * x38)
    )
    return result


def dipole3d_14(ax, da, A, bx, db, B, R):
    """Cartesian 3D (pg) dipole moment integrals.
    The origin is at R.

    Generated code; DO NOT modify by hand!"""

    result = numpy.zeros((3, 3, 15), dtype=float)

    x0 = 0.5 / (ax + bx)
    x1 = (ax + bx) ** (-1.0)
    x2 = ax * bx * x1
    x3 = numpy.exp(-x2 * (A[0] - B[0]) ** 2)
    x4 = 1.772453850905516 * numpy.sqrt(x1)
    x5 = x3 * x4
    x6 = x0 * x5
    x7 = 3.0 * x6
    x8 = -x1 * (ax * A[0] + bx * B[0])
    x9 = -x8 - B[0]
    x10 = -x8 - A[0]
    x11 = x10 * x5
    x12 = x11 * x9
    x13 = -x8 - R[0]
    x14 = x11 * x13
    x15 = x5 * x9
    x16 = x13 * x15
    x17 = x0 * (x12 + x14 + x16 + x7)
    x18 = x13 * x5
    x19 = x0 * (x15 + x18)
    x20 = x16 + x6
    x21 = x10 * x20
    x22 = x19 + x21
    x23 = x22 * x9
    x24 = x5 * x9**2
    x25 = x24 + x7
    x26 = x20 * x9
    x27 = x19 + x26
    x28 = x0 * (2.0 * x16 + x25) + x27 * x9
    x29 = x0 * (x11 + x15)
    x30 = x12 + x6
    x31 = x30 * x9
    x32 = x29 + x31
    x33 = x0 * (2.0 * x12 + x25) + x32 * x9
    x34 = 3.0 * x19
    x35 = x17 + x23
    x36 = x0 * (2.0 * x21 + x26 + x32 + x34) + x35 * x9
    x37 = da * db
    x38 = 0.09759000729485332 * x37
    x39 = numpy.exp(-x2 * (A[1] - B[1]) ** 2)
    x40 = numpy.exp(-x2 * (A[2] - B[2]) ** 2)
    x41 = 3.141592653589793 * x1 * x40
    x42 = x39 * x41
    x43 = x38 * x42
    x44 = -x1 * (ax * A[1] + bx * B[1])
    x45 = -x44 - B[1]
    x46 = 0.2581988897471611 * x37
    x47 = x45 * x46
    x48 = x36 * x42
    x49 = -x1 * (ax * A[2] + bx * B[2])
    x50 = -x49 - B[2]
    x51 = x46 * x50
    x52 = x4 * x40
    x53 = x39 * x4
    x54 = x45**2 * x53
    x55 = x0 * x53
    x56 = x54 + x55
    x57 = 0.3333333333333333 * x37
    x58 = x56 * x57
    x59 = 1.732050807568877
    x60 = x50 * x57 * x59
    x61 = x50**2 * x52
    x62 = x0 * x52
    x63 = x61 + x62
    x64 = x57 * x63
    x65 = x45 * (2.0 * x55 + x56)
    x66 = x22 * x46
    x67 = x50 * x52
    x68 = x22 * x59
    x69 = x45 * x53
    x70 = x50 * (2.0 * x62 + x63)
    x71 = 3.0 * x55
    x72 = x0 * (3.0 * x54 + x71) + x45 * x65
    x73 = x14 + x6
    x74 = x38 * x73
    x75 = x46 * x73
    x76 = 3.0 * x62
    x77 = x0 * (3.0 * x61 + x76) + x50 * x70
    x78 = -x44 - A[1]
    x79 = x24 + x6
    x80 = 2.0 * x0 * x15 + x79 * x9
    x81 = x43 * (x0 * (3.0 * x26 + x34 + x80) + x28 * x9)
    x82 = x53 * x78
    x83 = x45 * x82
    x84 = x55 + x83
    x85 = x46 * x52
    x86 = x28 * x42
    x87 = x0 * (x69 + x82)
    x88 = x45 * x84
    x89 = x87 + x88
    x90 = x27 * x57
    x91 = x59 * x90
    x92 = x54 + x71
    x93 = x0 * (2.0 * x83 + x92) + x45 * x89
    x94 = x20 * x59
    x95 = x57 * x94
    x96 = x46 * x70
    x97 = x3 * x38
    x98 = x41 * x97
    x99 = x98 * (x0 * (x65 + 3.0 * x87 + 3.0 * x88) + x45 * x93)
    x100 = x3 * x41
    x101 = x100 * x51
    x102 = 3.141592653589793 * x1 * x39
    x103 = x102 * x97
    x104 = x103 * x77
    x105 = -x49 - A[2]
    x106 = x105 * x52
    x107 = x106 * x50
    x108 = x107 + x62
    x109 = x46 * x53
    x110 = x0 * (x106 + x67)
    x111 = x108 * x50
    x112 = x110 + x111
    x113 = x46 * x65
    x114 = x61 + x76
    x115 = x0 * (2.0 * x107 + x114) + x112 * x50
    x116 = x72 * x98
    x117 = x102 * x3
    x118 = x115 * x117
    x119 = x103 * (x0 * (3.0 * x110 + 3.0 * x111 + x70) + x115 * x50)
    x120 = -x44 - R[1]
    x121 = x43 * (x0 * (3.0 * x29 + 3.0 * x31 + x80) + x33 * x9)
    x122 = x120 * x69
    x123 = x122 + x55
    x124 = x33 * x42
    x125 = x120 * x53
    x126 = x0 * (x125 + x69)
    x127 = x123 * x45
    x128 = x126 + x127
    x129 = x128 * x57
    x130 = x123 * x59
    x131 = x130 * x57
    x132 = x0 * (2.0 * x122 + x92) + x128 * x45
    x133 = x59 * x67
    x134 = 3.0 * x126
    x135 = x98 * (x0 * (3.0 * x127 + x134 + x65) + x132 * x45)
    x136 = x0 * (3.0 * x24 + x7) + x80 * x9
    x137 = x120 * x82
    x138 = x137 + x55
    x139 = x138 * x38
    x140 = x123 * x78
    x141 = x126 + x140
    x142 = x46 * x80
    x143 = x0 * (x122 + x137 + x71 + x83)
    x144 = x141 * x45
    x145 = x143 + x144
    x146 = x57 * x79
    x147 = x0 * (x127 + x134 + 2.0 * x140 + x89) + x145 * x45
    x148 = x100 * x147
    x149 = x46 * x9
    x150 = x15 * x59
    x151 = x46 * x5
    x152 = x136 * x43
    x153 = x100 * x149
    x154 = -x49 - R[2]
    x155 = x154 * x67
    x156 = x155 + x62
    x157 = x154 * x52
    x158 = x156 * x59
    x159 = x158 * x57
    x160 = x0 * (x157 + x67)
    x161 = x156 * x50
    x162 = x160 + x161
    x163 = x162 * x57
    x164 = x59 * x69
    x165 = x0 * (x114 + 2.0 * x155) + x162 * x50
    x166 = x117 * x165
    x167 = 3.0 * x160
    x168 = x103 * (x0 * (3.0 * x161 + x167 + x70) + x165 * x50)
    x169 = x106 * x154
    x170 = x169 + x62
    x171 = x170 * x38
    x172 = x105 * x156
    x173 = x160 + x172
    x174 = x0 * (x107 + x155 + x169 + x76)
    x175 = x173 * x50
    x176 = x174 + x175
    x177 = x0 * (x112 + x161 + x167 + 2.0 * x172) + x176 * x50
    x178 = x117 * x177

    # 135 item(s)
    result[0, 0, 0] = numpy.sum(
        x43 * (x0 * (3.0 * x17 + 3.0 * x23 + x28 + x33) + x36 * x9)
    )
    result[0, 0, 1] = numpy.sum(x47 * x48)
    result[0, 0, 2] = numpy.sum(x48 * x51)
    result[0, 0, 3] = numpy.sum(x35 * x52 * x58)
    result[0, 0, 4] = numpy.sum(x35 * x42 * x45 * x60)
    result[0, 0, 5] = numpy.sum(x35 * x53 * x64)
    result[0, 0, 6] = numpy.sum(x52 * x65 * x66)
    result[0, 0, 7] = numpy.sum(x58 * x67 * x68)
    result[0, 0, 8] = numpy.sum(x64 * x68 * x69)
    result[0, 0, 9] = numpy.sum(x53 * x66 * x70)
    result[0, 0, 10] = numpy.sum(x52 * x72 * x74)
    result[0, 0, 11] = numpy.sum(x65 * x67 * x75)
    result[0, 0, 12] = numpy.sum(x56 * x64 * x73)
    result[0, 0, 13] = numpy.sum(x69 * x70 * x75)
    result[0, 0, 14] = numpy.sum(x53 * x74 * x77)
    result[0, 1, 0] = numpy.sum(x78 * x81)
    result[0, 1, 1] = numpy.sum(x28 * x84 * x85)
    result[0, 1, 2] = numpy.sum(x51 * x78 * x86)
    result[0, 1, 3] = numpy.sum(x52 * x89 * x90)
    result[0, 1, 4] = numpy.sum(x67 * x84 * x91)
    result[0, 1, 5] = numpy.sum(x27 * x64 * x82)
    result[0, 1, 6] = numpy.sum(x20 * x85 * x93)
    result[0, 1, 7] = numpy.sum(x67 * x89 * x95)
    result[0, 1, 8] = numpy.sum(x64 * x84 * x94)
    result[0, 1, 9] = numpy.sum(x20 * x82 * x96)
    result[0, 1, 10] = numpy.sum(x13 * x99)
    result[0, 1, 11] = numpy.sum(x101 * x13 * x93)
    result[0, 1, 12] = numpy.sum(x18 * x64 * x89)
    result[0, 1, 13] = numpy.sum(x18 * x84 * x96)
    result[0, 1, 14] = numpy.sum(x104 * x13 * x78)
    result[0, 2, 0] = numpy.sum(x105 * x81)
    result[0, 2, 1] = numpy.sum(x105 * x47 * x86)
    result[0, 2, 2] = numpy.sum(x108 * x109 * x28)
    result[0, 2, 3] = numpy.sum(x106 * x27 * x58)
    result[0, 2, 4] = numpy.sum(x108 * x69 * x91)
    result[0, 2, 5] = numpy.sum(x112 * x53 * x90)
    result[0, 2, 6] = numpy.sum(x106 * x113 * x20)
    result[0, 2, 7] = numpy.sum(x108 * x58 * x94)
    result[0, 2, 8] = numpy.sum(x112 * x69 * x95)
    result[0, 2, 9] = numpy.sum(x109 * x115 * x20)
    result[0, 2, 10] = numpy.sum(x105 * x116 * x13)
    result[0, 2, 11] = numpy.sum(x108 * x113 * x18)
    result[0, 2, 12] = numpy.sum(x112 * x18 * x58)
    result[0, 2, 13] = numpy.sum(x118 * x13 * x47)
    result[0, 2, 14] = numpy.sum(x119 * x13)
    result[1, 0, 0] = numpy.sum(x120 * x121)
    result[1, 0, 1] = numpy.sum(x123 * x33 * x85)
    result[1, 0, 2] = numpy.sum(x120 * x124 * x51)
    result[1, 0, 3] = numpy.sum(x129 * x32 * x52)
    result[1, 0, 4] = numpy.sum(x131 * x32 * x67)
    result[1, 0, 5] = numpy.sum(x125 * x32 * x64)
    result[1, 0, 6] = numpy.sum(x132 * x30 * x85)
    result[1, 0, 7] = numpy.sum(x129 * x133 * x30)
    result[1, 0, 8] = numpy.sum(x130 * x30 * x64)
    result[1, 0, 9] = numpy.sum(x125 * x30 * x96)
    result[1, 0, 10] = numpy.sum(x10 * x135)
    result[1, 0, 11] = numpy.sum(x10 * x101 * x132)
    result[1, 0, 12] = numpy.sum(x11 * x128 * x64)
    result[1, 0, 13] = numpy.sum(x11 * x123 * x96)
    result[1, 0, 14] = numpy.sum(x10 * x104 * x120)
    result[1, 1, 0] = numpy.sum(x136 * x139 * x52)
    result[1, 1, 1] = numpy.sum(x141 * x80 * x85)
    result[1, 1, 2] = numpy.sum(x138 * x142 * x67)
    result[1, 1, 3] = numpy.sum(x145 * x146 * x52)
    result[1, 1, 4] = numpy.sum(x133 * x141 * x146)
    result[1, 1, 5] = numpy.sum(x138 * x64 * x79)
    result[1, 1, 6] = numpy.sum(x148 * x149)
    result[1, 1, 7] = numpy.sum(x100 * x145 * x60 * x9)
    result[1, 1, 8] = numpy.sum(x141 * x150 * x64)
    result[1, 1, 9] = numpy.sum(x138 * x15 * x96)
    result[1, 1, 10] = numpy.sum(
        x98 * (x0 * (x132 + 3.0 * x143 + 3.0 * x144 + x93) + x147 * x45)
    )
    result[1, 1, 11] = numpy.sum(x148 * x51)
    result[1, 1, 12] = numpy.sum(x145 * x5 * x64)
    result[1, 1, 13] = numpy.sum(x141 * x151 * x70)
    result[1, 1, 14] = numpy.sum(x139 * x5 * x77)
    result[1, 2, 0] = numpy.sum(x105 * x120 * x152)
    result[1, 2, 1] = numpy.sum(x106 * x123 * x142)
    result[1, 2, 2] = numpy.sum(x108 * x125 * x142)
    result[1, 2, 3] = numpy.sum(x106 * x128 * x146)
    result[1, 2, 4] = numpy.sum(x108 * x130 * x146)
    result[1, 2, 5] = numpy.sum(x112 * x125 * x146)
    result[1, 2, 6] = numpy.sum(x105 * x132 * x153)
    result[1, 2, 7] = numpy.sum(x108 * x129 * x150)
    result[1, 2, 8] = numpy.sum(x112 * x131 * x15)
    result[1, 2, 9] = numpy.sum(x118 * x120 * x149)
    result[1, 2, 10] = numpy.sum(x105 * x135)
    result[1, 2, 11] = numpy.sum(x108 * x132 * x151)
    result[1, 2, 12] = numpy.sum(x112 * x129 * x5)
    result[1, 2, 13] = numpy.sum(x115 * x123 * x151)
    result[1, 2, 14] = numpy.sum(x119 * x120)
    result[2, 0, 0] = numpy.sum(x121 * x154)
    result[2, 0, 1] = numpy.sum(x124 * x154 * x47)
    result[2, 0, 2] = numpy.sum(x109 * x156 * x33)
    result[2, 0, 3] = numpy.sum(x157 * x32 * x58)
    result[2, 0, 4] = numpy.sum(x159 * x32 * x69)
    result[2, 0, 5] = numpy.sum(x163 * x32 * x53)
    result[2, 0, 6] = numpy.sum(x113 * x157 * x30)
    result[2, 0, 7] = numpy.sum(x158 * x30 * x58)
    result[2, 0, 8] = numpy.sum(x163 * x164 * x30)
    result[2, 0, 9] = numpy.sum(x109 * x165 * x30)
    result[2, 0, 10] = numpy.sum(x10 * x116 * x154)
    result[2, 0, 11] = numpy.sum(x11 * x113 * x156)
    result[2, 0, 12] = numpy.sum(x11 * x162 * x58)
    result[2, 0, 13] = numpy.sum(x10 * x166 * x47)
    result[2, 0, 14] = numpy.sum(x10 * x168)
    result[2, 1, 0] = numpy.sum(x152 * x154 * x78)
    result[2, 1, 1] = numpy.sum(x142 * x157 * x84)
    result[2, 1, 2] = numpy.sum(x142 * x156 * x82)
    result[2, 1, 3] = numpy.sum(x146 * x157 * x89)
    result[2, 1, 4] = numpy.sum(x146 * x158 * x84)
    result[2, 1, 5] = numpy.sum(x146 * x162 * x82)
    result[2, 1, 6] = numpy.sum(x153 * x154 * x93)
    result[2, 1, 7] = numpy.sum(x15 * x159 * x89)
    result[2, 1, 8] = numpy.sum(x150 * x163 * x84)
    result[2, 1, 9] = numpy.sum(x149 * x166 * x78)
    result[2, 1, 10] = numpy.sum(x154 * x99)
    result[2, 1, 11] = numpy.sum(x151 * x156 * x93)
    result[2, 1, 12] = numpy.sum(x163 * x5 * x89)
    result[2, 1, 13] = numpy.sum(x151 * x165 * x84)
    result[2, 1, 14] = numpy.sum(x168 * x78)
    result[2, 2, 0] = numpy.sum(x136 * x171 * x53)
    result[2, 2, 1] = numpy.sum(x142 * x170 * x69)
    result[2, 2, 2] = numpy.sum(x109 * x173 * x80)
    result[2, 2, 3] = numpy.sum(x170 * x58 * x79)
    result[2, 2, 4] = numpy.sum(x146 * x164 * x173)
    result[2, 2, 5] = numpy.sum(x146 * x176 * x53)
    result[2, 2, 6] = numpy.sum(x113 * x15 * x170)
    result[2, 2, 7] = numpy.sum(x150 * x173 * x58)
    result[2, 2, 8] = numpy.sum(x117 * x176 * x45 * x57 * x59 * x9)
    result[2, 2, 9] = numpy.sum(x149 * x178)
    result[2, 2, 10] = numpy.sum(x171 * x5 * x72)
    result[2, 2, 11] = numpy.sum(x151 * x173 * x65)
    result[2, 2, 12] = numpy.sum(x176 * x5 * x58)
    result[2, 2, 13] = numpy.sum(x178 * x47)
    result[2, 2, 14] = numpy.sum(
        x103 * (x0 * (x115 + x165 + 3.0 * x174 + 3.0 * x175) + x177 * x50)
    )
    return result


def dipole3d_20(ax, da, A, bx, db, B, R):
    """Cartesian 3D (ds) dipole moment integrals.
    The origin is at R.

    Generated code; DO NOT modify by hand!"""

    result = numpy.zeros((3, 6, 1), dtype=float)

    x0 = (ax + bx) ** (-1.0)
    x1 = x0 * (ax * A[0] + bx * B[0])
    x2 = -x1
    x3 = x2 + A[0]
    x4 = x2 + R[0]
    x5 = x3 * x4
    x6 = ax * bx * x0
    x7 = (
        5.568327996831708
        * da
        * db
        * x0**1.5
        * numpy.exp(-x6 * ((A[0] - B[0]) ** 2 + (A[1] - B[1]) ** 2 + (A[2] - B[2]) ** 2))
    )
    x8 = 1.732050807568877 * x7
    x9 = 0.1666666666666667 * x8
    x10 = x0 * (ax * A[1] + bx * B[1])
    x11 = -x10
    x12 = x11 + A[1]
    x13 = 0.5 * x0
    x14 = x7 * (x13 + x5)
    x15 = x0 * (ax * A[2] + bx * B[2])
    x16 = -x15
    x17 = x16 + A[2]
    x18 = x12**2 + x13
    x19 = 0.3333333333333333 * x8
    x20 = x19 * x4
    x21 = x17 * x7
    x22 = x13 + x17**2
    x23 = x13 + x3**2
    x24 = x11 + R[1]
    x25 = x19 * x24
    x26 = x12 * x24
    x27 = x7 * (x13 + x26)
    x28 = x16 + R[2]
    x29 = x19 * x28
    x30 = x17 * x28
    x31 = x7 * (x13 + x30)

    # 18 item(s)
    result[0, 0, 0] = numpy.sum(
        -x9 * (x0 * (-2.0 * x1 + A[0] + R[0]) + x3 * (x0 + 2.0 * x5))
    )
    result[0, 1, 0] = numpy.sum(-x12 * x14)
    result[0, 2, 0] = numpy.sum(-x14 * x17)
    result[0, 3, 0] = numpy.sum(-x18 * x20)
    result[0, 4, 0] = numpy.sum(-x12 * x21 * x4)
    result[0, 5, 0] = numpy.sum(-x20 * x22)
    result[1, 0, 0] = numpy.sum(-x23 * x25)
    result[1, 1, 0] = numpy.sum(-x27 * x3)
    result[1, 2, 0] = numpy.sum(-x21 * x24 * x3)
    result[1, 3, 0] = numpy.sum(
        -x9 * (x0 * (-2.0 * x10 + A[1] + R[1]) + x12 * (x0 + 2.0 * x26))
    )
    result[1, 4, 0] = numpy.sum(-x17 * x27)
    result[1, 5, 0] = numpy.sum(-x22 * x25)
    result[2, 0, 0] = numpy.sum(-x23 * x29)
    result[2, 1, 0] = numpy.sum(-x12 * x28 * x3 * x7)
    result[2, 2, 0] = numpy.sum(-x3 * x31)
    result[2, 3, 0] = numpy.sum(-x18 * x29)
    result[2, 4, 0] = numpy.sum(-x12 * x31)
    result[2, 5, 0] = numpy.sum(
        -x9 * (x0 * (-2.0 * x15 + A[2] + R[2]) + x17 * (x0 + 2.0 * x30))
    )
    return result


def dipole3d_21(ax, da, A, bx, db, B, R):
    """Cartesian 3D (dp) dipole moment integrals.
    The origin is at R.

    Generated code; DO NOT modify by hand!"""

    result = numpy.zeros((3, 6, 3), dtype=float)

    x0 = (ax + bx) ** (-1.0)
    x1 = 3.0 * x0
    x2 = x0 * (ax * A[0] + bx * B[0])
    x3 = -x2
    x4 = x3 + A[0]
    x5 = x3 + B[0]
    x6 = x4 * x5
    x7 = 2.0 * x6
    x8 = x3 + R[0]
    x9 = x4 * x8
    x10 = 2.0 * x9
    x11 = x5 * x8
    x12 = 2.0 * x11
    x13 = -2.0 * x2
    x14 = x13 + R[0]
    x15 = x0 * (x14 + B[0]) + x4 * (x0 + x12)
    x16 = 1.732050807568877
    x17 = ax * bx * x0
    x18 = (
        5.568327996831708
        * da
        * db
        * numpy.exp(-x17 * ((A[0] - B[0]) ** 2 + (A[1] - B[1]) ** 2 + (A[2] - B[2]) ** 2))
    )
    x19 = numpy.sqrt(x0) * x18
    x20 = x0 * x19
    x21 = x16 * x20
    x22 = 0.08333333333333333 * x21
    x23 = x0 * (ax * A[1] + bx * B[1])
    x24 = -x23
    x25 = x24 + B[1]
    x26 = 0.1666666666666667 * x21
    x27 = x26 * (x0 * (x14 + A[0]) + x4 * (x0 + x10))
    x28 = x0 * (ax * A[2] + bx * B[2])
    x29 = -x28
    x30 = x29 + B[2]
    x31 = x24 + A[1]
    x32 = 0.5 * x0
    x33 = x19 * x32
    x34 = x15 * x33
    x35 = x25 * x31
    x36 = x32 + x35
    x37 = x32 + x9
    x38 = x0**1.5 * x18
    x39 = x37 * x38
    x40 = x20 * x37
    x41 = x29 + A[2]
    x42 = x30 * x41
    x43 = x32 + x42
    x44 = 0.3333333333333333 * x31**2 + 0.3333333333333333 * x32
    x45 = x11 + x32
    x46 = x16 * x38
    x47 = x45 * x46
    x48 = -2.0 * x23
    x49 = x48 + B[1]
    x50 = 2.0 * x35
    x51 = x0 * (x49 + A[1]) + x31 * (x0 + x50)
    x52 = x26 * x8
    x53 = x21 * x8
    x54 = x20 * x41
    x55 = x20 * x43
    x56 = 0.3333333333333333 * x32 + 0.3333333333333333 * x41**2
    x57 = -2.0 * x28
    x58 = x57 + B[2]
    x59 = 2.0 * x42
    x60 = x0 * (x58 + A[2]) + x41 * (x0 + x59)
    x61 = x0 * (x13 + A[0] + B[0]) + x4 * (x0 + x7)
    x62 = x24 + R[1]
    x63 = x26 * x62
    x64 = x25 * x62
    x65 = x32 + x64
    x66 = x46 * x65
    x67 = 0.3333333333333333 * x32 + 0.3333333333333333 * x4**2
    x68 = x21 * x62
    x69 = x32 + x6
    x70 = x31 * x62
    x71 = x32 + x70
    x72 = x38 * x71
    x73 = 2.0 * x64
    x74 = x0 * (x49 + R[1]) + x31 * (x0 + x73)
    x75 = x33 * x74
    x76 = x20 * x4
    x77 = 2.0 * x70
    x78 = x26 * (x0 * (x48 + A[1] + R[1]) + x31 * (x0 + x77))
    x79 = x29 + R[2]
    x80 = x26 * x79
    x81 = x21 * x79
    x82 = x30 * x79
    x83 = x32 + x82
    x84 = x46 * x83
    x85 = x20 * x31
    x86 = x41 * x79
    x87 = x32 + x86
    x88 = x38 * x87
    x89 = 2.0 * x82
    x90 = x0 * (x58 + R[2]) + x41 * (x0 + x89)
    x91 = x33 * x90
    x92 = 2.0 * x86
    x93 = x26 * (x0 * (x57 + A[2] + R[2]) + x41 * (x0 + x92))

    # 54 item(s)
    result[0, 0, 0] = numpy.sum(x22 * (x0 * (x1 + x10 + x12 + x7) + 2.0 * x15 * x4))
    result[0, 0, 1] = numpy.sum(x25 * x27)
    result[0, 0, 2] = numpy.sum(x27 * x30)
    result[0, 1, 0] = numpy.sum(x31 * x34)
    result[0, 1, 1] = numpy.sum(x36 * x39)
    result[0, 1, 2] = numpy.sum(x30 * x31 * x40)
    result[0, 2, 0] = numpy.sum(x34 * x41)
    result[0, 2, 1] = numpy.sum(x25 * x40 * x41)
    result[0, 2, 2] = numpy.sum(x39 * x43)
    result[0, 3, 0] = numpy.sum(x44 * x47)
    result[0, 3, 1] = numpy.sum(x51 * x52)
    result[0, 3, 2] = numpy.sum(x30 * x44 * x53)
    result[0, 4, 0] = numpy.sum(x31 * x45 * x54)
    result[0, 4, 1] = numpy.sum(x36 * x54 * x8)
    result[0, 4, 2] = numpy.sum(x31 * x55 * x8)
    result[0, 5, 0] = numpy.sum(x47 * x56)
    result[0, 5, 1] = numpy.sum(x25 * x53 * x56)
    result[0, 5, 2] = numpy.sum(x52 * x60)
    result[1, 0, 0] = numpy.sum(x61 * x63)
    result[1, 0, 1] = numpy.sum(x66 * x67)
    result[1, 0, 2] = numpy.sum(x30 * x67 * x68)
    result[1, 1, 0] = numpy.sum(x69 * x72)
    result[1, 1, 1] = numpy.sum(x4 * x75)
    result[1, 1, 2] = numpy.sum(x30 * x71 * x76)
    result[1, 2, 0] = numpy.sum(x54 * x62 * x69)
    result[1, 2, 1] = numpy.sum(x4 * x54 * x65)
    result[1, 2, 2] = numpy.sum(x4 * x55 * x62)
    result[1, 3, 0] = numpy.sum(x5 * x78)
    result[1, 3, 1] = numpy.sum(x22 * (x0 * (x1 + x50 + x73 + x77) + 2.0 * x31 * x74))
    result[1, 3, 2] = numpy.sum(x30 * x78)
    result[1, 4, 0] = numpy.sum(x5 * x54 * x71)
    result[1, 4, 1] = numpy.sum(x41 * x75)
    result[1, 4, 2] = numpy.sum(x43 * x72)
    result[1, 5, 0] = numpy.sum(x5 * x56 * x68)
    result[1, 5, 1] = numpy.sum(x56 * x66)
    result[1, 5, 2] = numpy.sum(x60 * x63)
    result[2, 0, 0] = numpy.sum(x61 * x80)
    result[2, 0, 1] = numpy.sum(x25 * x67 * x81)
    result[2, 0, 2] = numpy.sum(x67 * x84)
    result[2, 1, 0] = numpy.sum(x69 * x79 * x85)
    result[2, 1, 1] = numpy.sum(x36 * x76 * x79)
    result[2, 1, 2] = numpy.sum(x31 * x76 * x83)
    result[2, 2, 0] = numpy.sum(x69 * x88)
    result[2, 2, 1] = numpy.sum(x25 * x76 * x87)
    result[2, 2, 2] = numpy.sum(x4 * x91)
    result[2, 3, 0] = numpy.sum(x44 * x5 * x81)
    result[2, 3, 1] = numpy.sum(x51 * x80)
    result[2, 3, 2] = numpy.sum(x44 * x84)
    result[2, 4, 0] = numpy.sum(x5 * x85 * x87)
    result[2, 4, 1] = numpy.sum(x36 * x88)
    result[2, 4, 2] = numpy.sum(x31 * x91)
    result[2, 5, 0] = numpy.sum(x5 * x93)
    result[2, 5, 1] = numpy.sum(x25 * x93)
    result[2, 5, 2] = numpy.sum(x22 * (x0 * (x1 + x59 + x89 + x92) + 2.0 * x41 * x90))
    return result


def dipole3d_22(ax, da, A, bx, db, B, R):
    """Cartesian 3D (dd) dipole moment integrals.
    The origin is at R.

    Generated code; DO NOT modify by hand!"""

    result = numpy.zeros((3, 6, 6), dtype=float)

    x0 = (ax + bx) ** (-1.0)
    x1 = x0 * (ax * A[0] + bx * B[0])
    x2 = -x1
    x3 = x2 + B[0]
    x4 = x2 + R[0]
    x5 = x3 * x4
    x6 = 2.0 * x5
    x7 = x0 + x6
    x8 = x3 * x7
    x9 = x2 + A[0]
    x10 = x7 * x9
    x11 = -2.0 * x1
    x12 = x11 + B[0]
    x13 = x12 + R[0]
    x14 = 3.0 * x0
    x15 = x0 * (x12 + A[0])
    x16 = x3 * x9
    x17 = 2.0 * x16
    x18 = x0 + x17
    x19 = x15 + x18 * x3
    x20 = x4 * x9
    x21 = 2.0 * x20
    x22 = x0 * (x14 + x17 + x21 + x6)
    x23 = x0 * x13
    x24 = x10 + x23
    x25 = 2.0 * x24
    x26 = x22 + x25 * x3
    x27 = ax * bx * x0
    x28 = (
        5.568327996831708
        * da
        * db
        * numpy.exp(-x27 * ((A[0] - B[0]) ** 2 + (A[1] - B[1]) ** 2 + (A[2] - B[2]) ** 2))
    )
    x29 = numpy.sqrt(x0) * x28
    x30 = x0 * x29
    x31 = 0.08333333333333333 * x30
    x32 = x0 * (ax * A[1] + bx * B[1])
    x33 = -x32
    x34 = x33 + B[1]
    x35 = 1.732050807568877
    x36 = x31 * x35
    x37 = x36 * (x22 + x25 * x9)
    x38 = x0 * (ax * A[2] + bx * B[2])
    x39 = -x38
    x40 = x39 + B[2]
    x41 = 0.1666666666666667 * x0 * (x11 + A[0] + R[0]) + 0.1666666666666667 * x9 * (
        x0 + x21
    )
    x42 = x34**2
    x43 = 0.5 * x0
    x44 = x0**1.5 * x28
    x45 = x44 * (x42 + x43)
    x46 = x30 * x35
    x47 = x40 * x46
    x48 = x40**2
    x49 = x44 * (x43 + x48)
    x50 = x33 + A[1]
    x51 = x26 * x36
    x52 = x34 * x50
    x53 = x44 * (x43 + x52)
    x54 = 0.5 * x24
    x55 = x29 * x43
    x56 = x24 * x55
    x57 = -2.0 * x32
    x58 = x57 + B[1]
    x59 = x0 * (x58 + A[1])
    x60 = 2.0 * x52
    x61 = x0 + x60
    x62 = x34 * x61 + x59
    x63 = x20 + x43
    x64 = 0.1666666666666667 * x44
    x65 = x35 * x64
    x66 = x63 * x65
    x67 = 0.3333333333333333 * x35
    x68 = x63 * x67
    x69 = x39 + A[2]
    x70 = x40 * x69
    x71 = x43 + x70
    x72 = x44 * x71
    x73 = -2.0 * x38
    x74 = x73 + B[2]
    x75 = x0 * (x74 + A[2])
    x76 = 2.0 * x70
    x77 = x0 + x76
    x78 = x40 * x77 + x75
    x79 = x43 + x50**2
    x80 = x23 + x8
    x81 = x64 * x80
    x82 = x50 * x61 + x59
    x83 = x43 + x5
    x84 = x65 * x83
    x85 = x44 * x67
    x86 = x83 * x85
    x87 = 2.0 * x50
    x88 = x0 * (x14 + 2.0 * x42 + 4.0 * x52) + x62 * x87
    x89 = x31 * x4
    x90 = 0.1666666666666667 * x4
    x91 = 0.3333333333333333 * x4
    x92 = x46 * x69
    x93 = 0.1666666666666667 * x92
    x94 = x46 * x90
    x95 = x43 + x69**2
    x96 = x69 * x77 + x75
    x97 = 2.0 * x69
    x98 = x0 * (x14 + 2.0 * x48 + 4.0 * x70) + x78 * x97
    x99 = x3**2
    x100 = x0 * (x14 + 4.0 * x16 + 2.0 * x99) + 2.0 * x19 * x9
    x101 = x33 + R[1]
    x102 = x101 * x31
    x103 = x15 + x18 * x9
    x104 = x101 * x34
    x105 = x104 + x43
    x106 = x105 * x65
    x107 = 0.1666666666666667 * x101
    x108 = x43 + x9**2
    x109 = x58 + R[1]
    x110 = x0 * x109
    x111 = 2.0 * x104
    x112 = x0 + x111
    x113 = x112 * x34
    x114 = x110 + x113
    x115 = x114 * x64
    x116 = x105 * x85
    x117 = 0.3333333333333333 * x101
    x118 = x101 * x50
    x119 = x118 + x43
    x120 = x119 * x65
    x121 = x16 + x43
    x122 = x121 * x44
    x123 = x112 * x50
    x124 = x110 + x123
    x125 = 0.5 * x124
    x126 = 2.0 * x118
    x127 = x0 * (x111 + x126 + x14 + x60)
    x128 = 2.0 * x124 * x34 + x127
    x129 = x128 * x36
    x130 = x124 * x55
    x131 = x119 * x67
    x132 = x107 * x46
    x133 = x0 * (x57 + A[1] + R[1]) + x50 * (x0 + x126)
    x134 = x43 + x99
    x135 = x134 * x64
    x136 = x36 * (x124 * x87 + x127)
    x137 = 0.1666666666666667 * x133
    x138 = x134 * x44
    x139 = x39 + R[2]
    x140 = x139 * x31
    x141 = 0.1666666666666667 * x46
    x142 = x139 * x141
    x143 = x139 * x40
    x144 = x143 + x43
    x145 = x144 * x65
    x146 = 0.3333333333333333 * x139
    x147 = x144 * x85
    x148 = x74 + R[2]
    x149 = x0 * x148
    x150 = 2.0 * x143
    x151 = x0 + x150
    x152 = x151 * x40
    x153 = x149 + x152
    x154 = x153 * x64
    x155 = x139 * x69
    x156 = x155 + x43
    x157 = x156 * x65
    x158 = x151 * x69
    x159 = x149 + x158
    x160 = 0.5 * x159
    x161 = x156 * x67
    x162 = x159 * x55
    x163 = 2.0 * x155
    x164 = x0 * (x14 + x150 + x163 + x76)
    x165 = 2.0 * x159 * x40 + x164
    x166 = x165 * x36
    x167 = x0 * (x73 + A[2] + R[2]) + x69 * (x0 + x163)
    x168 = 0.1666666666666667 * x167
    x169 = x36 * (x159 * x97 + x164)

    # 108 item(s)
    result[0, 0, 0] = numpy.sum(
        -x31 * (x0 * (2.0 * x10 + x13 * x14 + x19 + x8) + x26 * x9)
    )
    result[0, 0, 1] = numpy.sum(-x34 * x37)
    result[0, 0, 2] = numpy.sum(-x37 * x40)
    result[0, 0, 3] = numpy.sum(-x41 * x45)
    result[0, 0, 4] = numpy.sum(-x34 * x41 * x47)
    result[0, 0, 5] = numpy.sum(-x41 * x49)
    result[0, 1, 0] = numpy.sum(-x50 * x51)
    result[0, 1, 1] = numpy.sum(-x53 * x54)
    result[0, 1, 2] = numpy.sum(-x40 * x50 * x56)
    result[0, 1, 3] = numpy.sum(-x62 * x66)
    result[0, 1, 4] = numpy.sum(-x40 * x53 * x63)
    result[0, 1, 5] = numpy.sum(-x49 * x50 * x68)
    result[0, 2, 0] = numpy.sum(-x51 * x69)
    result[0, 2, 1] = numpy.sum(-x34 * x56 * x69)
    result[0, 2, 2] = numpy.sum(-x54 * x72)
    result[0, 2, 3] = numpy.sum(-x45 * x68 * x69)
    result[0, 2, 4] = numpy.sum(-x34 * x63 * x72)
    result[0, 2, 5] = numpy.sum(-x66 * x78)
    result[0, 3, 0] = numpy.sum(-x79 * x81)
    result[0, 3, 1] = numpy.sum(-x82 * x84)
    result[0, 3, 2] = numpy.sum(-x40 * x79 * x86)
    result[0, 3, 3] = numpy.sum(-x88 * x89)
    result[0, 3, 4] = numpy.sum(-x47 * x82 * x90)
    result[0, 3, 5] = numpy.sum(-x49 * x79 * x91)
    result[0, 4, 0] = numpy.sum(-x50 * x80 * x93)
    result[0, 4, 1] = numpy.sum(-x53 * x69 * x83)
    result[0, 4, 2] = numpy.sum(-x50 * x72 * x83)
    result[0, 4, 3] = numpy.sum(-x62 * x90 * x92)
    result[0, 4, 4] = numpy.sum(-x4 * x53 * x71)
    result[0, 4, 5] = numpy.sum(-x50 * x78 * x94)
    result[0, 5, 0] = numpy.sum(-x81 * x95)
    result[0, 5, 1] = numpy.sum(-x34 * x86 * x95)
    result[0, 5, 2] = numpy.sum(-x84 * x96)
    result[0, 5, 3] = numpy.sum(-x45 * x91 * x95)
    result[0, 5, 4] = numpy.sum(-x34 * x94 * x96)
    result[0, 5, 5] = numpy.sum(-x89 * x98)
    result[1, 0, 0] = numpy.sum(-x100 * x102)
    result[1, 0, 1] = numpy.sum(-x103 * x106)
    result[1, 0, 2] = numpy.sum(-x103 * x107 * x47)
    result[1, 0, 3] = numpy.sum(-x108 * x115)
    result[1, 0, 4] = numpy.sum(-x108 * x116 * x40)
    result[1, 0, 5] = numpy.sum(-x108 * x117 * x49)
    result[1, 1, 0] = numpy.sum(-x120 * x19)
    result[1, 1, 1] = numpy.sum(-x122 * x125)
    result[1, 1, 2] = numpy.sum(-x119 * x122 * x40)
    result[1, 1, 3] = numpy.sum(-x129 * x9)
    result[1, 1, 4] = numpy.sum(-x130 * x40 * x9)
    result[1, 1, 5] = numpy.sum(-x131 * x49 * x9)
    result[1, 2, 0] = numpy.sum(-x101 * x19 * x93)
    result[1, 2, 1] = numpy.sum(-x105 * x122 * x69)
    result[1, 2, 2] = numpy.sum(-x101 * x121 * x72)
    result[1, 2, 3] = numpy.sum(-x114 * x9 * x93)
    result[1, 2, 4] = numpy.sum(-x105 * x72 * x9)
    result[1, 2, 5] = numpy.sum(-x132 * x78 * x9)
    result[1, 3, 0] = numpy.sum(-x133 * x135)
    result[1, 3, 1] = numpy.sum(-x136 * x3)
    result[1, 3, 2] = numpy.sum(-x137 * x3 * x47)
    result[1, 3, 3] = numpy.sum(
        -x31 * (x0 * (x109 * x14 + x113 + 2.0 * x123 + x62) + x128 * x50)
    )
    result[1, 3, 4] = numpy.sum(-x136 * x40)
    result[1, 3, 5] = numpy.sum(-x137 * x49)
    result[1, 4, 0] = numpy.sum(-x131 * x138 * x69)
    result[1, 4, 1] = numpy.sum(-x130 * x3 * x69)
    result[1, 4, 2] = numpy.sum(-x119 * x3 * x72)
    result[1, 4, 3] = numpy.sum(-x129 * x69)
    result[1, 4, 4] = numpy.sum(-x125 * x72)
    result[1, 4, 5] = numpy.sum(-x120 * x78)
    result[1, 5, 0] = numpy.sum(-x117 * x138 * x95)
    result[1, 5, 1] = numpy.sum(-x116 * x3 * x95)
    result[1, 5, 2] = numpy.sum(-x132 * x3 * x96)
    result[1, 5, 3] = numpy.sum(-x115 * x95)
    result[1, 5, 4] = numpy.sum(-x106 * x96)
    result[1, 5, 5] = numpy.sum(-x102 * x98)
    result[2, 0, 0] = numpy.sum(-x100 * x140)
    result[2, 0, 1] = numpy.sum(-x103 * x142 * x34)
    result[2, 0, 2] = numpy.sum(-x103 * x145)
    result[2, 0, 3] = numpy.sum(-x108 * x146 * x45)
    result[2, 0, 4] = numpy.sum(-x108 * x147 * x34)
    result[2, 0, 5] = numpy.sum(-x108 * x154)
    result[2, 1, 0] = numpy.sum(-x142 * x19 * x50)
    result[2, 1, 1] = numpy.sum(-x121 * x139 * x53)
    result[2, 1, 2] = numpy.sum(-x122 * x144 * x50)
    result[2, 1, 3] = numpy.sum(-x142 * x62 * x9)
    result[2, 1, 4] = numpy.sum(-x144 * x53 * x9)
    result[2, 1, 5] = numpy.sum(-x141 * x153 * x50 * x9)
    result[2, 2, 0] = numpy.sum(-x157 * x19)
    result[2, 2, 1] = numpy.sum(-x122 * x156 * x34)
    result[2, 2, 2] = numpy.sum(-x122 * x160)
    result[2, 2, 3] = numpy.sum(-x161 * x45 * x9)
    result[2, 2, 4] = numpy.sum(-x162 * x34 * x9)
    result[2, 2, 5] = numpy.sum(-x166 * x9)
    result[2, 3, 0] = numpy.sum(-x138 * x146 * x79)
    result[2, 3, 1] = numpy.sum(-x142 * x3 * x82)
    result[2, 3, 2] = numpy.sum(-x147 * x3 * x79)
    result[2, 3, 3] = numpy.sum(-x140 * x88)
    result[2, 3, 4] = numpy.sum(-x145 * x82)
    result[2, 3, 5] = numpy.sum(-x154 * x79)
    result[2, 4, 0] = numpy.sum(-x138 * x161 * x50)
    result[2, 4, 1] = numpy.sum(-x156 * x3 * x53)
    result[2, 4, 2] = numpy.sum(-x162 * x3 * x50)
    result[2, 4, 3] = numpy.sum(-x157 * x62)
    result[2, 4, 4] = numpy.sum(-x160 * x53)
    result[2, 4, 5] = numpy.sum(-x166 * x50)
    result[2, 5, 0] = numpy.sum(-x135 * x167)
    result[2, 5, 1] = numpy.sum(-x168 * x3 * x34 * x46)
    result[2, 5, 2] = numpy.sum(-x169 * x3)
    result[2, 5, 3] = numpy.sum(-x168 * x45)
    result[2, 5, 4] = numpy.sum(-x169 * x34)
    result[2, 5, 5] = numpy.sum(
        -x31 * (x0 * (x14 * x148 + x152 + 2.0 * x158 + x78) + x165 * x69)
    )
    return result


def dipole3d_23(ax, da, A, bx, db, B, R):
    """Cartesian 3D (df) dipole moment integrals.
    The origin is at R.

    Generated code; DO NOT modify by hand!"""

    result = numpy.zeros((3, 6, 10), dtype=float)

    x0 = (ax + bx) ** (-1.0)
    x1 = 3.0 * x0
    x2 = x0 * (ax * A[0] + bx * B[0])
    x3 = -x2
    x4 = x3 + A[0]
    x5 = x3 + B[0]
    x6 = x4 * x5
    x7 = 2.0 * x6
    x8 = x3 + R[0]
    x9 = x4 * x8
    x10 = 2.0 * x9
    x11 = x5 * x8
    x12 = 2.0 * x11
    x13 = x0 * (x1 + x10 + x12 + x7)
    x14 = -2.0 * x2
    x15 = x14 + B[0]
    x16 = x15 + R[0]
    x17 = x0 * x16
    x18 = x0 + x12
    x19 = x18 * x4
    x20 = x17 + x19
    x21 = 4.0 * x20
    x22 = x5**2
    x23 = x1 + 2.0 * x22
    x24 = x0 * (x23 + 4.0 * x6)
    x25 = x0 * (x15 + A[0])
    x26 = x0 + x7
    x27 = x26 * x5
    x28 = x25 + x27
    x29 = 2.0 * x4
    x30 = x24 + x28 * x29
    x31 = x18 * x5
    x32 = x0 * (x1 * x16 + 2.0 * x19 + x28 + x31)
    x33 = 2.0 * x5
    x34 = x13 + x20 * x33
    x35 = x32 + x34 * x4
    x36 = 2.23606797749979
    x37 = ax * bx * x0
    x38 = (
        5.568327996831708
        * da
        * db
        * numpy.exp(-x37 * ((A[0] - B[0]) ** 2 + (A[1] - B[1]) ** 2 + (A[2] - B[2]) ** 2))
    )
    x39 = x0**1.5 * x38
    x40 = x36 * x39
    x41 = 0.008333333333333333 * x40
    x42 = x0 * (ax * A[1] + bx * B[1])
    x43 = -x42
    x44 = x43 + B[1]
    x45 = 0.08333333333333333 * x39
    x46 = x35 * x45
    x47 = x0 * (ax * A[2] + bx * B[2])
    x48 = -x47
    x49 = x48 + B[2]
    x50 = x44**2
    x51 = 0.5 * x0
    x52 = x50 + x51
    x53 = x13 + x20 * x29
    x54 = x0**1.5 * x38
    x55 = 0.08333333333333333 * x54
    x56 = x53 * x55
    x57 = 1.732050807568877
    x58 = x45 * x49
    x59 = x57 * x58
    x60 = x49**2
    x61 = x51 + x60
    x62 = 1.5 * x0
    x63 = x50 + x62
    x64 = x44 * x54
    x65 = x63 * x64
    x66 = x0 * (x14 + A[0] + R[0]) + x4 * (x0 + x10)
    x67 = 0.03333333333333333 * x36
    x68 = x66 * x67
    x69 = 0.1666666666666667 * x54
    x70 = x66 * x69
    x71 = x60 + x62
    x72 = x49 * x54
    x73 = x71 * x72
    x74 = x43 + A[1]
    x75 = 3.872983346207417
    x76 = x74 * x75
    x77 = 0.01666666666666667 * x39
    x78 = x77 * (x32 + x34 * x5)
    x79 = x44 * x74
    x80 = x51 + x79
    x81 = x55 * x57
    x82 = x34 * x81
    x83 = -2.0 * x42
    x84 = x83 + B[1]
    x85 = x0 * (x84 + A[1])
    x86 = 2.0 * x79
    x87 = x0 + x86
    x88 = x44 * x87
    x89 = x85 + x88
    x90 = x20 * x81
    x91 = x54 * x80
    x92 = 0.5 * x20
    x93 = x61 * x69
    x94 = x20 * x57
    x95 = x1 + 2.0 * x50
    x96 = x0 * (4.0 * x79 + x95)
    x97 = 2.0 * x89
    x98 = x44 * x97 + x96
    x99 = x51 + x9
    x100 = 0.01666666666666667 * x54
    x101 = x100 * x75
    x102 = x101 * x99
    x103 = x49 * x69
    x104 = x57 * x99
    x105 = 0.3333333333333333 * x104
    x106 = 0.06666666666666667 * x99
    x107 = x48 + A[2]
    x108 = x107 * x75
    x109 = x44 * x45
    x110 = x107 * x57
    x111 = x107 * x49
    x112 = x111 + x51
    x113 = x52 * x69
    x114 = x112 * x54
    x115 = -2.0 * x47
    x116 = x115 + B[2]
    x117 = x0 * (x116 + A[2])
    x118 = 2.0 * x111
    x119 = x0 + x118
    x120 = x119 * x49
    x121 = x117 + x120
    x122 = x44 * x69
    x123 = x1 + 2.0 * x60
    x124 = x0 * (4.0 * x111 + x123)
    x125 = 2.0 * x121
    x126 = x124 + x125 * x49
    x127 = x51 + x74**2
    x128 = x17 + x31
    x129 = x0 * (4.0 * x11 + x23) + x128 * x33
    x130 = x100 * x36
    x131 = x129 * x130
    x132 = x74 * x87
    x133 = x132 + x85
    x134 = x128 * x55
    x135 = x128 * x69
    x136 = x127 * x49
    x137 = x74 * x97 + x96
    x138 = x11 + x51
    x139 = x138 * x55
    x140 = x138 * x57
    x141 = 0.3333333333333333 * x54
    x142 = x138 * x141
    x143 = 2.0 * x0
    x144 = x137 * x44 + x143 * (x132 + 2.0 * x85 + x88)
    x145 = 0.01666666666666667 * x40
    x146 = x145 * x8
    x147 = x45 * x8
    x148 = x69 * x8
    x149 = 0.06666666666666667 * x36
    x150 = x149 * x54 * x8
    x151 = x76 * x77
    x152 = 0.1666666666666667 * x57
    x153 = x128 * x152
    x154 = x140 * x69
    x155 = x108 * x77
    x156 = x152 * x8
    x157 = x107**2 + x51
    x158 = x157 * x44
    x159 = x107 * x119
    x160 = x117 + x159
    x161 = x107 * x125 + x124
    x162 = x143 * (2.0 * x117 + x120 + x159) + x161 * x49
    x163 = x26 * x4
    x164 = x143 * (x163 + 2.0 * x25 + x27) + x30 * x5
    x165 = x43 + R[1]
    x166 = x145 * x165
    x167 = x165 * x44
    x168 = x167 + x51
    x169 = x168 * x55
    x170 = x165 * x45
    x171 = x163 + x25
    x172 = x84 + R[1]
    x173 = x0 * x172
    x174 = 2.0 * x167
    x175 = x0 + x174
    x176 = x175 * x44
    x177 = x173 + x176
    x178 = x177 * x55
    x179 = x103 * x57
    x180 = x4**2 + x51
    x181 = 2.0 * x44
    x182 = x0 * (4.0 * x167 + x95) + x177 * x181
    x183 = x130 * x182
    x184 = x141 * x168
    x185 = x149 * x165
    x186 = x24 + x28 * x33
    x187 = x165 * x74
    x188 = x187 + x51
    x189 = x101 * x188
    x190 = x175 * x74
    x191 = x173 + x190
    x192 = x191 * x81
    x193 = x51 + x6
    x194 = 2.0 * x187
    x195 = x0 * (x1 + x174 + x194 + x86)
    x196 = x181 * x191 + x195
    x197 = x196 * x81
    x198 = 0.5 * x191
    x199 = x193 * x57
    x200 = x141 * x199
    x201 = x0 * (x1 * x172 + x176 + 2.0 * x190 + x89)
    x202 = x77 * (x196 * x44 + x201)
    x203 = x4 * x75
    x204 = x4 * x57
    x205 = 0.06666666666666667 * x188
    x206 = x107 * x69
    x207 = x168 * x57
    x208 = x114 * x152
    x209 = x121 * x69
    x210 = x203 * x77
    x211 = x0 * (x83 + A[1] + R[1]) + x74 * (x0 + x194)
    x212 = x211 * x5
    x213 = x54 * (x22 + x62)
    x214 = x213 * x67
    x215 = x22 + x51
    x216 = x191 * x74
    x217 = x195 + 2.0 * x216
    x218 = x217 * x55
    x219 = x196 * x74 + x201
    x220 = x219 * x45
    x221 = x213 * x5
    x222 = x215 * x69
    x223 = x222 * x57
    x224 = x188 * x57
    x225 = 0.3333333333333333 * x215
    x226 = x45 * x5
    x227 = x5 * x69
    x228 = x48 + R[2]
    x229 = x145 * x228
    x230 = x228 * x45
    x231 = x228 * x49
    x232 = x231 + x51
    x233 = x232 * x55
    x234 = x232 * x57
    x235 = x116 + R[2]
    x236 = x0 * x235
    x237 = 2.0 * x231
    x238 = x0 + x237
    x239 = x238 * x49
    x240 = x236 + x239
    x241 = x240 * x55
    x242 = x149 * x228
    x243 = x141 * x232
    x244 = 2.0 * x49
    x245 = x0 * (x123 + 4.0 * x231) + x240 * x244
    x246 = x130 * x245
    x247 = x152 * x91
    x248 = x69 * x74
    x249 = x69 * x89
    x250 = x107 * x228
    x251 = x250 + x51
    x252 = x101 * x251
    x253 = x251 * x57
    x254 = x107 * x238
    x255 = x236 + x254
    x256 = x255 * x81
    x257 = 0.5 * x255
    x258 = 2.0 * x250
    x259 = x0 * (x1 + x118 + x237 + x258)
    x260 = x244 * x255 + x259
    x261 = x260 * x81
    x262 = 0.06666666666666667 * x251
    x263 = x0 * (x1 * x235 + x121 + x239 + 2.0 * x254)
    x264 = x77 * (x260 * x49 + x263)
    x265 = x0 * (x115 + A[2] + R[2]) + x107 * (x0 + x258)
    x266 = x107 * x255
    x267 = x259 + 2.0 * x266
    x268 = x267 * x55
    x269 = x107 * x260 + x263
    x270 = x269 * x45

    # 180 item(s)
    result[0, 0, 0] = numpy.sum(
        x41 * (x0 * (4.0 * x13 + x21 * x4 + x21 * x5 + x30) + x33 * x35)
    )
    result[0, 0, 1] = numpy.sum(x44 * x46)
    result[0, 0, 2] = numpy.sum(x46 * x49)
    result[0, 0, 3] = numpy.sum(x52 * x56)
    result[0, 0, 4] = numpy.sum(x44 * x53 * x59)
    result[0, 0, 5] = numpy.sum(x56 * x61)
    result[0, 0, 6] = numpy.sum(x65 * x68)
    result[0, 0, 7] = numpy.sum(x49 * x52 * x70)
    result[0, 0, 8] = numpy.sum(x44 * x61 * x70)
    result[0, 0, 9] = numpy.sum(x68 * x73)
    result[0, 1, 0] = numpy.sum(x76 * x78)
    result[0, 1, 1] = numpy.sum(x80 * x82)
    result[0, 1, 2] = numpy.sum(x34 * x59 * x74)
    result[0, 1, 3] = numpy.sum(x89 * x90)
    result[0, 1, 4] = numpy.sum(x49 * x91 * x92)
    result[0, 1, 5] = numpy.sum(x74 * x93 * x94)
    result[0, 1, 6] = numpy.sum(x102 * x98)
    result[0, 1, 7] = numpy.sum(x103 * x104 * x89)
    result[0, 1, 8] = numpy.sum(x105 * x61 * x91)
    result[0, 1, 9] = numpy.sum(x106 * x73 * x76)
    result[0, 2, 0] = numpy.sum(x108 * x78)
    result[0, 2, 1] = numpy.sum(x109 * x110 * x34)
    result[0, 2, 2] = numpy.sum(x112 * x82)
    result[0, 2, 3] = numpy.sum(x107 * x113 * x94)
    result[0, 2, 4] = numpy.sum(x114 * x44 * x92)
    result[0, 2, 5] = numpy.sum(x121 * x90)
    result[0, 2, 6] = numpy.sum(x106 * x108 * x65)
    result[0, 2, 7] = numpy.sum(x105 * x114 * x52)
    result[0, 2, 8] = numpy.sum(x104 * x121 * x122)
    result[0, 2, 9] = numpy.sum(x102 * x126)
    result[0, 3, 0] = numpy.sum(x127 * x131)
    result[0, 3, 1] = numpy.sum(x133 * x134)
    result[0, 3, 2] = numpy.sum(x135 * x136)
    result[0, 3, 3] = numpy.sum(x137 * x139)
    result[0, 3, 4] = numpy.sum(x103 * x133 * x140)
    result[0, 3, 5] = numpy.sum(x127 * x142 * x61)
    result[0, 3, 6] = numpy.sum(x144 * x146)
    result[0, 3, 7] = numpy.sum(x137 * x147 * x49)
    result[0, 3, 8] = numpy.sum(x133 * x148 * x61)
    result[0, 3, 9] = numpy.sum(x136 * x150 * x71)
    result[0, 4, 0] = numpy.sum(x107 * x129 * x151)
    result[0, 4, 1] = numpy.sum(x107 * x153 * x91)
    result[0, 4, 2] = numpy.sum(x114 * x153 * x74)
    result[0, 4, 3] = numpy.sum(x107 * x154 * x89)
    result[0, 4, 4] = numpy.sum(x114 * x138 * x80)
    result[0, 4, 5] = numpy.sum(x121 * x154 * x74)
    result[0, 4, 6] = numpy.sum(x155 * x8 * x98)
    result[0, 4, 7] = numpy.sum(x114 * x156 * x89)
    result[0, 4, 8] = numpy.sum(x121 * x156 * x91)
    result[0, 4, 9] = numpy.sum(x126 * x151 * x8)
    result[0, 5, 0] = numpy.sum(x131 * x157)
    result[0, 5, 1] = numpy.sum(x135 * x158)
    result[0, 5, 2] = numpy.sum(x134 * x160)
    result[0, 5, 3] = numpy.sum(x142 * x157 * x52)
    result[0, 5, 4] = numpy.sum(x122 * x140 * x160)
    result[0, 5, 5] = numpy.sum(x139 * x161)
    result[0, 5, 6] = numpy.sum(x150 * x158 * x63)
    result[0, 5, 7] = numpy.sum(x148 * x160 * x52)
    result[0, 5, 8] = numpy.sum(x147 * x161 * x44)
    result[0, 5, 9] = numpy.sum(x146 * x162)
    result[1, 0, 0] = numpy.sum(x164 * x166)
    result[1, 0, 1] = numpy.sum(x169 * x30)
    result[1, 0, 2] = numpy.sum(x170 * x30 * x49)
    result[1, 0, 3] = numpy.sum(x171 * x178)
    result[1, 0, 4] = numpy.sum(x168 * x171 * x179)
    result[1, 0, 5] = numpy.sum(x165 * x171 * x93)
    result[1, 0, 6] = numpy.sum(x180 * x183)
    result[1, 0, 7] = numpy.sum(x103 * x177 * x180)
    result[1, 0, 8] = numpy.sum(x180 * x184 * x61)
    result[1, 0, 9] = numpy.sum(x180 * x185 * x73)
    result[1, 1, 0] = numpy.sum(x186 * x189)
    result[1, 1, 1] = numpy.sum(x192 * x28)
    result[1, 1, 2] = numpy.sum(x179 * x188 * x28)
    result[1, 1, 3] = numpy.sum(x193 * x197)
    result[1, 1, 4] = numpy.sum(x193 * x198 * x72)
    result[1, 1, 5] = numpy.sum(x188 * x200 * x61)
    result[1, 1, 6] = numpy.sum(x202 * x203)
    result[1, 1, 7] = numpy.sum(x196 * x204 * x58)
    result[1, 1, 8] = numpy.sum(x191 * x204 * x93)
    result[1, 1, 9] = numpy.sum(x203 * x205 * x73)
    result[1, 2, 0] = numpy.sum(x155 * x165 * x186)
    result[1, 2, 1] = numpy.sum(x206 * x207 * x28)
    result[1, 2, 2] = numpy.sum(x165 * x208 * x28)
    result[1, 2, 3] = numpy.sum(x177 * x199 * x206)
    result[1, 2, 4] = numpy.sum(x114 * x168 * x193)
    result[1, 2, 5] = numpy.sum(x165 * x199 * x209)
    result[1, 2, 6] = numpy.sum(x155 * x182 * x4)
    result[1, 2, 7] = numpy.sum(x177 * x208 * x4)
    result[1, 2, 8] = numpy.sum(x168 * x204 * x209)
    result[1, 2, 9] = numpy.sum(x126 * x165 * x210)
    result[1, 3, 0] = numpy.sum(x212 * x214)
    result[1, 3, 1] = numpy.sum(x215 * x218)
    result[1, 3, 2] = numpy.sum(x103 * x211 * x215)
    result[1, 3, 3] = numpy.sum(x220 * x5)
    result[1, 3, 4] = numpy.sum(x217 * x5 * x59)
    result[1, 3, 5] = numpy.sum(x212 * x93)
    result[1, 3, 6] = numpy.sum(
        x41 * (x0 * (x137 + 4.0 * x191 * x44 + 4.0 * x195 + 4.0 * x216) + x181 * x219)
    )
    result[1, 3, 7] = numpy.sum(x220 * x49)
    result[1, 3, 8] = numpy.sum(x218 * x61)
    result[1, 3, 9] = numpy.sum(x211 * x67 * x73)
    result[1, 4, 0] = numpy.sum(x108 * x205 * x221)
    result[1, 4, 1] = numpy.sum(x107 * x191 * x223)
    result[1, 4, 2] = numpy.sum(x114 * x224 * x225)
    result[1, 4, 3] = numpy.sum(x110 * x196 * x226)
    result[1, 4, 4] = numpy.sum(x114 * x198 * x5)
    result[1, 4, 5] = numpy.sum(x121 * x224 * x227)
    result[1, 4, 6] = numpy.sum(x108 * x202)
    result[1, 4, 7] = numpy.sum(x112 * x197)
    result[1, 4, 8] = numpy.sum(x121 * x192)
    result[1, 4, 9] = numpy.sum(x126 * x189)
    result[1, 5, 0] = numpy.sum(x157 * x185 * x221)
    result[1, 5, 1] = numpy.sum(x157 * x184 * x215)
    result[1, 5, 2] = numpy.sum(x160 * x165 * x222)
    result[1, 5, 3] = numpy.sum(x157 * x177 * x227)
    result[1, 5, 4] = numpy.sum(x160 * x207 * x227)
    result[1, 5, 5] = numpy.sum(x161 * x170 * x5)
    result[1, 5, 6] = numpy.sum(x157 * x183)
    result[1, 5, 7] = numpy.sum(x160 * x178)
    result[1, 5, 8] = numpy.sum(x161 * x169)
    result[1, 5, 9] = numpy.sum(x162 * x166)
    result[2, 0, 0] = numpy.sum(x164 * x229)
    result[2, 0, 1] = numpy.sum(x230 * x30 * x44)
    result[2, 0, 2] = numpy.sum(x233 * x30)
    result[2, 0, 3] = numpy.sum(x113 * x171 * x228)
    result[2, 0, 4] = numpy.sum(x122 * x171 * x234)
    result[2, 0, 5] = numpy.sum(x171 * x241)
    result[2, 0, 6] = numpy.sum(x180 * x242 * x65)
    result[2, 0, 7] = numpy.sum(x180 * x243 * x52)
    result[2, 0, 8] = numpy.sum(x122 * x180 * x240)
    result[2, 0, 9] = numpy.sum(x180 * x246)
    result[2, 1, 0] = numpy.sum(x151 * x186 * x228)
    result[2, 1, 1] = numpy.sum(x228 * x247 * x28)
    result[2, 1, 2] = numpy.sum(x234 * x248 * x28)
    result[2, 1, 3] = numpy.sum(x199 * x228 * x249)
    result[2, 1, 4] = numpy.sum(x193 * x232 * x91)
    result[2, 1, 5] = numpy.sum(x199 * x240 * x248)
    result[2, 1, 6] = numpy.sum(x210 * x228 * x98)
    result[2, 1, 7] = numpy.sum(x204 * x232 * x249)
    result[2, 1, 8] = numpy.sum(x240 * x247 * x4)
    result[2, 1, 9] = numpy.sum(x151 * x245 * x4)
    result[2, 2, 0] = numpy.sum(x186 * x252)
    result[2, 2, 1] = numpy.sum(x122 * x253 * x28)
    result[2, 2, 2] = numpy.sum(x256 * x28)
    result[2, 2, 3] = numpy.sum(x200 * x251 * x52)
    result[2, 2, 4] = numpy.sum(x193 * x257 * x64)
    result[2, 2, 5] = numpy.sum(x193 * x261)
    result[2, 2, 6] = numpy.sum(x203 * x262 * x65)
    result[2, 2, 7] = numpy.sum(x113 * x204 * x255)
    result[2, 2, 8] = numpy.sum(x109 * x204 * x260)
    result[2, 2, 9] = numpy.sum(x203 * x264)
    result[2, 3, 0] = numpy.sum(x127 * x221 * x242)
    result[2, 3, 1] = numpy.sum(x133 * x222 * x228)
    result[2, 3, 2] = numpy.sum(x127 * x215 * x243)
    result[2, 3, 3] = numpy.sum(x137 * x230 * x5)
    result[2, 3, 4] = numpy.sum(x133 * x227 * x234)
    result[2, 3, 5] = numpy.sum(x127 * x227 * x240)
    result[2, 3, 6] = numpy.sum(x144 * x229)
    result[2, 3, 7] = numpy.sum(x137 * x233)
    result[2, 3, 8] = numpy.sum(x133 * x241)
    result[2, 3, 9] = numpy.sum(x127 * x246)
    result[2, 4, 0] = numpy.sum(x221 * x262 * x76)
    result[2, 4, 1] = numpy.sum(x225 * x253 * x91)
    result[2, 4, 2] = numpy.sum(x223 * x255 * x74)
    result[2, 4, 3] = numpy.sum(x227 * x253 * x89)
    result[2, 4, 4] = numpy.sum(x257 * x5 * x91)
    result[2, 4, 5] = numpy.sum(x226 * x260 * x57 * x74)
    result[2, 4, 6] = numpy.sum(x252 * x98)
    result[2, 4, 7] = numpy.sum(x256 * x89)
    result[2, 4, 8] = numpy.sum(x261 * x80)
    result[2, 4, 9] = numpy.sum(x264 * x76)
    result[2, 5, 0] = numpy.sum(x214 * x265 * x5)
    result[2, 5, 1] = numpy.sum(x222 * x265 * x44)
    result[2, 5, 2] = numpy.sum(x215 * x268)
    result[2, 5, 3] = numpy.sum(x227 * x265 * x52)
    result[2, 5, 4] = numpy.sum(x109 * x267 * x5 * x57)
    result[2, 5, 5] = numpy.sum(x270 * x5)
    result[2, 5, 6] = numpy.sum(x265 * x65 * x67)
    result[2, 5, 7] = numpy.sum(x268 * x52)
    result[2, 5, 8] = numpy.sum(x270 * x44)
    result[2, 5, 9] = numpy.sum(
        x41 * (x0 * (x161 + 4.0 * x255 * x49 + 4.0 * x259 + 4.0 * x266) + x244 * x269)
    )
    return result


def dipole3d_24(ax, da, A, bx, db, B, R):
    """Cartesian 3D (dg) dipole moment integrals.
    The origin is at R.

    Generated code; DO NOT modify by hand!"""

    result = numpy.zeros((3, 6, 15), dtype=float)

    x0 = 0.5 / (ax + bx)
    x1 = (ax + bx) ** (-1.0)
    x2 = -x1 * (ax * A[0] + bx * B[0])
    x3 = -x2 - B[0]
    x4 = ax * bx * x1
    x5 = numpy.exp(-x4 * (A[0] - B[0]) ** 2)
    x6 = 1.772453850905516 * numpy.sqrt(x1)
    x7 = x5 * x6
    x8 = x0 * x7
    x9 = 3.0 * x8
    x10 = -x2 - A[0]
    x11 = x10 * x7
    x12 = x11 * x3
    x13 = -x2 - R[0]
    x14 = x11 * x13
    x15 = x3 * x7
    x16 = x13 * x15
    x17 = x0 * (x12 + x14 + x16 + x9)
    x18 = x13 * x7
    x19 = x0 * (x15 + x18)
    x20 = x16 + x8
    x21 = x10 * x20
    x22 = x19 + x21
    x23 = x22 * x3
    x24 = x17 + x23
    x25 = x24 * x3
    x26 = x10 * x24
    x27 = x20 * x3
    x28 = 3.0 * x19
    x29 = x0 * (x11 + x15)
    x30 = x12 + x8
    x31 = x3 * x30
    x32 = x29 + x31
    x33 = x0 * (2.0 * x21 + x27 + x28 + x32)
    x34 = x10 * x30
    x35 = x3**2 * x7
    x36 = x35 + x9
    x37 = x0 * (2.0 * x12 + x36)
    x38 = x10 * x32
    x39 = x37 + x38
    x40 = 2.0 * x0 * (2.0 * x29 + x31 + x34) + x3 * x39
    x41 = x10 * x22
    x42 = x26 + x33
    x43 = x0 * (4.0 * x17 + 2.0 * x23 + x39 + 2.0 * x41) + x3 * x42
    x44 = da * db
    x45 = 0.0563436169819011
    x46 = x44 * x45
    x47 = numpy.exp(-x4 * (A[1] - B[1]) ** 2)
    x48 = numpy.exp(-x4 * (A[2] - B[2]) ** 2)
    x49 = 3.141592653589793 * x1 * x48
    x50 = x47 * x49
    x51 = x46 * x50
    x52 = -x1 * (ax * A[1] + bx * B[1])
    x53 = -x52 - B[1]
    x54 = x50 * x53
    x55 = 2.23606797749979
    x56 = 0.06666666666666667 * x44
    x57 = x55 * x56
    x58 = x43 * x57
    x59 = -x1 * (ax * A[2] + bx * B[2])
    x60 = -x59 - B[2]
    x61 = x50 * x60
    x62 = x47 * x6
    x63 = x53**2 * x62
    x64 = x0 * x62
    x65 = x63 + x64
    x66 = 1.732050807568877
    x67 = 0.1111111111111111 * x66
    x68 = x65 * x67
    x69 = x48 * x6
    x70 = x44 * x69
    x71 = 0.3333333333333333 * x44
    x72 = x60 * x71
    x73 = x60**2 * x69
    x74 = x0 * x69
    x75 = x73 + x74
    x76 = x67 * x75
    x77 = x44 * x76
    x78 = x53 * (2.0 * x64 + x65)
    x79 = x56 * x78
    x80 = x17 + x41
    x81 = x55 * x80
    x82 = x60 * x69
    x83 = x65 * x71
    x84 = x53 * x62
    x85 = x71 * x75
    x86 = x60 * (2.0 * x74 + x75)
    x87 = x56 * x86
    x88 = 3.0 * x64
    x89 = x0 * (3.0 * x63 + x88) + x53 * x78
    x90 = x14 + x8
    x91 = x44 * (x0 * (x11 + x18) + x10 * x90)
    x92 = x45 * x91
    x93 = x55 * x82
    x94 = 0.06666666666666667 * x91
    x95 = x55 * x84
    x96 = 3.0 * x74
    x97 = x0 * (3.0 * x73 + x96) + x60 * x86
    x98 = -x52 - A[1]
    x99 = 0.09759000729485332
    x100 = x44 * x99
    x101 = x100 * x98
    x102 = x19 + x27
    x103 = x0 * (2.0 * x16 + x36) + x102 * x3
    x104 = x3 * x32
    x105 = x104 + x37
    x106 = x25 + x33
    x107 = x50 * (x0 * (x103 + x105 + 3.0 * x17 + 3.0 * x23) + x106 * x3)
    x108 = x62 * x98
    x109 = x108 * x53
    x110 = x109 + x64
    x111 = 3.872983346207417
    x112 = x111 * x56
    x113 = x112 * x69
    x114 = x106 * x112
    x115 = x0 * (x108 + x84)
    x116 = x110 * x53
    x117 = x115 + x116
    x118 = x24 * x71
    x119 = x110 * x66
    x120 = x63 + x88
    x121 = x0 * (2.0 * x109 + x120)
    x122 = x117 * x53
    x123 = x121 + x122
    x124 = x22 * x66
    x125 = x117 * x71
    x126 = x111 * x22
    x127 = x0 * (3.0 * x115 + 3.0 * x116 + x78) + x123 * x53
    x128 = x90 * x99
    x129 = x111 * x90
    x130 = x129 * x56
    x131 = x71 * x90
    x132 = x128 * x44
    x133 = -x59 - A[2]
    x134 = x100 * x133
    x135 = x133 * x69
    x136 = x135 * x60
    x137 = x136 + x74
    x138 = x112 * x62
    x139 = x137 * x66
    x140 = x139 * x71
    x141 = x0 * (x135 + x82)
    x142 = x137 * x60
    x143 = x141 + x142
    x144 = x143 * x71
    x145 = x73 + x96
    x146 = x0 * (2.0 * x136 + x145)
    x147 = x143 * x60
    x148 = x146 + x147
    x149 = x44 * (x0 * (3.0 * x141 + 3.0 * x142 + x86) + x148 * x60)
    x150 = x62 * x98**2 + x64
    x151 = x35 + x8
    x152 = x3 * (x151 + 2.0 * x8)
    x153 = x0 * (x152 + 3.0 * x27 + x28) + x103 * x3
    x154 = x153 * x46
    x155 = x56 * x69
    x156 = x110 * x98
    x157 = x115 + x156
    x158 = x157 * x55
    x159 = x103 * x57
    x160 = x117 * x98
    x161 = x121 + x160
    x162 = x102 * x44
    x163 = x162 * x67
    x164 = x102 * x71
    x165 = 2.0 * x0 * (2.0 * x115 + x116 + x156) + x161 * x53
    x166 = x20 * x55
    x167 = x20 * x71
    x168 = x46 * x5
    x169 = x168 * x49
    x170 = x169 * (x0 * (5.0 * x121 + 2.0 * x122 + 3.0 * x160) + x165 * x53)
    x171 = x49 * x5
    x172 = x171 * x60
    x173 = x13 * x57
    x174 = x18 * x46
    x175 = x101 * x50
    x176 = x103 * x112
    x177 = x112 * x20
    x178 = x143 * x66
    x179 = x134 * x171
    x180 = x112 * x18
    x181 = 3.141592653589793 * x1 * x47
    x182 = x181 * x5
    x183 = x149 * x182 * x99
    x184 = x133**2 * x69 + x74
    x185 = x56 * x62
    x186 = x133 * x137
    x187 = x141 + x186
    x188 = x187 * x55
    x189 = x184 * x67
    x190 = x133 * x143
    x191 = x146 + x190
    x192 = 2.0 * x0 * (2.0 * x141 + x142 + x186) + x191 * x60
    x193 = x44 * x68
    x194 = x182 * x53
    x195 = x168 * x181
    x196 = x195 * (x0 * (5.0 * x146 + 2.0 * x147 + 3.0 * x190) + x192 * x60)
    x197 = -x52 - R[1]
    x198 = x51 * (x0 * (2.0 * x104 + 5.0 * x37 + 3.0 * x38) + x3 * x40)
    x199 = x197 * x84
    x200 = x199 + x64
    x201 = x200 * x55
    x202 = x197 * x57
    x203 = x197 * x62
    x204 = x0 * (x203 + x84)
    x205 = x200 * x53
    x206 = x204 + x205
    x207 = x206 * x67
    x208 = x200 * x71
    x209 = x0 * (x120 + 2.0 * x199) + x206 * x53
    x210 = x29 + x34
    x211 = x210 * x55
    x212 = x206 * x71
    x213 = 3.0 * x204
    x214 = x0 * (3.0 * x205 + x213 + x78) + x209 * x53
    x215 = x10**2 * x7 + x8
    x216 = x215 * x44
    x217 = x216 * x45
    x218 = x209 * x57
    x219 = x0 * (x152 + 3.0 * x29 + 3.0 * x31) + x105 * x3
    x220 = x108 * x197
    x221 = x220 + x64
    x222 = x221 * x99
    x223 = x200 * x98
    x224 = x204 + x223
    x225 = x111 * x221
    x226 = x225 * x56
    x227 = x0 * (x109 + x199 + x220 + x88)
    x228 = x224 * x53
    x229 = x227 + x228
    x230 = x229 * x71
    x231 = x224 * x71
    x232 = x32 * x66
    x233 = x0 * (x117 + x205 + x213 + 2.0 * x223)
    x234 = x229 * x53
    x235 = x233 + x234
    x236 = x30 * x66
    x237 = x171 * (x0 * (x123 + x209 + 3.0 * x227 + 3.0 * x228) + x235 * x53)
    x238 = x10 * x100
    x239 = x112 * x235
    x240 = x111 * x224
    x241 = x222 * x44
    x242 = x105 * x112
    x243 = x112 * x30
    x244 = x11 * x112
    x245 = x0 * (3.0 * x35 + x9) + x152 * x3
    x246 = x0 * (x108 + x203) + x221 * x98
    x247 = x246 * x46
    x248 = x152 * x56
    x249 = x224 * x98
    x250 = x227 + x249
    x251 = x250 * x55
    x252 = x229 * x98
    x253 = x233 + x252
    x254 = x151 * x44
    x255 = x254 * x67
    x256 = x151 * x71
    x257 = x171 * x3
    x258 = x0 * (x161 + 4.0 * x227 + 2.0 * x228 + 2.0 * x249) + x253 * x53
    x259 = x258 * x57
    x260 = x15 * x55
    x261 = x112 * x7
    x262 = x245 * x46
    x263 = x182 * x3
    x264 = x46 * x7
    x265 = x56 * x7
    x266 = x44 * x7
    x267 = -x59 - R[2]
    x268 = x267 * x57
    x269 = x267 * x82
    x270 = x269 + x74
    x271 = x270 * x55
    x272 = x267 * x69
    x273 = x270 * x71
    x274 = x0 * (x272 + x82)
    x275 = x270 * x60
    x276 = x274 + x275
    x277 = x276 * x67
    x278 = x44 * x62
    x279 = x276 * x71
    x280 = x0 * (x145 + 2.0 * x269) + x276 * x60
    x281 = x280 * x57
    x282 = 3.0 * x274
    x283 = x0 * (3.0 * x275 + x282 + x86) + x280 * x60
    x284 = x135 * x267
    x285 = x284 + x74
    x286 = x285 * x99
    x287 = x111 * x285
    x288 = x287 * x56
    x289 = x133 * x270
    x290 = x274 + x289
    x291 = x0 * (x136 + x269 + x284 + x96)
    x292 = x290 * x60
    x293 = x291 + x292
    x294 = x293 * x71
    x295 = x0 * (x143 + x275 + x282 + 2.0 * x289)
    x296 = x293 * x60
    x297 = x295 + x296
    x298 = x286 * x44
    x299 = x111 * x290
    x300 = x112 * x297
    x301 = x182 * (x0 * (x148 + x280 + 3.0 * x291 + 3.0 * x292) + x297 * x60)
    x302 = x0 * (x135 + x272) + x133 * x285
    x303 = x133 * x290
    x304 = x291 + x303
    x305 = x304 * x55
    x306 = x133 * x293
    x307 = x295 + x306
    x308 = x0 * (x191 + 4.0 * x291 + 2.0 * x292 + 2.0 * x303) + x307 * x60
    x309 = x308 * x57

    # 270 item(s)
    result[0, 0, 0] = numpy.sum(
        x51 * (x0 * (2.0 * x25 + 3.0 * x26 + 5.0 * x33 + x40) + x3 * x43)
    )
    result[0, 0, 1] = numpy.sum(x54 * x58)
    result[0, 0, 2] = numpy.sum(x58 * x61)
    result[0, 0, 3] = numpy.sum(x42 * x68 * x70)
    result[0, 0, 4] = numpy.sum(x42 * x54 * x72)
    result[0, 0, 5] = numpy.sum(x42 * x62 * x77)
    result[0, 0, 6] = numpy.sum(x69 * x79 * x81)
    result[0, 0, 7] = numpy.sum(x80 * x82 * x83)
    result[0, 0, 8] = numpy.sum(x80 * x84 * x85)
    result[0, 0, 9] = numpy.sum(x62 * x81 * x87)
    result[0, 0, 10] = numpy.sum(x69 * x89 * x92)
    result[0, 0, 11] = numpy.sum(x78 * x93 * x94)
    result[0, 0, 12] = numpy.sum(x65 * x76 * x91)
    result[0, 0, 13] = numpy.sum(x86 * x94 * x95)
    result[0, 0, 14] = numpy.sum(x62 * x92 * x97)
    result[0, 1, 0] = numpy.sum(x101 * x107)
    result[0, 1, 1] = numpy.sum(x106 * x110 * x113)
    result[0, 1, 2] = numpy.sum(x114 * x61 * x98)
    result[0, 1, 3] = numpy.sum(x117 * x118 * x69)
    result[0, 1, 4] = numpy.sum(x118 * x119 * x82)
    result[0, 1, 5] = numpy.sum(x108 * x24 * x85)
    result[0, 1, 6] = numpy.sum(x113 * x123 * x22)
    result[0, 1, 7] = numpy.sum(x124 * x125 * x82)
    result[0, 1, 8] = numpy.sum(x110 * x124 * x85)
    result[0, 1, 9] = numpy.sum(x108 * x126 * x87)
    result[0, 1, 10] = numpy.sum(x127 * x128 * x70)
    result[0, 1, 11] = numpy.sum(x123 * x130 * x82)
    result[0, 1, 12] = numpy.sum(x117 * x131 * x75)
    result[0, 1, 13] = numpy.sum(x110 * x129 * x87)
    result[0, 1, 14] = numpy.sum(x108 * x132 * x97)
    result[0, 2, 0] = numpy.sum(x107 * x134)
    result[0, 2, 1] = numpy.sum(x114 * x133 * x54)
    result[0, 2, 2] = numpy.sum(x106 * x137 * x138)
    result[0, 2, 3] = numpy.sum(x135 * x24 * x83)
    result[0, 2, 4] = numpy.sum(x140 * x24 * x84)
    result[0, 2, 5] = numpy.sum(x118 * x143 * x62)
    result[0, 2, 6] = numpy.sum(x126 * x135 * x79)
    result[0, 2, 7] = numpy.sum(x124 * x137 * x83)
    result[0, 2, 8] = numpy.sum(x124 * x144 * x84)
    result[0, 2, 9] = numpy.sum(x138 * x148 * x22)
    result[0, 2, 10] = numpy.sum(x132 * x135 * x89)
    result[0, 2, 11] = numpy.sum(x129 * x137 * x79)
    result[0, 2, 12] = numpy.sum(x131 * x143 * x65)
    result[0, 2, 13] = numpy.sum(x130 * x148 * x84)
    result[0, 2, 14] = numpy.sum(x128 * x149 * x62)
    result[0, 3, 0] = numpy.sum(x150 * x154 * x69)
    result[0, 3, 1] = numpy.sum(x103 * x155 * x158)
    result[0, 3, 2] = numpy.sum(x150 * x159 * x82)
    result[0, 3, 3] = numpy.sum(x161 * x163 * x69)
    result[0, 3, 4] = numpy.sum(x157 * x164 * x82)
    result[0, 3, 5] = numpy.sum(x150 * x162 * x76)
    result[0, 3, 6] = numpy.sum(x155 * x165 * x166)
    result[0, 3, 7] = numpy.sum(x161 * x167 * x82)
    result[0, 3, 8] = numpy.sum(x157 * x167 * x75)
    result[0, 3, 9] = numpy.sum(x150 * x166 * x87)
    result[0, 3, 10] = numpy.sum(x13 * x170)
    result[0, 3, 11] = numpy.sum(x165 * x172 * x173)
    result[0, 3, 12] = numpy.sum(x161 * x18 * x77)
    result[0, 3, 13] = numpy.sum(x158 * x18 * x87)
    result[0, 3, 14] = numpy.sum(x150 * x174 * x97)
    result[0, 4, 0] = numpy.sum(x133 * x153 * x175)
    result[0, 4, 1] = numpy.sum(x110 * x135 * x176)
    result[0, 4, 2] = numpy.sum(x108 * x137 * x176)
    result[0, 4, 3] = numpy.sum(x117 * x135 * x164)
    result[0, 4, 4] = numpy.sum(x110 * x139 * x164)
    result[0, 4, 5] = numpy.sum(x108 * x143 * x164)
    result[0, 4, 6] = numpy.sum(x123 * x135 * x177)
    result[0, 4, 7] = numpy.sum(x117 * x139 * x167)
    result[0, 4, 8] = numpy.sum(x110 * x167 * x178)
    result[0, 4, 9] = numpy.sum(x108 * x148 * x177)
    result[0, 4, 10] = numpy.sum(x127 * x13 * x179)
    result[0, 4, 11] = numpy.sum(x123 * x137 * x180)
    result[0, 4, 12] = numpy.sum(x117 * x144 * x18)
    result[0, 4, 13] = numpy.sum(x110 * x148 * x180)
    result[0, 4, 14] = numpy.sum(x13 * x183 * x98)
    result[0, 5, 0] = numpy.sum(x154 * x184 * x62)
    result[0, 5, 1] = numpy.sum(x159 * x184 * x84)
    result[0, 5, 2] = numpy.sum(x103 * x185 * x188)
    result[0, 5, 3] = numpy.sum(x162 * x189 * x65)
    result[0, 5, 4] = numpy.sum(x164 * x187 * x84)
    result[0, 5, 5] = numpy.sum(x163 * x191 * x62)
    result[0, 5, 6] = numpy.sum(x166 * x184 * x79)
    result[0, 5, 7] = numpy.sum(x167 * x187 * x65)
    result[0, 5, 8] = numpy.sum(x167 * x191 * x84)
    result[0, 5, 9] = numpy.sum(x166 * x185 * x192)
    result[0, 5, 10] = numpy.sum(x174 * x184 * x89)
    result[0, 5, 11] = numpy.sum(x18 * x188 * x79)
    result[0, 5, 12] = numpy.sum(x18 * x191 * x193)
    result[0, 5, 13] = numpy.sum(x173 * x192 * x194)
    result[0, 5, 14] = numpy.sum(x13 * x196)
    result[1, 0, 0] = numpy.sum(x197 * x198)
    result[1, 0, 1] = numpy.sum(x155 * x201 * x40)
    result[1, 0, 2] = numpy.sum(x202 * x40 * x61)
    result[1, 0, 3] = numpy.sum(x207 * x39 * x70)
    result[1, 0, 4] = numpy.sum(x208 * x39 * x82)
    result[1, 0, 5] = numpy.sum(x203 * x39 * x77)
    result[1, 0, 6] = numpy.sum(x155 * x209 * x211)
    result[1, 0, 7] = numpy.sum(x210 * x212 * x82)
    result[1, 0, 8] = numpy.sum(x200 * x210 * x85)
    result[1, 0, 9] = numpy.sum(x203 * x211 * x87)
    result[1, 0, 10] = numpy.sum(x214 * x217 * x69)
    result[1, 0, 11] = numpy.sum(x215 * x218 * x82)
    result[1, 0, 12] = numpy.sum(x206 * x215 * x77)
    result[1, 0, 13] = numpy.sum(x201 * x215 * x87)
    result[1, 0, 14] = numpy.sum(x203 * x217 * x97)
    result[1, 1, 0] = numpy.sum(x219 * x222 * x70)
    result[1, 1, 1] = numpy.sum(x105 * x113 * x224)
    result[1, 1, 2] = numpy.sum(x105 * x226 * x82)
    result[1, 1, 3] = numpy.sum(x230 * x32 * x69)
    result[1, 1, 4] = numpy.sum(x231 * x232 * x82)
    result[1, 1, 5] = numpy.sum(x221 * x32 * x85)
    result[1, 1, 6] = numpy.sum(x113 * x235 * x30)
    result[1, 1, 7] = numpy.sum(x230 * x236 * x82)
    result[1, 1, 8] = numpy.sum(x224 * x236 * x85)
    result[1, 1, 9] = numpy.sum(x225 * x30 * x87)
    result[1, 1, 10] = numpy.sum(x237 * x238)
    result[1, 1, 11] = numpy.sum(x10 * x172 * x239)
    result[1, 1, 12] = numpy.sum(x11 * x229 * x85)
    result[1, 1, 13] = numpy.sum(x11 * x240 * x87)
    result[1, 1, 14] = numpy.sum(x11 * x241 * x97)
    result[1, 2, 0] = numpy.sum(x134 * x197 * x219 * x50)
    result[1, 2, 1] = numpy.sum(x135 * x200 * x242)
    result[1, 2, 2] = numpy.sum(x137 * x203 * x242)
    result[1, 2, 3] = numpy.sum(x135 * x212 * x32)
    result[1, 2, 4] = numpy.sum(x140 * x200 * x32)
    result[1, 2, 5] = numpy.sum(x144 * x203 * x32)
    result[1, 2, 6] = numpy.sum(x135 * x209 * x243)
    result[1, 2, 7] = numpy.sum(x140 * x206 * x30)
    result[1, 2, 8] = numpy.sum(x178 * x208 * x30)
    result[1, 2, 9] = numpy.sum(x148 * x203 * x243)
    result[1, 2, 10] = numpy.sum(x10 * x179 * x214)
    result[1, 2, 11] = numpy.sum(x137 * x209 * x244)
    result[1, 2, 12] = numpy.sum(x11 * x144 * x206)
    result[1, 2, 13] = numpy.sum(x148 * x200 * x244)
    result[1, 2, 14] = numpy.sum(x10 * x183 * x197)
    result[1, 3, 0] = numpy.sum(x245 * x247 * x69)
    result[1, 3, 1] = numpy.sum(x248 * x251 * x69)
    result[1, 3, 2] = numpy.sum(x246 * x248 * x93)
    result[1, 3, 3] = numpy.sum(x253 * x255 * x69)
    result[1, 3, 4] = numpy.sum(x250 * x256 * x82)
    result[1, 3, 5] = numpy.sum(x151 * x246 * x77)
    result[1, 3, 6] = numpy.sum(x257 * x259)
    result[1, 3, 7] = numpy.sum(x253 * x257 * x72)
    result[1, 3, 8] = numpy.sum(x15 * x250 * x85)
    result[1, 3, 9] = numpy.sum(x246 * x260 * x87)
    result[1, 3, 10] = numpy.sum(
        x169 * (x0 * (x165 + 5.0 * x233 + 2.0 * x234 + 3.0 * x252) + x258 * x53)
    )
    result[1, 3, 11] = numpy.sum(x172 * x259)
    result[1, 3, 12] = numpy.sum(x253 * x7 * x77)
    result[1, 3, 13] = numpy.sum(x251 * x7 * x87)
    result[1, 3, 14] = numpy.sum(x247 * x7 * x97)
    result[1, 4, 0] = numpy.sum(x135 * x241 * x245)
    result[1, 4, 1] = numpy.sum(x135 * x240 * x248)
    result[1, 4, 2] = numpy.sum(x137 * x225 * x248)
    result[1, 4, 3] = numpy.sum(x135 * x229 * x256)
    result[1, 4, 4] = numpy.sum(x139 * x224 * x256)
    result[1, 4, 5] = numpy.sum(x143 * x221 * x256)
    result[1, 4, 6] = numpy.sum(x133 * x239 * x257)
    result[1, 4, 7] = numpy.sum(x140 * x15 * x229)
    result[1, 4, 8] = numpy.sum(x15 * x178 * x231)
    result[1, 4, 9] = numpy.sum(x148 * x15 * x226)
    result[1, 4, 10] = numpy.sum(x134 * x237)
    result[1, 4, 11] = numpy.sum(x137 * x235 * x261)
    result[1, 4, 12] = numpy.sum(x143 * x230 * x7)
    result[1, 4, 13] = numpy.sum(x148 * x224 * x261)
    result[1, 4, 14] = numpy.sum(x149 * x222 * x7)
    result[1, 5, 0] = numpy.sum(x184 * x203 * x262)
    result[1, 5, 1] = numpy.sum(x184 * x201 * x248)
    result[1, 5, 2] = numpy.sum(x188 * x203 * x248)
    result[1, 5, 3] = numpy.sum(x189 * x206 * x254)
    result[1, 5, 4] = numpy.sum(x187 * x200 * x256)
    result[1, 5, 5] = numpy.sum(x191 * x203 * x255)
    result[1, 5, 6] = numpy.sum(x15 * x184 * x218)
    result[1, 5, 7] = numpy.sum(x15 * x187 * x212)
    result[1, 5, 8] = numpy.sum(x15 * x191 * x208)
    result[1, 5, 9] = numpy.sum(x192 * x202 * x263)
    result[1, 5, 10] = numpy.sum(x184 * x214 * x264)
    result[1, 5, 11] = numpy.sum(x188 * x209 * x265)
    result[1, 5, 12] = numpy.sum(x191 * x207 * x266)
    result[1, 5, 13] = numpy.sum(x192 * x201 * x265)
    result[1, 5, 14] = numpy.sum(x196 * x197)
    result[2, 0, 0] = numpy.sum(x198 * x267)
    result[2, 0, 1] = numpy.sum(x268 * x40 * x54)
    result[2, 0, 2] = numpy.sum(x185 * x271 * x40)
    result[2, 0, 3] = numpy.sum(x193 * x272 * x39)
    result[2, 0, 4] = numpy.sum(x273 * x39 * x84)
    result[2, 0, 5] = numpy.sum(x277 * x278 * x39)
    result[2, 0, 6] = numpy.sum(x211 * x272 * x79)
    result[2, 0, 7] = numpy.sum(x210 * x270 * x83)
    result[2, 0, 8] = numpy.sum(x210 * x279 * x84)
    result[2, 0, 9] = numpy.sum(x185 * x211 * x280)
    result[2, 0, 10] = numpy.sum(x217 * x272 * x89)
    result[2, 0, 11] = numpy.sum(x215 * x271 * x79)
    result[2, 0, 12] = numpy.sum(x216 * x277 * x65)
    result[2, 0, 13] = numpy.sum(x215 * x281 * x84)
    result[2, 0, 14] = numpy.sum(x217 * x283 * x62)
    result[2, 1, 0] = numpy.sum(x175 * x219 * x267)
    result[2, 1, 1] = numpy.sum(x110 * x242 * x272)
    result[2, 1, 2] = numpy.sum(x108 * x242 * x270)
    result[2, 1, 3] = numpy.sum(x125 * x272 * x32)
    result[2, 1, 4] = numpy.sum(x119 * x273 * x32)
    result[2, 1, 5] = numpy.sum(x108 * x279 * x32)
    result[2, 1, 6] = numpy.sum(x123 * x243 * x272)
    result[2, 1, 7] = numpy.sum(x117 * x236 * x273)
    result[2, 1, 8] = numpy.sum(x110 * x236 * x279)
    result[2, 1, 9] = numpy.sum(x108 * x243 * x280)
    result[2, 1, 10] = numpy.sum(x127 * x171 * x238 * x267)
    result[2, 1, 11] = numpy.sum(x123 * x244 * x270)
    result[2, 1, 12] = numpy.sum(x11 * x117 * x279)
    result[2, 1, 13] = numpy.sum(x110 * x244 * x280)
    result[2, 1, 14] = numpy.sum(x10 * x101 * x182 * x283)
    result[2, 2, 0] = numpy.sum(x219 * x278 * x286)
    result[2, 2, 1] = numpy.sum(x105 * x288 * x84)
    result[2, 2, 2] = numpy.sum(x105 * x138 * x290)
    result[2, 2, 3] = numpy.sum(x285 * x32 * x83)
    result[2, 2, 4] = numpy.sum(x232 * x290 * x71 * x84)
    result[2, 2, 5] = numpy.sum(x294 * x32 * x62)
    result[2, 2, 6] = numpy.sum(x287 * x30 * x79)
    result[2, 2, 7] = numpy.sum(x236 * x290 * x83)
    result[2, 2, 8] = numpy.sum(x236 * x294 * x84)
    result[2, 2, 9] = numpy.sum(x138 * x297 * x30)
    result[2, 2, 10] = numpy.sum(x11 * x298 * x89)
    result[2, 2, 11] = numpy.sum(x11 * x299 * x79)
    result[2, 2, 12] = numpy.sum(x11 * x293 * x83)
    result[2, 2, 13] = numpy.sum(x10 * x194 * x300)
    result[2, 2, 14] = numpy.sum(x238 * x301)
    result[2, 3, 0] = numpy.sum(x150 * x262 * x272)
    result[2, 3, 1] = numpy.sum(x158 * x248 * x272)
    result[2, 3, 2] = numpy.sum(x150 * x248 * x271)
    result[2, 3, 3] = numpy.sum(x161 * x255 * x272)
    result[2, 3, 4] = numpy.sum(x157 * x256 * x270)
    result[2, 3, 5] = numpy.sum(x150 * x254 * x277)
    result[2, 3, 6] = numpy.sum(x165 * x257 * x268)
    result[2, 3, 7] = numpy.sum(x15 * x161 * x273)
    result[2, 3, 8] = numpy.sum(x15 * x157 * x279)
    result[2, 3, 9] = numpy.sum(x15 * x150 * x281)
    result[2, 3, 10] = numpy.sum(x170 * x267)
    result[2, 3, 11] = numpy.sum(x165 * x265 * x271)
    result[2, 3, 12] = numpy.sum(x161 * x266 * x277)
    result[2, 3, 13] = numpy.sum(x158 * x265 * x280)
    result[2, 3, 14] = numpy.sum(x150 * x264 * x283)
    result[2, 4, 0] = numpy.sum(x108 * x245 * x298)
    result[2, 4, 1] = numpy.sum(x110 * x248 * x287)
    result[2, 4, 2] = numpy.sum(x108 * x248 * x299)
    result[2, 4, 3] = numpy.sum(x117 * x256 * x285)
    result[2, 4, 4] = numpy.sum(x119 * x256 * x290)
    result[2, 4, 5] = numpy.sum(x108 * x256 * x293)
    result[2, 4, 6] = numpy.sum(x123 * x15 * x288)
    result[2, 4, 7] = numpy.sum(x125 * x15 * x290 * x66)
    result[2, 4, 8] = numpy.sum(x119 * x15 * x294)
    result[2, 4, 9] = numpy.sum(x263 * x300 * x98)
    result[2, 4, 10] = numpy.sum(x127 * x266 * x286)
    result[2, 4, 11] = numpy.sum(x123 * x261 * x290)
    result[2, 4, 12] = numpy.sum(x117 * x294 * x7)
    result[2, 4, 13] = numpy.sum(x110 * x261 * x297)
    result[2, 4, 14] = numpy.sum(x101 * x301)
    result[2, 5, 0] = numpy.sum(x262 * x302 * x62)
    result[2, 5, 1] = numpy.sum(x248 * x302 * x95)
    result[2, 5, 2] = numpy.sum(x248 * x305 * x62)
    result[2, 5, 3] = numpy.sum(x254 * x302 * x68)
    result[2, 5, 4] = numpy.sum(x256 * x304 * x84)
    result[2, 5, 5] = numpy.sum(x255 * x307 * x62)
    result[2, 5, 6] = numpy.sum(x260 * x302 * x79)
    result[2, 5, 7] = numpy.sum(x15 * x304 * x83)
    result[2, 5, 8] = numpy.sum(x263 * x307 * x53 * x71)
    result[2, 5, 9] = numpy.sum(x263 * x309)
    result[2, 5, 10] = numpy.sum(x264 * x302 * x89)
    result[2, 5, 11] = numpy.sum(x305 * x7 * x79)
    result[2, 5, 12] = numpy.sum(x266 * x307 * x68)
    result[2, 5, 13] = numpy.sum(x194 * x309)
    result[2, 5, 14] = numpy.sum(
        x195 * (x0 * (x192 + 5.0 * x295 + 2.0 * x296 + 3.0 * x306) + x308 * x60)
    )
    return result


def dipole3d_30(ax, da, A, bx, db, B, R):
    """Cartesian 3D (fs) dipole moment integrals.
    The origin is at R.

    Generated code; DO NOT modify by hand!"""

    result = numpy.zeros((3, 10, 1), dtype=float)

    x0 = (ax + bx) ** (-1.0)
    x1 = x0 * (ax * A[0] + bx * B[0])
    x2 = -x1
    x3 = x2 + A[0]
    x4 = x3**2
    x5 = 3.0 * x0
    x6 = x2 + R[0]
    x7 = x3 * x6
    x8 = x0 * (-2.0 * x1 + A[0] + R[0]) + x3 * (x0 + 2.0 * x7)
    x9 = ax * bx * x0
    x10 = (
        5.568327996831708
        * da
        * db
        * numpy.exp(-x9 * ((A[0] - B[0]) ** 2 + (A[1] - B[1]) ** 2 + (A[2] - B[2]) ** 2))
    )
    x11 = x0**1.5 * x10
    x12 = 3.872983346207417 * x11
    x13 = 0.01666666666666667 * x12
    x14 = x0 * (ax * A[1] + bx * B[1])
    x15 = -x14
    x16 = x15 + A[1]
    x17 = x11 * x16
    x18 = 1.732050807568877
    x19 = 0.1666666666666667 * x18
    x20 = x19 * x8
    x21 = x0 * (ax * A[2] + bx * B[2])
    x22 = -x21
    x23 = x22 + A[2]
    x24 = x11 * x23
    x25 = x16**2
    x26 = 0.5 * x0
    x27 = 0.3333333333333333 * x18
    x28 = x27 * (x25 + x26)
    x29 = x26 + x7
    x30 = x0**1.5 * x10
    x31 = x29 * x30
    x32 = x23**2
    x33 = x27 * (x26 + x32)
    x34 = 0.06666666666666667 * x12
    x35 = x34 * x6
    x36 = 1.5 * x0
    x37 = x16 * (x25 + x36)
    x38 = x23 * (x32 + x36)
    x39 = x15 + R[1]
    x40 = x34 * x39
    x41 = x3 * (x36 + x4)
    x42 = x16 * x39
    x43 = x26 + x42
    x44 = x30 * x43
    x45 = x27 * (x26 + x4)
    x46 = x0 * (-2.0 * x14 + A[1] + R[1]) + x16 * (x0 + 2.0 * x42)
    x47 = x19 * x46
    x48 = x11 * x3
    x49 = x22 + R[2]
    x50 = x34 * x49
    x51 = x23 * x49
    x52 = x26 + x51
    x53 = x30 * x52
    x54 = x0 * (-2.0 * x21 + A[2] + R[2]) + x23 * (x0 + 2.0 * x51)
    x55 = x19 * x54

    # 30 item(s)
    result[0, 0, 0] = numpy.sum(x13 * (x0 * (2.0 * x4 + x5 + 4.0 * x7) + 2.0 * x3 * x8))
    result[0, 1, 0] = numpy.sum(x17 * x20)
    result[0, 2, 0] = numpy.sum(x20 * x24)
    result[0, 3, 0] = numpy.sum(x28 * x31)
    result[0, 4, 0] = numpy.sum(x16 * x24 * x29)
    result[0, 5, 0] = numpy.sum(x31 * x33)
    result[0, 6, 0] = numpy.sum(x35 * x37)
    result[0, 7, 0] = numpy.sum(x24 * x28 * x6)
    result[0, 8, 0] = numpy.sum(x17 * x33 * x6)
    result[0, 9, 0] = numpy.sum(x35 * x38)
    result[1, 0, 0] = numpy.sum(x40 * x41)
    result[1, 1, 0] = numpy.sum(x44 * x45)
    result[1, 2, 0] = numpy.sum(x24 * x39 * x45)
    result[1, 3, 0] = numpy.sum(x47 * x48)
    result[1, 4, 0] = numpy.sum(x24 * x3 * x43)
    result[1, 5, 0] = numpy.sum(x33 * x39 * x48)
    result[1, 6, 0] = numpy.sum(
        x13 * (x0 * (2.0 * x25 + 4.0 * x42 + x5) + 2.0 * x16 * x46)
    )
    result[1, 7, 0] = numpy.sum(x24 * x47)
    result[1, 8, 0] = numpy.sum(x33 * x44)
    result[1, 9, 0] = numpy.sum(x38 * x40)
    result[2, 0, 0] = numpy.sum(x41 * x50)
    result[2, 1, 0] = numpy.sum(x17 * x45 * x49)
    result[2, 2, 0] = numpy.sum(x45 * x53)
    result[2, 3, 0] = numpy.sum(x28 * x48 * x49)
    result[2, 4, 0] = numpy.sum(x17 * x3 * x52)
    result[2, 5, 0] = numpy.sum(x48 * x55)
    result[2, 6, 0] = numpy.sum(x37 * x50)
    result[2, 7, 0] = numpy.sum(x28 * x53)
    result[2, 8, 0] = numpy.sum(x17 * x55)
    result[2, 9, 0] = numpy.sum(
        x13 * (x0 * (2.0 * x32 + x5 + 4.0 * x51) + 2.0 * x23 * x54)
    )
    return result


def dipole3d_31(ax, da, A, bx, db, B, R):
    """Cartesian 3D (fp) dipole moment integrals.
    The origin is at R.

    Generated code; DO NOT modify by hand!"""

    result = numpy.zeros((3, 10, 3), dtype=float)

    x0 = (ax + bx) ** (-1.0)
    x1 = x0 * (ax * A[0] + bx * B[0])
    x2 = -2.0 * x1
    x3 = x0 * (x2 + B[0] + R[0])
    x4 = -x1
    x5 = x4 + B[0]
    x6 = x4 + R[0]
    x7 = x5 * x6
    x8 = 2.0 * x7
    x9 = x4 + A[0]
    x10 = x9 * (x0 + x8)
    x11 = x2 + A[0]
    x12 = x6 * x9
    x13 = 2.0 * x12
    x14 = x0 * (x11 + R[0]) + x9 * (x0 + x13)
    x15 = x5 * x9
    x16 = 2.0 * x15
    x17 = x0 * (x11 + B[0]) + x9 * (x0 + x16)
    x18 = 3.0 * x0
    x19 = x10 + x3
    x20 = 2.0 * x9
    x21 = x0 * (x13 + x16 + x18 + x8) + x19 * x20
    x22 = 3.872983346207417
    x23 = ax * bx * x0
    x24 = (
        5.568327996831708
        * da
        * db
        * numpy.exp(-x23 * ((A[0] - B[0]) ** 2 + (A[1] - B[1]) ** 2 + (A[2] - B[2]) ** 2))
    )
    x25 = numpy.sqrt(x0) * x24
    x26 = x0 * x25
    x27 = x22 * x26
    x28 = 0.01666666666666667 * x27
    x29 = x0 * (ax * A[1] + bx * B[1])
    x30 = -x29
    x31 = x30 + B[1]
    x32 = x9**2
    x33 = x18 + 2.0 * x32
    x34 = x28 * (x0 * (4.0 * x12 + x33) + x14 * x20)
    x35 = x0 * (ax * A[2] + bx * B[2])
    x36 = -x35
    x37 = x36 + B[2]
    x38 = x30 + A[1]
    x39 = 1.732050807568877
    x40 = x38 * x39
    x41 = 0.08333333333333333 * x26
    x42 = x21 * x41
    x43 = 0.5 * x0
    x44 = x31 * x38
    x45 = x43 + x44
    x46 = x0**1.5 * x24
    x47 = 0.1666666666666667 * x39
    x48 = x46 * x47
    x49 = x14 * x48
    x50 = x26 * x47
    x51 = x14 * x50
    x52 = x36 + A[2]
    x53 = x39 * x52
    x54 = x37 * x52
    x55 = x43 + x54
    x56 = x38**2
    x57 = x43 + x56
    x58 = x19 * x48
    x59 = -2.0 * x29
    x60 = x59 + B[1]
    x61 = 2.0 * x44
    x62 = x0 * (x60 + A[1]) + x38 * (x0 + x61)
    x63 = x46 * (x12 + x43)
    x64 = x47 * x63
    x65 = 0.3333333333333333 * x57
    x66 = x39 * x63
    x67 = x25 * x43 * x52
    x68 = x52**2
    x69 = x43 + x68
    x70 = 0.3333333333333333 * x69
    x71 = -2.0 * x35
    x72 = x71 + B[2]
    x73 = 2.0 * x54
    x74 = x0 * (x72 + A[2]) + x52 * (x0 + x73)
    x75 = 1.5 * x0
    x76 = x38 * (x56 + x75)
    x77 = x46 * (x43 + x7)
    x78 = 0.06666666666666667 * x22
    x79 = x77 * x78
    x80 = x18 + 2.0 * x56
    x81 = 2.0 * x38
    x82 = x0 * (4.0 * x44 + x80) + x62 * x81
    x83 = x28 * x6
    x84 = 0.06666666666666667 * x27
    x85 = x6 * x84
    x86 = x50 * x6
    x87 = x39 * x46
    x88 = x6 * x87
    x89 = x52 * (x68 + x75)
    x90 = x18 + 2.0 * x68
    x91 = 2.0 * x52
    x92 = x0 * (4.0 * x54 + x90) + x74 * x91
    x93 = x0 * (4.0 * x15 + x33) + x17 * x20
    x94 = x30 + R[1]
    x95 = x28 * x94
    x96 = x9 * (x32 + x75)
    x97 = x31 * x94
    x98 = x43 + x97
    x99 = x46 * x98
    x100 = x78 * x99
    x101 = x84 * x94
    x102 = x38 * x94
    x103 = x46 * (x102 + x43)
    x104 = x103 * x47
    x105 = x32 + x43
    x106 = x0 * (x60 + R[1])
    x107 = 2.0 * x97
    x108 = x38 * (x0 + x107)
    x109 = x106 + x108
    x110 = x109 * x48
    x111 = 0.3333333333333333 * x105
    x112 = x103 * x39
    x113 = x50 * x94
    x114 = x87 * x94
    x115 = x15 + x43
    x116 = 2.0 * x102
    x117 = x0 * (x59 + A[1] + R[1]) + x38 * (x0 + x116)
    x118 = x117 * x48
    x119 = x0 * (x107 + x116 + x18 + x61) + x109 * x81
    x120 = x119 * x41
    x121 = x39 * x9
    x122 = x117 * x50
    x123 = x87 * x9
    x124 = x28 * (x0 * (4.0 * x102 + x80) + x117 * x81)
    x125 = x36 + R[2]
    x126 = x125 * x28
    x127 = x125 * x84
    x128 = x125 * x37
    x129 = x128 + x43
    x130 = x129 * x46
    x131 = x130 * x78
    x132 = x125 * x50
    x133 = x125 * x87
    x134 = x125 * x52
    x135 = x46 * (x134 + x43)
    x136 = x135 * x47
    x137 = x135 * x39
    x138 = x0 * (x72 + R[2])
    x139 = 2.0 * x128
    x140 = x52 * (x0 + x139)
    x141 = x138 + x140
    x142 = x141 * x48
    x143 = 2.0 * x134
    x144 = x0 * (x71 + A[2] + R[2]) + x52 * (x0 + x143)
    x145 = x144 * x48
    x146 = x144 * x50
    x147 = x0 * (x139 + x143 + x18 + x73) + x141 * x91
    x148 = x147 * x41
    x149 = x28 * (x0 * (4.0 * x134 + x90) + x144 * x91)

    # 90 item(s)
    result[0, 0, 0] = numpy.sum(
        -x28 * (x0 * (2.0 * x10 + x14 + x17 + 2.0 * x3) + x21 * x9)
    )
    result[0, 0, 1] = numpy.sum(-x31 * x34)
    result[0, 0, 2] = numpy.sum(-x34 * x37)
    result[0, 1, 0] = numpy.sum(-x40 * x42)
    result[0, 1, 1] = numpy.sum(-x45 * x49)
    result[0, 1, 2] = numpy.sum(-x37 * x38 * x51)
    result[0, 2, 0] = numpy.sum(-x42 * x53)
    result[0, 2, 1] = numpy.sum(-x31 * x51 * x52)
    result[0, 2, 2] = numpy.sum(-x49 * x55)
    result[0, 3, 0] = numpy.sum(-x57 * x58)
    result[0, 3, 1] = numpy.sum(-x62 * x64)
    result[0, 3, 2] = numpy.sum(-x37 * x65 * x66)
    result[0, 4, 0] = numpy.sum(-x19 * x38 * x67)
    result[0, 4, 1] = numpy.sum(-x45 * x52 * x63)
    result[0, 4, 2] = numpy.sum(-x38 * x55 * x63)
    result[0, 5, 0] = numpy.sum(-x58 * x69)
    result[0, 5, 1] = numpy.sum(-x31 * x66 * x70)
    result[0, 5, 2] = numpy.sum(-x64 * x74)
    result[0, 6, 0] = numpy.sum(-x76 * x79)
    result[0, 6, 1] = numpy.sum(-x82 * x83)
    result[0, 6, 2] = numpy.sum(-x37 * x76 * x85)
    result[0, 7, 0] = numpy.sum(-x53 * x65 * x77)
    result[0, 7, 1] = numpy.sum(-x52 * x62 * x86)
    result[0, 7, 2] = numpy.sum(-x55 * x65 * x88)
    result[0, 8, 0] = numpy.sum(-x40 * x70 * x77)
    result[0, 8, 1] = numpy.sum(-x45 * x70 * x88)
    result[0, 8, 2] = numpy.sum(-x38 * x74 * x86)
    result[0, 9, 0] = numpy.sum(-x79 * x89)
    result[0, 9, 1] = numpy.sum(-x31 * x85 * x89)
    result[0, 9, 2] = numpy.sum(-x83 * x92)
    result[1, 0, 0] = numpy.sum(-x93 * x95)
    result[1, 0, 1] = numpy.sum(-x100 * x96)
    result[1, 0, 2] = numpy.sum(-x101 * x37 * x96)
    result[1, 1, 0] = numpy.sum(-x104 * x17)
    result[1, 1, 1] = numpy.sum(-x105 * x110)
    result[1, 1, 2] = numpy.sum(-x111 * x112 * x37)
    result[1, 2, 0] = numpy.sum(-x113 * x17 * x52)
    result[1, 2, 1] = numpy.sum(-x111 * x53 * x99)
    result[1, 2, 2] = numpy.sum(-x111 * x114 * x55)
    result[1, 3, 0] = numpy.sum(-x115 * x118)
    result[1, 3, 1] = numpy.sum(-x120 * x121)
    result[1, 3, 2] = numpy.sum(-x122 * x37 * x9)
    result[1, 4, 0] = numpy.sum(-x103 * x115 * x52)
    result[1, 4, 1] = numpy.sum(-x109 * x67 * x9)
    result[1, 4, 2] = numpy.sum(-x103 * x55 * x9)
    result[1, 5, 0] = numpy.sum(-x114 * x115 * x70)
    result[1, 5, 1] = numpy.sum(-x123 * x70 * x98)
    result[1, 5, 2] = numpy.sum(-x113 * x74 * x9)
    result[1, 6, 0] = numpy.sum(-x124 * x5)
    result[1, 6, 1] = numpy.sum(
        -x28 * (x0 * (2.0 * x106 + 2.0 * x108 + x117 + x62) + x119 * x38)
    )
    result[1, 6, 2] = numpy.sum(-x124 * x37)
    result[1, 7, 0] = numpy.sum(-x122 * x5 * x52)
    result[1, 7, 1] = numpy.sum(-x120 * x53)
    result[1, 7, 2] = numpy.sum(-x118 * x55)
    result[1, 8, 0] = numpy.sum(-x112 * x5 * x70)
    result[1, 8, 1] = numpy.sum(-x110 * x69)
    result[1, 8, 2] = numpy.sum(-x104 * x74)
    result[1, 9, 0] = numpy.sum(-x101 * x5 * x89)
    result[1, 9, 1] = numpy.sum(-x100 * x89)
    result[1, 9, 2] = numpy.sum(-x92 * x95)
    result[2, 0, 0] = numpy.sum(-x126 * x93)
    result[2, 0, 1] = numpy.sum(-x127 * x31 * x96)
    result[2, 0, 2] = numpy.sum(-x131 * x96)
    result[2, 1, 0] = numpy.sum(-x132 * x17 * x38)
    result[2, 1, 1] = numpy.sum(-x111 * x133 * x45)
    result[2, 1, 2] = numpy.sum(-x111 * x130 * x40)
    result[2, 2, 0] = numpy.sum(-x136 * x17)
    result[2, 2, 1] = numpy.sum(-x111 * x137 * x31)
    result[2, 2, 2] = numpy.sum(-x105 * x142)
    result[2, 3, 0] = numpy.sum(-x115 * x133 * x65)
    result[2, 3, 1] = numpy.sum(-x132 * x62 * x9)
    result[2, 3, 2] = numpy.sum(-x123 * x129 * x65)
    result[2, 4, 0] = numpy.sum(-x115 * x135 * x38)
    result[2, 4, 1] = numpy.sum(-x135 * x45 * x9)
    result[2, 4, 2] = numpy.sum(-x141 * x25 * x38 * x43 * x9)
    result[2, 5, 0] = numpy.sum(-x115 * x145)
    result[2, 5, 1] = numpy.sum(-x146 * x31 * x9)
    result[2, 5, 2] = numpy.sum(-x121 * x148)
    result[2, 6, 0] = numpy.sum(-x127 * x5 * x76)
    result[2, 6, 1] = numpy.sum(-x126 * x82)
    result[2, 6, 2] = numpy.sum(-x131 * x76)
    result[2, 7, 0] = numpy.sum(-x137 * x5 * x65)
    result[2, 7, 1] = numpy.sum(-x136 * x62)
    result[2, 7, 2] = numpy.sum(-x142 * x57)
    result[2, 8, 0] = numpy.sum(-x146 * x38 * x5)
    result[2, 8, 1] = numpy.sum(-x145 * x45)
    result[2, 8, 2] = numpy.sum(-x148 * x40)
    result[2, 9, 0] = numpy.sum(-x149 * x5)
    result[2, 9, 1] = numpy.sum(-x149 * x31)
    result[2, 9, 2] = numpy.sum(
        -x28 * (x0 * (2.0 * x138 + 2.0 * x140 + x144 + x74) + x147 * x52)
    )
    return result


def dipole3d_32(ax, da, A, bx, db, B, R):
    """Cartesian 3D (fd) dipole moment integrals.
    The origin is at R.

    Generated code; DO NOT modify by hand!"""

    result = numpy.zeros((3, 10, 6), dtype=float)

    x0 = (ax + bx) ** (-1.0)
    x1 = 3.0 * x0
    x2 = x0 * (ax * A[0] + bx * B[0])
    x3 = -x2
    x4 = x3 + A[0]
    x5 = x3 + B[0]
    x6 = x4 * x5
    x7 = 2.0 * x6
    x8 = x3 + R[0]
    x9 = x4 * x8
    x10 = 2.0 * x9
    x11 = x5 * x8
    x12 = 2.0 * x11
    x13 = x0 * (x1 + x10 + x12 + x7)
    x14 = -2.0 * x2
    x15 = x14 + B[0]
    x16 = x15 + R[0]
    x17 = x0 * x16
    x18 = x0 + x12
    x19 = x18 * x4
    x20 = x17 + x19
    x21 = 4.0 * x20
    x22 = x5**2
    x23 = x1 + 4.0 * x6
    x24 = x0 * (x15 + A[0])
    x25 = x0 + x7
    x26 = x25 * x5
    x27 = x24 + x26
    x28 = 2.0 * x4
    x29 = x0 * (2.0 * x22 + x23) + x27 * x28
    x30 = x18 * x5
    x31 = 2.0 * x19
    x32 = x13 + 2.0 * x20 * x5
    x33 = x0 * (x1 * x16 + x27 + x30 + x31) + x32 * x4
    x34 = 2.23606797749979
    x35 = ax * bx * x0
    x36 = (
        5.568327996831708
        * da
        * db
        * numpy.exp(-x35 * ((A[0] - B[0]) ** 2 + (A[1] - B[1]) ** 2 + (A[2] - B[2]) ** 2))
    )
    x37 = x0**1.5 * x36
    x38 = x34 * x37
    x39 = 0.008333333333333333 * x38
    x40 = x0 * (ax * A[1] + bx * B[1])
    x41 = -x40
    x42 = x41 + B[1]
    x43 = 3.872983346207417
    x44 = x42 * x43
    x45 = x0 * (x14 + A[0] + R[0]) + x4 * (x0 + x10)
    x46 = x25 * x4
    x47 = x24 + x46
    x48 = x13 + x20 * x28
    x49 = 0.01666666666666667 * x37
    x50 = x49 * (x0 * (2.0 * x17 + x31 + x45 + x47) + x4 * x48)
    x51 = x0 * (ax * A[2] + bx * B[2])
    x52 = -x51
    x53 = x52 + B[2]
    x54 = x43 * x53
    x55 = x4**2
    x56 = 2.0 * x55
    x57 = (
        0.01666666666666667 * x0 * (x1 + x56 + 4.0 * x9) + 0.01666666666666667 * x28 * x45
    )
    x58 = x42**2
    x59 = 0.5 * x0
    x60 = x0**1.5 * x36
    x61 = x60 * (x58 + x59)
    x62 = x34 * x61
    x63 = x37 * x44
    x64 = x53**2
    x65 = x60 * (x59 + x64)
    x66 = x34 * x65
    x67 = x41 + A[1]
    x68 = 0.08333333333333333 * x37
    x69 = x33 * x68
    x70 = x42 * x67
    x71 = x59 + x70
    x72 = 1.732050807568877
    x73 = 0.08333333333333333 * x60
    x74 = x72 * x73
    x75 = x48 * x74
    x76 = x53 * x72
    x77 = x48 * x68
    x78 = -2.0 * x40
    x79 = x78 + B[1]
    x80 = x0 * (x79 + A[1])
    x81 = 2.0 * x70
    x82 = x0 + x81
    x83 = x42 * x82
    x84 = x80 + x83
    x85 = x45 * x73
    x86 = x60 * x71
    x87 = 0.1666666666666667 * x45
    x88 = x72 * x87
    x89 = x52 + A[2]
    x90 = x72 * x89
    x91 = x53 * x89
    x92 = x59 + x91
    x93 = x60 * x92
    x94 = -2.0 * x51
    x95 = x94 + B[2]
    x96 = x0 * (x95 + A[2])
    x97 = 2.0 * x91
    x98 = x0 + x97
    x99 = x53 * x98
    x100 = x96 + x99
    x101 = x67**2
    x102 = x101 + x59
    x103 = x32 * x73
    x104 = x67 * x82
    x105 = x104 + x80
    x106 = x20 * x74
    x107 = 0.1666666666666667 * x60
    x108 = x102 * x107
    x109 = x1 + 4.0 * x70
    x110 = 2.0 * x67
    x111 = x0 * (x109 + 2.0 * x58) + x110 * x84
    x112 = x59 + x9
    x113 = x112 * x73
    x114 = x107 * x112
    x115 = 0.3333333333333333 * x112
    x116 = x68 * x90
    x117 = 0.5 * x20
    x118 = x114 * x72
    x119 = x89**2
    x120 = x119 + x59
    x121 = x107 * x120
    x122 = x121 * x72
    x123 = x89 * x98
    x124 = x123 + x96
    x125 = x1 + 4.0 * x91
    x126 = 2.0 * x89
    x127 = x0 * (x125 + 2.0 * x64) + x100 * x126
    x128 = x17 + x30
    x129 = x128 * x67
    x130 = 1.5 * x0
    x131 = x101 + x130
    x132 = x131 * x60
    x133 = 0.03333333333333333 * x34
    x134 = x132 * x133
    x135 = 2.0 * x101
    x136 = x0 * (x109 + x135) + x105 * x110
    x137 = x11 + x59
    x138 = 0.01666666666666667 * x60
    x139 = x138 * x43
    x140 = x137 * x139
    x141 = 0.06666666666666667 * x67
    x142 = x132 * x141
    x143 = 2.0 * x0
    x144 = x111 * x67 + x143 * (x104 + 2.0 * x80 + x83)
    x145 = 0.01666666666666667 * x38
    x146 = x145 * x8
    x147 = x49 * x8
    x148 = x128 * x89
    x149 = x137 * x72
    x150 = x107 * x149
    x151 = 0.3333333333333333 * x149
    x152 = x68 * x8
    x153 = x72 * x93
    x154 = 0.1666666666666667 * x8
    x155 = x124 * x72
    x156 = x119 + x130
    x157 = x133 * x60
    x158 = x156 * x157
    x159 = x156 * x89
    x160 = 0.06666666666666667 * x60
    x161 = x160 * x44
    x162 = 2.0 * x119
    x163 = x0 * (x125 + x162) + x124 * x126
    x164 = 0.06666666666666667 * x62
    x165 = x127 * x89 + x143 * (x123 + 2.0 * x96 + x99)
    x166 = x143 * (2.0 * x24 + x26 + x46) + x29 * x4
    x167 = x41 + R[1]
    x168 = x145 * x167
    x169 = x0 * (x23 + x56) + x28 * x47
    x170 = x167 * x42
    x171 = x170 + x59
    x172 = x139 * x171
    x173 = x167 * x49
    x174 = x79 + R[1]
    x175 = x0 * x174
    x176 = 2.0 * x170
    x177 = x0 + x176
    x178 = x177 * x42
    x179 = x175 + x178
    x180 = x179 * x4
    x181 = x130 + x55
    x182 = x157 * x181
    x183 = x171 * x4
    x184 = x181 * x4
    x185 = x167 * x67
    x186 = x185 + x59
    x187 = x186 * x73
    x188 = x177 * x67
    x189 = x175 + x188
    x190 = x189 * x74
    x191 = x107 * x47
    x192 = x55 + x59
    x193 = 2.0 * x185
    x194 = x0 * (x1 + x176 + x193 + x81)
    x195 = x189 * x42
    x196 = x194 + 2.0 * x195
    x197 = x196 * x73
    x198 = x107 * x192
    x199 = 0.3333333333333333 * x186
    x200 = x167 * x68
    x201 = 0.1666666666666667 * x153
    x202 = x179 * x89
    x203 = 0.3333333333333333 * x171
    x204 = x0 * (x78 + A[1] + R[1]) + x67 * (x0 + x193)
    x205 = x204 * x73
    x206 = x59 + x6
    x207 = x110 * x189 + x194
    x208 = x207 * x74
    x209 = x107 * x206
    x210 = 2.0 * x188
    x211 = x0 * (x1 * x174 + x178 + x210 + x84) + x196 * x67
    x212 = x211 * x68
    x213 = 0.1666666666666667 * x4
    x214 = x107 * x186
    x215 = 0.5 * x189
    x216 = x206 * x60
    x217 = x4 * x72
    x218 = x216 * x72
    x219 = x0 * (x1 + x135 + 4.0 * x185) + x110 * x204
    x220 = x22 + x59
    x221 = x220 * x34
    x222 = x138 * x221
    x223 = x49 * (x0 * (x105 + 2.0 * x175 + x204 + x210) + x207 * x67)
    x224 = x43 * x5
    x225 = 0.01666666666666667 * x219
    x226 = x107 * x220
    x227 = x220 * x60
    x228 = x159 * x160
    x229 = x52 + R[2]
    x230 = x145 * x229
    x231 = x229 * x49
    x232 = x229 * x53
    x233 = x232 + x59
    x234 = x139 * x233
    x235 = x95 + R[2]
    x236 = x0 * x235
    x237 = 2.0 * x232
    x238 = x0 + x237
    x239 = x238 * x53
    x240 = x236 + x239
    x241 = x240 * x4
    x242 = x229 * x68
    x243 = x72 * x86
    x244 = 0.1666666666666667 * x243
    x245 = x191 * x72
    x246 = x233 * x67
    x247 = 0.3333333333333333 * x233
    x248 = x240 * x67
    x249 = x229 * x89
    x250 = x249 + x59
    x251 = x250 * x73
    x252 = x238 * x89
    x253 = x236 + x252
    x254 = x253 * x74
    x255 = 0.3333333333333333 * x250
    x256 = x42 * x72
    x257 = 2.0 * x249
    x258 = x0 * (x1 + x237 + x257 + x97)
    x259 = x253 * x53
    x260 = x258 + 2.0 * x259
    x261 = x260 * x73
    x262 = x105 * x72
    x263 = x107 * x217
    x264 = x107 * x250
    x265 = x67 * x72
    x266 = 0.5 * x253
    x267 = x217 * x68
    x268 = x0 * (x94 + A[2] + R[2]) + x89 * (x0 + x257)
    x269 = x268 * x73
    x270 = x126 * x253 + x258
    x271 = x270 * x74
    x272 = 2.0 * x252
    x273 = x0 * (x1 * x235 + x100 + x239 + x272) + x260 * x89
    x274 = x273 * x68
    x275 = x0 * (x1 + x162 + 4.0 * x249) + x126 * x268
    x276 = 0.01666666666666667 * x275
    x277 = x49 * (x0 * (x124 + 2.0 * x236 + x268 + x272) + x270 * x89)

    # 180 item(s)
    result[0, 0, 0] = numpy.sum(
        x39 * (x0 * (4.0 * x13 + x21 * x4 + x21 * x5 + x29) + x28 * x33)
    )
    result[0, 0, 1] = numpy.sum(x44 * x50)
    result[0, 0, 2] = numpy.sum(x50 * x54)
    result[0, 0, 3] = numpy.sum(x57 * x62)
    result[0, 0, 4] = numpy.sum(x53 * x57 * x63)
    result[0, 0, 5] = numpy.sum(x57 * x66)
    result[0, 1, 0] = numpy.sum(x67 * x69)
    result[0, 1, 1] = numpy.sum(x71 * x75)
    result[0, 1, 2] = numpy.sum(x67 * x76 * x77)
    result[0, 1, 3] = numpy.sum(x84 * x85)
    result[0, 1, 4] = numpy.sum(x53 * x86 * x88)
    result[0, 1, 5] = numpy.sum(x65 * x67 * x87)
    result[0, 2, 0] = numpy.sum(x69 * x89)
    result[0, 2, 1] = numpy.sum(x42 * x77 * x90)
    result[0, 2, 2] = numpy.sum(x75 * x92)
    result[0, 2, 3] = numpy.sum(x61 * x87 * x89)
    result[0, 2, 4] = numpy.sum(x42 * x88 * x93)
    result[0, 2, 5] = numpy.sum(x100 * x85)
    result[0, 3, 0] = numpy.sum(x102 * x103)
    result[0, 3, 1] = numpy.sum(x105 * x106)
    result[0, 3, 2] = numpy.sum(x108 * x20 * x76)
    result[0, 3, 3] = numpy.sum(x111 * x113)
    result[0, 3, 4] = numpy.sum(x105 * x114 * x76)
    result[0, 3, 5] = numpy.sum(x102 * x115 * x65)
    result[0, 4, 0] = numpy.sum(x116 * x32 * x67)
    result[0, 4, 1] = numpy.sum(x117 * x86 * x89)
    result[0, 4, 2] = numpy.sum(x117 * x67 * x93)
    result[0, 4, 3] = numpy.sum(x118 * x84 * x89)
    result[0, 4, 4] = numpy.sum(x112 * x71 * x93)
    result[0, 4, 5] = numpy.sum(x100 * x118 * x67)
    result[0, 5, 0] = numpy.sum(x103 * x120)
    result[0, 5, 1] = numpy.sum(x122 * x20 * x42)
    result[0, 5, 2] = numpy.sum(x106 * x124)
    result[0, 5, 3] = numpy.sum(x115 * x120 * x61)
    result[0, 5, 4] = numpy.sum(x118 * x124 * x42)
    result[0, 5, 5] = numpy.sum(x113 * x127)
    result[0, 6, 0] = numpy.sum(x129 * x134)
    result[0, 6, 1] = numpy.sum(x136 * x140)
    result[0, 6, 2] = numpy.sum(x137 * x142 * x54)
    result[0, 6, 3] = numpy.sum(x144 * x146)
    result[0, 6, 4] = numpy.sum(x136 * x147 * x54)
    result[0, 6, 5] = numpy.sum(x131 * x141 * x66 * x8)
    result[0, 7, 0] = numpy.sum(x108 * x148)
    result[0, 7, 1] = numpy.sum(x105 * x150 * x89)
    result[0, 7, 2] = numpy.sum(x102 * x151 * x93)
    result[0, 7, 3] = numpy.sum(x111 * x152 * x89)
    result[0, 7, 4] = numpy.sum(x105 * x153 * x154)
    result[0, 7, 5] = numpy.sum(x100 * x108 * x8)
    result[0, 8, 0] = numpy.sum(x121 * x129)
    result[0, 8, 1] = numpy.sum(x120 * x151 * x86)
    result[0, 8, 2] = numpy.sum(x124 * x150 * x67)
    result[0, 8, 3] = numpy.sum(x121 * x8 * x84)
    result[0, 8, 4] = numpy.sum(x154 * x155 * x86)
    result[0, 8, 5] = numpy.sum(x127 * x152 * x67)
    result[0, 9, 0] = numpy.sum(x148 * x158)
    result[0, 9, 1] = numpy.sum(x137 * x159 * x161)
    result[0, 9, 2] = numpy.sum(x140 * x163)
    result[0, 9, 3] = numpy.sum(x159 * x164 * x8)
    result[0, 9, 4] = numpy.sum(x147 * x163 * x44)
    result[0, 9, 5] = numpy.sum(x146 * x165)
    result[1, 0, 0] = numpy.sum(x166 * x168)
    result[1, 0, 1] = numpy.sum(x169 * x172)
    result[1, 0, 2] = numpy.sum(x169 * x173 * x54)
    result[1, 0, 3] = numpy.sum(x180 * x182)
    result[1, 0, 4] = numpy.sum(x160 * x181 * x183 * x54)
    result[1, 0, 5] = numpy.sum(0.06666666666666667 * x167 * x184 * x66)
    result[1, 1, 0] = numpy.sum(x187 * x29)
    result[1, 1, 1] = numpy.sum(x190 * x47)
    result[1, 1, 2] = numpy.sum(x186 * x191 * x76)
    result[1, 1, 3] = numpy.sum(x192 * x197)
    result[1, 1, 4] = numpy.sum(x189 * x198 * x76)
    result[1, 1, 5] = numpy.sum(x192 * x199 * x65)
    result[1, 2, 0] = numpy.sum(x200 * x29 * x89)
    result[1, 2, 1] = numpy.sum(x171 * x191 * x90)
    result[1, 2, 2] = numpy.sum(x167 * x201 * x47)
    result[1, 2, 3] = numpy.sum(x198 * x202)
    result[1, 2, 4] = numpy.sum(x153 * x192 * x203)
    result[1, 2, 5] = numpy.sum(x100 * x167 * x198)
    result[1, 3, 0] = numpy.sum(x205 * x27)
    result[1, 3, 1] = numpy.sum(x206 * x208)
    result[1, 3, 2] = numpy.sum(x204 * x209 * x76)
    result[1, 3, 3] = numpy.sum(x212 * x4)
    result[1, 3, 4] = numpy.sum(x207 * x4 * x68 * x76)
    result[1, 3, 5] = numpy.sum(x204 * x213 * x65)
    result[1, 4, 0] = numpy.sum(x214 * x27 * x90)
    result[1, 4, 1] = numpy.sum(x215 * x216 * x89)
    result[1, 4, 2] = numpy.sum(x186 * x206 * x93)
    result[1, 4, 3] = numpy.sum(x116 * x196 * x4)
    result[1, 4, 4] = numpy.sum(x215 * x4 * x93)
    result[1, 4, 5] = numpy.sum(x100 * x214 * x217)
    result[1, 5, 0] = numpy.sum(x121 * x167 * x27)
    result[1, 5, 1] = numpy.sum(x120 * x203 * x218)
    result[1, 5, 2] = numpy.sum(x155 * x167 * x209)
    result[1, 5, 3] = numpy.sum(x121 * x180)
    result[1, 5, 4] = numpy.sum(x107 * x155 * x183)
    result[1, 5, 5] = numpy.sum(x127 * x200 * x4)
    result[1, 6, 0] = numpy.sum(x219 * x222)
    result[1, 6, 1] = numpy.sum(x223 * x224)
    result[1, 6, 2] = numpy.sum(x225 * x37 * x5 * x54)
    result[1, 6, 3] = numpy.sum(
        x39 * (x0 * (x111 + 4.0 * x189 * x67 + 4.0 * x194 + 4.0 * x195) + x110 * x211)
    )
    result[1, 6, 4] = numpy.sum(x223 * x54)
    result[1, 6, 5] = numpy.sum(x225 * x66)
    result[1, 7, 0] = numpy.sum(x204 * x226 * x89)
    result[1, 7, 1] = numpy.sum(x116 * x207 * x5)
    result[1, 7, 2] = numpy.sum(x201 * x204 * x5)
    result[1, 7, 3] = numpy.sum(x212 * x89)
    result[1, 7, 4] = numpy.sum(x208 * x92)
    result[1, 7, 5] = numpy.sum(x100 * x205)
    result[1, 8, 0] = numpy.sum(x120 * x199 * x227)
    result[1, 8, 1] = numpy.sum(x122 * x189 * x5)
    result[1, 8, 2] = numpy.sum(x155 * x214 * x5)
    result[1, 8, 3] = numpy.sum(x120 * x197)
    result[1, 8, 4] = numpy.sum(x124 * x190)
    result[1, 8, 5] = numpy.sum(x127 * x187)
    result[1, 9, 0] = numpy.sum(x167 * x221 * x228)
    result[1, 9, 1] = numpy.sum(x171 * x224 * x228)
    result[1, 9, 2] = numpy.sum(x163 * x173 * x224)
    result[1, 9, 3] = numpy.sum(x158 * x202)
    result[1, 9, 4] = numpy.sum(x163 * x172)
    result[1, 9, 5] = numpy.sum(x165 * x168)
    result[2, 0, 0] = numpy.sum(x166 * x230)
    result[2, 0, 1] = numpy.sum(x169 * x231 * x44)
    result[2, 0, 2] = numpy.sum(x169 * x234)
    result[2, 0, 3] = numpy.sum(x164 * x184 * x229)
    result[2, 0, 4] = numpy.sum(x161 * x184 * x233)
    result[2, 0, 5] = numpy.sum(x182 * x241)
    result[2, 1, 0] = numpy.sum(x242 * x29 * x67)
    result[2, 1, 1] = numpy.sum(x229 * x244 * x47)
    result[2, 1, 2] = numpy.sum(x245 * x246)
    result[2, 1, 3] = numpy.sum(x198 * x229 * x84)
    result[2, 1, 4] = numpy.sum(x192 * x243 * x247)
    result[2, 1, 5] = numpy.sum(x198 * x248)
    result[2, 2, 0] = numpy.sum(x251 * x29)
    result[2, 2, 1] = numpy.sum(x245 * x250 * x42)
    result[2, 2, 2] = numpy.sum(x254 * x47)
    result[2, 2, 3] = numpy.sum(x192 * x255 * x61)
    result[2, 2, 4] = numpy.sum(x198 * x253 * x256)
    result[2, 2, 5] = numpy.sum(x192 * x261)
    result[2, 3, 0] = numpy.sum(x108 * x229 * x27)
    result[2, 3, 1] = numpy.sum(x209 * x229 * x262)
    result[2, 3, 2] = numpy.sum(x102 * x218 * x247)
    result[2, 3, 3] = numpy.sum(x111 * x242 * x4)
    result[2, 3, 4] = numpy.sum(x105 * x233 * x263)
    result[2, 3, 5] = numpy.sum(x108 * x241)
    result[2, 4, 0] = numpy.sum(x264 * x265 * x27)
    result[2, 4, 1] = numpy.sum(x206 * x250 * x86)
    result[2, 4, 2] = numpy.sum(x216 * x266 * x67)
    result[2, 4, 3] = numpy.sum(x250 * x263 * x84)
    result[2, 4, 4] = numpy.sum(x266 * x4 * x86)
    result[2, 4, 5] = numpy.sum(x260 * x267 * x67)
    result[2, 5, 0] = numpy.sum(x269 * x27)
    result[2, 5, 1] = numpy.sum(x209 * x256 * x268)
    result[2, 5, 2] = numpy.sum(x206 * x271)
    result[2, 5, 3] = numpy.sum(x213 * x268 * x61)
    result[2, 5, 4] = numpy.sum(x267 * x270 * x42)
    result[2, 5, 5] = numpy.sum(x274 * x4)
    result[2, 6, 0] = numpy.sum(x142 * x221 * x229)
    result[2, 6, 1] = numpy.sum(x136 * x224 * x231)
    result[2, 6, 2] = numpy.sum(0.06666666666666667 * x132 * x224 * x246)
    result[2, 6, 3] = numpy.sum(x144 * x230)
    result[2, 6, 4] = numpy.sum(x136 * x234)
    result[2, 6, 5] = numpy.sum(x134 * x248)
    result[2, 7, 0] = numpy.sum(x102 * x227 * x255)
    result[2, 7, 1] = numpy.sum(x262 * x264 * x5)
    result[2, 7, 2] = numpy.sum(x108 * x253 * x5 * x72)
    result[2, 7, 3] = numpy.sum(x111 * x251)
    result[2, 7, 4] = numpy.sum(x105 * x254)
    result[2, 7, 5] = numpy.sum(x102 * x261)
    result[2, 8, 0] = numpy.sum(x226 * x268 * x67)
    result[2, 8, 1] = numpy.sum(x244 * x268 * x5)
    result[2, 8, 2] = numpy.sum(x265 * x270 * x5 * x68)
    result[2, 8, 3] = numpy.sum(x269 * x84)
    result[2, 8, 4] = numpy.sum(x271 * x71)
    result[2, 8, 5] = numpy.sum(x274 * x67)
    result[2, 9, 0] = numpy.sum(x222 * x275)
    result[2, 9, 1] = numpy.sum(x276 * x5 * x63)
    result[2, 9, 2] = numpy.sum(x224 * x277)
    result[2, 9, 3] = numpy.sum(x276 * x62)
    result[2, 9, 4] = numpy.sum(x277 * x44)
    result[2, 9, 5] = numpy.sum(
        x39 * (x0 * (x127 + 4.0 * x253 * x89 + 4.0 * x258 + 4.0 * x259) + x126 * x273)
    )
    return result


def dipole3d_33(ax, da, A, bx, db, B, R):
    """Cartesian 3D (ff) dipole moment integrals.
    The origin is at R.

    Generated code; DO NOT modify by hand!"""

    result = numpy.zeros((3, 10, 10), dtype=float)

    x0 = (ax + bx) ** (-1.0)
    x1 = 3.0 * x0
    x2 = x0 * (ax * A[0] + bx * B[0])
    x3 = -x2
    x4 = x3 + A[0]
    x5 = x3 + B[0]
    x6 = x4 * x5
    x7 = 2.0 * x6
    x8 = x3 + R[0]
    x9 = x4 * x8
    x10 = 2.0 * x9
    x11 = x5 * x8
    x12 = 2.0 * x11
    x13 = x0 * (x1 + x10 + x12 + x7)
    x14 = -2.0 * x2
    x15 = x14 + B[0]
    x16 = x15 + R[0]
    x17 = x0 * x16
    x18 = x0 + x12
    x19 = x18 * x4
    x20 = x17 + x19
    x21 = x20 * x5
    x22 = x13 + 2.0 * x21
    x23 = x22 * x5
    x24 = x22 * x4
    x25 = x18 * x5
    x26 = 2.0 * x19
    x27 = x0 * (x15 + A[0])
    x28 = x0 + x7
    x29 = x28 * x5
    x30 = x27 + x29
    x31 = x0 * (x1 * x16 + x25 + x26 + x30)
    x32 = 4.0 * x6
    x33 = x5**2
    x34 = x1 + 2.0 * x33
    x35 = x0 * (x32 + x34)
    x36 = 2.0 * x4
    x37 = x30 * x36 + x35
    x38 = x28 * x4
    x39 = 2.0 * x0
    x40 = x39 * (2.0 * x27 + x29 + x38)
    x41 = x37 * x5 + x40
    x42 = x0 * (4.0 * x13 + 4.0 * x20 * x4 + 4.0 * x21 + x37)
    x43 = x24 + x31
    x44 = 2.0 * x5
    x45 = x42 + x43 * x44
    x46 = ax * bx * x0
    x47 = (
        5.568327996831708
        * da
        * db
        * numpy.exp(-x46 * ((A[0] - B[0]) ** 2 + (A[1] - B[1]) ** 2 + (A[2] - B[2]) ** 2))
    )
    x48 = 0.008333333333333333 * x47
    x49 = x0**1.5
    x50 = x48 * x49
    x51 = x0 * (ax * A[1] + bx * B[1])
    x52 = -x51
    x53 = x52 + B[1]
    x54 = 2.23606797749979
    x55 = x50 * x54
    x56 = x55 * (x36 * x43 + x42)
    x57 = x0 * (ax * A[2] + bx * B[2])
    x58 = -x57
    x59 = x58 + B[2]
    x60 = x53**2
    x61 = 0.5 * x0
    x62 = x60 + x61
    x63 = x0 * (x14 + A[0] + R[0]) + x4 * (x0 + x10)
    x64 = x27 + x38
    x65 = x13 + x20 * x36
    x66 = x0 * (2.0 * x17 + x26 + x63 + x64) + x4 * x65
    x67 = x0**1.5
    x68 = x47 * x67
    x69 = 0.01666666666666667 * x68
    x70 = x54 * x69
    x71 = x66 * x70
    x72 = 3.872983346207417
    x73 = x47 * x49
    x74 = 0.01666666666666667 * x73
    x75 = x72 * x74
    x76 = x59 * x75
    x77 = x59**2
    x78 = x61 + x77
    x79 = x4**2
    x80 = x1 + 2.0 * x79
    x81 = x0 * (x80 + 4.0 * x9) + x36 * x63
    x82 = x69 * x81
    x83 = 1.5 * x0
    x84 = x53 * (x60 + x83)
    x85 = x70 * x81
    x86 = x59 * (x77 + x83)
    x87 = x52 + A[1]
    x88 = x45 * x55
    x89 = x53 * x87
    x90 = x61 + x89
    x91 = 0.08333333333333333 * x68
    x92 = x43 * x91
    x93 = 0.08333333333333333 * x73
    x94 = x43 * x93
    x95 = -2.0 * x51
    x96 = x95 + B[1]
    x97 = x0 * (x96 + A[1])
    x98 = 2.0 * x89
    x99 = x0 + x98
    x100 = x53 * x99
    x101 = x100 + x97
    x102 = 0.04166666666666667 * x68
    x103 = x102 * x65
    x104 = 1.732050807568877
    x105 = x65 * x91
    x106 = x104 * x105
    x107 = x78 * x87
    x108 = 2.0 * x60
    x109 = x1 + 4.0 * x89
    x110 = x0 * (x108 + x109)
    x111 = 2.0 * x101
    x112 = x110 + x111 * x53
    x113 = x54 * x63
    x114 = x48 * x67
    x115 = x113 * x114
    x116 = x63 * x91
    x117 = x68 * x90
    x118 = 0.1666666666666667 * x63
    x119 = 0.03333333333333333 * x68
    x120 = x113 * x119
    x121 = x58 + A[2]
    x122 = x121 * x59
    x123 = x122 + x61
    x124 = x121 * x62
    x125 = -2.0 * x57
    x126 = x125 + B[2]
    x127 = x0 * (x126 + A[2])
    x128 = 2.0 * x122
    x129 = x0 + x128
    x130 = x129 * x59
    x131 = x127 + x130
    x132 = x62 * x68
    x133 = 2.0 * x77
    x134 = x1 + 4.0 * x122
    x135 = x0 * (x133 + x134)
    x136 = 2.0 * x131
    x137 = x135 + x136 * x59
    x138 = x87**2
    x139 = x138 + x61
    x140 = x23 + x31
    x141 = x140 * x70
    x142 = x87 * x99
    x143 = x142 + x97
    x144 = x102 * x22
    x145 = x59 * x91
    x146 = x110 + x111 * x87
    x147 = x102 * x20
    x148 = x104 * x20
    x149 = 0.1666666666666667 * x20
    x150 = x139 * x68
    x151 = x39 * (x100 + x142 + 2.0 * x97)
    x152 = x146 * x53 + x151
    x153 = x61 + x9
    x154 = x153 * x70
    x155 = 0.1666666666666667 * x153
    x156 = x68 * x78
    x157 = 0.06666666666666667 * x54
    x158 = x153 * x157
    x159 = x121 * x75
    x160 = x121 * x91
    x161 = x104 * x22
    x162 = x87 * x91
    x163 = 0.5 * x123
    x164 = x69 * x72
    x165 = x153 * x164
    x166 = x104 * x155
    x167 = x121**2
    x168 = x167 + x61
    x169 = x53 * x91
    x170 = x121 * x129
    x171 = x127 + x170
    x172 = x121 * x136 + x135
    x173 = x68 * x84
    x174 = x39 * (2.0 * x127 + x130 + x170)
    x175 = x172 * x59 + x174
    x176 = x17 + x25
    x177 = x0 * (4.0 * x11 + x34) + x176 * x44
    x178 = x177 * x69
    x179 = x138 + x83
    x180 = x179 * x87
    x181 = 2.0 * x138
    x182 = 2.0 * x87
    x183 = x0 * (x109 + x181) + x143 * x182
    x184 = x114 * x54
    x185 = x176 * x184
    x186 = x54 * x59
    x187 = x119 * x176
    x188 = x146 * x87 + x151
    x189 = x11 + x61
    x190 = x189 * x70
    x191 = x164 * x189
    x192 = x157 * x68
    x193 = x189 * x192
    x194 = 4.0 * x53
    x195 = x0 * (x101 * x194 + 6.0 * x101 * x87 + 5.0 * x110) + x152 * x182
    x196 = x50 * x8
    x197 = x74 * x8
    x198 = x70 * x8
    x199 = 0.06666666666666667 * x8
    x200 = x68 * x86
    x201 = x177 * x70
    x202 = 0.1666666666666667 * x150
    x203 = x104 * x189
    x204 = 0.1666666666666667 * x68
    x205 = x123 * x204
    x206 = x197 * x54
    x207 = x8 * x91
    x208 = 0.1666666666666667 * x168
    x209 = x208 * x68
    x210 = 0.1666666666666667 * x117
    x211 = x167 + x83
    x212 = x121 * x211
    x213 = x212 * x54
    x214 = 2.0 * x167
    x215 = 2.0 * x121
    x216 = x0 * (x134 + x214) + x171 * x215
    x217 = x121 * x172 + x174
    x218 = 4.0 * x59
    x219 = x0 * (6.0 * x121 * x131 + x131 * x218 + 5.0 * x135) + x175 * x215
    x220 = x0 * (6.0 * x30 * x4 + 4.0 * x30 * x5 + 5.0 * x35) + x36 * x41
    x221 = x52 + R[1]
    x222 = x221 * x50
    x223 = x37 * x4 + x40
    x224 = x221 * x53
    x225 = x224 + x61
    x226 = x225 * x70
    x227 = x221 * x74
    x228 = x0 * (x32 + x80) + x36 * x64
    x229 = x96 + R[1]
    x230 = x0 * x229
    x231 = 2.0 * x224
    x232 = x0 + x231
    x233 = x232 * x53
    x234 = x230 + x233
    x235 = x184 * x234
    x236 = x164 * x225
    x237 = x221 * x70
    x238 = 2.0 * x53
    x239 = x0 * (x1 + x108 + 4.0 * x224) + x234 * x238
    x240 = x239 * x69
    x241 = x4 * (x79 + x83)
    x242 = x119 * x234
    x243 = x157 * x241
    x244 = 0.06666666666666667 * x221
    x245 = x221 * x87
    x246 = x245 + x61
    x247 = x246 * x70
    x248 = x232 * x87
    x249 = x230 + x248
    x250 = x102 * x249
    x251 = 2.0 * x245
    x252 = x0 * (x1 + x231 + x251 + x98)
    x253 = x238 * x249 + x252
    x254 = x102 * x253
    x255 = x104 * x64
    x256 = 0.1666666666666667 * x156
    x257 = x61 + x79
    x258 = 2.0 * x248
    x259 = x0 * (x1 * x229 + x101 + x233 + x258)
    x260 = x253 * x53
    x261 = x259 + x260
    x262 = x261 * x70
    x263 = x192 * x246
    x264 = x227 * x54
    x265 = x221 * x91
    x266 = x239 * x70
    x267 = x204 * x257
    x268 = x30 * x44 + x35
    x269 = x0 * (x95 + A[1] + R[1]) + x87 * (x0 + x251)
    x270 = x184 * x269
    x271 = x182 * x249 + x252
    x272 = x102 * x271
    x273 = x6 + x61
    x274 = x253 * x87
    x275 = x259 + x274
    x276 = x275 * x91
    x277 = x104 * x273
    x278 = x0 * (x146 + x194 * x249 + 4.0 * x249 * x87 + 4.0 * x252)
    x279 = x238 * x275 + x278
    x280 = x279 * x55
    x281 = x275 * x93
    x282 = x4 * x91
    x283 = x119 * x54
    x284 = x269 * x283
    x285 = x164 * x246
    x286 = x104 * x30
    x287 = x204 * x277
    x288 = x104 * x282
    x289 = x0 * (x1 + x181 + 4.0 * x245) + x182 * x269
    x290 = x289 * x69
    x291 = x5 * (x33 + x83)
    x292 = x33 + x61
    x293 = x0 * (x143 + 2.0 * x230 + x258 + x269) + x271 * x87
    x294 = x293 * x70
    x295 = x289 * x70
    x296 = x55 * (x182 * x275 + x278)
    x297 = x204 * x292
    x298 = x5 * x91
    x299 = x104 * x298
    x300 = x291 * x68
    x301 = x192 * x292
    x302 = x58 + R[2]
    x303 = x302 * x50
    x304 = x302 * x54 * x74
    x305 = x302 * x59
    x306 = x305 + x61
    x307 = x306 * x70
    x308 = x302 * x70
    x309 = x164 * x306
    x310 = x126 + R[2]
    x311 = x0 * x310
    x312 = 2.0 * x305
    x313 = x0 + x312
    x314 = x313 * x59
    x315 = x311 + x314
    x316 = x184 * x315
    x317 = 0.06666666666666667 * x302
    x318 = x283 * x315
    x319 = 2.0 * x59
    x320 = x0 * (x1 + x133 + 4.0 * x305) + x315 * x319
    x321 = x320 * x69
    x322 = x302 * x91
    x323 = 0.1666666666666667 * x257
    x324 = x320 * x70
    x325 = x121 * x302
    x326 = x325 + x61
    x327 = x326 * x70
    x328 = x121 * x313
    x329 = x311 + x328
    x330 = x102 * x329
    x331 = 0.1666666666666667 * x132
    x332 = 2.0 * x325
    x333 = x0 * (x1 + x128 + x312 + x332)
    x334 = x319 * x329 + x333
    x335 = x102 * x334
    x336 = x157 * x326
    x337 = 2.0 * x328
    x338 = x0 * (x1 * x310 + x131 + x314 + x337)
    x339 = x334 * x59
    x340 = x338 + x339
    x341 = x340 * x70
    x342 = x164 * x326
    x343 = x0 * (x125 + A[2] + R[2]) + x121 * (x0 + x332)
    x344 = x184 * x343
    x345 = x215 * x329 + x333
    x346 = x102 * x345
    x347 = x121 * x334
    x348 = x338 + x347
    x349 = x348 * x91
    x350 = x283 * x343
    x351 = x348 * x93
    x352 = x0 * (4.0 * x121 * x329 + x172 + x218 * x329 + 4.0 * x333)
    x353 = x319 * x348 + x352
    x354 = x353 * x55
    x355 = x0 * (x1 + x214 + 4.0 * x325) + x215 * x343
    x356 = x355 * x69
    x357 = x355 * x70
    x358 = x0 * (x171 + 2.0 * x311 + x337 + x343) + x121 * x345
    x359 = x358 * x70
    x360 = x55 * (x215 * x348 + x352)

    # 300 item(s)
    result[0, 0, 0] = numpy.sum(
        -x50 * (x0 * (2.0 * x23 + 3.0 * x24 + 5.0 * x31 + x41) + x4 * x45)
    )
    result[0, 0, 1] = numpy.sum(-x53 * x56)
    result[0, 0, 2] = numpy.sum(-x56 * x59)
    result[0, 0, 3] = numpy.sum(-x62 * x71)
    result[0, 0, 4] = numpy.sum(-x53 * x66 * x76)
    result[0, 0, 5] = numpy.sum(-x71 * x78)
    result[0, 0, 6] = numpy.sum(-x82 * x84)
    result[0, 0, 7] = numpy.sum(-x59 * x62 * x85)
    result[0, 0, 8] = numpy.sum(-x53 * x78 * x85)
    result[0, 0, 9] = numpy.sum(-x82 * x86)
    result[0, 1, 0] = numpy.sum(-x87 * x88)
    result[0, 1, 1] = numpy.sum(-x90 * x92)
    result[0, 1, 2] = numpy.sum(-x59 * x87 * x94)
    result[0, 1, 3] = numpy.sum(-x101 * x103)
    result[0, 1, 4] = numpy.sum(-x106 * x59 * x90)
    result[0, 1, 5] = numpy.sum(-x105 * x107)
    result[0, 1, 6] = numpy.sum(-x112 * x115)
    result[0, 1, 7] = numpy.sum(-x101 * x116 * x59)
    result[0, 1, 8] = numpy.sum(-x117 * x118 * x78)
    result[0, 1, 9] = numpy.sum(-x120 * x86 * x87)
    result[0, 2, 0] = numpy.sum(-x121 * x88)
    result[0, 2, 1] = numpy.sum(-x121 * x53 * x94)
    result[0, 2, 2] = numpy.sum(-x123 * x92)
    result[0, 2, 3] = numpy.sum(-x105 * x124)
    result[0, 2, 4] = numpy.sum(-x106 * x123 * x53)
    result[0, 2, 5] = numpy.sum(-x103 * x131)
    result[0, 2, 6] = numpy.sum(-x120 * x121 * x84)
    result[0, 2, 7] = numpy.sum(-x118 * x123 * x132)
    result[0, 2, 8] = numpy.sum(-x116 * x131 * x53)
    result[0, 2, 9] = numpy.sum(-x115 * x137)
    result[0, 3, 0] = numpy.sum(-x139 * x141)
    result[0, 3, 1] = numpy.sum(-x143 * x144)
    result[0, 3, 2] = numpy.sum(-x139 * x145 * x22)
    result[0, 3, 3] = numpy.sum(-x146 * x147)
    result[0, 3, 4] = numpy.sum(-x143 * x145 * x148)
    result[0, 3, 5] = numpy.sum(-x149 * x150 * x78)
    result[0, 3, 6] = numpy.sum(-x152 * x154)
    result[0, 3, 7] = numpy.sum(-x145 * x146 * x153)
    result[0, 3, 8] = numpy.sum(-x143 * x155 * x156)
    result[0, 3, 9] = numpy.sum(-x150 * x158 * x86)
    result[0, 4, 0] = numpy.sum(-x140 * x159 * x87)
    result[0, 4, 1] = numpy.sum(-x160 * x161 * x90)
    result[0, 4, 2] = numpy.sum(-x123 * x161 * x162)
    result[0, 4, 3] = numpy.sum(-x101 * x148 * x160)
    result[0, 4, 4] = numpy.sum(-x117 * x163 * x20)
    result[0, 4, 5] = numpy.sum(-x131 * x148 * x162)
    result[0, 4, 6] = numpy.sum(-x112 * x121 * x165)
    result[0, 4, 7] = numpy.sum(-x101 * x123 * x166 * x68)
    result[0, 4, 8] = numpy.sum(-x117 * x131 * x166)
    result[0, 4, 9] = numpy.sum(-x137 * x165 * x87)
    result[0, 5, 0] = numpy.sum(-x141 * x168)
    result[0, 5, 1] = numpy.sum(-x168 * x169 * x22)
    result[0, 5, 2] = numpy.sum(-x144 * x171)
    result[0, 5, 3] = numpy.sum(-x132 * x149 * x168)
    result[0, 5, 4] = numpy.sum(-x148 * x169 * x171)
    result[0, 5, 5] = numpy.sum(-x147 * x172)
    result[0, 5, 6] = numpy.sum(-x158 * x168 * x173)
    result[0, 5, 7] = numpy.sum(-x132 * x155 * x171)
    result[0, 5, 8] = numpy.sum(-x153 * x169 * x172)
    result[0, 5, 9] = numpy.sum(-x154 * x175)
    result[0, 6, 0] = numpy.sum(-x178 * x180)
    result[0, 6, 1] = numpy.sum(-x183 * x185)
    result[0, 6, 2] = numpy.sum(-x180 * x186 * x187)
    result[0, 6, 3] = numpy.sum(-x188 * x190)
    result[0, 6, 4] = numpy.sum(-x183 * x191 * x59)
    result[0, 6, 5] = numpy.sum(-x107 * x179 * x193)
    result[0, 6, 6] = numpy.sum(-x195 * x196)
    result[0, 6, 7] = numpy.sum(-x186 * x188 * x197)
    result[0, 6, 8] = numpy.sum(-x183 * x198 * x78)
    result[0, 6, 9] = numpy.sum(-x180 * x199 * x200)
    result[0, 7, 0] = numpy.sum(-x121 * x139 * x201)
    result[0, 7, 1] = numpy.sum(-x143 * x160 * x176)
    result[0, 7, 2] = numpy.sum(-x123 * x176 * x202)
    result[0, 7, 3] = numpy.sum(-x146 * x160 * x189)
    result[0, 7, 4] = numpy.sum(-x143 * x203 * x205)
    result[0, 7, 5] = numpy.sum(-x131 * x189 * x202)
    result[0, 7, 6] = numpy.sum(-x121 * x152 * x206)
    result[0, 7, 7] = numpy.sum(-x123 * x146 * x207)
    result[0, 7, 8] = numpy.sum(-x131 * x143 * x207)
    result[0, 7, 9] = numpy.sum(-x137 * x139 * x198)
    result[0, 8, 0] = numpy.sum(-x168 * x201 * x87)
    result[0, 8, 1] = numpy.sum(-x117 * x176 * x208)
    result[0, 8, 2] = numpy.sum(-x162 * x171 * x176)
    result[0, 8, 3] = numpy.sum(-x101 * x189 * x209)
    result[0, 8, 4] = numpy.sum(-x171 * x203 * x210)
    result[0, 8, 5] = numpy.sum(-x162 * x172 * x189)
    result[0, 8, 6] = numpy.sum(-x112 * x168 * x198)
    result[0, 8, 7] = numpy.sum(-x101 * x171 * x207)
    result[0, 8, 8] = numpy.sum(-x172 * x207 * x90)
    result[0, 8, 9] = numpy.sum(-x175 * x206 * x87)
    result[0, 9, 0] = numpy.sum(-x178 * x212)
    result[0, 9, 1] = numpy.sum(-x187 * x213 * x53)
    result[0, 9, 2] = numpy.sum(-x185 * x216)
    result[0, 9, 3] = numpy.sum(-x124 * x193 * x211)
    result[0, 9, 4] = numpy.sum(-x191 * x216 * x53)
    result[0, 9, 5] = numpy.sum(-x190 * x217)
    result[0, 9, 6] = numpy.sum(-x173 * x199 * x212)
    result[0, 9, 7] = numpy.sum(-x198 * x216 * x62)
    result[0, 9, 8] = numpy.sum(-x206 * x217 * x53)
    result[0, 9, 9] = numpy.sum(-x196 * x219)
    result[1, 0, 0] = numpy.sum(-x220 * x222)
    result[1, 0, 1] = numpy.sum(-x223 * x226)
    result[1, 0, 2] = numpy.sum(-x186 * x223 * x227)
    result[1, 0, 3] = numpy.sum(-x228 * x235)
    result[1, 0, 4] = numpy.sum(-x228 * x236 * x59)
    result[1, 0, 5] = numpy.sum(-x228 * x237 * x78)
    result[1, 0, 6] = numpy.sum(-x240 * x241)
    result[1, 0, 7] = numpy.sum(-x186 * x241 * x242)
    result[1, 0, 8] = numpy.sum(-x156 * x225 * x243)
    result[1, 0, 9] = numpy.sum(-x200 * x241 * x244)
    result[1, 1, 0] = numpy.sum(-x247 * x41)
    result[1, 1, 1] = numpy.sum(-x250 * x37)
    result[1, 1, 2] = numpy.sum(-x145 * x246 * x37)
    result[1, 1, 3] = numpy.sum(-x254 * x64)
    result[1, 1, 4] = numpy.sum(-x145 * x249 * x255)
    result[1, 1, 5] = numpy.sum(-x246 * x256 * x64)
    result[1, 1, 6] = numpy.sum(-x257 * x262)
    result[1, 1, 7] = numpy.sum(-x145 * x253 * x257)
    result[1, 1, 8] = numpy.sum(-x249 * x256 * x257)
    result[1, 1, 9] = numpy.sum(-x257 * x263 * x86)
    result[1, 2, 0] = numpy.sum(-x121 * x264 * x41)
    result[1, 2, 1] = numpy.sum(-x160 * x225 * x37)
    result[1, 2, 2] = numpy.sum(-x123 * x265 * x37)
    result[1, 2, 3] = numpy.sum(-x160 * x234 * x64)
    result[1, 2, 4] = numpy.sum(-x205 * x225 * x255)
    result[1, 2, 5] = numpy.sum(-x131 * x265 * x64)
    result[1, 2, 6] = numpy.sum(-x121 * x257 * x266)
    result[1, 2, 7] = numpy.sum(-x123 * x234 * x267)
    result[1, 2, 8] = numpy.sum(-x131 * x225 * x267)
    result[1, 2, 9] = numpy.sum(-x137 * x237 * x257)
    result[1, 3, 0] = numpy.sum(-x268 * x270)
    result[1, 3, 1] = numpy.sum(-x272 * x30)
    result[1, 3, 2] = numpy.sum(-x145 * x269 * x30)
    result[1, 3, 3] = numpy.sum(-x273 * x276)
    result[1, 3, 4] = numpy.sum(-x145 * x271 * x277)
    result[1, 3, 5] = numpy.sum(-x256 * x269 * x273)
    result[1, 3, 6] = numpy.sum(-x280 * x4)
    result[1, 3, 7] = numpy.sum(-x281 * x4 * x59)
    result[1, 3, 8] = numpy.sum(-x271 * x282 * x78)
    result[1, 3, 9] = numpy.sum(-x284 * x4 * x86)
    result[1, 4, 0] = numpy.sum(-x121 * x268 * x285)
    result[1, 4, 1] = numpy.sum(-x160 * x249 * x286)
    result[1, 4, 2] = numpy.sum(-x205 * x246 * x286)
    result[1, 4, 3] = numpy.sum(-x160 * x253 * x277)
    result[1, 4, 4] = numpy.sum(-x163 * x249 * x273 * x68)
    result[1, 4, 5] = numpy.sum(-x131 * x246 * x287)
    result[1, 4, 6] = numpy.sum(-x159 * x261 * x4)
    result[1, 4, 7] = numpy.sum(-x123 * x253 * x288)
    result[1, 4, 8] = numpy.sum(-x131 * x249 * x288)
    result[1, 4, 9] = numpy.sum(-x137 * x285 * x4)
    result[1, 5, 0] = numpy.sum(-x168 * x237 * x268)
    result[1, 5, 1] = numpy.sum(-x209 * x225 * x30)
    result[1, 5, 2] = numpy.sum(-x171 * x265 * x30)
    result[1, 5, 3] = numpy.sum(-x209 * x234 * x273)
    result[1, 5, 4] = numpy.sum(-x171 * x225 * x287)
    result[1, 5, 5] = numpy.sum(-x172 * x265 * x273)
    result[1, 5, 6] = numpy.sum(-x168 * x266 * x4)
    result[1, 5, 7] = numpy.sum(-x171 * x234 * x282)
    result[1, 5, 8] = numpy.sum(-x172 * x225 * x282)
    result[1, 5, 9] = numpy.sum(-x175 * x264 * x4)
    result[1, 6, 0] = numpy.sum(-x290 * x291)
    result[1, 6, 1] = numpy.sum(-x292 * x294)
    result[1, 6, 2] = numpy.sum(-x292 * x295 * x59)
    result[1, 6, 3] = numpy.sum(-x296 * x5)
    result[1, 6, 4] = numpy.sum(-x293 * x5 * x76)
    result[1, 6, 5] = numpy.sum(-x295 * x5 * x78)
    result[1, 6, 6] = numpy.sum(
        -x50 * (x0 * (x152 + 5.0 * x259 + 2.0 * x260 + 3.0 * x274) + x279 * x87)
    )
    result[1, 6, 7] = numpy.sum(-x296 * x59)
    result[1, 6, 8] = numpy.sum(-x294 * x78)
    result[1, 6, 9] = numpy.sum(-x290 * x86)
    result[1, 7, 0] = numpy.sum(-x121 * x284 * x291)
    result[1, 7, 1] = numpy.sum(-x160 * x271 * x292)
    result[1, 7, 2] = numpy.sum(-x123 * x269 * x297)
    result[1, 7, 3] = numpy.sum(-x121 * x281 * x5)
    result[1, 7, 4] = numpy.sum(-x123 * x271 * x299)
    result[1, 7, 5] = numpy.sum(-x131 * x269 * x298)
    result[1, 7, 6] = numpy.sum(-x121 * x280)
    result[1, 7, 7] = numpy.sum(-x123 * x276)
    result[1, 7, 8] = numpy.sum(-x131 * x272)
    result[1, 7, 9] = numpy.sum(-x137 * x270)
    result[1, 8, 0] = numpy.sum(-x168 * x263 * x291)
    result[1, 8, 1] = numpy.sum(-x209 * x249 * x292)
    result[1, 8, 2] = numpy.sum(-x171 * x246 * x297)
    result[1, 8, 3] = numpy.sum(-x168 * x253 * x298)
    result[1, 8, 4] = numpy.sum(-x171 * x249 * x299)
    result[1, 8, 5] = numpy.sum(-x172 * x246 * x298)
    result[1, 8, 6] = numpy.sum(-x168 * x262)
    result[1, 8, 7] = numpy.sum(-x171 * x254)
    result[1, 8, 8] = numpy.sum(-x172 * x250)
    result[1, 8, 9] = numpy.sum(-x175 * x247)
    result[1, 9, 0] = numpy.sum(-x212 * x244 * x300)
    result[1, 9, 1] = numpy.sum(-x212 * x225 * x301)
    result[1, 9, 2] = numpy.sum(-x216 * x237 * x292)
    result[1, 9, 3] = numpy.sum(-x213 * x242 * x5)
    result[1, 9, 4] = numpy.sum(-x216 * x236 * x5)
    result[1, 9, 5] = numpy.sum(-x217 * x264 * x5)
    result[1, 9, 6] = numpy.sum(-x212 * x240)
    result[1, 9, 7] = numpy.sum(-x216 * x235)
    result[1, 9, 8] = numpy.sum(-x217 * x226)
    result[1, 9, 9] = numpy.sum(-x219 * x222)
    result[2, 0, 0] = numpy.sum(-x220 * x303)
    result[2, 0, 1] = numpy.sum(-x223 * x304 * x53)
    result[2, 0, 2] = numpy.sum(-x223 * x307)
    result[2, 0, 3] = numpy.sum(-x228 * x308 * x62)
    result[2, 0, 4] = numpy.sum(-x228 * x309 * x53)
    result[2, 0, 5] = numpy.sum(-x228 * x316)
    result[2, 0, 6] = numpy.sum(-x173 * x241 * x317)
    result[2, 0, 7] = numpy.sum(-x132 * x243 * x306)
    result[2, 0, 8] = numpy.sum(-x241 * x318 * x53)
    result[2, 0, 9] = numpy.sum(-x241 * x321)
    result[2, 1, 0] = numpy.sum(-x304 * x41 * x87)
    result[2, 1, 1] = numpy.sum(-x322 * x37 * x90)
    result[2, 1, 2] = numpy.sum(-x162 * x306 * x37)
    result[2, 1, 3] = numpy.sum(-x101 * x322 * x64)
    result[2, 1, 4] = numpy.sum(-x210 * x255 * x306)
    result[2, 1, 5] = numpy.sum(-x162 * x315 * x64)
    result[2, 1, 6] = numpy.sum(-x112 * x257 * x308)
    result[2, 1, 7] = numpy.sum(-x101 * x267 * x306)
    result[2, 1, 8] = numpy.sum(-x117 * x315 * x323)
    result[2, 1, 9] = numpy.sum(-x257 * x324 * x87)
    result[2, 2, 0] = numpy.sum(-x327 * x41)
    result[2, 2, 1] = numpy.sum(-x169 * x326 * x37)
    result[2, 2, 2] = numpy.sum(-x330 * x37)
    result[2, 2, 3] = numpy.sum(-x326 * x331 * x64)
    result[2, 2, 4] = numpy.sum(-x169 * x255 * x329)
    result[2, 2, 5] = numpy.sum(-x335 * x64)
    result[2, 2, 6] = numpy.sum(-x173 * x257 * x336)
    result[2, 2, 7] = numpy.sum(-x132 * x323 * x329)
    result[2, 2, 8] = numpy.sum(-x169 * x257 * x334)
    result[2, 2, 9] = numpy.sum(-x257 * x341)
    result[2, 3, 0] = numpy.sum(-x139 * x268 * x308)
    result[2, 3, 1] = numpy.sum(-x143 * x30 * x322)
    result[2, 3, 2] = numpy.sum(-x202 * x30 * x306)
    result[2, 3, 3] = numpy.sum(-x146 * x273 * x322)
    result[2, 3, 4] = numpy.sum(-x143 * x287 * x306)
    result[2, 3, 5] = numpy.sum(-x202 * x273 * x315)
    result[2, 3, 6] = numpy.sum(-x152 * x304 * x4)
    result[2, 3, 7] = numpy.sum(-x146 * x282 * x306)
    result[2, 3, 8] = numpy.sum(-x143 * x282 * x315)
    result[2, 3, 9] = numpy.sum(-x139 * x324 * x4)
    result[2, 4, 0] = numpy.sum(-x268 * x342 * x87)
    result[2, 4, 1] = numpy.sum(-x210 * x286 * x326)
    result[2, 4, 2] = numpy.sum(-x162 * x286 * x329)
    result[2, 4, 3] = numpy.sum(-x101 * x287 * x326)
    result[2, 4, 4] = numpy.sum(-0.5 * x117 * x273 * x329)
    result[2, 4, 5] = numpy.sum(-x162 * x277 * x334)
    result[2, 4, 6] = numpy.sum(-x112 * x342 * x4)
    result[2, 4, 7] = numpy.sum(-x101 * x288 * x329)
    result[2, 4, 8] = numpy.sum(-x288 * x334 * x90)
    result[2, 4, 9] = numpy.sum(-x340 * x4 * x75 * x87)
    result[2, 5, 0] = numpy.sum(-x268 * x344)
    result[2, 5, 1] = numpy.sum(-x169 * x30 * x343)
    result[2, 5, 2] = numpy.sum(-x30 * x346)
    result[2, 5, 3] = numpy.sum(-x273 * x331 * x343)
    result[2, 5, 4] = numpy.sum(-x169 * x277 * x345)
    result[2, 5, 5] = numpy.sum(-x273 * x349)
    result[2, 5, 6] = numpy.sum(-x350 * x4 * x84)
    result[2, 5, 7] = numpy.sum(-x282 * x345 * x62)
    result[2, 5, 8] = numpy.sum(-x351 * x4 * x53)
    result[2, 5, 9] = numpy.sum(-x354 * x4)
    result[2, 6, 0] = numpy.sum(-x180 * x300 * x317)
    result[2, 6, 1] = numpy.sum(-x183 * x292 * x308)
    result[2, 6, 2] = numpy.sum(-x180 * x301 * x306)
    result[2, 6, 3] = numpy.sum(-x188 * x304 * x5)
    result[2, 6, 4] = numpy.sum(-x183 * x309 * x5)
    result[2, 6, 5] = numpy.sum(-x180 * x318 * x5)
    result[2, 6, 6] = numpy.sum(-x195 * x303)
    result[2, 6, 7] = numpy.sum(-x188 * x307)
    result[2, 6, 8] = numpy.sum(-x183 * x316)
    result[2, 6, 9] = numpy.sum(-x180 * x321)
    result[2, 7, 0] = numpy.sum(-x150 * x291 * x336)
    result[2, 7, 1] = numpy.sum(-x143 * x297 * x326)
    result[2, 7, 2] = numpy.sum(-x202 * x292 * x329)
    result[2, 7, 3] = numpy.sum(-x146 * x298 * x326)
    result[2, 7, 4] = numpy.sum(-x143 * x299 * x329)
    result[2, 7, 5] = numpy.sum(-x139 * x298 * x334)
    result[2, 7, 6] = numpy.sum(-x152 * x327)
    result[2, 7, 7] = numpy.sum(-x146 * x330)
    result[2, 7, 8] = numpy.sum(-x143 * x335)
    result[2, 7, 9] = numpy.sum(-x139 * x341)
    result[2, 8, 0] = numpy.sum(-x291 * x350 * x87)
    result[2, 8, 1] = numpy.sum(-x210 * x292 * x343)
    result[2, 8, 2] = numpy.sum(-x162 * x292 * x345)
    result[2, 8, 3] = numpy.sum(-x101 * x298 * x343)
    result[2, 8, 4] = numpy.sum(-x299 * x345 * x90)
    result[2, 8, 5] = numpy.sum(-x351 * x5 * x87)
    result[2, 8, 6] = numpy.sum(-x112 * x344)
    result[2, 8, 7] = numpy.sum(-x101 * x346)
    result[2, 8, 8] = numpy.sum(-x349 * x90)
    result[2, 8, 9] = numpy.sum(-x354 * x87)
    result[2, 9, 0] = numpy.sum(-x291 * x356)
    result[2, 9, 1] = numpy.sum(-x292 * x357 * x53)
    result[2, 9, 2] = numpy.sum(-x292 * x359)
    result[2, 9, 3] = numpy.sum(-x357 * x5 * x62)
    result[2, 9, 4] = numpy.sum(-x358 * x5 * x53 * x75)
    result[2, 9, 5] = numpy.sum(-x360 * x5)
    result[2, 9, 6] = numpy.sum(-x356 * x84)
    result[2, 9, 7] = numpy.sum(-x359 * x62)
    result[2, 9, 8] = numpy.sum(-x360 * x53)
    result[2, 9, 9] = numpy.sum(
        -x50 * (x0 * (x175 + 5.0 * x338 + 2.0 * x339 + 3.0 * x347) + x121 * x353)
    )
    return result


def dipole3d_34(ax, da, A, bx, db, B, R):
    """Cartesian 3D (fg) dipole moment integrals.
    The origin is at R.

    Generated code; DO NOT modify by hand!"""

    result = numpy.zeros((3, 10, 15), dtype=float)

    x0 = 0.5 / (ax + bx)
    x1 = (ax + bx) ** (-1.0)
    x2 = -x1 * (ax * A[0] + bx * B[0])
    x3 = -x2 - A[0]
    x4 = -x2 - B[0]
    x5 = ax * bx * x1
    x6 = numpy.exp(-x5 * (A[0] - B[0]) ** 2)
    x7 = 1.772453850905516 * numpy.sqrt(x1)
    x8 = x6 * x7
    x9 = x0 * x8
    x10 = -x2 - R[0]
    x11 = x4 * x8
    x12 = x10 * x11
    x13 = x12 + x9
    x14 = x13 * x4
    x15 = x10 * x8
    x16 = x0 * (x11 + x15)
    x17 = 3.0 * x16
    x18 = x13 * x3
    x19 = 2.0 * x18
    x20 = x3 * x6
    x21 = x20 * x7
    x22 = x0 * (x11 + x21)
    x23 = x21 * x4
    x24 = x23 + x9
    x25 = x24 * x4
    x26 = x22 + x25
    x27 = x0 * (x14 + x17 + x19 + x26)
    x28 = 3.0 * x9
    x29 = x10 * x21
    x30 = x0 * (x12 + x23 + x28 + x29)
    x31 = x16 + x18
    x32 = x31 * x4
    x33 = x30 + x32
    x34 = x3 * x33
    x35 = x27 + x34
    x36 = x3 * x35
    x37 = x35 * x4
    x38 = x3 * x31
    x39 = 2.0 * x23
    x40 = x4**2 * x8
    x41 = x28 + x40
    x42 = x0 * (x39 + x41)
    x43 = x26 * x3
    x44 = x42 + x43
    x45 = x0 * (4.0 * x30 + 2.0 * x32 + 2.0 * x38 + x44)
    x46 = x26 * x4
    x47 = x0 * (5.0 * x42 + 3.0 * x43 + 2.0 * x46)
    x48 = x24 * x3
    x49 = 2.0 * x0 * (2.0 * x22 + x25 + x48)
    x50 = x4 * x44
    x51 = x49 + x50
    x52 = x3 * x51 + x47
    x53 = x33 * x4
    x54 = x0 * (5.0 * x27 + 3.0 * x34 + x51 + 2.0 * x53)
    x55 = x37 + x45
    x56 = x3 * x55 + x54
    x57 = da * db
    x58 = 0.009523809523809524 * x57
    x59 = 2.645751311064591 * x58
    x60 = numpy.exp(-x5 * (A[1] - B[1]) ** 2)
    x61 = numpy.exp(-x5 * (A[2] - B[2]) ** 2)
    x62 = 3.141592653589793 * x1 * x61
    x63 = x60 * x62
    x64 = x59 * x63
    x65 = -x1 * (ax * A[1] + bx * B[1])
    x66 = -x65 - B[1]
    x67 = 0.06666666666666667 * x57
    x68 = x66 * x67
    x69 = x56 * x63
    x70 = -x1 * (ax * A[2] + bx * B[2])
    x71 = -x70 - B[2]
    x72 = x67 * x71
    x73 = x36 + x45
    x74 = x61 * x7
    x75 = 3.872983346207417
    x76 = 0.02222222222222222 * x75
    x77 = x60 * x7
    x78 = x66**2 * x77
    x79 = x0 * x77
    x80 = x78 + x79
    x81 = x57 * x80
    x82 = x76 * x81
    x83 = 2.23606797749979
    x84 = x67 * x83
    x85 = x71 * x84
    x86 = x63 * x85
    x87 = x71**2 * x74
    x88 = x0 * x74
    x89 = x87 + x88
    x90 = x57 * x89
    x91 = x76 * x90
    x92 = 2.0 * x79
    x93 = x66 * (x80 + x92)
    x94 = x29 + x9
    x95 = x0 * (x15 + x21) + x3 * x94
    x96 = x22 + x48
    x97 = x30 + x38
    x98 = x0 * (2.0 * x16 + x19 + x95 + x96) + x3 * x97
    x99 = x67 * x98
    x100 = x71 * x74
    x101 = x84 * x98
    x102 = x66 * x77
    x103 = 2.0 * x88
    x104 = x71 * (x103 + x89)
    x105 = 3.0 * x79
    x106 = x0 * (x105 + 3.0 * x78) + x66 * x93
    x107 = x3**2 * x8
    x108 = x107 + x28
    x109 = x0 * (x108 + 2.0 * x29) + x3 * x95
    x110 = x109 * x59
    x111 = x109 * x67
    x112 = 3.0 * x88
    x113 = x0 * (x112 + 3.0 * x87) + x104 * x71
    x114 = -x65 - A[1]
    x115 = 5.916079783099616 * x58
    x116 = x114 * x115
    x117 = x63 * (x4 * x55 + x54)
    x118 = x114 * x77
    x119 = x118 * x66
    x120 = x119 + x79
    x121 = x120 * x67
    x122 = x121 * x83
    x123 = x0 * (x102 + x118)
    x124 = x120 * x66
    x125 = x123 + x124
    x126 = 1.732050807568877
    x127 = x125 * x126
    x128 = 0.1111111111111111 * x127
    x129 = x35 * x57
    x130 = 0.3333333333333333 * x57
    x131 = x100 * x130
    x132 = 0.1111111111111111 * x126
    x133 = x132 * x90
    x134 = x105 + 2.0 * x119
    x135 = x0 * (x134 + x78)
    x136 = x125 * x66
    x137 = x135 + x136
    x138 = x84 * x97
    x139 = x130 * x97
    x140 = x104 * x84
    x141 = x0 * (3.0 * x123 + 3.0 * x124 + x93) + x137 * x66
    x142 = x115 * x95
    x143 = x83 * x95
    x144 = x100 * x67
    x145 = 0.1111111111111111 * x95
    x146 = -x70 - A[2]
    x147 = x115 * x146
    x148 = x146 * x63
    x149 = x66 * x84
    x150 = x146 * x74
    x151 = x150 * x71
    x152 = x151 + x88
    x153 = x152 * x67
    x154 = x153 * x83
    x155 = x132 * x81
    x156 = x130 * x152
    x157 = x0 * (x100 + x150)
    x158 = x152 * x71
    x159 = x157 + x158
    x160 = x126 * x159
    x161 = 0.1111111111111111 * x160
    x162 = x84 * x93
    x163 = x112 + 2.0 * x151
    x164 = x0 * (x163 + x87)
    x165 = x159 * x71
    x166 = x164 + x165
    x167 = x102 * x67
    x168 = x0 * (x104 + 3.0 * x157 + 3.0 * x158) + x166 * x71
    x169 = x114**2 * x77
    x170 = x169 + x79
    x171 = x14 + x16
    x172 = x0 * (2.0 * x12 + x41) + x171 * x4
    x173 = x42 + x46
    x174 = x27 + x53
    x175 = x0 * (x172 + x173 + 3.0 * x30 + 3.0 * x32) + x174 * x4
    x176 = x115 * x175
    x177 = x114 * x120
    x178 = x123 + x177
    x179 = x74 * x84
    x180 = x100 * x84
    x181 = x114 * x125
    x182 = x135 + x181
    x183 = x57 * x74
    x184 = x126 * x33
    x185 = 0.1111111111111111 * x184
    x186 = 0.1111111111111111 * x170
    x187 = 2.0 * x0 * (2.0 * x123 + x124 + x177)
    x188 = x182 * x66
    x189 = x187 + x188
    x190 = x130 * x31
    x191 = x0 * (5.0 * x135 + 2.0 * x136 + 3.0 * x181)
    x192 = x189 * x66 + x191
    x193 = x115 * x94
    x194 = x132 * x94
    x195 = 10.2469507659596 * x58
    x196 = x114 * x195
    x197 = x174 * x75
    x198 = x125 * x130
    x199 = x130 * x159
    x200 = x150 * x75
    x201 = x31 * x67
    x202 = x166 * x75
    x203 = x195 * x94
    x204 = x75 * x94
    x205 = x146**2 * x74
    x206 = x205 + x88
    x207 = x206 * x84
    x208 = x146 * x152
    x209 = x157 + x208
    x210 = x77 * x84
    x211 = 0.1111111111111111 * x206
    x212 = x130 * x209
    x213 = x146 * x159
    x214 = x164 + x213
    x215 = x214 * x57
    x216 = 2.0 * x0 * (2.0 * x157 + x158 + x208)
    x217 = x214 * x71
    x218 = x216 + x217
    x219 = x102 * x84
    x220 = x0 * (5.0 * x164 + 2.0 * x165 + 3.0 * x213)
    x221 = x218 * x71 + x220
    x222 = x114 * (x170 + x92)
    x223 = x40 + x9
    x224 = 2.0 * x0
    x225 = x11 * x224 + x223 * x4
    x226 = x0 * (3.0 * x14 + x17 + x225) + x172 * x4
    x227 = x226 * x59
    x228 = x0 * (x134 + x169) + x114 * x178
    x229 = x172 * x67
    x230 = x114 * x182
    x231 = x187 + x230
    x232 = x171 * x57
    x233 = x232 * x76
    x234 = x114 * x189 + x191
    x235 = x13 * x67
    x236 = x235 * x83
    x237 = x6 * x62
    x238 = x237 * x59
    x239 = x238 * (3.0 * x0 * (2.0 * x187 + x188 + x230) + x234 * x66)
    x240 = x234 * x237
    x241 = x15 * x67
    x242 = x15 * x59
    x243 = x115 * x170
    x244 = x178 * x84
    x245 = x172 * x83
    x246 = x132 * x182
    x247 = x147 * x237
    x248 = x161 * x57
    x249 = x115 * x206
    x250 = x209 * x84
    x251 = x132 * x214
    x252 = x130 * x214
    x253 = 3.141592653589793 * x1 * x60
    x254 = x253 * x6
    x255 = x116 * x254
    x256 = x146 * (x103 + x206)
    x257 = x0 * (x163 + x205) + x146 * x209
    x258 = x256 * x76
    x259 = x146 * x214
    x260 = x216 + x259
    x261 = x146 * x218 + x220
    x262 = x254 * x261
    x263 = x254 * x59
    x264 = x263 * (3.0 * x0 * (2.0 * x216 + x217 + x259) + x261 * x71)
    x265 = -x65 - R[1]
    x266 = x3 * x44
    x267 = x64 * (3.0 * x0 * (x266 + 2.0 * x49 + x50) + x4 * x52)
    x268 = x102 * x265
    x269 = x268 + x79
    x270 = x269 * x67
    x271 = x52 * x63
    x272 = x266 + x49
    x273 = x265 * x77
    x274 = x0 * (x102 + x273)
    x275 = x269 * x66
    x276 = x274 + x275
    x277 = x276 * x57
    x278 = x74 * x76
    x279 = x270 * x83
    x280 = x0 * (x105 + 2.0 * x268 + x78) + x276 * x66
    x281 = x0 * (x108 + x39) + x3 * x96
    x282 = x67 * x74
    x283 = x104 * x67
    x284 = x107 + x9
    x285 = x21 * x224 + x284 * x3
    x286 = 3.0 * x274
    x287 = x0 * (3.0 * x275 + x286 + x93) + x280 * x66
    x288 = x59 * x74
    x289 = x273 * x59
    x290 = x4 * x51 + x47
    x291 = x118 * x265
    x292 = x291 + x79
    x293 = x115 * x292
    x294 = x114 * x269
    x295 = x274 + x294
    x296 = x0 * (x105 + x119 + x268 + x291)
    x297 = x295 * x66
    x298 = x296 + x297
    x299 = x132 * x183
    x300 = 2.0 * x294
    x301 = x0 * (x125 + x275 + x286 + x300)
    x302 = x298 * x66
    x303 = x301 + x302
    x304 = x130 * x96
    x305 = x130 * x89
    x306 = x0 * (x137 + x280 + 3.0 * x296 + 3.0 * x297) + x303 * x66
    x307 = x115 * x74
    x308 = x290 * x63
    x309 = x132 * x44
    x310 = x84 * x96
    x311 = x115 * x284
    x312 = x0 * (x118 + x273) + x114 * x292
    x313 = x0 * (3.0 * x22 + x225 + 3.0 * x25) + x173 * x4
    x314 = x114 * x295
    x315 = x296 + x314
    x316 = x114 * x298
    x317 = x301 + x316
    x318 = x130 * x26
    x319 = x0 * (x182 + 4.0 * x296 + 2.0 * x297 + 2.0 * x314)
    x320 = x317 * x66
    x321 = x319 + x320
    x322 = x24 * x84
    x323 = x130 * x24
    x324 = x0 * (x189 + 5.0 * x301 + 2.0 * x302 + 3.0 * x316)
    x325 = x321 * x66 + x324
    x326 = x115 * x20
    x327 = x326 * x62
    x328 = x20 * x62
    x329 = x115 * x312
    x330 = x195 * x292
    x331 = x295 * x67
    x332 = x292 * x75
    x333 = x126 * x156
    x334 = x24 * x67
    x335 = x21 * x75
    x336 = x132 * x206
    x337 = x132 * x215
    x338 = x253 * x326
    x339 = x0 * (x105 + x169 + 2.0 * x291) + x114 * x312
    x340 = x0 * (x28 + 3.0 * x40) + x225 * x4
    x341 = x0 * (x178 + 2.0 * x274 + x300 + x312) + x114 * x315
    x342 = x114 * x317
    x343 = x319 + x342
    x344 = x223 * x57
    x345 = x114 * x321 + x324
    x346 = x237 * x345
    x347 = x4 * x67
    x348 = x237 * x4
    x349 = x11 * x84
    x350 = x67 * x8
    x351 = x59 * x8
    x352 = x225 * x84
    x353 = x132 * x344
    x354 = x57 * x8
    x355 = x8 * x84
    x356 = x115 * x8
    x357 = x225 * x67
    x358 = x260 * x76
    x359 = x11 * x67
    x360 = -x70 - R[2]
    x361 = x100 * x360
    x362 = x361 + x88
    x363 = x362 * x67
    x364 = x360 * x74
    x365 = x363 * x83
    x366 = x0 * (x100 + x364)
    x367 = x362 * x71
    x368 = x366 + x367
    x369 = x368 * x76
    x370 = x57 * x77
    x371 = x0 * (x112 + 2.0 * x361 + x87) + x368 * x71
    x372 = x67 * x77
    x373 = x364 * x59
    x374 = 3.0 * x366
    x375 = x0 * (x104 + 3.0 * x367 + x374) + x371 * x71
    x376 = x59 * x77
    x377 = x364 * x57
    x378 = x130 * x362
    x379 = x368 * x57
    x380 = x150 * x360
    x381 = x380 + x88
    x382 = x115 * x381
    x383 = x146 * x362
    x384 = x366 + x383
    x385 = x130 * x384
    x386 = x0 * (x112 + x151 + x361 + x380)
    x387 = x384 * x71
    x388 = x386 + x387
    x389 = x132 * x370
    x390 = 2.0 * x383
    x391 = x0 * (x159 + x367 + x374 + x390)
    x392 = x388 * x71
    x393 = x391 + x392
    x394 = x0 * (x166 + x371 + 3.0 * x386 + 3.0 * x387) + x393 * x71
    x395 = x115 * x77
    x396 = x126 * x186
    x397 = x195 * x381
    x398 = x381 * x75
    x399 = x118 * x75
    x400 = x384 * x67
    x401 = x120 * x126
    x402 = x20 * x253
    x403 = x0 * (x150 + x364) + x146 * x381
    x404 = x146 * x384
    x405 = x386 + x404
    x406 = x146 * x388
    x407 = x391 + x406
    x408 = x0 * (x214 + 4.0 * x386 + 2.0 * x387 + 2.0 * x404)
    x409 = x407 * x71
    x410 = x408 + x409
    x411 = x115 * x403
    x412 = x0 * (x218 + 5.0 * x391 + 2.0 * x392 + 3.0 * x406)
    x413 = x410 * x71 + x412
    x414 = x344 * x76
    x415 = x130 * x223
    x416 = x11 * x130
    x417 = x254 * x4
    x418 = x0 * (x112 + x205 + 2.0 * x380) + x146 * x403
    x419 = x0 * (x209 + 2.0 * x366 + x390 + x403) + x146 * x405
    x420 = x146 * x407
    x421 = x408 + x420
    x422 = x146 * x410 + x412
    x423 = x254 * x422

    # 450 item(s)
    result[0, 0, 0] = numpy.sum(
        x64 * (x0 * (3.0 * x36 + 3.0 * x37 + 6.0 * x45 + x52) + x4 * x56)
    )
    result[0, 0, 1] = numpy.sum(x68 * x69)
    result[0, 0, 2] = numpy.sum(x69 * x72)
    result[0, 0, 3] = numpy.sum(x73 * x74 * x82)
    result[0, 0, 4] = numpy.sum(x66 * x73 * x86)
    result[0, 0, 5] = numpy.sum(x73 * x77 * x91)
    result[0, 0, 6] = numpy.sum(x74 * x93 * x99)
    result[0, 0, 7] = numpy.sum(x100 * x101 * x80)
    result[0, 0, 8] = numpy.sum(x101 * x102 * x89)
    result[0, 0, 9] = numpy.sum(x104 * x77 * x99)
    result[0, 0, 10] = numpy.sum(x106 * x110 * x74)
    result[0, 0, 11] = numpy.sum(x100 * x111 * x93)
    result[0, 0, 12] = numpy.sum(x109 * x80 * x91)
    result[0, 0, 13] = numpy.sum(x102 * x104 * x111)
    result[0, 0, 14] = numpy.sum(x110 * x113 * x77)
    result[0, 1, 0] = numpy.sum(x116 * x117)
    result[0, 1, 1] = numpy.sum(x122 * x55 * x74)
    result[0, 1, 2] = numpy.sum(x114 * x55 * x86)
    result[0, 1, 3] = numpy.sum(x128 * x129 * x74)
    result[0, 1, 4] = numpy.sum(x120 * x131 * x35)
    result[0, 1, 5] = numpy.sum(x118 * x133 * x35)
    result[0, 1, 6] = numpy.sum(x137 * x138 * x74)
    result[0, 1, 7] = numpy.sum(x100 * x125 * x139)
    result[0, 1, 8] = numpy.sum(x120 * x139 * x89)
    result[0, 1, 9] = numpy.sum(x118 * x140 * x97)
    result[0, 1, 10] = numpy.sum(x141 * x142 * x74)
    result[0, 1, 11] = numpy.sum(x137 * x143 * x144)
    result[0, 1, 12] = numpy.sum(x127 * x145 * x90)
    result[0, 1, 13] = numpy.sum(x104 * x121 * x143)
    result[0, 1, 14] = numpy.sum(x113 * x118 * x142)
    result[0, 2, 0] = numpy.sum(x117 * x147)
    result[0, 2, 1] = numpy.sum(x148 * x149 * x55)
    result[0, 2, 2] = numpy.sum(x154 * x55 * x77)
    result[0, 2, 3] = numpy.sum(x150 * x155 * x35)
    result[0, 2, 4] = numpy.sum(x102 * x156 * x35)
    result[0, 2, 5] = numpy.sum(x129 * x161 * x77)
    result[0, 2, 6] = numpy.sum(x150 * x162 * x97)
    result[0, 2, 7] = numpy.sum(x139 * x152 * x80)
    result[0, 2, 8] = numpy.sum(x102 * x139 * x159)
    result[0, 2, 9] = numpy.sum(x138 * x166 * x77)
    result[0, 2, 10] = numpy.sum(x106 * x142 * x150)
    result[0, 2, 11] = numpy.sum(x143 * x153 * x93)
    result[0, 2, 12] = numpy.sum(x145 * x160 * x81)
    result[0, 2, 13] = numpy.sum(x143 * x166 * x167)
    result[0, 2, 14] = numpy.sum(x142 * x168 * x77)
    result[0, 3, 0] = numpy.sum(x170 * x176 * x74)
    result[0, 3, 1] = numpy.sum(x174 * x178 * x179)
    result[0, 3, 2] = numpy.sum(x170 * x174 * x180)
    result[0, 3, 3] = numpy.sum(x182 * x183 * x185)
    result[0, 3, 4] = numpy.sum(x131 * x178 * x33)
    result[0, 3, 5] = numpy.sum(x184 * x186 * x90)
    result[0, 3, 6] = numpy.sum(x179 * x189 * x31)
    result[0, 3, 7] = numpy.sum(x100 * x182 * x190)
    result[0, 3, 8] = numpy.sum(x178 * x190 * x89)
    result[0, 3, 9] = numpy.sum(x140 * x170 * x31)
    result[0, 3, 10] = numpy.sum(x192 * x193 * x74)
    result[0, 3, 11] = numpy.sum(x180 * x189 * x94)
    result[0, 3, 12] = numpy.sum(x182 * x194 * x90)
    result[0, 3, 13] = numpy.sum(x140 * x178 * x94)
    result[0, 3, 14] = numpy.sum(x113 * x170 * x193)
    result[0, 4, 0] = numpy.sum(x148 * x175 * x196)
    result[0, 4, 1] = numpy.sum(x121 * x150 * x197)
    result[0, 4, 2] = numpy.sum(x118 * x153 * x197)
    result[0, 4, 3] = numpy.sum(x150 * x198 * x33)
    result[0, 4, 4] = numpy.sum(x120 * x156 * x184)
    result[0, 4, 5] = numpy.sum(x118 * x199 * x33)
    result[0, 4, 6] = numpy.sum(x137 * x200 * x201)
    result[0, 4, 7] = numpy.sum(x127 * x152 * x190)
    result[0, 4, 8] = numpy.sum(x120 * x160 * x190)
    result[0, 4, 9] = numpy.sum(x118 * x201 * x202)
    result[0, 4, 10] = numpy.sum(x141 * x150 * x203)
    result[0, 4, 11] = numpy.sum(x137 * x153 * x204)
    result[0, 4, 12] = numpy.sum(x125 * x199 * x94)
    result[0, 4, 13] = numpy.sum(x121 * x166 * x204)
    result[0, 4, 14] = numpy.sum(x118 * x168 * x203)
    result[0, 5, 0] = numpy.sum(x176 * x206 * x77)
    result[0, 5, 1] = numpy.sum(x102 * x174 * x207)
    result[0, 5, 2] = numpy.sum(x174 * x209 * x210)
    result[0, 5, 3] = numpy.sum(x184 * x211 * x81)
    result[0, 5, 4] = numpy.sum(x102 * x212 * x33)
    result[0, 5, 5] = numpy.sum(x185 * x215 * x77)
    result[0, 5, 6] = numpy.sum(x162 * x206 * x31)
    result[0, 5, 7] = numpy.sum(x190 * x209 * x80)
    result[0, 5, 8] = numpy.sum(x102 * x190 * x214)
    result[0, 5, 9] = numpy.sum(x210 * x218 * x31)
    result[0, 5, 10] = numpy.sum(x106 * x193 * x206)
    result[0, 5, 11] = numpy.sum(x162 * x209 * x94)
    result[0, 5, 12] = numpy.sum(x194 * x214 * x81)
    result[0, 5, 13] = numpy.sum(x218 * x219 * x94)
    result[0, 5, 14] = numpy.sum(x193 * x221 * x77)
    result[0, 6, 0] = numpy.sum(x222 * x227 * x74)
    result[0, 6, 1] = numpy.sum(x228 * x229 * x74)
    result[0, 6, 2] = numpy.sum(x100 * x222 * x229)
    result[0, 6, 3] = numpy.sum(x231 * x233 * x74)
    result[0, 6, 4] = numpy.sum(x171 * x180 * x228)
    result[0, 6, 5] = numpy.sum(x171 * x222 * x91)
    result[0, 6, 6] = numpy.sum(x234 * x235 * x74)
    result[0, 6, 7] = numpy.sum(x100 * x231 * x236)
    result[0, 6, 8] = numpy.sum(x228 * x236 * x89)
    result[0, 6, 9] = numpy.sum(x104 * x222 * x235)
    result[0, 6, 10] = numpy.sum(x10 * x239)
    result[0, 6, 11] = numpy.sum(x10 * x240 * x72)
    result[0, 6, 12] = numpy.sum(x15 * x231 * x91)
    result[0, 6, 13] = numpy.sum(x104 * x228 * x241)
    result[0, 6, 14] = numpy.sum(x113 * x222 * x242)
    result[0, 7, 0] = numpy.sum(x150 * x226 * x243)
    result[0, 7, 1] = numpy.sum(x150 * x172 * x244)
    result[0, 7, 2] = numpy.sum(x153 * x170 * x245)
    result[0, 7, 3] = numpy.sum(x150 * x232 * x246)
    result[0, 7, 4] = numpy.sum(x156 * x171 * x178)
    result[0, 7, 5] = numpy.sum(x160 * x186 * x232)
    result[0, 7, 6] = numpy.sum(x150 * x189 * x236)
    result[0, 7, 7] = numpy.sum(x13 * x156 * x182)
    result[0, 7, 8] = numpy.sum(x13 * x178 * x199)
    result[0, 7, 9] = numpy.sum(x166 * x170 * x236)
    result[0, 7, 10] = numpy.sum(x10 * x192 * x247)
    result[0, 7, 11] = numpy.sum(x15 * x154 * x189)
    result[0, 7, 12] = numpy.sum(x15 * x182 * x248)
    result[0, 7, 13] = numpy.sum(x15 * x166 * x244)
    result[0, 7, 14] = numpy.sum(x15 * x168 * x243)
    result[0, 8, 0] = numpy.sum(x118 * x226 * x249)
    result[0, 8, 1] = numpy.sum(x121 * x206 * x245)
    result[0, 8, 2] = numpy.sum(x118 * x172 * x250)
    result[0, 8, 3] = numpy.sum(x127 * x211 * x232)
    result[0, 8, 4] = numpy.sum(x120 * x171 * x212)
    result[0, 8, 5] = numpy.sum(x118 * x232 * x251)
    result[0, 8, 6] = numpy.sum(x137 * x206 * x236)
    result[0, 8, 7] = numpy.sum(x125 * x13 * x212)
    result[0, 8, 8] = numpy.sum(x120 * x13 * x252)
    result[0, 8, 9] = numpy.sum(x118 * x218 * x236)
    result[0, 8, 10] = numpy.sum(x141 * x15 * x249)
    result[0, 8, 11] = numpy.sum(x137 * x15 * x250)
    result[0, 8, 12] = numpy.sum(x128 * x15 * x215)
    result[0, 8, 13] = numpy.sum(x122 * x15 * x218)
    result[0, 8, 14] = numpy.sum(x10 * x221 * x255)
    result[0, 9, 0] = numpy.sum(x227 * x256 * x77)
    result[0, 9, 1] = numpy.sum(x102 * x229 * x256)
    result[0, 9, 2] = numpy.sum(x229 * x257 * x77)
    result[0, 9, 3] = numpy.sum(x171 * x258 * x81)
    result[0, 9, 4] = numpy.sum(x171 * x219 * x257)
    result[0, 9, 5] = numpy.sum(x233 * x260 * x77)
    result[0, 9, 6] = numpy.sum(x235 * x256 * x93)
    result[0, 9, 7] = numpy.sum(x236 * x257 * x80)
    result[0, 9, 8] = numpy.sum(x102 * x236 * x260)
    result[0, 9, 9] = numpy.sum(x235 * x261 * x77)
    result[0, 9, 10] = numpy.sum(x106 * x242 * x256)
    result[0, 9, 11] = numpy.sum(x241 * x257 * x93)
    result[0, 9, 12] = numpy.sum(x15 * x260 * x82)
    result[0, 9, 13] = numpy.sum(x10 * x262 * x68)
    result[0, 9, 14] = numpy.sum(x10 * x264)
    result[1, 0, 0] = numpy.sum(x265 * x267)
    result[1, 0, 1] = numpy.sum(x270 * x52 * x74)
    result[1, 0, 2] = numpy.sum(x265 * x271 * x72)
    result[1, 0, 3] = numpy.sum(x272 * x277 * x278)
    result[1, 0, 4] = numpy.sum(x100 * x272 * x279)
    result[1, 0, 5] = numpy.sum(x272 * x273 * x91)
    result[1, 0, 6] = numpy.sum(x280 * x281 * x282)
    result[1, 0, 7] = numpy.sum(x180 * x276 * x281)
    result[1, 0, 8] = numpy.sum(x279 * x281 * x89)
    result[1, 0, 9] = numpy.sum(x273 * x281 * x283)
    result[1, 0, 10] = numpy.sum(x285 * x287 * x288)
    result[1, 0, 11] = numpy.sum(x144 * x280 * x285)
    result[1, 0, 12] = numpy.sum(x276 * x285 * x91)
    result[1, 0, 13] = numpy.sum(x104 * x270 * x285)
    result[1, 0, 14] = numpy.sum(x113 * x285 * x289)
    result[1, 1, 0] = numpy.sum(x290 * x293 * x74)
    result[1, 1, 1] = numpy.sum(x179 * x295 * x51)
    result[1, 1, 2] = numpy.sum(x180 * x292 * x51)
    result[1, 1, 3] = numpy.sum(x298 * x299 * x44)
    result[1, 1, 4] = numpy.sum(x131 * x295 * x44)
    result[1, 1, 5] = numpy.sum(x133 * x292 * x44)
    result[1, 1, 6] = numpy.sum(x179 * x303 * x96)
    result[1, 1, 7] = numpy.sum(x100 * x298 * x304)
    result[1, 1, 8] = numpy.sum(x295 * x305 * x96)
    result[1, 1, 9] = numpy.sum(x140 * x292 * x96)
    result[1, 1, 10] = numpy.sum(x284 * x306 * x307)
    result[1, 1, 11] = numpy.sum(x180 * x284 * x303)
    result[1, 1, 12] = numpy.sum(x133 * x284 * x298)
    result[1, 1, 13] = numpy.sum(x140 * x284 * x295)
    result[1, 1, 14] = numpy.sum(x113 * x284 * x293)
    result[1, 2, 0] = numpy.sum(x147 * x265 * x308)
    result[1, 2, 1] = numpy.sum(x150 * x279 * x51)
    result[1, 2, 2] = numpy.sum(x154 * x273 * x51)
    result[1, 2, 3] = numpy.sum(x150 * x277 * x309)
    result[1, 2, 4] = numpy.sum(x156 * x269 * x44)
    result[1, 2, 5] = numpy.sum(x248 * x273 * x44)
    result[1, 2, 6] = numpy.sum(x150 * x280 * x310)
    result[1, 2, 7] = numpy.sum(x156 * x276 * x96)
    result[1, 2, 8] = numpy.sum(x199 * x269 * x96)
    result[1, 2, 9] = numpy.sum(x166 * x273 * x310)
    result[1, 2, 10] = numpy.sum(x150 * x287 * x311)
    result[1, 2, 11] = numpy.sum(x154 * x280 * x284)
    result[1, 2, 12] = numpy.sum(x161 * x277 * x284)
    result[1, 2, 13] = numpy.sum(x166 * x279 * x284)
    result[1, 2, 14] = numpy.sum(x168 * x273 * x311)
    result[1, 3, 0] = numpy.sum(x307 * x312 * x313)
    result[1, 3, 1] = numpy.sum(x173 * x179 * x315)
    result[1, 3, 2] = numpy.sum(x173 * x180 * x312)
    result[1, 3, 3] = numpy.sum(x26 * x299 * x317)
    result[1, 3, 4] = numpy.sum(x100 * x315 * x318)
    result[1, 3, 5] = numpy.sum(x133 * x26 * x312)
    result[1, 3, 6] = numpy.sum(x321 * x322 * x74)
    result[1, 3, 7] = numpy.sum(x100 * x317 * x323)
    result[1, 3, 8] = numpy.sum(x24 * x305 * x315)
    result[1, 3, 9] = numpy.sum(x140 * x24 * x312)
    result[1, 3, 10] = numpy.sum(x325 * x327)
    result[1, 3, 11] = numpy.sum(x321 * x328 * x85)
    result[1, 3, 12] = numpy.sum(x133 * x21 * x317)
    result[1, 3, 13] = numpy.sum(x140 * x21 * x315)
    result[1, 3, 14] = numpy.sum(x113 * x21 * x329)
    result[1, 4, 0] = numpy.sum(x150 * x313 * x330)
    result[1, 4, 1] = numpy.sum(x173 * x200 * x331)
    result[1, 4, 2] = numpy.sum(x153 * x173 * x332)
    result[1, 4, 3] = numpy.sum(x150 * x298 * x318)
    result[1, 4, 4] = numpy.sum(x26 * x295 * x333)
    result[1, 4, 5] = numpy.sum(x199 * x26 * x292)
    result[1, 4, 6] = numpy.sum(x200 * x303 * x334)
    result[1, 4, 7] = numpy.sum(x24 * x298 * x333)
    result[1, 4, 8] = numpy.sum(x126 * x199 * x24 * x295)
    result[1, 4, 9] = numpy.sum(x166 * x332 * x334)
    result[1, 4, 10] = numpy.sum(x146 * x195 * x306 * x328)
    result[1, 4, 11] = numpy.sum(x153 * x303 * x335)
    result[1, 4, 12] = numpy.sum(x199 * x21 * x298)
    result[1, 4, 13] = numpy.sum(x202 * x21 * x331)
    result[1, 4, 14] = numpy.sum(x168 * x21 * x330)
    result[1, 5, 0] = numpy.sum(x249 * x273 * x313)
    result[1, 5, 1] = numpy.sum(x173 * x206 * x279)
    result[1, 5, 2] = numpy.sum(x173 * x250 * x273)
    result[1, 5, 3] = numpy.sum(x26 * x277 * x336)
    result[1, 5, 4] = numpy.sum(x212 * x26 * x269)
    result[1, 5, 5] = numpy.sum(x26 * x273 * x337)
    result[1, 5, 6] = numpy.sum(x207 * x24 * x280)
    result[1, 5, 7] = numpy.sum(x212 * x24 * x276)
    result[1, 5, 8] = numpy.sum(x24 * x252 * x269)
    result[1, 5, 9] = numpy.sum(x218 * x273 * x322)
    result[1, 5, 10] = numpy.sum(x21 * x249 * x287)
    result[1, 5, 11] = numpy.sum(x21 * x250 * x280)
    result[1, 5, 12] = numpy.sum(x21 * x251 * x277)
    result[1, 5, 13] = numpy.sum(x21 * x218 * x279)
    result[1, 5, 14] = numpy.sum(x221 * x265 * x338)
    result[1, 6, 0] = numpy.sum(x288 * x339 * x340)
    result[1, 6, 1] = numpy.sum(x225 * x282 * x341)
    result[1, 6, 2] = numpy.sum(x144 * x225 * x339)
    result[1, 6, 3] = numpy.sum(x278 * x343 * x344)
    result[1, 6, 4] = numpy.sum(x180 * x223 * x341)
    result[1, 6, 5] = numpy.sum(x223 * x339 * x91)
    result[1, 6, 6] = numpy.sum(x346 * x347)
    result[1, 6, 7] = numpy.sum(x343 * x348 * x85)
    result[1, 6, 8] = numpy.sum(x341 * x349 * x89)
    result[1, 6, 9] = numpy.sum(x11 * x283 * x339)
    result[1, 6, 10] = numpy.sum(
        x238 * (x0 * (x234 + 6.0 * x319 + 3.0 * x320 + 3.0 * x342) + x345 * x66)
    )
    result[1, 6, 11] = numpy.sum(x346 * x72)
    result[1, 6, 12] = numpy.sum(x343 * x8 * x91)
    result[1, 6, 13] = numpy.sum(x104 * x341 * x350)
    result[1, 6, 14] = numpy.sum(x113 * x339 * x351)
    result[1, 7, 0] = numpy.sum(x150 * x329 * x340)
    result[1, 7, 1] = numpy.sum(x150 * x315 * x352)
    result[1, 7, 2] = numpy.sum(x154 * x225 * x312)
    result[1, 7, 3] = numpy.sum(x150 * x317 * x353)
    result[1, 7, 4] = numpy.sum(x156 * x223 * x315)
    result[1, 7, 5] = numpy.sum(x161 * x312 * x344)
    result[1, 7, 6] = numpy.sum(x146 * x321 * x348 * x84)
    result[1, 7, 7] = numpy.sum(x11 * x156 * x317)
    result[1, 7, 8] = numpy.sum(x11 * x199 * x315)
    result[1, 7, 9] = numpy.sum(x166 * x312 * x349)
    result[1, 7, 10] = numpy.sum(x247 * x325)
    result[1, 7, 11] = numpy.sum(x154 * x321 * x8)
    result[1, 7, 12] = numpy.sum(x161 * x317 * x354)
    result[1, 7, 13] = numpy.sum(x166 * x315 * x355)
    result[1, 7, 14] = numpy.sum(x168 * x312 * x356)
    result[1, 8, 0] = numpy.sum(x206 * x293 * x340)
    result[1, 8, 1] = numpy.sum(x207 * x225 * x295)
    result[1, 8, 2] = numpy.sum(x209 * x292 * x352)
    result[1, 8, 3] = numpy.sum(x298 * x336 * x344)
    result[1, 8, 4] = numpy.sum(x212 * x223 * x295)
    result[1, 8, 5] = numpy.sum(x214 * x292 * x353)
    result[1, 8, 6] = numpy.sum(x11 * x207 * x303)
    result[1, 8, 7] = numpy.sum(x11 * x212 * x298)
    result[1, 8, 8] = numpy.sum(x11 * x252 * x295)
    result[1, 8, 9] = numpy.sum(x218 * x292 * x349)
    result[1, 8, 10] = numpy.sum(x206 * x306 * x356)
    result[1, 8, 11] = numpy.sum(x209 * x303 * x355)
    result[1, 8, 12] = numpy.sum(x298 * x337 * x8)
    result[1, 8, 13] = numpy.sum(x218 * x295 * x355)
    result[1, 8, 14] = numpy.sum(x221 * x293 * x8)
    result[1, 9, 0] = numpy.sum(x256 * x289 * x340)
    result[1, 9, 1] = numpy.sum(x225 * x256 * x270)
    result[1, 9, 2] = numpy.sum(x257 * x273 * x357)
    result[1, 9, 3] = numpy.sum(x223 * x258 * x277)
    result[1, 9, 4] = numpy.sum(x223 * x257 * x279)
    result[1, 9, 5] = numpy.sum(x273 * x344 * x358)
    result[1, 9, 6] = numpy.sum(x256 * x280 * x359)
    result[1, 9, 7] = numpy.sum(x257 * x276 * x349)
    result[1, 9, 8] = numpy.sum(x11 * x260 * x279)
    result[1, 9, 9] = numpy.sum(x262 * x265 * x347)
    result[1, 9, 10] = numpy.sum(x256 * x287 * x351)
    result[1, 9, 11] = numpy.sum(x257 * x280 * x350)
    result[1, 9, 12] = numpy.sum(x277 * x358 * x8)
    result[1, 9, 13] = numpy.sum(x261 * x270 * x8)
    result[1, 9, 14] = numpy.sum(x264 * x265)
    result[2, 0, 0] = numpy.sum(x267 * x360)
    result[2, 0, 1] = numpy.sum(x271 * x360 * x68)
    result[2, 0, 2] = numpy.sum(x363 * x52 * x77)
    result[2, 0, 3] = numpy.sum(x272 * x364 * x82)
    result[2, 0, 4] = numpy.sum(x102 * x272 * x365)
    result[2, 0, 5] = numpy.sum(x272 * x369 * x370)
    result[2, 0, 6] = numpy.sum(x281 * x364 * x67 * x93)
    result[2, 0, 7] = numpy.sum(x281 * x365 * x80)
    result[2, 0, 8] = numpy.sum(x219 * x281 * x368)
    result[2, 0, 9] = numpy.sum(x281 * x371 * x372)
    result[2, 0, 10] = numpy.sum(x106 * x285 * x373)
    result[2, 0, 11] = numpy.sum(x285 * x363 * x93)
    result[2, 0, 12] = numpy.sum(x285 * x369 * x81)
    result[2, 0, 13] = numpy.sum(x167 * x285 * x371)
    result[2, 0, 14] = numpy.sum(x285 * x375 * x376)
    result[2, 1, 0] = numpy.sum(x116 * x308 * x360)
    result[2, 1, 1] = numpy.sum(x122 * x364 * x51)
    result[2, 1, 2] = numpy.sum(x118 * x365 * x51)
    result[2, 1, 3] = numpy.sum(x128 * x377 * x44)
    result[2, 1, 4] = numpy.sum(x120 * x378 * x44)
    result[2, 1, 5] = numpy.sum(x118 * x309 * x379)
    result[2, 1, 6] = numpy.sum(x137 * x310 * x364)
    result[2, 1, 7] = numpy.sum(x125 * x378 * x96)
    result[2, 1, 8] = numpy.sum(x120 * x304 * x368)
    result[2, 1, 9] = numpy.sum(x118 * x310 * x371)
    result[2, 1, 10] = numpy.sum(x141 * x311 * x364)
    result[2, 1, 11] = numpy.sum(x137 * x284 * x365)
    result[2, 1, 12] = numpy.sum(x128 * x284 * x379)
    result[2, 1, 13] = numpy.sum(x122 * x284 * x371)
    result[2, 1, 14] = numpy.sum(x118 * x311 * x375)
    result[2, 2, 0] = numpy.sum(x290 * x382 * x77)
    result[2, 2, 1] = numpy.sum(x219 * x381 * x51)
    result[2, 2, 2] = numpy.sum(x210 * x384 * x51)
    result[2, 2, 3] = numpy.sum(x155 * x381 * x44)
    result[2, 2, 4] = numpy.sum(x102 * x385 * x44)
    result[2, 2, 5] = numpy.sum(x388 * x389 * x44)
    result[2, 2, 6] = numpy.sum(x162 * x381 * x96)
    result[2, 2, 7] = numpy.sum(x304 * x384 * x80)
    result[2, 2, 8] = numpy.sum(x102 * x304 * x388)
    result[2, 2, 9] = numpy.sum(x210 * x393 * x96)
    result[2, 2, 10] = numpy.sum(x106 * x284 * x382)
    result[2, 2, 11] = numpy.sum(x162 * x284 * x384)
    result[2, 2, 12] = numpy.sum(x155 * x284 * x388)
    result[2, 2, 13] = numpy.sum(x219 * x284 * x393)
    result[2, 2, 14] = numpy.sum(x284 * x394 * x395)
    result[2, 3, 0] = numpy.sum(x243 * x313 * x364)
    result[2, 3, 1] = numpy.sum(x173 * x244 * x364)
    result[2, 3, 2] = numpy.sum(x170 * x173 * x365)
    result[2, 3, 3] = numpy.sum(x246 * x26 * x377)
    result[2, 3, 4] = numpy.sum(x178 * x26 * x378)
    result[2, 3, 5] = numpy.sum(x26 * x379 * x396)
    result[2, 3, 6] = numpy.sum(x189 * x322 * x364)
    result[2, 3, 7] = numpy.sum(x182 * x24 * x378)
    result[2, 3, 8] = numpy.sum(x178 * x323 * x368)
    result[2, 3, 9] = numpy.sum(x170 * x322 * x371)
    result[2, 3, 10] = numpy.sum(x192 * x327 * x360)
    result[2, 3, 11] = numpy.sum(x189 * x21 * x365)
    result[2, 3, 12] = numpy.sum(x21 * x246 * x379)
    result[2, 3, 13] = numpy.sum(x21 * x244 * x371)
    result[2, 3, 14] = numpy.sum(x21 * x243 * x375)
    result[2, 4, 0] = numpy.sum(x118 * x313 * x397)
    result[2, 4, 1] = numpy.sum(x121 * x173 * x398)
    result[2, 4, 2] = numpy.sum(x173 * x399 * x400)
    result[2, 4, 3] = numpy.sum(x125 * x318 * x381)
    result[2, 4, 4] = numpy.sum(x318 * x384 * x401)
    result[2, 4, 5] = numpy.sum(x118 * x318 * x388)
    result[2, 4, 6] = numpy.sum(x137 * x334 * x398)
    result[2, 4, 7] = numpy.sum(x127 * x323 * x384)
    result[2, 4, 8] = numpy.sum(x323 * x388 * x401)
    result[2, 4, 9] = numpy.sum(x334 * x393 * x399)
    result[2, 4, 10] = numpy.sum(x141 * x21 * x397)
    result[2, 4, 11] = numpy.sum(x137 * x335 * x400)
    result[2, 4, 12] = numpy.sum(x198 * x21 * x388)
    result[2, 4, 13] = numpy.sum(x121 * x335 * x393)
    result[2, 4, 14] = numpy.sum(x196 * x394 * x402)
    result[2, 5, 0] = numpy.sum(x313 * x395 * x403)
    result[2, 5, 1] = numpy.sum(x173 * x219 * x403)
    result[2, 5, 2] = numpy.sum(x173 * x210 * x405)
    result[2, 5, 3] = numpy.sum(x155 * x26 * x403)
    result[2, 5, 4] = numpy.sum(x102 * x318 * x405)
    result[2, 5, 5] = numpy.sum(x26 * x389 * x407)
    result[2, 5, 6] = numpy.sum(x162 * x24 * x403)
    result[2, 5, 7] = numpy.sum(x323 * x405 * x80)
    result[2, 5, 8] = numpy.sum(x102 * x323 * x407)
    result[2, 5, 9] = numpy.sum(x322 * x410 * x77)
    result[2, 5, 10] = numpy.sum(x106 * x21 * x411)
    result[2, 5, 11] = numpy.sum(x162 * x21 * x405)
    result[2, 5, 12] = numpy.sum(x155 * x21 * x407)
    result[2, 5, 13] = numpy.sum(x149 * x402 * x410)
    result[2, 5, 14] = numpy.sum(x338 * x413)
    result[2, 6, 0] = numpy.sum(x222 * x340 * x373)
    result[2, 6, 1] = numpy.sum(x228 * x357 * x364)
    result[2, 6, 2] = numpy.sum(x222 * x225 * x363)
    result[2, 6, 3] = numpy.sum(x231 * x364 * x414)
    result[2, 6, 4] = numpy.sum(x223 * x228 * x365)
    result[2, 6, 5] = numpy.sum(x222 * x344 * x369)
    result[2, 6, 6] = numpy.sum(x240 * x347 * x360)
    result[2, 6, 7] = numpy.sum(x11 * x231 * x365)
    result[2, 6, 8] = numpy.sum(x228 * x349 * x368)
    result[2, 6, 9] = numpy.sum(x222 * x359 * x371)
    result[2, 6, 10] = numpy.sum(x239 * x360)
    result[2, 6, 11] = numpy.sum(x234 * x363 * x8)
    result[2, 6, 12] = numpy.sum(x231 * x354 * x369)
    result[2, 6, 13] = numpy.sum(x228 * x350 * x371)
    result[2, 6, 14] = numpy.sum(x222 * x351 * x375)
    result[2, 7, 0] = numpy.sum(x170 * x340 * x382)
    result[2, 7, 1] = numpy.sum(x178 * x352 * x381)
    result[2, 7, 2] = numpy.sum(x170 * x352 * x384)
    result[2, 7, 3] = numpy.sum(x182 * x353 * x381)
    result[2, 7, 4] = numpy.sum(x178 * x384 * x415)
    result[2, 7, 5] = numpy.sum(x344 * x388 * x396)
    result[2, 7, 6] = numpy.sum(x189 * x349 * x381)
    result[2, 7, 7] = numpy.sum(x11 * x182 * x385)
    result[2, 7, 8] = numpy.sum(x178 * x388 * x416)
    result[2, 7, 9] = numpy.sum(x170 * x349 * x393)
    result[2, 7, 10] = numpy.sum(x192 * x382 * x8)
    result[2, 7, 11] = numpy.sum(x189 * x355 * x384)
    result[2, 7, 12] = numpy.sum(x246 * x354 * x388)
    result[2, 7, 13] = numpy.sum(x178 * x355 * x393)
    result[2, 7, 14] = numpy.sum(x170 * x356 * x394)
    result[2, 8, 0] = numpy.sum(x118 * x340 * x411)
    result[2, 8, 1] = numpy.sum(x122 * x225 * x403)
    result[2, 8, 2] = numpy.sum(x118 * x352 * x405)
    result[2, 8, 3] = numpy.sum(x128 * x344 * x403)
    result[2, 8, 4] = numpy.sum(x120 * x405 * x415)
    result[2, 8, 5] = numpy.sum(x118 * x353 * x407)
    result[2, 8, 6] = numpy.sum(x137 * x349 * x403)
    result[2, 8, 7] = numpy.sum(x11 * x198 * x405)
    result[2, 8, 8] = numpy.sum(x120 * x407 * x416)
    result[2, 8, 9] = numpy.sum(x114 * x410 * x417 * x84)
    result[2, 8, 10] = numpy.sum(x141 * x356 * x403)
    result[2, 8, 11] = numpy.sum(x137 * x355 * x405)
    result[2, 8, 12] = numpy.sum(x128 * x354 * x407)
    result[2, 8, 13] = numpy.sum(x122 * x410 * x8)
    result[2, 8, 14] = numpy.sum(x255 * x413)
    result[2, 9, 0] = numpy.sum(x340 * x376 * x418)
    result[2, 9, 1] = numpy.sum(x102 * x357 * x418)
    result[2, 9, 2] = numpy.sum(x225 * x372 * x419)
    result[2, 9, 3] = numpy.sum(x223 * x418 * x82)
    result[2, 9, 4] = numpy.sum(x219 * x223 * x419)
    result[2, 9, 5] = numpy.sum(x414 * x421 * x77)
    result[2, 9, 6] = numpy.sum(x359 * x418 * x93)
    result[2, 9, 7] = numpy.sum(x349 * x419 * x80)
    result[2, 9, 8] = numpy.sum(x149 * x417 * x421)
    result[2, 9, 9] = numpy.sum(x347 * x423)
    result[2, 9, 10] = numpy.sum(x106 * x351 * x418)
    result[2, 9, 11] = numpy.sum(x350 * x419 * x93)
    result[2, 9, 12] = numpy.sum(x421 * x8 * x82)
    result[2, 9, 13] = numpy.sum(x423 * x68)
    result[2, 9, 14] = numpy.sum(
        x263 * (x0 * (x261 + 6.0 * x408 + 3.0 * x409 + 3.0 * x420) + x422 * x71)
    )
    return result


def dipole3d_40(ax, da, A, bx, db, B, R):
    """Cartesian 3D (gs) dipole moment integrals.
    The origin is at R.

    Generated code; DO NOT modify by hand!"""

    result = numpy.zeros((3, 15, 1), dtype=float)

    x0 = 0.5 / (ax + bx)
    x1 = (ax + bx) ** (-1.0)
    x2 = -x1 * (ax * A[0] + bx * B[0])
    x3 = -x2 - A[0]
    x4 = ax * bx * x1
    x5 = numpy.exp(-x4 * (A[0] - B[0]) ** 2)
    x6 = 1.772453850905516 * numpy.sqrt(x1)
    x7 = x5 * x6
    x8 = x3 * x7
    x9 = -x2 - R[0]
    x10 = x7 * x9
    x11 = x0 * (x10 + x8)
    x12 = x0 * x7
    x13 = x8 * x9
    x14 = x12 + x13
    x15 = x14 * x3
    x16 = x3**2 * x7
    x17 = x12 + x16
    x18 = x3 * (2.0 * x12 + x17)
    x19 = 3.0 * x12
    x20 = x11 + x15
    x21 = x0 * (2.0 * x13 + x16 + x19) + x20 * x3
    x22 = numpy.exp(-x4 * (A[1] - B[1]) ** 2)
    x23 = da * db
    x24 = numpy.exp(-x4 * (A[2] - B[2]) ** 2)
    x25 = 3.141592653589793 * x1 * x24
    x26 = x23 * x25
    x27 = x22 * x26
    x28 = 0.09759000729485332
    x29 = x27 * x28
    x30 = -x1 * (ax * A[1] + bx * B[1])
    x31 = -x30 - A[1]
    x32 = 0.2581988897471611
    x33 = x27 * x32
    x34 = x21 * x33
    x35 = -x1 * (ax * A[2] + bx * B[2])
    x36 = -x35 - A[2]
    x37 = x22 * x6
    x38 = x31**2 * x37
    x39 = x0 * x37
    x40 = x38 + x39
    x41 = x24 * x6
    x42 = 0.3333333333333333 * x23
    x43 = x20 * x42
    x44 = 1.732050807568877
    x45 = x31 * x44
    x46 = x25 * x36
    x47 = x36**2 * x41
    x48 = x0 * x41
    x49 = x47 + x48
    x50 = x31 * (2.0 * x39 + x40)
    x51 = x23 * x32
    x52 = x14 * x51
    x53 = x36 * x41
    x54 = x40 * x42
    x55 = x14 * x44
    x56 = x31 * x37
    x57 = x42 * x49
    x58 = x36 * (2.0 * x48 + x49)
    x59 = 3.0 * x39
    x60 = x28 * x5
    x61 = x26 * x60
    x62 = x61 * (x0 * (3.0 * x38 + x59) + x31 * x50)
    x63 = x36 * x5
    x64 = x26 * x32
    x65 = x50 * x64
    x66 = x31 * x5
    x67 = 3.141592653589793 * x1 * x22
    x68 = x51 * x67
    x69 = x58 * x68
    x70 = 3.0 * x48
    x71 = x23 * x60 * x67
    x72 = x71 * (x0 * (3.0 * x47 + x70) + x36 * x58)
    x73 = -x30 - R[1]
    x74 = x29 * (x0 * (3.0 * x16 + x19) + x18 * x3)
    x75 = x56 * x73
    x76 = x39 + x75
    x77 = x51 * x76
    x78 = x18 * x33
    x79 = x37 * x73
    x80 = x0 * (x56 + x79)
    x81 = x31 * x76
    x82 = x80 + x81
    x83 = x42 * x82
    x84 = x44 * x76
    x85 = x17 * x42
    x86 = x3 * x5
    x87 = x0 * (x38 + x59 + 2.0 * x75) + x31 * x82
    x88 = x64 * x87
    x89 = -x35 - R[2]
    x90 = x53 * x89
    x91 = x48 + x90
    x92 = x51 * x91
    x93 = x41 * x89
    x94 = x44 * x91
    x95 = x0 * (x53 + x93)
    x96 = x36 * x91
    x97 = x95 + x96
    x98 = x42 * x97
    x99 = x0 * (x47 + x70 + 2.0 * x90) + x36 * x97
    x100 = x68 * x99

    # 45 item(s)
    result[0, 0, 0] = numpy.sum(x29 * (x0 * (3.0 * x11 + 3.0 * x15 + x18) + x21 * x3))
    result[0, 1, 0] = numpy.sum(x31 * x34)
    result[0, 2, 0] = numpy.sum(x34 * x36)
    result[0, 3, 0] = numpy.sum(x40 * x41 * x43)
    result[0, 4, 0] = numpy.sum(x22 * x43 * x45 * x46)
    result[0, 5, 0] = numpy.sum(x37 * x43 * x49)
    result[0, 6, 0] = numpy.sum(x41 * x50 * x52)
    result[0, 7, 0] = numpy.sum(x53 * x54 * x55)
    result[0, 8, 0] = numpy.sum(x55 * x56 * x57)
    result[0, 9, 0] = numpy.sum(x37 * x52 * x58)
    result[0, 10, 0] = numpy.sum(x62 * x9)
    result[0, 11, 0] = numpy.sum(x63 * x65 * x9)
    result[0, 12, 0] = numpy.sum(x10 * x40 * x57)
    result[0, 13, 0] = numpy.sum(x66 * x69 * x9)
    result[0, 14, 0] = numpy.sum(x72 * x9)
    result[1, 0, 0] = numpy.sum(x73 * x74)
    result[1, 1, 0] = numpy.sum(x18 * x41 * x77)
    result[1, 2, 0] = numpy.sum(x36 * x73 * x78)
    result[1, 3, 0] = numpy.sum(x17 * x41 * x83)
    result[1, 4, 0] = numpy.sum(x53 * x84 * x85)
    result[1, 5, 0] = numpy.sum(x17 * x57 * x79)
    result[1, 6, 0] = numpy.sum(x86 * x88)
    result[1, 7, 0] = numpy.sum(x44 * x46 * x83 * x86)
    result[1, 8, 0] = numpy.sum(x57 * x8 * x84)
    result[1, 9, 0] = numpy.sum(x69 * x73 * x86)
    result[1, 10, 0] = numpy.sum(x61 * (x0 * (x50 + 3.0 * x80 + 3.0 * x81) + x31 * x87))
    result[1, 11, 0] = numpy.sum(x63 * x88)
    result[1, 12, 0] = numpy.sum(x49 * x7 * x83)
    result[1, 13, 0] = numpy.sum(x58 * x7 * x77)
    result[1, 14, 0] = numpy.sum(x72 * x73)
    result[2, 0, 0] = numpy.sum(x74 * x89)
    result[2, 1, 0] = numpy.sum(x31 * x78 * x89)
    result[2, 2, 0] = numpy.sum(x18 * x37 * x92)
    result[2, 3, 0] = numpy.sum(x17 * x54 * x93)
    result[2, 4, 0] = numpy.sum(x56 * x85 * x94)
    result[2, 5, 0] = numpy.sum(x17 * x37 * x98)
    result[2, 6, 0] = numpy.sum(x65 * x86 * x89)
    result[2, 7, 0] = numpy.sum(x54 * x8 * x94)
    result[2, 8, 0] = numpy.sum(x45 * x67 * x86 * x98)
    result[2, 9, 0] = numpy.sum(x100 * x86)
    result[2, 10, 0] = numpy.sum(x62 * x89)
    result[2, 11, 0] = numpy.sum(x50 * x7 * x92)
    result[2, 12, 0] = numpy.sum(x40 * x7 * x98)
    result[2, 13, 0] = numpy.sum(x100 * x66)
    result[2, 14, 0] = numpy.sum(x71 * (x0 * (x58 + 3.0 * x95 + 3.0 * x96) + x36 * x99))
    return result


def dipole3d_41(ax, da, A, bx, db, B, R):
    """Cartesian 3D (gp) dipole moment integrals.
    The origin is at R.

    Generated code; DO NOT modify by hand!"""

    result = numpy.zeros((3, 15, 3), dtype=float)

    x0 = 0.5 / (ax + bx)
    x1 = (ax + bx) ** (-1.0)
    x2 = ax * bx * x1
    x3 = numpy.exp(-x2 * (A[0] - B[0]) ** 2)
    x4 = 1.772453850905516 * numpy.sqrt(x1)
    x5 = x3 * x4
    x6 = x0 * x5
    x7 = 3.0 * x6
    x8 = -x1 * (ax * A[0] + bx * B[0])
    x9 = -x8 - B[0]
    x10 = -x8 - A[0]
    x11 = x10 * x5
    x12 = x11 * x9
    x13 = -x8 - R[0]
    x14 = x11 * x13
    x15 = x5 * x9
    x16 = x13 * x15
    x17 = x0 * (x12 + x14 + x16 + x7)
    x18 = x13 * x5
    x19 = x0 * (x15 + x18)
    x20 = x16 + x6
    x21 = x10 * x20
    x22 = x19 + x21
    x23 = x10 * x22
    x24 = x10**2 * x5
    x25 = x24 + x7
    x26 = x0 * (x11 + x18)
    x27 = x14 + x6
    x28 = x10 * x27
    x29 = x26 + x28
    x30 = x0 * (2.0 * x14 + x25) + x10 * x29
    x31 = x0 * (x11 + x15)
    x32 = x12 + x6
    x33 = x10 * x32
    x34 = x31 + x33
    x35 = x0 * (2.0 * x12 + x25) + x10 * x34
    x36 = x17 + x23
    x37 = x0 * (2.0 * x19 + 2.0 * x21 + x29 + x34) + x10 * x36
    x38 = da * db
    x39 = 0.09759000729485332 * x38
    x40 = numpy.exp(-x2 * (A[1] - B[1]) ** 2)
    x41 = numpy.exp(-x2 * (A[2] - B[2]) ** 2)
    x42 = 3.141592653589793 * x1 * x41
    x43 = x40 * x42
    x44 = x39 * x43
    x45 = -x1 * (ax * A[1] + bx * B[1])
    x46 = -x45 - B[1]
    x47 = x24 + x6
    x48 = 2.0 * x0 * x11 + x10 * x47
    x49 = x44 * (x0 * (3.0 * x26 + 3.0 * x28 + x48) + x10 * x30)
    x50 = -x1 * (ax * A[2] + bx * B[2])
    x51 = -x50 - B[2]
    x52 = -x45 - A[1]
    x53 = 0.2581988897471611 * x38
    x54 = x52 * x53
    x55 = x37 * x43
    x56 = x0 * x4
    x57 = x40 * x56
    x58 = x4 * x40
    x59 = x52 * x58
    x60 = x46 * x59
    x61 = x57 + x60
    x62 = x4 * x41
    x63 = x30 * x53
    x64 = x43 * x63
    x65 = -x50 - A[2]
    x66 = x53 * x65
    x67 = x41 * x56
    x68 = x62 * x65
    x69 = x51 * x68
    x70 = x67 + x69
    x71 = x52**2 * x58
    x72 = x57 + x71
    x73 = 0.3333333333333333 * x38
    x74 = x72 * x73
    x75 = x46 * x58
    x76 = x0 * (x59 + x75)
    x77 = x52 * x61
    x78 = x76 + x77
    x79 = x29 * x73
    x80 = x51 * x62
    x81 = 1.732050807568877
    x82 = x65 * x73 * x81
    x83 = x79 * x81
    x84 = x62 * x65**2
    x85 = x67 + x84
    x86 = x73 * x85
    x87 = x0 * (x68 + x80)
    x88 = x65 * x70
    x89 = x87 + x88
    x90 = x52 * (2.0 * x57 + x72)
    x91 = x53 * x62
    x92 = 3.0 * x57
    x93 = x71 + x92
    x94 = x0 * (2.0 * x60 + x93) + x52 * x78
    x95 = x27 * x53
    x96 = x22 * x81
    x97 = x27 * x81
    x98 = x73 * x97
    x99 = x65 * (2.0 * x67 + x85)
    x100 = x53 * x58
    x101 = 3.0 * x67
    x102 = x101 + x84
    x103 = x0 * (x102 + 2.0 * x69) + x65 * x89
    x104 = x0 * (3.0 * x71 + x92) + x52 * x90
    x105 = x20 * x39
    x106 = x3 * x39
    x107 = x106 * x42
    x108 = x107 * (x0 * (3.0 * x76 + 3.0 * x77 + x90) + x52 * x94)
    x109 = x104 * x107
    x110 = x53 * x90
    x111 = x3 * x42
    x112 = x111 * x66
    x113 = x53 * x99
    x114 = 3.141592653589793 * x1 * x40
    x115 = x114 * x3
    x116 = x103 * x115
    x117 = x0 * (x101 + 3.0 * x84) + x65 * x99
    x118 = x106 * x114
    x119 = x117 * x118
    x120 = x118 * (x0 * (3.0 * x87 + 3.0 * x88 + x99) + x103 * x65)
    x121 = -x45 - R[1]
    x122 = x44 * (x0 * (3.0 * x31 + 3.0 * x33 + x48) + x10 * x35)
    x123 = x0 * (3.0 * x24 + x7) + x10 * x48
    x124 = x121 * x75
    x125 = x124 + x57
    x126 = x125 * x39
    x127 = x123 * x44
    x128 = x121 * x59
    x129 = x128 + x57
    x130 = x121 * x58
    x131 = x0 * (x130 + x75)
    x132 = x125 * x52
    x133 = x131 + x132
    x134 = x48 * x53
    x135 = x35 * x43
    x136 = x0 * (x130 + x59)
    x137 = x129 * x52
    x138 = x136 + x137
    x139 = x138 * x73
    x140 = x0 * (x124 + x128 + x60 + x92)
    x141 = x133 * x52
    x142 = x140 + x141
    x143 = x47 * x73
    x144 = x129 * x81
    x145 = x144 * x73
    x146 = x68 * x81
    x147 = x0 * (2.0 * x128 + x93) + x138 * x52
    x148 = x0 * (2.0 * x131 + 2.0 * x132 + x138 + x78) + x142 * x52
    x149 = x111 * x148
    x150 = x10 * x53
    x151 = x111 * x150
    x152 = x11 * x81
    x153 = x107 * (x0 * (3.0 * x136 + 3.0 * x137 + x90) + x147 * x52)
    x154 = x5 * x53
    x155 = -x50 - R[2]
    x156 = x155 * x80
    x157 = x156 + x67
    x158 = x157 * x39
    x159 = x155 * x62
    x160 = x155 * x68
    x161 = x160 + x67
    x162 = x0 * (x159 + x80)
    x163 = x157 * x65
    x164 = x162 + x163
    x165 = x161 * x81
    x166 = x165 * x73
    x167 = x59 * x81
    x168 = x0 * (x159 + x68)
    x169 = x161 * x65
    x170 = x168 + x169
    x171 = x170 * x73
    x172 = x0 * (x101 + x156 + x160 + x69)
    x173 = x164 * x65
    x174 = x172 + x173
    x175 = x0 * (x102 + 2.0 * x160) + x170 * x65
    x176 = x115 * x175
    x177 = x0 * (2.0 * x162 + 2.0 * x163 + x170 + x89) + x174 * x65
    x178 = x115 * x177
    x179 = x118 * (x0 * (3.0 * x168 + 3.0 * x169 + x99) + x175 * x65)

    # 135 item(s)
    result[0, 0, 0] = numpy.sum(
        x44 * (x0 * (3.0 * x17 + 3.0 * x23 + x30 + x35) + x10 * x37)
    )
    result[0, 0, 1] = numpy.sum(x46 * x49)
    result[0, 0, 2] = numpy.sum(x49 * x51)
    result[0, 1, 0] = numpy.sum(x54 * x55)
    result[0, 1, 1] = numpy.sum(x61 * x62 * x63)
    result[0, 1, 2] = numpy.sum(x51 * x52 * x64)
    result[0, 2, 0] = numpy.sum(x55 * x66)
    result[0, 2, 1] = numpy.sum(x46 * x64 * x65)
    result[0, 2, 2] = numpy.sum(x58 * x63 * x70)
    result[0, 3, 0] = numpy.sum(x36 * x62 * x74)
    result[0, 3, 1] = numpy.sum(x62 * x78 * x79)
    result[0, 3, 2] = numpy.sum(x29 * x74 * x80)
    result[0, 4, 0] = numpy.sum(x36 * x43 * x52 * x82)
    result[0, 4, 1] = numpy.sum(x61 * x68 * x83)
    result[0, 4, 2] = numpy.sum(x59 * x70 * x83)
    result[0, 5, 0] = numpy.sum(x36 * x58 * x86)
    result[0, 5, 1] = numpy.sum(x29 * x75 * x86)
    result[0, 5, 2] = numpy.sum(x58 * x79 * x89)
    result[0, 6, 0] = numpy.sum(x22 * x90 * x91)
    result[0, 6, 1] = numpy.sum(x27 * x91 * x94)
    result[0, 6, 2] = numpy.sum(x80 * x90 * x95)
    result[0, 7, 0] = numpy.sum(x68 * x74 * x96)
    result[0, 7, 1] = numpy.sum(x68 * x78 * x98)
    result[0, 7, 2] = numpy.sum(x70 * x74 * x97)
    result[0, 8, 0] = numpy.sum(x59 * x86 * x96)
    result[0, 8, 1] = numpy.sum(x61 * x86 * x97)
    result[0, 8, 2] = numpy.sum(x59 * x89 * x98)
    result[0, 9, 0] = numpy.sum(x100 * x22 * x99)
    result[0, 9, 1] = numpy.sum(x75 * x95 * x99)
    result[0, 9, 2] = numpy.sum(x100 * x103 * x27)
    result[0, 10, 0] = numpy.sum(x104 * x105 * x62)
    result[0, 10, 1] = numpy.sum(x108 * x13)
    result[0, 10, 2] = numpy.sum(x109 * x13 * x51)
    result[0, 11, 0] = numpy.sum(x110 * x20 * x68)
    result[0, 11, 1] = numpy.sum(x112 * x13 * x94)
    result[0, 11, 2] = numpy.sum(x110 * x18 * x70)
    result[0, 12, 0] = numpy.sum(x20 * x72 * x86)
    result[0, 12, 1] = numpy.sum(x18 * x78 * x86)
    result[0, 12, 2] = numpy.sum(x18 * x74 * x89)
    result[0, 13, 0] = numpy.sum(x113 * x20 * x59)
    result[0, 13, 1] = numpy.sum(x113 * x18 * x61)
    result[0, 13, 2] = numpy.sum(x116 * x13 * x54)
    result[0, 14, 0] = numpy.sum(x105 * x117 * x58)
    result[0, 14, 1] = numpy.sum(x119 * x13 * x46)
    result[0, 14, 2] = numpy.sum(x120 * x13)
    result[1, 0, 0] = numpy.sum(x121 * x122)
    result[1, 0, 1] = numpy.sum(x123 * x126 * x62)
    result[1, 0, 2] = numpy.sum(x121 * x127 * x51)
    result[1, 1, 0] = numpy.sum(x129 * x35 * x91)
    result[1, 1, 1] = numpy.sum(x133 * x48 * x91)
    result[1, 1, 2] = numpy.sum(x129 * x134 * x80)
    result[1, 2, 0] = numpy.sum(x121 * x135 * x66)
    result[1, 2, 1] = numpy.sum(x125 * x134 * x68)
    result[1, 2, 2] = numpy.sum(x130 * x134 * x70)
    result[1, 3, 0] = numpy.sum(x139 * x34 * x62)
    result[1, 3, 1] = numpy.sum(x142 * x143 * x62)
    result[1, 3, 2] = numpy.sum(x138 * x143 * x80)
    result[1, 4, 0] = numpy.sum(x145 * x34 * x68)
    result[1, 4, 1] = numpy.sum(x133 * x143 * x146)
    result[1, 4, 2] = numpy.sum(x143 * x144 * x70)
    result[1, 5, 0] = numpy.sum(x130 * x34 * x86)
    result[1, 5, 1] = numpy.sum(x125 * x47 * x86)
    result[1, 5, 2] = numpy.sum(x130 * x143 * x89)
    result[1, 6, 0] = numpy.sum(x147 * x32 * x91)
    result[1, 6, 1] = numpy.sum(x149 * x150)
    result[1, 6, 2] = numpy.sum(x147 * x151 * x51)
    result[1, 7, 0] = numpy.sum(x139 * x146 * x32)
    result[1, 7, 1] = numpy.sum(x10 * x111 * x142 * x82)
    result[1, 7, 2] = numpy.sum(x139 * x152 * x70)
    result[1, 8, 0] = numpy.sum(x144 * x32 * x86)
    result[1, 8, 1] = numpy.sum(x133 * x152 * x86)
    result[1, 8, 2] = numpy.sum(x11 * x145 * x89)
    result[1, 9, 0] = numpy.sum(x113 * x130 * x32)
    result[1, 9, 1] = numpy.sum(x11 * x113 * x125)
    result[1, 9, 2] = numpy.sum(x116 * x121 * x150)
    result[1, 10, 0] = numpy.sum(x153 * x9)
    result[1, 10, 1] = numpy.sum(
        x107 * (x0 * (3.0 * x140 + 3.0 * x141 + x147 + x94) + x148 * x52)
    )
    result[1, 10, 2] = numpy.sum(x153 * x51)
    result[1, 11, 0] = numpy.sum(x112 * x147 * x9)
    result[1, 11, 1] = numpy.sum(x149 * x66)
    result[1, 11, 2] = numpy.sum(x147 * x154 * x70)
    result[1, 12, 0] = numpy.sum(x138 * x15 * x86)
    result[1, 12, 1] = numpy.sum(x142 * x5 * x86)
    result[1, 12, 2] = numpy.sum(x139 * x5 * x89)
    result[1, 13, 0] = numpy.sum(x113 * x129 * x15)
    result[1, 13, 1] = numpy.sum(x133 * x154 * x99)
    result[1, 13, 2] = numpy.sum(x103 * x129 * x154)
    result[1, 14, 0] = numpy.sum(x119 * x121 * x9)
    result[1, 14, 1] = numpy.sum(x117 * x126 * x5)
    result[1, 14, 2] = numpy.sum(x120 * x121)
    result[2, 0, 0] = numpy.sum(x122 * x155)
    result[2, 0, 1] = numpy.sum(x127 * x155 * x46)
    result[2, 0, 2] = numpy.sum(x123 * x158 * x58)
    result[2, 1, 0] = numpy.sum(x135 * x155 * x54)
    result[2, 1, 1] = numpy.sum(x134 * x159 * x61)
    result[2, 1, 2] = numpy.sum(x134 * x157 * x59)
    result[2, 2, 0] = numpy.sum(x100 * x161 * x35)
    result[2, 2, 1] = numpy.sum(x134 * x161 * x75)
    result[2, 2, 2] = numpy.sum(x100 * x164 * x48)
    result[2, 3, 0] = numpy.sum(x159 * x34 * x74)
    result[2, 3, 1] = numpy.sum(x143 * x159 * x78)
    result[2, 3, 2] = numpy.sum(x157 * x47 * x74)
    result[2, 4, 0] = numpy.sum(x166 * x34 * x59)
    result[2, 4, 1] = numpy.sum(x143 * x165 * x61)
    result[2, 4, 2] = numpy.sum(x143 * x164 * x167)
    result[2, 5, 0] = numpy.sum(x171 * x34 * x58)
    result[2, 5, 1] = numpy.sum(x143 * x170 * x75)
    result[2, 5, 2] = numpy.sum(x143 * x174 * x58)
    result[2, 6, 0] = numpy.sum(x110 * x159 * x32)
    result[2, 6, 1] = numpy.sum(x151 * x155 * x94)
    result[2, 6, 2] = numpy.sum(x11 * x110 * x157)
    result[2, 7, 0] = numpy.sum(x165 * x32 * x74)
    result[2, 7, 1] = numpy.sum(x11 * x166 * x78)
    result[2, 7, 2] = numpy.sum(x152 * x164 * x74)
    result[2, 8, 0] = numpy.sum(x167 * x171 * x32)
    result[2, 8, 1] = numpy.sum(x152 * x171 * x61)
    result[2, 8, 2] = numpy.sum(x10 * x115 * x174 * x52 * x73 * x81)
    result[2, 9, 0] = numpy.sum(x100 * x175 * x32)
    result[2, 9, 1] = numpy.sum(x150 * x176 * x46)
    result[2, 9, 2] = numpy.sum(x150 * x178)
    result[2, 10, 0] = numpy.sum(x109 * x155 * x9)
    result[2, 10, 1] = numpy.sum(x108 * x155)
    result[2, 10, 2] = numpy.sum(x104 * x158 * x5)
    result[2, 11, 0] = numpy.sum(x110 * x15 * x161)
    result[2, 11, 1] = numpy.sum(x154 * x161 * x94)
    result[2, 11, 2] = numpy.sum(x154 * x164 * x90)
    result[2, 12, 0] = numpy.sum(x15 * x170 * x74)
    result[2, 12, 1] = numpy.sum(x171 * x5 * x78)
    result[2, 12, 2] = numpy.sum(x174 * x5 * x74)
    result[2, 13, 0] = numpy.sum(x176 * x54 * x9)
    result[2, 13, 1] = numpy.sum(x154 * x175 * x61)
    result[2, 13, 2] = numpy.sum(x178 * x54)
    result[2, 14, 0] = numpy.sum(x179 * x9)
    result[2, 14, 1] = numpy.sum(x179 * x46)
    result[2, 14, 2] = numpy.sum(
        x118 * (x0 * (x103 + 3.0 * x172 + 3.0 * x173 + x175) + x177 * x65)
    )
    return result


def dipole3d_42(ax, da, A, bx, db, B, R):
    """Cartesian 3D (gd) dipole moment integrals.
    The origin is at R.

    Generated code; DO NOT modify by hand!"""

    result = numpy.zeros((3, 15, 6), dtype=float)

    x0 = 0.5 / (ax + bx)
    x1 = (ax + bx) ** (-1.0)
    x2 = -x1 * (ax * A[0] + bx * B[0])
    x3 = -x2 - A[0]
    x4 = ax * bx * x1
    x5 = numpy.exp(-x4 * (A[0] - B[0]) ** 2)
    x6 = 1.772453850905516 * numpy.sqrt(x1)
    x7 = x5 * x6
    x8 = x0 * x7
    x9 = -x2 - R[0]
    x10 = -x2 - B[0]
    x11 = x10 * x7
    x12 = x11 * x9
    x13 = x12 + x8
    x14 = x13 * x3
    x15 = 2.0 * x14
    x16 = x7 * x9
    x17 = x0 * (x11 + x16)
    x18 = x3 * x7
    x19 = x0 * (x11 + x18)
    x20 = x10 * x18
    x21 = x20 + x8
    x22 = x21 * x3
    x23 = x19 + x22
    x24 = x0 * (x16 + x18)
    x25 = x18 * x9
    x26 = x25 + x8
    x27 = x26 * x3
    x28 = x24 + x27
    x29 = x0 * (x15 + 2.0 * x17 + x23 + x28)
    x30 = 3.0 * x8
    x31 = x0 * (x12 + x20 + x25 + x30)
    x32 = x14 + x17
    x33 = x3 * x32
    x34 = x31 + x33
    x35 = x3 * x34
    x36 = x10 * x13
    x37 = x10 * x21
    x38 = x19 + x37
    x39 = x0 * (x15 + 3.0 * x17 + x36 + x38)
    x40 = x10 * x32
    x41 = x31 + x40
    x42 = x3 * x41
    x43 = x10**2 * x7
    x44 = 2.0 * x20 + x30
    x45 = x0 * (x43 + x44)
    x46 = x3 * x38
    x47 = x45 + x46
    x48 = 2.0 * x0 * (2.0 * x19 + x22 + x37) + x3 * x47
    x49 = x39 + x42
    x50 = x0 * (4.0 * x31 + 2.0 * x33 + 2.0 * x40 + x47) + x3 * x49
    x51 = da * db
    x52 = 0.0563436169819011
    x53 = x51 * x52
    x54 = numpy.exp(-x4 * (A[1] - B[1]) ** 2)
    x55 = numpy.exp(-x4 * (A[2] - B[2]) ** 2)
    x56 = 3.141592653589793 * x1 * x55
    x57 = x54 * x56
    x58 = x53 * x57
    x59 = -x1 * (ax * A[1] + bx * B[1])
    x60 = -x59 - B[1]
    x61 = x57 * x60
    x62 = x3**2 * x7
    x63 = x0 * (2.0 * x25 + x30 + x62) + x28 * x3
    x64 = x0 * (x44 + x62)
    x65 = x23 * x3
    x66 = x64 + x65
    x67 = x29 + x35
    x68 = 0.09759000729485332
    x69 = x51 * x68
    x70 = x69 * (x0 * (3.0 * x31 + 3.0 * x33 + x63 + x66) + x3 * x67)
    x71 = -x1 * (ax * A[2] + bx * B[2])
    x72 = -x71 - B[2]
    x73 = x57 * x72
    x74 = x55 * x6
    x75 = x54 * x6
    x76 = x60**2 * x75
    x77 = x0 * x75
    x78 = x51 * (x76 + x77)
    x79 = x62 + x8
    x80 = x3 * (x79 + 2.0 * x8)
    x81 = x0 * (3.0 * x24 + 3.0 * x27 + x80) + x3 * x63
    x82 = x52 * x81
    x83 = x69 * x72
    x84 = x72**2 * x74
    x85 = x0 * x74
    x86 = x51 * (x84 + x85)
    x87 = -x59 - A[1]
    x88 = x57 * x87
    x89 = 2.23606797749979
    x90 = x51 * x89
    x91 = 0.06666666666666667 * x90
    x92 = x50 * x91
    x93 = x75 * x87
    x94 = x60 * x93
    x95 = x77 + x94
    x96 = 0.06666666666666667 * x74
    x97 = 3.872983346207417 * x51
    x98 = x67 * x97
    x99 = 0.06666666666666667 * x98
    x100 = x60 * x75
    x101 = x0 * (x100 + x93)
    x102 = x60 * x95
    x103 = x101 + x102
    x104 = x63 * x90
    x105 = 0.06666666666666667 * x63
    x106 = x72 * x74
    x107 = x106 * x97
    x108 = x105 * x89
    x109 = -x71 - A[2]
    x110 = x109 * x57
    x111 = x109 * x74
    x112 = x111 * x72
    x113 = x112 + x85
    x114 = 0.06666666666666667 * x75
    x115 = x100 * x97
    x116 = x0 * (x106 + x111)
    x117 = x113 * x72
    x118 = x116 + x117
    x119 = x75 * x87**2
    x120 = x119 + x77
    x121 = x120 * x51
    x122 = 1.732050807568877
    x123 = 0.1111111111111111 * x122
    x124 = x123 * x74
    x125 = x87 * x95
    x126 = x101 + x125
    x127 = 0.3333333333333333 * x51
    x128 = x127 * x34
    x129 = x120 * x127
    x130 = 3.0 * x77
    x131 = x130 + 2.0 * x94
    x132 = x0 * (x131 + x76)
    x133 = x103 * x87
    x134 = x132 + x133
    x135 = x122 * x28
    x136 = 0.1111111111111111 * x135
    x137 = x136 * x51
    x138 = x127 * x28
    x139 = x109 * x127
    x140 = x122 * x95
    x141 = x127 * x140
    x142 = x113 * x127
    x143 = x122 * x142
    x144 = x109**2 * x74
    x145 = x144 + x85
    x146 = x123 * x145
    x147 = x146 * x51
    x148 = x127 * x145
    x149 = x109 * x113
    x150 = x116 + x149
    x151 = 3.0 * x85
    x152 = 2.0 * x112 + x151
    x153 = x0 * (x152 + x84)
    x154 = x109 * x118
    x155 = x153 + x154
    x156 = x87 * (x120 + 2.0 * x77)
    x157 = 0.06666666666666667 * x156
    x158 = x41 * x90
    x159 = x0 * (x119 + x131)
    x160 = x126 * x87
    x161 = x159 + x160
    x162 = x32 * x97
    x163 = 2.0 * x0 * (2.0 * x101 + x102 + x125) + x134 * x87
    x164 = x26 * x89
    x165 = x164 * x51
    x166 = 0.06666666666666667 * x26
    x167 = x122 * x32
    x168 = x126 * x127
    x169 = x113 * x122
    x170 = x127 * x26
    x171 = x127 * x150
    x172 = x109 * (x145 + 2.0 * x85)
    x173 = 0.06666666666666667 * x172
    x174 = x0 * (x144 + x152)
    x175 = x109 * x150
    x176 = x174 + x175
    x177 = 2.0 * x0 * (2.0 * x116 + x117 + x149) + x109 * x155
    x178 = x0 * (3.0 * x119 + x130) + x156 * x87
    x179 = x51 * (x17 + x36)
    x180 = x179 * x52
    x181 = x0 * (3.0 * x101 + 3.0 * x125 + x156) + x161 * x87
    x182 = x51 * x74
    x183 = x13 * x68
    x184 = x183 * x51
    x185 = x5 * x53
    x186 = x185 * x56
    x187 = x186 * (x0 * (3.0 * x132 + 3.0 * x133 + 2.0 * x159 + 2.0 * x160) + x163 * x87)
    x188 = x5 * x56
    x189 = x181 * x188
    x190 = x16 * x52
    x191 = x179 * x89
    x192 = x13 * x97
    x193 = 0.06666666666666667 * x161
    x194 = x109 * x188
    x195 = x9 * x91
    x196 = x16 * x97
    x197 = x16 * x90
    x198 = x127 * x13
    x199 = x121 * x123
    x200 = 0.06666666666666667 * x176
    x201 = 3.141592653589793 * x1 * x54
    x202 = x201 * x5
    x203 = x202 * x87
    x204 = x0 * (3.0 * x144 + x151) + x109 * x172
    x205 = x51 * (x0 * (3.0 * x116 + 3.0 * x149 + x172) + x109 * x176)
    x206 = x202 * x60
    x207 = x205 * x68
    x208 = x185 * x201
    x209 = x208 * (x0 * (3.0 * x153 + 3.0 * x154 + 2.0 * x174 + 2.0 * x175) + x109 * x177)
    x210 = -x59 - R[1]
    x211 = x58 * (x0 * (3.0 * x45 + 3.0 * x46 + 2.0 * x64 + 2.0 * x65) + x3 * x48)
    x212 = x0 * (3.0 * x19 + 3.0 * x22 + x80) + x3 * x66
    x213 = x100 * x210
    x214 = x213 + x77
    x215 = x214 * x68
    x216 = x212 * x69
    x217 = x0 * (x30 + 3.0 * x62) + x3 * x80
    x218 = x210 * x75
    x219 = x0 * (x100 + x218)
    x220 = x214 * x60
    x221 = x219 + x220
    x222 = x221 * x53
    x223 = x215 * x51
    x224 = x218 * x52
    x225 = x210 * x93
    x226 = x225 + x77
    x227 = x226 * x89
    x228 = x227 * x51
    x229 = x214 * x87
    x230 = x219 + x229
    x231 = x96 * x97
    x232 = 0.06666666666666667 * x66
    x233 = 0.06666666666666667 * x80
    x234 = x0 * (x130 + x213 + x225 + x94)
    x235 = x230 * x60
    x236 = x234 + x235
    x237 = x236 * x90
    x238 = x210 * x91
    x239 = x214 * x97
    x240 = x218 * x97
    x241 = x233 * x90
    x242 = x0 * (x218 + x93)
    x243 = x226 * x87
    x244 = x242 + x243
    x245 = x244 * x51
    x246 = x230 * x87
    x247 = x234 + x246
    x248 = x127 * x247
    x249 = x127 * x244
    x250 = 2.0 * x229
    x251 = x0 * (x103 + 3.0 * x219 + x220 + x250)
    x252 = x236 * x87
    x253 = x251 + x252
    x254 = x123 * x79
    x255 = x127 * x79
    x256 = x127 * x226
    x257 = x127 * x23
    x258 = x122 * x230
    x259 = x254 * x51
    x260 = x0 * (x119 + x130 + 2.0 * x225) + x244 * x87
    x261 = x260 * x90
    x262 = x0 * (x126 + 2.0 * x219 + x244 + x250)
    x263 = x247 * x87
    x264 = x262 + x263
    x265 = 0.06666666666666667 * x260
    x266 = x188 * x3
    x267 = x0 * (x134 + 4.0 * x234 + 2.0 * x235 + 2.0 * x246) + x253 * x87
    x268 = x267 * x91
    x269 = 0.06666666666666667 * x97
    x270 = x264 * x269
    x271 = x265 * x89
    x272 = x122 * x21
    x273 = x127 * x272
    x274 = x173 * x90
    x275 = x202 * x3
    x276 = x43 + x8
    x277 = x276 * x51
    x278 = x0 * (x156 + 3.0 * x242 + 3.0 * x243) + x260 * x87
    x279 = x278 * x52
    x280 = x10 * x69
    x281 = x188 * (x0 * (x161 + 3.0 * x234 + 3.0 * x246 + x260) + x264 * x87)
    x282 = x11 * x97
    x283 = 0.06666666666666667 * x7
    x284 = x283 * x97
    x285 = x123 * x7
    x286 = -x71 - R[2]
    x287 = x51 * x75
    x288 = x106 * x286
    x289 = x288 + x85
    x290 = x289 * x68
    x291 = x286 * x74
    x292 = x291 * x52
    x293 = x290 * x51
    x294 = x0 * (x106 + x291)
    x295 = x289 * x72
    x296 = x294 + x295
    x297 = x296 * x53
    x298 = x286 * x91
    x299 = x291 * x97
    x300 = x289 * x97
    x301 = x111 * x286
    x302 = x301 + x85
    x303 = x302 * x89
    x304 = x303 * x51
    x305 = x109 * x289
    x306 = x294 + x305
    x307 = x114 * x97
    x308 = x0 * (x112 + x151 + x288 + x301)
    x309 = x306 * x72
    x310 = x308 + x309
    x311 = x310 * x90
    x312 = x127 * x302
    x313 = x122 * x306
    x314 = x0 * (x111 + x291)
    x315 = x109 * x302
    x316 = x314 + x315
    x317 = x123 * x316
    x318 = x109 * x306
    x319 = x308 + x318
    x320 = x127 * x319
    x321 = 2.0 * x305
    x322 = x0 * (x118 + 3.0 * x294 + x295 + x321)
    x323 = x109 * x310
    x324 = x322 + x323
    x325 = x157 * x90
    x326 = x127 * x316
    x327 = x0 * (x144 + x151 + 2.0 * x301) + x109 * x316
    x328 = x327 * x90
    x329 = 0.06666666666666667 * x327
    x330 = x0 * (x150 + 2.0 * x294 + x316 + x321)
    x331 = x109 * x319
    x332 = x330 + x331
    x333 = x329 * x89
    x334 = x269 * x332
    x335 = x0 * (x155 + 4.0 * x308 + 2.0 * x309 + 2.0 * x318) + x109 * x324
    x336 = x335 * x91
    x337 = x51 * x7
    x338 = x0 * (x172 + 3.0 * x314 + 3.0 * x315) + x109 * x327
    x339 = x338 * x52
    x340 = x202 * (x0 * (x176 + 3.0 * x308 + 3.0 * x318 + x327) + x109 * x332)

    # 270 item(s)
    result[0, 0, 0] = numpy.sum(
        x58 * (x0 * (2.0 * x29 + 2.0 * x35 + 3.0 * x39 + 3.0 * x42 + x48) + x3 * x50)
    )
    result[0, 0, 1] = numpy.sum(x61 * x70)
    result[0, 0, 2] = numpy.sum(x70 * x73)
    result[0, 0, 3] = numpy.sum(x74 * x78 * x82)
    result[0, 0, 4] = numpy.sum(x61 * x81 * x83)
    result[0, 0, 5] = numpy.sum(x75 * x82 * x86)
    result[0, 1, 0] = numpy.sum(x88 * x92)
    result[0, 1, 1] = numpy.sum(x95 * x96 * x98)
    result[0, 1, 2] = numpy.sum(x73 * x87 * x99)
    result[0, 1, 3] = numpy.sum(x103 * x104 * x96)
    result[0, 1, 4] = numpy.sum(x105 * x107 * x95)
    result[0, 1, 5] = numpy.sum(x108 * x86 * x93)
    result[0, 2, 0] = numpy.sum(x110 * x92)
    result[0, 2, 1] = numpy.sum(x109 * x61 * x99)
    result[0, 2, 2] = numpy.sum(x113 * x114 * x98)
    result[0, 2, 3] = numpy.sum(x108 * x111 * x78)
    result[0, 2, 4] = numpy.sum(x105 * x113 * x115)
    result[0, 2, 5] = numpy.sum(x104 * x114 * x118)
    result[0, 3, 0] = numpy.sum(x121 * x124 * x49)
    result[0, 3, 1] = numpy.sum(x126 * x128 * x74)
    result[0, 3, 2] = numpy.sum(x106 * x129 * x34)
    result[0, 3, 3] = numpy.sum(x134 * x137 * x74)
    result[0, 3, 4] = numpy.sum(x106 * x126 * x138)
    result[0, 3, 5] = numpy.sum(x120 * x136 * x86)
    result[0, 4, 0] = numpy.sum(x139 * x49 * x88)
    result[0, 4, 1] = numpy.sum(x111 * x141 * x34)
    result[0, 4, 2] = numpy.sum(x143 * x34 * x93)
    result[0, 4, 3] = numpy.sum(x103 * x111 * x138)
    result[0, 4, 4] = numpy.sum(x135 * x142 * x95)
    result[0, 4, 5] = numpy.sum(x118 * x138 * x93)
    result[0, 5, 0] = numpy.sum(x147 * x49 * x75)
    result[0, 5, 1] = numpy.sum(x100 * x148 * x34)
    result[0, 5, 2] = numpy.sum(x128 * x150 * x75)
    result[0, 5, 3] = numpy.sum(x136 * x145 * x78)
    result[0, 5, 4] = numpy.sum(x100 * x138 * x150)
    result[0, 5, 5] = numpy.sum(x137 * x155 * x75)
    result[0, 6, 0] = numpy.sum(x157 * x158 * x74)
    result[0, 6, 1] = numpy.sum(x161 * x162 * x96)
    result[0, 6, 2] = numpy.sum(x106 * x157 * x162)
    result[0, 6, 3] = numpy.sum(x163 * x165 * x96)
    result[0, 6, 4] = numpy.sum(x107 * x161 * x166)
    result[0, 6, 5] = numpy.sum(x157 * x164 * x86)
    result[0, 7, 0] = numpy.sum(x111 * x129 * x41)
    result[0, 7, 1] = numpy.sum(x111 * x167 * x168)
    result[0, 7, 2] = numpy.sum(x129 * x169 * x32)
    result[0, 7, 3] = numpy.sum(x111 * x134 * x170)
    result[0, 7, 4] = numpy.sum(x126 * x169 * x170)
    result[0, 7, 5] = numpy.sum(x118 * x120 * x170)
    result[0, 8, 0] = numpy.sum(x148 * x41 * x93)
    result[0, 8, 1] = numpy.sum(x140 * x148 * x32)
    result[0, 8, 2] = numpy.sum(x167 * x171 * x93)
    result[0, 8, 3] = numpy.sum(x103 * x145 * x170)
    result[0, 8, 4] = numpy.sum(x140 * x150 * x170)
    result[0, 8, 5] = numpy.sum(x155 * x170 * x93)
    result[0, 9, 0] = numpy.sum(x158 * x173 * x75)
    result[0, 9, 1] = numpy.sum(x100 * x162 * x173)
    result[0, 9, 2] = numpy.sum(x114 * x162 * x176)
    result[0, 9, 3] = numpy.sum(x164 * x173 * x78)
    result[0, 9, 4] = numpy.sum(x115 * x166 * x176)
    result[0, 9, 5] = numpy.sum(x114 * x165 * x177)
    result[0, 10, 0] = numpy.sum(x178 * x180 * x74)
    result[0, 10, 1] = numpy.sum(x181 * x182 * x183)
    result[0, 10, 2] = numpy.sum(x106 * x178 * x184)
    result[0, 10, 3] = numpy.sum(x187 * x9)
    result[0, 10, 4] = numpy.sum(x189 * x83 * x9)
    result[0, 10, 5] = numpy.sum(x178 * x190 * x86)
    result[0, 11, 0] = numpy.sum(x111 * x157 * x191)
    result[0, 11, 1] = numpy.sum(x111 * x192 * x193)
    result[0, 11, 2] = numpy.sum(x113 * x157 * x192)
    result[0, 11, 3] = numpy.sum(x163 * x194 * x195)
    result[0, 11, 4] = numpy.sum(x113 * x193 * x196)
    result[0, 11, 5] = numpy.sum(x118 * x157 * x197)
    result[0, 12, 0] = numpy.sum(x120 * x146 * x179)
    result[0, 12, 1] = numpy.sum(x126 * x145 * x198)
    result[0, 12, 2] = numpy.sum(x120 * x150 * x198)
    result[0, 12, 3] = numpy.sum(x134 * x147 * x16)
    result[0, 12, 4] = numpy.sum(x126 * x16 * x171)
    result[0, 12, 5] = numpy.sum(x155 * x16 * x199)
    result[0, 13, 0] = numpy.sum(x173 * x191 * x93)
    result[0, 13, 1] = numpy.sum(x173 * x192 * x95)
    result[0, 13, 2] = numpy.sum(x192 * x200 * x93)
    result[0, 13, 3] = numpy.sum(x103 * x173 * x197)
    result[0, 13, 4] = numpy.sum(x196 * x200 * x95)
    result[0, 13, 5] = numpy.sum(x177 * x195 * x203)
    result[0, 14, 0] = numpy.sum(x180 * x204 * x75)
    result[0, 14, 1] = numpy.sum(x100 * x184 * x204)
    result[0, 14, 2] = numpy.sum(x183 * x205 * x75)
    result[0, 14, 3] = numpy.sum(x190 * x204 * x78)
    result[0, 14, 4] = numpy.sum(x206 * x207 * x9)
    result[0, 14, 5] = numpy.sum(x209 * x9)
    result[1, 0, 0] = numpy.sum(x210 * x211)
    result[1, 0, 1] = numpy.sum(x182 * x212 * x215)
    result[1, 0, 2] = numpy.sum(x210 * x216 * x73)
    result[1, 0, 3] = numpy.sum(x217 * x222 * x74)
    result[1, 0, 4] = numpy.sum(x106 * x217 * x223)
    result[1, 0, 5] = numpy.sum(x217 * x224 * x86)
    result[1, 1, 0] = numpy.sum(x228 * x48 * x96)
    result[1, 1, 1] = numpy.sum(x230 * x231 * x66)
    result[1, 1, 2] = numpy.sum(x107 * x226 * x232)
    result[1, 1, 3] = numpy.sum(x233 * x237 * x74)
    result[1, 1, 4] = numpy.sum(x107 * x230 * x233)
    result[1, 1, 5] = numpy.sum(x227 * x233 * x86)
    result[1, 2, 0] = numpy.sum(x110 * x238 * x48)
    result[1, 2, 1] = numpy.sum(x111 * x232 * x239)
    result[1, 2, 2] = numpy.sum(x113 * x232 * x240)
    result[1, 2, 3] = numpy.sum(x111 * x221 * x241)
    result[1, 2, 4] = numpy.sum(x113 * x233 * x239)
    result[1, 2, 5] = numpy.sum(x118 * x218 * x241)
    result[1, 3, 0] = numpy.sum(x124 * x245 * x47)
    result[1, 3, 1] = numpy.sum(x23 * x248 * x74)
    result[1, 3, 2] = numpy.sum(x106 * x23 * x249)
    result[1, 3, 3] = numpy.sum(x182 * x253 * x254)
    result[1, 3, 4] = numpy.sum(x106 * x247 * x255)
    result[1, 3, 5] = numpy.sum(x244 * x254 * x86)
    result[1, 4, 0] = numpy.sum(x111 * x256 * x47)
    result[1, 4, 1] = numpy.sum(x111 * x257 * x258)
    result[1, 4, 2] = numpy.sum(x143 * x226 * x23)
    result[1, 4, 3] = numpy.sum(x111 * x236 * x255)
    result[1, 4, 4] = numpy.sum(x169 * x230 * x255)
    result[1, 4, 5] = numpy.sum(x118 * x226 * x255)
    result[1, 5, 0] = numpy.sum(x147 * x218 * x47)
    result[1, 5, 1] = numpy.sum(x148 * x214 * x23)
    result[1, 5, 2] = numpy.sum(x171 * x218 * x23)
    result[1, 5, 3] = numpy.sum(x147 * x221 * x79)
    result[1, 5, 4] = numpy.sum(x150 * x214 * x255)
    result[1, 5, 5] = numpy.sum(x155 * x218 * x259)
    result[1, 6, 0] = numpy.sum(x261 * x38 * x96)
    result[1, 6, 1] = numpy.sum(x21 * x231 * x264)
    result[1, 6, 2] = numpy.sum(x107 * x21 * x265)
    result[1, 6, 3] = numpy.sum(x266 * x268)
    result[1, 6, 4] = numpy.sum(x266 * x270 * x72)
    result[1, 6, 5] = numpy.sum(x18 * x271 * x86)
    result[1, 7, 0] = numpy.sum(x111 * x249 * x38)
    result[1, 7, 1] = numpy.sum(x111 * x247 * x273)
    result[1, 7, 2] = numpy.sum(x143 * x21 * x244)
    result[1, 7, 3] = numpy.sum(x139 * x253 * x266)
    result[1, 7, 4] = numpy.sum(x143 * x18 * x247)
    result[1, 7, 5] = numpy.sum(x118 * x18 * x249)
    result[1, 8, 0] = numpy.sum(x148 * x226 * x38)
    result[1, 8, 1] = numpy.sum(x148 * x230 * x272)
    result[1, 8, 2] = numpy.sum(x150 * x226 * x273)
    result[1, 8, 3] = numpy.sum(x148 * x18 * x236)
    result[1, 8, 4] = numpy.sum(x171 * x18 * x258)
    result[1, 8, 5] = numpy.sum(x155 * x18 * x256)
    result[1, 9, 0] = numpy.sum(x218 * x274 * x38)
    result[1, 9, 1] = numpy.sum(x173 * x21 * x239)
    result[1, 9, 2] = numpy.sum(x200 * x21 * x240)
    result[1, 9, 3] = numpy.sum(x18 * x221 * x274)
    result[1, 9, 4] = numpy.sum(x18 * x200 * x239)
    result[1, 9, 5] = numpy.sum(x177 * x238 * x275)
    result[1, 10, 0] = numpy.sum(x277 * x279 * x74)
    result[1, 10, 1] = numpy.sum(x280 * x281)
    result[1, 10, 2] = numpy.sum(x188 * x278 * x280 * x72)
    result[1, 10, 3] = numpy.sum(
        x186
        * (x0 * (x163 + 3.0 * x251 + 3.0 * x252 + 2.0 * x262 + 2.0 * x263) + x267 * x87)
    )
    result[1, 10, 4] = numpy.sum(x281 * x83)
    result[1, 10, 5] = numpy.sum(x279 * x7 * x86)
    result[1, 11, 0] = numpy.sum(x111 * x271 * x277)
    result[1, 11, 1] = numpy.sum(x10 * x194 * x270)
    result[1, 11, 2] = numpy.sum(x113 * x265 * x282)
    result[1, 11, 3] = numpy.sum(x194 * x268)
    result[1, 11, 4] = numpy.sum(x113 * x264 * x284)
    result[1, 11, 5] = numpy.sum(x118 * x261 * x283)
    result[1, 12, 0] = numpy.sum(x147 * x244 * x276)
    result[1, 12, 1] = numpy.sum(x11 * x148 * x247)
    result[1, 12, 2] = numpy.sum(x11 * x171 * x244)
    result[1, 12, 3] = numpy.sum(x147 * x253 * x7)
    result[1, 12, 4] = numpy.sum(x150 * x248 * x7)
    result[1, 12, 5] = numpy.sum(x155 * x245 * x285)
    result[1, 13, 0] = numpy.sum(x173 * x227 * x277)
    result[1, 13, 1] = numpy.sum(x173 * x230 * x282)
    result[1, 13, 2] = numpy.sum(x200 * x226 * x282)
    result[1, 13, 3] = numpy.sum(x173 * x237 * x7)
    result[1, 13, 4] = numpy.sum(x176 * x230 * x284)
    result[1, 13, 5] = numpy.sum(x177 * x228 * x283)
    result[1, 14, 0] = numpy.sum(x204 * x224 * x277)
    result[1, 14, 1] = numpy.sum(x11 * x204 * x223)
    result[1, 14, 2] = numpy.sum(x10 * x202 * x207 * x210)
    result[1, 14, 3] = numpy.sum(x204 * x222 * x7)
    result[1, 14, 4] = numpy.sum(x205 * x215 * x7)
    result[1, 14, 5] = numpy.sum(x209 * x210)
    result[2, 0, 0] = numpy.sum(x211 * x286)
    result[2, 0, 1] = numpy.sum(x216 * x286 * x61)
    result[2, 0, 2] = numpy.sum(x212 * x287 * x290)
    result[2, 0, 3] = numpy.sum(x217 * x292 * x78)
    result[2, 0, 4] = numpy.sum(x100 * x217 * x293)
    result[2, 0, 5] = numpy.sum(x217 * x297 * x75)
    result[2, 1, 0] = numpy.sum(x298 * x48 * x88)
    result[2, 1, 1] = numpy.sum(x232 * x299 * x95)
    result[2, 1, 2] = numpy.sum(x232 * x300 * x93)
    result[2, 1, 3] = numpy.sum(x103 * x241 * x291)
    result[2, 1, 4] = numpy.sum(x233 * x300 * x95)
    result[2, 1, 5] = numpy.sum(x241 * x296 * x93)
    result[2, 2, 0] = numpy.sum(x114 * x304 * x48)
    result[2, 2, 1] = numpy.sum(x115 * x232 * x302)
    result[2, 2, 2] = numpy.sum(x306 * x307 * x66)
    result[2, 2, 3] = numpy.sum(x233 * x303 * x78)
    result[2, 2, 4] = numpy.sum(x115 * x233 * x306)
    result[2, 2, 5] = numpy.sum(x233 * x311 * x75)
    result[2, 3, 0] = numpy.sum(x199 * x291 * x47)
    result[2, 3, 1] = numpy.sum(x126 * x257 * x291)
    result[2, 3, 2] = numpy.sum(x129 * x23 * x289)
    result[2, 3, 3] = numpy.sum(x134 * x259 * x291)
    result[2, 3, 4] = numpy.sum(x126 * x255 * x289)
    result[2, 3, 5] = numpy.sum(x121 * x254 * x296)
    result[2, 4, 0] = numpy.sum(x312 * x47 * x93)
    result[2, 4, 1] = numpy.sum(x141 * x23 * x302)
    result[2, 4, 2] = numpy.sum(x257 * x313 * x93)
    result[2, 4, 3] = numpy.sum(x103 * x255 * x302)
    result[2, 4, 4] = numpy.sum(x140 * x255 * x306)
    result[2, 4, 5] = numpy.sum(x255 * x310 * x93)
    result[2, 5, 0] = numpy.sum(x287 * x317 * x47)
    result[2, 5, 1] = numpy.sum(x100 * x257 * x316)
    result[2, 5, 2] = numpy.sum(x23 * x320 * x75)
    result[2, 5, 3] = numpy.sum(x254 * x316 * x78)
    result[2, 5, 4] = numpy.sum(x100 * x255 * x319)
    result[2, 5, 5] = numpy.sum(x254 * x287 * x324)
    result[2, 6, 0] = numpy.sum(x291 * x325 * x38)
    result[2, 6, 1] = numpy.sum(x193 * x21 * x299)
    result[2, 6, 2] = numpy.sum(x157 * x21 * x300)
    result[2, 6, 3] = numpy.sum(x163 * x266 * x298)
    result[2, 6, 4] = numpy.sum(x18 * x193 * x300)
    result[2, 6, 5] = numpy.sum(x18 * x296 * x325)
    result[2, 7, 0] = numpy.sum(x129 * x302 * x38)
    result[2, 7, 1] = numpy.sum(x126 * x273 * x302)
    result[2, 7, 2] = numpy.sum(x129 * x272 * x306)
    result[2, 7, 3] = numpy.sum(x134 * x18 * x312)
    result[2, 7, 4] = numpy.sum(x168 * x18 * x313)
    result[2, 7, 5] = numpy.sum(x129 * x18 * x310)
    result[2, 8, 0] = numpy.sum(x326 * x38 * x93)
    result[2, 8, 1] = numpy.sum(x141 * x21 * x316)
    result[2, 8, 2] = numpy.sum(x273 * x319 * x93)
    result[2, 8, 3] = numpy.sum(x103 * x18 * x326)
    result[2, 8, 4] = numpy.sum(x141 * x18 * x319)
    result[2, 8, 5] = numpy.sum(x127 * x275 * x324 * x87)
    result[2, 9, 0] = numpy.sum(x114 * x328 * x38)
    result[2, 9, 1] = numpy.sum(x115 * x21 * x329)
    result[2, 9, 2] = numpy.sum(x21 * x307 * x332)
    result[2, 9, 3] = numpy.sum(x18 * x333 * x78)
    result[2, 9, 4] = numpy.sum(x275 * x334 * x60)
    result[2, 9, 5] = numpy.sum(x275 * x336)
    result[2, 10, 0] = numpy.sum(x178 * x277 * x292)
    result[2, 10, 1] = numpy.sum(x189 * x280 * x286)
    result[2, 10, 2] = numpy.sum(x11 * x178 * x293)
    result[2, 10, 3] = numpy.sum(x187 * x286)
    result[2, 10, 4] = numpy.sum(x181 * x290 * x337)
    result[2, 10, 5] = numpy.sum(x178 * x297 * x7)
    result[2, 11, 0] = numpy.sum(x157 * x277 * x303)
    result[2, 11, 1] = numpy.sum(x193 * x282 * x302)
    result[2, 11, 2] = numpy.sum(x157 * x282 * x306)
    result[2, 11, 3] = numpy.sum(x163 * x283 * x304)
    result[2, 11, 4] = numpy.sum(x161 * x284 * x306)
    result[2, 11, 5] = numpy.sum(x157 * x311 * x7)
    result[2, 12, 0] = numpy.sum(x120 * x277 * x317)
    result[2, 12, 1] = numpy.sum(x11 * x126 * x326)
    result[2, 12, 2] = numpy.sum(x11 * x129 * x319)
    result[2, 12, 3] = numpy.sum(x134 * x317 * x337)
    result[2, 12, 4] = numpy.sum(x126 * x320 * x7)
    result[2, 12, 5] = numpy.sum(x121 * x285 * x324)
    result[2, 13, 0] = numpy.sum(x277 * x333 * x93)
    result[2, 13, 1] = numpy.sum(x282 * x329 * x95)
    result[2, 13, 2] = numpy.sum(x10 * x203 * x334)
    result[2, 13, 3] = numpy.sum(x103 * x283 * x328)
    result[2, 13, 4] = numpy.sum(x284 * x332 * x95)
    result[2, 13, 5] = numpy.sum(x203 * x336)
    result[2, 14, 0] = numpy.sum(x277 * x339 * x75)
    result[2, 14, 1] = numpy.sum(x206 * x280 * x338)
    result[2, 14, 2] = numpy.sum(x280 * x340)
    result[2, 14, 3] = numpy.sum(x339 * x7 * x78)
    result[2, 14, 4] = numpy.sum(x340 * x60 * x69)
    result[2, 14, 5] = numpy.sum(
        x208
        * (x0 * (x177 + 3.0 * x322 + 3.0 * x323 + 2.0 * x330 + 2.0 * x331) + x109 * x335)
    )
    return result


def dipole3d_43(ax, da, A, bx, db, B, R):
    """Cartesian 3D (gf) dipole moment integrals.
    The origin is at R.

    Generated code; DO NOT modify by hand!"""

    result = numpy.zeros((3, 15, 10), dtype=float)

    x0 = 0.5 / (ax + bx)
    x1 = (ax + bx) ** (-1.0)
    x2 = -x1 * (ax * A[0] + bx * B[0])
    x3 = -x2 - A[0]
    x4 = -x2 - B[0]
    x5 = ax * bx * x1
    x6 = numpy.exp(-x5 * (A[0] - B[0]) ** 2)
    x7 = 1.772453850905516 * numpy.sqrt(x1)
    x8 = x6 * x7
    x9 = x0 * x8
    x10 = -x2 - R[0]
    x11 = x4 * x8
    x12 = x10 * x11
    x13 = x12 + x9
    x14 = x13 * x4
    x15 = x13 * x3
    x16 = 2.0 * x15
    x17 = x10 * x8
    x18 = x0 * (x11 + x17)
    x19 = x3 * x6
    x20 = x19 * x7
    x21 = x0 * (x11 + x20)
    x22 = x20 * x4
    x23 = x22 + x9
    x24 = x23 * x4
    x25 = x21 + x24
    x26 = x0 * (x14 + x16 + 3.0 * x18 + x25)
    x27 = 3.0 * x9
    x28 = x10 * x20
    x29 = x0 * (x12 + x22 + x27 + x28)
    x30 = x15 + x18
    x31 = x30 * x4
    x32 = x29 + x31
    x33 = x3 * x32
    x34 = x26 + x33
    x35 = x3 * x34
    x36 = x34 * x4
    x37 = x3 * x30
    x38 = x4**2 * x8
    x39 = 2.0 * x22 + x27
    x40 = x0 * (x38 + x39)
    x41 = x25 * x3
    x42 = x40 + x41
    x43 = x0 * (4.0 * x29 + 2.0 * x31 + 2.0 * x37 + x42)
    x44 = x25 * x4
    x45 = 3.0 * x41
    x46 = x23 * x3
    x47 = 2.0 * x0 * (2.0 * x21 + x24 + x46)
    x48 = x4 * x42
    x49 = x47 + x48
    x50 = x0 * (5.0 * x40 + 2.0 * x44 + x45) + x3 * x49
    x51 = x32 * x4
    x52 = 3.0 * x33
    x53 = x36 + x43
    x54 = x0 * (5.0 * x26 + x49 + 2.0 * x51 + x52) + x3 * x53
    x55 = da * db
    x56 = 0.009523809523809524 * x55
    x57 = 2.645751311064591 * x56
    x58 = numpy.exp(-x5 * (A[1] - B[1]) ** 2)
    x59 = numpy.exp(-x5 * (A[2] - B[2]) ** 2)
    x60 = 3.141592653589793 * x1 * x59
    x61 = x58 * x60
    x62 = x57 * x61
    x63 = -x1 * (ax * A[1] + bx * B[1])
    x64 = -x63 - B[1]
    x65 = 5.916079783099616 * x56
    x66 = x64 * x65
    x67 = x21 + x46
    x68 = x0 * (x17 + x20)
    x69 = x28 + x9
    x70 = x3 * x69
    x71 = x68 + x70
    x72 = x0 * (x16 + 2.0 * x18 + x67 + x71)
    x73 = x29 + x37
    x74 = x3 * x73
    x75 = x3 * x42
    x76 = x47 + x75
    x77 = x35 + x43
    x78 = x61 * (x0 * (3.0 * x26 + x52 + 2.0 * x72 + 2.0 * x74 + x76) + x3 * x77)
    x79 = -x1 * (ax * A[2] + bx * B[2])
    x80 = -x79 - B[2]
    x81 = x65 * x80
    x82 = x58 * x7
    x83 = x64**2 * x82
    x84 = x0 * x82
    x85 = x83 + x84
    x86 = x59 * x7
    x87 = x3**2 * x8
    x88 = x0 * (x27 + 2.0 * x28 + x87) + x3 * x71
    x89 = x0 * (x39 + x87)
    x90 = x3 * x67
    x91 = x89 + x90
    x92 = x72 + x74
    x93 = x0 * (3.0 * x29 + 3.0 * x37 + x88 + x91) + x3 * x92
    x94 = x65 * x93
    x95 = x61 * x80
    x96 = 10.2469507659596 * x56
    x97 = x64 * x96
    x98 = x80**2 * x86
    x99 = x0 * x86
    x100 = x98 + x99
    x101 = 2.0 * x84
    x102 = x64 * (x101 + x85)
    x103 = x87 + x9
    x104 = 2.0 * x0
    x105 = x103 * x3 + x104 * x20
    x106 = x0 * (x105 + 3.0 * x68 + 3.0 * x70) + x3 * x88
    x107 = x106 * x57
    x108 = x80 * x86
    x109 = x106 * x65
    x110 = x64 * x82
    x111 = 2.0 * x99
    x112 = x80 * (x100 + x111)
    x113 = -x63 - A[1]
    x114 = 0.06666666666666667 * x55
    x115 = x113 * x114
    x116 = x54 * x61
    x117 = 2.23606797749979
    x118 = x113 * x82
    x119 = x118 * x64
    x120 = x119 + x84
    x121 = x114 * x120
    x122 = x117 * x121
    x123 = x117 * x77
    x124 = x0 * (x110 + x118)
    x125 = x120 * x64
    x126 = x124 + x125
    x127 = x117 * x92
    x128 = x114 * x86
    x129 = 3.872983346207417
    x130 = x129 * x92
    x131 = x100 * x117
    x132 = x114 * x92
    x133 = 3.0 * x84
    x134 = 2.0 * x119 + x133
    x135 = x0 * (x134 + x83)
    x136 = x126 * x64
    x137 = x135 + x136
    x138 = x114 * x88
    x139 = x117 * x138
    x140 = -x79 - A[2]
    x141 = x114 * x140
    x142 = x140 * x86
    x143 = x142 * x80
    x144 = x143 + x99
    x145 = x114 * x144
    x146 = x117 * x145
    x147 = x117 * x85
    x148 = x0 * (x108 + x142)
    x149 = x144 * x80
    x150 = x148 + x149
    x151 = x114 * x82
    x152 = 3.0 * x99
    x153 = 2.0 * x143 + x152
    x154 = x0 * (x153 + x98)
    x155 = x150 * x80
    x156 = x154 + x155
    x157 = x113**2 * x82
    x158 = x157 + x84
    x159 = x158 * x55
    x160 = 0.02222222222222222 * x129
    x161 = x159 * x160
    x162 = x113 * x120
    x163 = x124 + x162
    x164 = 1.732050807568877
    x165 = x163 * x164
    x166 = 0.1111111111111111 * x165
    x167 = x55 * x86
    x168 = 0.1111111111111111 * x164
    x169 = x159 * x168
    x170 = x113 * x126
    x171 = x135 + x170
    x172 = x164 * x73
    x173 = 0.1111111111111111 * x172
    x174 = 0.3333333333333333 * x55
    x175 = x174 * x73
    x176 = 0.1111111111111111 * x100
    x177 = 2.0 * x0 * (2.0 * x124 + x125 + x162)
    x178 = x171 * x64
    x179 = x177 + x178
    x180 = x55 * x71
    x181 = x160 * x180
    x182 = x168 * x180
    x183 = x115 * x117
    x184 = x120 * x174
    x185 = x144 * x174
    x186 = x117 * x142
    x187 = x114 * x71
    x188 = x174 * x71
    x189 = x117 * x118
    x190 = x140**2 * x86
    x191 = x190 + x99
    x192 = x191 * x55
    x193 = x160 * x192
    x194 = x168 * x192
    x195 = x140 * x144
    x196 = x148 + x195
    x197 = x164 * x196
    x198 = 0.1111111111111111 * x197
    x199 = x55 * x82
    x200 = 0.1111111111111111 * x85
    x201 = x174 * x196
    x202 = x140 * x150
    x203 = x154 + x202
    x204 = x102 * x160
    x205 = 2.0 * x0 * (2.0 * x148 + x149 + x195)
    x206 = x203 * x80
    x207 = x205 + x206
    x208 = x113 * (x101 + x158)
    x209 = x114 * (x26 + x51)
    x210 = x0 * (x134 + x157)
    x211 = x113 * x163
    x212 = x210 + x211
    x213 = x117 * x32
    x214 = x117 * x208
    x215 = x114 * x214
    x216 = x113 * x171
    x217 = x177 + x216
    x218 = x114 * x30
    x219 = x117 * x218
    x220 = x129 * x218
    x221 = 3.0 * x170
    x222 = x0 * (5.0 * x135 + 2.0 * x136 + x221) + x113 * x179
    x223 = x114 * x69
    x224 = x117 * x223
    x225 = x142 * x174
    x226 = x158 * x174
    x227 = x174 * x69
    x228 = x174 * x191
    x229 = x164 * x201
    x230 = x174 * x203
    x231 = x140 * (x111 + x191)
    x232 = x117 * x231
    x233 = x114 * x232
    x234 = x0 * (x153 + x190)
    x235 = x140 * x196
    x236 = x234 + x235
    x237 = x140 * x203
    x238 = x205 + x237
    x239 = 3.0 * x202
    x240 = x0 * (5.0 * x154 + 2.0 * x155 + x239) + x140 * x207
    x241 = x0 * (x133 + 3.0 * x157) + x113 * x208
    x242 = x14 + x18
    x243 = x0 * (2.0 * x12 + x27 + x38) + x242 * x4
    x244 = x243 * x57
    x245 = x0 * (3.0 * x124 + 3.0 * x162 + x208) + x113 * x212
    x246 = x242 * x65
    x247 = x0 * (3.0 * x135 + 2.0 * x210 + 2.0 * x211 + x221) + x113 * x217
    x248 = x13 * x65
    x249 = x13 * x96
    x250 = x57 * x6
    x251 = x250 * x60
    x252 = x251 * (3.0 * x0 * (2.0 * x177 + x178 + x216) + x113 * x222)
    x253 = x6 * x60
    x254 = x247 * x253
    x255 = x17 * x65
    x256 = x17 * x57
    x257 = x114 * x208
    x258 = x114 * x212
    x259 = x114 * x13
    x260 = x129 * x13
    x261 = x141 * x6
    x262 = x222 * x60
    x263 = x117 * x17
    x264 = 0.1111111111111111 * x242
    x265 = x13 * x168
    x266 = x17 * x55
    x267 = x114 * x231
    x268 = x114 * x236
    x269 = x115 * x6
    x270 = 3.141592653589793 * x1 * x58
    x271 = x240 * x270
    x272 = x0 * (x152 + 3.0 * x190) + x140 * x231
    x273 = x0 * (3.0 * x148 + 3.0 * x195 + x231) + x140 * x236
    x274 = x0 * (3.0 * x154 + 2.0 * x234 + 2.0 * x235 + x239) + x140 * x238
    x275 = x270 * x6
    x276 = x274 * x275
    x277 = x250 * x270
    x278 = x277 * (3.0 * x0 * (2.0 * x205 + x206 + x237) + x140 * x240)
    x279 = -x63 - R[1]
    x280 = x62 * (3.0 * x0 * (2.0 * x47 + x48 + x75) + x3 * x50)
    x281 = x0 * (3.0 * x40 + x45 + 2.0 * x89 + 2.0 * x90) + x3 * x76
    x282 = x110 * x279
    x283 = x282 + x84
    x284 = x283 * x65
    x285 = x281 * x61
    x286 = x279 * x82
    x287 = x0 * (x110 + x286)
    x288 = x283 * x64
    x289 = x287 + x288
    x290 = x0 * (x105 + 3.0 * x21 + 3.0 * x46) + x3 * x91
    x291 = x65 * x86
    x292 = x283 * x96
    x293 = x100 * x65
    x294 = x0 * (x27 + 3.0 * x87) + x105 * x3
    x295 = x0 * (x133 + 2.0 * x282 + x83) + x289 * x64
    x296 = x57 * x86
    x297 = x108 * x65
    x298 = x286 * x57
    x299 = x118 * x279
    x300 = x299 + x84
    x301 = x114 * x300
    x302 = x113 * x283
    x303 = x287 + x302
    x304 = x117 * x128
    x305 = x117 * x301
    x306 = x0 * (x119 + x133 + x282 + x299)
    x307 = x303 * x64
    x308 = x306 + x307
    x309 = x114 * x91
    x310 = x108 * x129
    x311 = 2.0 * x302
    x312 = x0 * (x126 + 3.0 * x287 + x288 + x311)
    x313 = x308 * x64
    x314 = x312 + x313
    x315 = x105 * x114
    x316 = x117 * x315
    x317 = x50 * x61
    x318 = x114 * x186
    x319 = x129 * x283
    x320 = x117 * x286
    x321 = x0 * (x118 + x286)
    x322 = x113 * x300
    x323 = x321 + x322
    x324 = x323 * x55
    x325 = x160 * x86
    x326 = x113 * x303
    x327 = x306 + x326
    x328 = x167 * x168
    x329 = x168 * x324
    x330 = x113 * x308
    x331 = x312 + x330
    x332 = x174 * x67
    x333 = x164 * x176
    x334 = x0 * (x171 + 4.0 * x306 + 2.0 * x307 + 2.0 * x326)
    x335 = x331 * x64
    x336 = x334 + x335
    x337 = x103 * x55
    x338 = x168 * x337
    x339 = x103 * x160
    x340 = x174 * x300
    x341 = x164 * x332
    x342 = x103 * x174
    x343 = x286 * x55
    x344 = x168 * x67
    x345 = x160 * x337
    x346 = x40 + x44
    x347 = x0 * (x133 + x157 + 2.0 * x299) + x113 * x323
    x348 = x114 * x347
    x349 = x0 * (x163 + 2.0 * x287 + x311 + x323)
    x350 = x113 * x327
    x351 = x349 + x350
    x352 = x117 * x348
    x353 = x113 * x331
    x354 = x334 + x353
    x355 = x114 * x23
    x356 = x117 * x355
    x357 = 3.0 * x330
    x358 = x0 * (x179 + 5.0 * x312 + 2.0 * x313 + x357) + x113 * x336
    x359 = x358 * x60
    x360 = x114 * x19
    x361 = x117 * x60
    x362 = x354 * x361
    x363 = x114 * x20
    x364 = x174 * x323
    x365 = x174 * x23
    x366 = x164 * x23
    x367 = x174 * x20
    x368 = x117 * x363
    x369 = x117 * x20
    x370 = x38 + x9
    x371 = x104 * x11 + x370 * x4
    x372 = x0 * (x208 + 3.0 * x321 + 3.0 * x322) + x113 * x347
    x373 = x0 * (x212 + 3.0 * x306 + 3.0 * x326 + x347) + x113 * x351
    x374 = x253 * (
        x0 * (x217 + 3.0 * x312 + 2.0 * x349 + 2.0 * x350 + x357) + x113 * x354
    )
    x375 = x4 * x65
    x376 = x65 * x8
    x377 = x57 * x8
    x378 = x11 * x129
    x379 = x114 * x8
    x380 = x117 * x379
    x381 = x55 * x8
    x382 = x168 * x381
    x383 = x160 * x8
    x384 = x370 * x65
    x385 = x11 * x65
    x386 = -x79 - R[2]
    x387 = x108 * x386
    x388 = x387 + x99
    x389 = x388 * x65
    x390 = x386 * x86
    x391 = x388 * x96
    x392 = x0 * (x108 + x390)
    x393 = x388 * x80
    x394 = x392 + x393
    x395 = x65 * x82
    x396 = x390 * x57
    x397 = x0 * (x152 + 2.0 * x387 + x98) + x394 * x80
    x398 = x57 * x82
    x399 = x114 * x189
    x400 = x117 * x390
    x401 = x129 * x388
    x402 = x142 * x386
    x403 = x402 + x99
    x404 = x114 * x403
    x405 = x117 * x404
    x406 = x140 * x388
    x407 = x392 + x406
    x408 = x117 * x151
    x409 = x110 * x129
    x410 = x0 * (x143 + x152 + x387 + x402)
    x411 = x407 * x80
    x412 = x410 + x411
    x413 = 2.0 * x406
    x414 = x0 * (x150 + 3.0 * x392 + x393 + x413)
    x415 = x412 * x80
    x416 = x414 + x415
    x417 = x390 * x55
    x418 = x174 * x403
    x419 = x118 * x174
    x420 = x0 * (x142 + x390)
    x421 = x140 * x403
    x422 = x420 + x421
    x423 = x422 * x55
    x424 = x160 * x82
    x425 = x168 * x423
    x426 = x140 * x407
    x427 = x410 + x426
    x428 = x168 * x199
    x429 = x164 * x200
    x430 = x140 * x412
    x431 = x414 + x430
    x432 = x0 * (x203 + 4.0 * x410 + 2.0 * x411 + 2.0 * x426)
    x433 = x431 * x80
    x434 = x432 + x433
    x435 = x174 * x422
    x436 = x0 * (x152 + x190 + 2.0 * x402) + x140 * x422
    x437 = x114 * x436
    x438 = x117 * x437
    x439 = x0 * (x196 + 2.0 * x392 + x413 + x422)
    x440 = x140 * x427
    x441 = x439 + x440
    x442 = x140 * x431
    x443 = x432 + x442
    x444 = x117 * x270 * x443
    x445 = 3.0 * x430
    x446 = x0 * (x207 + 5.0 * x414 + 2.0 * x415 + x445) + x140 * x434
    x447 = x270 * x446
    x448 = x0 * (x231 + 3.0 * x420 + 3.0 * x421) + x140 * x436
    x449 = x0 * (x236 + 3.0 * x410 + 3.0 * x426 + x436) + x140 * x441
    x450 = x275 * (
        x0 * (x238 + 3.0 * x414 + 2.0 * x439 + 2.0 * x440 + x445) + x140 * x443
    )

    # 450 item(s)
    result[0, 0, 0] = numpy.sum(
        x62 * (x0 * (3.0 * x35 + 3.0 * x36 + 6.0 * x43 + x50) + x3 * x54)
    )
    result[0, 0, 1] = numpy.sum(x66 * x78)
    result[0, 0, 2] = numpy.sum(x78 * x81)
    result[0, 0, 3] = numpy.sum(x85 * x86 * x94)
    result[0, 0, 4] = numpy.sum(x93 * x95 * x97)
    result[0, 0, 5] = numpy.sum(x100 * x82 * x94)
    result[0, 0, 6] = numpy.sum(x102 * x107 * x86)
    result[0, 0, 7] = numpy.sum(x108 * x109 * x85)
    result[0, 0, 8] = numpy.sum(x100 * x109 * x110)
    result[0, 0, 9] = numpy.sum(x107 * x112 * x82)
    result[0, 1, 0] = numpy.sum(x115 * x116)
    result[0, 1, 1] = numpy.sum(x122 * x77 * x86)
    result[0, 1, 2] = numpy.sum(x115 * x123 * x95)
    result[0, 1, 3] = numpy.sum(x126 * x127 * x128)
    result[0, 1, 4] = numpy.sum(x108 * x121 * x130)
    result[0, 1, 5] = numpy.sum(x118 * x131 * x132)
    result[0, 1, 6] = numpy.sum(x137 * x138 * x86)
    result[0, 1, 7] = numpy.sum(x108 * x126 * x139)
    result[0, 1, 8] = numpy.sum(x121 * x131 * x88)
    result[0, 1, 9] = numpy.sum(x112 * x118 * x138)
    result[0, 2, 0] = numpy.sum(x116 * x141)
    result[0, 2, 1] = numpy.sum(x123 * x141 * x61 * x64)
    result[0, 2, 2] = numpy.sum(x146 * x77 * x82)
    result[0, 2, 3] = numpy.sum(x132 * x142 * x147)
    result[0, 2, 4] = numpy.sum(x110 * x130 * x145)
    result[0, 2, 5] = numpy.sum(x127 * x150 * x151)
    result[0, 2, 6] = numpy.sum(x102 * x138 * x142)
    result[0, 2, 7] = numpy.sum(x145 * x147 * x88)
    result[0, 2, 8] = numpy.sum(x110 * x139 * x150)
    result[0, 2, 9] = numpy.sum(x138 * x156 * x82)
    result[0, 3, 0] = numpy.sum(x161 * x53 * x86)
    result[0, 3, 1] = numpy.sum(x166 * x167 * x34)
    result[0, 3, 2] = numpy.sum(x108 * x169 * x34)
    result[0, 3, 3] = numpy.sum(x167 * x171 * x173)
    result[0, 3, 4] = numpy.sum(x108 * x163 * x175)
    result[0, 3, 5] = numpy.sum(x159 * x172 * x176)
    result[0, 3, 6] = numpy.sum(x179 * x181 * x86)
    result[0, 3, 7] = numpy.sum(x108 * x171 * x182)
    result[0, 3, 8] = numpy.sum(x165 * x176 * x180)
    result[0, 3, 9] = numpy.sum(x112 * x161 * x71)
    result[0, 4, 0] = numpy.sum(x140 * x183 * x53 * x61)
    result[0, 4, 1] = numpy.sum(x142 * x184 * x34)
    result[0, 4, 2] = numpy.sum(x118 * x185 * x34)
    result[0, 4, 3] = numpy.sum(x126 * x142 * x175)
    result[0, 4, 4] = numpy.sum(x120 * x172 * x185)
    result[0, 4, 5] = numpy.sum(x118 * x150 * x175)
    result[0, 4, 6] = numpy.sum(x137 * x186 * x187)
    result[0, 4, 7] = numpy.sum(x126 * x144 * x188)
    result[0, 4, 8] = numpy.sum(x120 * x150 * x188)
    result[0, 4, 9] = numpy.sum(x156 * x187 * x189)
    result[0, 5, 0] = numpy.sum(x193 * x53 * x82)
    result[0, 5, 1] = numpy.sum(x110 * x194 * x34)
    result[0, 5, 2] = numpy.sum(x198 * x199 * x34)
    result[0, 5, 3] = numpy.sum(x172 * x192 * x200)
    result[0, 5, 4] = numpy.sum(x110 * x201 * x73)
    result[0, 5, 5] = numpy.sum(x173 * x199 * x203)
    result[0, 5, 6] = numpy.sum(x180 * x191 * x204)
    result[0, 5, 7] = numpy.sum(x180 * x197 * x200)
    result[0, 5, 8] = numpy.sum(x110 * x182 * x203)
    result[0, 5, 9] = numpy.sum(x181 * x207 * x82)
    result[0, 6, 0] = numpy.sum(x208 * x209 * x86)
    result[0, 6, 1] = numpy.sum(x128 * x212 * x213)
    result[0, 6, 2] = numpy.sum(x108 * x215 * x32)
    result[0, 6, 3] = numpy.sum(x217 * x219 * x86)
    result[0, 6, 4] = numpy.sum(x108 * x212 * x220)
    result[0, 6, 5] = numpy.sum(x131 * x208 * x218)
    result[0, 6, 6] = numpy.sum(x222 * x223 * x86)
    result[0, 6, 7] = numpy.sum(x108 * x217 * x224)
    result[0, 6, 8] = numpy.sum(x131 * x212 * x223)
    result[0, 6, 9] = numpy.sum(x112 * x208 * x223)
    result[0, 7, 0] = numpy.sum(x158 * x186 * x209)
    result[0, 7, 1] = numpy.sum(x163 * x225 * x32)
    result[0, 7, 2] = numpy.sum(x144 * x226 * x32)
    result[0, 7, 3] = numpy.sum(x171 * x225 * x30)
    result[0, 7, 4] = numpy.sum(x165 * x185 * x30)
    result[0, 7, 5] = numpy.sum(x150 * x226 * x30)
    result[0, 7, 6] = numpy.sum(x142 * x179 * x224)
    result[0, 7, 7] = numpy.sum(x144 * x171 * x227)
    result[0, 7, 8] = numpy.sum(x150 * x163 * x227)
    result[0, 7, 9] = numpy.sum(x156 * x158 * x224)
    result[0, 8, 0] = numpy.sum(x189 * x191 * x209)
    result[0, 8, 1] = numpy.sum(x120 * x228 * x32)
    result[0, 8, 2] = numpy.sum(x118 * x201 * x32)
    result[0, 8, 3] = numpy.sum(x126 * x228 * x30)
    result[0, 8, 4] = numpy.sum(x120 * x229 * x30)
    result[0, 8, 5] = numpy.sum(x118 * x230 * x30)
    result[0, 8, 6] = numpy.sum(x137 * x191 * x224)
    result[0, 8, 7] = numpy.sum(x126 * x196 * x227)
    result[0, 8, 8] = numpy.sum(x120 * x203 * x227)
    result[0, 8, 9] = numpy.sum(x118 * x207 * x224)
    result[0, 9, 0] = numpy.sum(x209 * x231 * x82)
    result[0, 9, 1] = numpy.sum(x110 * x233 * x32)
    result[0, 9, 2] = numpy.sum(x151 * x213 * x236)
    result[0, 9, 3] = numpy.sum(x147 * x218 * x231)
    result[0, 9, 4] = numpy.sum(x110 * x220 * x236)
    result[0, 9, 5] = numpy.sum(x219 * x238 * x82)
    result[0, 9, 6] = numpy.sum(x102 * x223 * x231)
    result[0, 9, 7] = numpy.sum(x147 * x223 * x236)
    result[0, 9, 8] = numpy.sum(x110 * x224 * x238)
    result[0, 9, 9] = numpy.sum(x223 * x240 * x82)
    result[0, 10, 0] = numpy.sum(x241 * x244 * x86)
    result[0, 10, 1] = numpy.sum(x245 * x246 * x86)
    result[0, 10, 2] = numpy.sum(x108 * x241 * x246)
    result[0, 10, 3] = numpy.sum(x247 * x248 * x86)
    result[0, 10, 4] = numpy.sum(x108 * x245 * x249)
    result[0, 10, 5] = numpy.sum(x100 * x241 * x248)
    result[0, 10, 6] = numpy.sum(x10 * x252)
    result[0, 10, 7] = numpy.sum(x10 * x254 * x81)
    result[0, 10, 8] = numpy.sum(x100 * x245 * x255)
    result[0, 10, 9] = numpy.sum(x112 * x241 * x256)
    result[0, 11, 0] = numpy.sum(x142 * x243 * x257)
    result[0, 11, 1] = numpy.sum(x186 * x242 * x258)
    result[0, 11, 2] = numpy.sum(x145 * x214 * x242)
    result[0, 11, 3] = numpy.sum(x186 * x217 * x259)
    result[0, 11, 4] = numpy.sum(x145 * x212 * x260)
    result[0, 11, 5] = numpy.sum(x150 * x214 * x259)
    result[0, 11, 6] = numpy.sum(x10 * x261 * x262)
    result[0, 11, 7] = numpy.sum(x146 * x17 * x217)
    result[0, 11, 8] = numpy.sum(x150 * x258 * x263)
    result[0, 11, 9] = numpy.sum(x156 * x17 * x257)
    result[0, 12, 0] = numpy.sum(x161 * x191 * x243)
    result[0, 12, 1] = numpy.sum(x165 * x192 * x264)
    result[0, 12, 2] = numpy.sum(x159 * x197 * x264)
    result[0, 12, 3] = numpy.sum(x171 * x192 * x265)
    result[0, 12, 4] = numpy.sum(x13 * x163 * x201)
    result[0, 12, 5] = numpy.sum(x159 * x203 * x265)
    result[0, 12, 6] = numpy.sum(x17 * x179 * x193)
    result[0, 12, 7] = numpy.sum(x171 * x198 * x266)
    result[0, 12, 8] = numpy.sum(x166 * x203 * x266)
    result[0, 12, 9] = numpy.sum(x161 * x17 * x207)
    result[0, 13, 0] = numpy.sum(x118 * x243 * x267)
    result[0, 13, 1] = numpy.sum(x121 * x232 * x242)
    result[0, 13, 2] = numpy.sum(x189 * x242 * x268)
    result[0, 13, 3] = numpy.sum(x126 * x232 * x259)
    result[0, 13, 4] = numpy.sum(x121 * x236 * x260)
    result[0, 13, 5] = numpy.sum(x189 * x238 * x259)
    result[0, 13, 6] = numpy.sum(x137 * x17 * x267)
    result[0, 13, 7] = numpy.sum(x126 * x263 * x268)
    result[0, 13, 8] = numpy.sum(x122 * x17 * x238)
    result[0, 13, 9] = numpy.sum(x10 * x269 * x271)
    result[0, 14, 0] = numpy.sum(x244 * x272 * x82)
    result[0, 14, 1] = numpy.sum(x110 * x246 * x272)
    result[0, 14, 2] = numpy.sum(x246 * x273 * x82)
    result[0, 14, 3] = numpy.sum(x248 * x272 * x85)
    result[0, 14, 4] = numpy.sum(x110 * x249 * x273)
    result[0, 14, 5] = numpy.sum(x248 * x274 * x82)
    result[0, 14, 6] = numpy.sum(x102 * x256 * x272)
    result[0, 14, 7] = numpy.sum(x255 * x273 * x85)
    result[0, 14, 8] = numpy.sum(x10 * x276 * x66)
    result[0, 14, 9] = numpy.sum(x10 * x278)
    result[1, 0, 0] = numpy.sum(x279 * x280)
    result[1, 0, 1] = numpy.sum(x281 * x284 * x86)
    result[1, 0, 2] = numpy.sum(x279 * x285 * x81)
    result[1, 0, 3] = numpy.sum(x289 * x290 * x291)
    result[1, 0, 4] = numpy.sum(x108 * x290 * x292)
    result[1, 0, 5] = numpy.sum(x286 * x290 * x293)
    result[1, 0, 6] = numpy.sum(x294 * x295 * x296)
    result[1, 0, 7] = numpy.sum(x289 * x294 * x297)
    result[1, 0, 8] = numpy.sum(x100 * x284 * x294)
    result[1, 0, 9] = numpy.sum(x112 * x294 * x298)
    result[1, 1, 0] = numpy.sum(x301 * x50 * x86)
    result[1, 1, 1] = numpy.sum(x303 * x304 * x76)
    result[1, 1, 2] = numpy.sum(x108 * x305 * x76)
    result[1, 1, 3] = numpy.sum(x304 * x308 * x91)
    result[1, 1, 4] = numpy.sum(x303 * x309 * x310)
    result[1, 1, 5] = numpy.sum(x131 * x301 * x91)
    result[1, 1, 6] = numpy.sum(x314 * x315 * x86)
    result[1, 1, 7] = numpy.sum(x108 * x308 * x316)
    result[1, 1, 8] = numpy.sum(x131 * x303 * x315)
    result[1, 1, 9] = numpy.sum(x105 * x112 * x301)
    result[1, 2, 0] = numpy.sum(x141 * x279 * x317)
    result[1, 2, 1] = numpy.sum(x283 * x318 * x76)
    result[1, 2, 2] = numpy.sum(x146 * x286 * x76)
    result[1, 2, 3] = numpy.sum(x186 * x289 * x309)
    result[1, 2, 4] = numpy.sum(x145 * x319 * x91)
    result[1, 2, 5] = numpy.sum(x150 * x309 * x320)
    result[1, 2, 6] = numpy.sum(x142 * x295 * x315)
    result[1, 2, 7] = numpy.sum(x105 * x146 * x289)
    result[1, 2, 8] = numpy.sum(x150 * x283 * x316)
    result[1, 2, 9] = numpy.sum(x156 * x286 * x315)
    result[1, 3, 0] = numpy.sum(x324 * x325 * x49)
    result[1, 3, 1] = numpy.sum(x327 * x328 * x42)
    result[1, 3, 2] = numpy.sum(x108 * x329 * x42)
    result[1, 3, 3] = numpy.sum(x328 * x331 * x67)
    result[1, 3, 4] = numpy.sum(x108 * x327 * x332)
    result[1, 3, 5] = numpy.sum(x324 * x333 * x67)
    result[1, 3, 6] = numpy.sum(x325 * x336 * x337)
    result[1, 3, 7] = numpy.sum(x108 * x331 * x338)
    result[1, 3, 8] = numpy.sum(x327 * x333 * x337)
    result[1, 3, 9] = numpy.sum(x112 * x324 * x339)
    result[1, 4, 0] = numpy.sum(x142 * x305 * x49)
    result[1, 4, 1] = numpy.sum(x225 * x303 * x42)
    result[1, 4, 2] = numpy.sum(x144 * x340 * x42)
    result[1, 4, 3] = numpy.sum(x142 * x308 * x332)
    result[1, 4, 4] = numpy.sum(x144 * x303 * x341)
    result[1, 4, 5] = numpy.sum(x150 * x340 * x67)
    result[1, 4, 6] = numpy.sum(x103 * x314 * x318)
    result[1, 4, 7] = numpy.sum(x144 * x308 * x342)
    result[1, 4, 8] = numpy.sum(x150 * x303 * x342)
    result[1, 4, 9] = numpy.sum(x103 * x156 * x305)
    result[1, 5, 0] = numpy.sum(x193 * x286 * x49)
    result[1, 5, 1] = numpy.sum(x194 * x283 * x42)
    result[1, 5, 2] = numpy.sum(x198 * x343 * x42)
    result[1, 5, 3] = numpy.sum(x194 * x289 * x67)
    result[1, 5, 4] = numpy.sum(x201 * x283 * x67)
    result[1, 5, 5] = numpy.sum(x203 * x343 * x344)
    result[1, 5, 6] = numpy.sum(x192 * x295 * x339)
    result[1, 5, 7] = numpy.sum(x198 * x289 * x337)
    result[1, 5, 8] = numpy.sum(x203 * x283 * x338)
    result[1, 5, 9] = numpy.sum(x207 * x286 * x345)
    result[1, 6, 0] = numpy.sum(x346 * x348 * x86)
    result[1, 6, 1] = numpy.sum(x25 * x304 * x351)
    result[1, 6, 2] = numpy.sum(x108 * x25 * x352)
    result[1, 6, 3] = numpy.sum(x354 * x356 * x86)
    result[1, 6, 4] = numpy.sum(x310 * x351 * x355)
    result[1, 6, 5] = numpy.sum(x131 * x347 * x355)
    result[1, 6, 6] = numpy.sum(x359 * x360)
    result[1, 6, 7] = numpy.sum(x360 * x362 * x80)
    result[1, 6, 8] = numpy.sum(x131 * x351 * x363)
    result[1, 6, 9] = numpy.sum(x112 * x20 * x348)
    result[1, 7, 0] = numpy.sum(x318 * x323 * x346)
    result[1, 7, 1] = numpy.sum(x225 * x25 * x327)
    result[1, 7, 2] = numpy.sum(x144 * x25 * x364)
    result[1, 7, 3] = numpy.sum(x142 * x331 * x365)
    result[1, 7, 4] = numpy.sum(x185 * x327 * x366)
    result[1, 7, 5] = numpy.sum(x150 * x23 * x364)
    result[1, 7, 6] = numpy.sum(x141 * x19 * x336 * x361)
    result[1, 7, 7] = numpy.sum(x185 * x20 * x331)
    result[1, 7, 8] = numpy.sum(x150 * x327 * x367)
    result[1, 7, 9] = numpy.sum(x156 * x323 * x368)
    result[1, 8, 0] = numpy.sum(x191 * x305 * x346)
    result[1, 8, 1] = numpy.sum(x228 * x25 * x303)
    result[1, 8, 2] = numpy.sum(x201 * x25 * x300)
    result[1, 8, 3] = numpy.sum(x228 * x23 * x308)
    result[1, 8, 4] = numpy.sum(x229 * x23 * x303)
    result[1, 8, 5] = numpy.sum(x203 * x23 * x340)
    result[1, 8, 6] = numpy.sum(x191 * x314 * x368)
    result[1, 8, 7] = numpy.sum(x20 * x201 * x308)
    result[1, 8, 8] = numpy.sum(x20 * x230 * x303)
    result[1, 8, 9] = numpy.sum(x20 * x207 * x305)
    result[1, 9, 0] = numpy.sum(x267 * x286 * x346)
    result[1, 9, 1] = numpy.sum(x233 * x25 * x283)
    result[1, 9, 2] = numpy.sum(x25 * x268 * x320)
    result[1, 9, 3] = numpy.sum(x232 * x289 * x355)
    result[1, 9, 4] = numpy.sum(x236 * x319 * x355)
    result[1, 9, 5] = numpy.sum(x238 * x286 * x356)
    result[1, 9, 6] = numpy.sum(x20 * x267 * x295)
    result[1, 9, 7] = numpy.sum(x268 * x289 * x369)
    result[1, 9, 8] = numpy.sum(x238 * x283 * x368)
    result[1, 9, 9] = numpy.sum(x271 * x279 * x360)
    result[1, 10, 0] = numpy.sum(x296 * x371 * x372)
    result[1, 10, 1] = numpy.sum(x291 * x370 * x373)
    result[1, 10, 2] = numpy.sum(x297 * x370 * x372)
    result[1, 10, 3] = numpy.sum(x374 * x375)
    result[1, 10, 4] = numpy.sum(x253 * x373 * x4 * x80 * x96)
    result[1, 10, 5] = numpy.sum(x11 * x293 * x372)
    result[1, 10, 6] = numpy.sum(
        x251 * (x0 * (x222 + 6.0 * x334 + 3.0 * x335 + 3.0 * x353) + x113 * x358)
    )
    result[1, 10, 7] = numpy.sum(x374 * x81)
    result[1, 10, 8] = numpy.sum(x100 * x373 * x376)
    result[1, 10, 9] = numpy.sum(x112 * x372 * x377)
    result[1, 11, 0] = numpy.sum(x142 * x348 * x371)
    result[1, 11, 1] = numpy.sum(x318 * x351 * x370)
    result[1, 11, 2] = numpy.sum(x146 * x347 * x370)
    result[1, 11, 3] = numpy.sum(x261 * x362 * x4)
    result[1, 11, 4] = numpy.sum(x145 * x351 * x378)
    result[1, 11, 5] = numpy.sum(x11 * x150 * x352)
    result[1, 11, 6] = numpy.sum(x261 * x359)
    result[1, 11, 7] = numpy.sum(x146 * x354 * x8)
    result[1, 11, 8] = numpy.sum(x150 * x351 * x380)
    result[1, 11, 9] = numpy.sum(x156 * x348 * x8)
    result[1, 12, 0] = numpy.sum(x193 * x323 * x371)
    result[1, 12, 1] = numpy.sum(x194 * x327 * x370)
    result[1, 12, 2] = numpy.sum(x198 * x324 * x370)
    result[1, 12, 3] = numpy.sum(x11 * x194 * x331)
    result[1, 12, 4] = numpy.sum(x11 * x201 * x327)
    result[1, 12, 5] = numpy.sum(x11 * x203 * x329)
    result[1, 12, 6] = numpy.sum(x193 * x336 * x8)
    result[1, 12, 7] = numpy.sum(x198 * x331 * x381)
    result[1, 12, 8] = numpy.sum(x203 * x327 * x382)
    result[1, 12, 9] = numpy.sum(x207 * x324 * x383)
    result[1, 13, 0] = numpy.sum(x231 * x301 * x371)
    result[1, 13, 1] = numpy.sum(x233 * x303 * x370)
    result[1, 13, 2] = numpy.sum(x236 * x305 * x370)
    result[1, 13, 3] = numpy.sum(x11 * x233 * x308)
    result[1, 13, 4] = numpy.sum(x268 * x303 * x378)
    result[1, 13, 5] = numpy.sum(x11 * x238 * x305)
    result[1, 13, 6] = numpy.sum(x231 * x314 * x379)
    result[1, 13, 7] = numpy.sum(x236 * x308 * x380)
    result[1, 13, 8] = numpy.sum(x238 * x303 * x380)
    result[1, 13, 9] = numpy.sum(x240 * x301 * x8)
    result[1, 14, 0] = numpy.sum(x272 * x298 * x371)
    result[1, 14, 1] = numpy.sum(x272 * x284 * x370)
    result[1, 14, 2] = numpy.sum(x273 * x286 * x384)
    result[1, 14, 3] = numpy.sum(x272 * x289 * x385)
    result[1, 14, 4] = numpy.sum(x11 * x273 * x292)
    result[1, 14, 5] = numpy.sum(x276 * x279 * x375)
    result[1, 14, 6] = numpy.sum(x272 * x295 * x377)
    result[1, 14, 7] = numpy.sum(x273 * x289 * x376)
    result[1, 14, 8] = numpy.sum(x274 * x284 * x8)
    result[1, 14, 9] = numpy.sum(x278 * x279)
    result[2, 0, 0] = numpy.sum(x280 * x386)
    result[2, 0, 1] = numpy.sum(x285 * x386 * x66)
    result[2, 0, 2] = numpy.sum(x281 * x389 * x82)
    result[2, 0, 3] = numpy.sum(x290 * x390 * x65 * x85)
    result[2, 0, 4] = numpy.sum(x110 * x290 * x391)
    result[2, 0, 5] = numpy.sum(x290 * x394 * x395)
    result[2, 0, 6] = numpy.sum(x102 * x294 * x396)
    result[2, 0, 7] = numpy.sum(x294 * x389 * x85)
    result[2, 0, 8] = numpy.sum(x110 * x294 * x394 * x65)
    result[2, 0, 9] = numpy.sum(x294 * x397 * x398)
    result[2, 1, 0] = numpy.sum(x115 * x317 * x386)
    result[2, 1, 1] = numpy.sum(x122 * x390 * x76)
    result[2, 1, 2] = numpy.sum(x388 * x399 * x76)
    result[2, 1, 3] = numpy.sum(x126 * x309 * x400)
    result[2, 1, 4] = numpy.sum(x121 * x401 * x91)
    result[2, 1, 5] = numpy.sum(x189 * x309 * x394)
    result[2, 1, 6] = numpy.sum(x137 * x315 * x390)
    result[2, 1, 7] = numpy.sum(x126 * x316 * x388)
    result[2, 1, 8] = numpy.sum(x105 * x122 * x394)
    result[2, 1, 9] = numpy.sum(x118 * x315 * x397)
    result[2, 2, 0] = numpy.sum(x404 * x50 * x82)
    result[2, 2, 1] = numpy.sum(x110 * x405 * x76)
    result[2, 2, 2] = numpy.sum(x407 * x408 * x76)
    result[2, 2, 3] = numpy.sum(x147 * x404 * x91)
    result[2, 2, 4] = numpy.sum(x309 * x407 * x409)
    result[2, 2, 5] = numpy.sum(x408 * x412 * x91)
    result[2, 2, 6] = numpy.sum(x102 * x105 * x404)
    result[2, 2, 7] = numpy.sum(x147 * x315 * x407)
    result[2, 2, 8] = numpy.sum(x110 * x316 * x412)
    result[2, 2, 9] = numpy.sum(x315 * x416 * x82)
    result[2, 3, 0] = numpy.sum(x161 * x390 * x49)
    result[2, 3, 1] = numpy.sum(x166 * x417 * x42)
    result[2, 3, 2] = numpy.sum(x169 * x388 * x42)
    result[2, 3, 3] = numpy.sum(x171 * x344 * x417)
    result[2, 3, 4] = numpy.sum(x163 * x332 * x388)
    result[2, 3, 5] = numpy.sum(x169 * x394 * x67)
    result[2, 3, 6] = numpy.sum(x179 * x345 * x390)
    result[2, 3, 7] = numpy.sum(x171 * x338 * x388)
    result[2, 3, 8] = numpy.sum(x166 * x337 * x394)
    result[2, 3, 9] = numpy.sum(x103 * x161 * x397)
    result[2, 4, 0] = numpy.sum(x118 * x405 * x49)
    result[2, 4, 1] = numpy.sum(x120 * x418 * x42)
    result[2, 4, 2] = numpy.sum(x407 * x419 * x42)
    result[2, 4, 3] = numpy.sum(x126 * x332 * x403)
    result[2, 4, 4] = numpy.sum(x120 * x341 * x407)
    result[2, 4, 5] = numpy.sum(x118 * x332 * x412)
    result[2, 4, 6] = numpy.sum(x103 * x137 * x405)
    result[2, 4, 7] = numpy.sum(x126 * x342 * x407)
    result[2, 4, 8] = numpy.sum(x120 * x342 * x412)
    result[2, 4, 9] = numpy.sum(x103 * x399 * x416)
    result[2, 5, 0] = numpy.sum(x423 * x424 * x49)
    result[2, 5, 1] = numpy.sum(x110 * x42 * x425)
    result[2, 5, 2] = numpy.sum(x42 * x427 * x428)
    result[2, 5, 3] = numpy.sum(x423 * x429 * x67)
    result[2, 5, 4] = numpy.sum(x110 * x332 * x427)
    result[2, 5, 5] = numpy.sum(x428 * x431 * x67)
    result[2, 5, 6] = numpy.sum(x204 * x337 * x422)
    result[2, 5, 7] = numpy.sum(x337 * x427 * x429)
    result[2, 5, 8] = numpy.sum(x110 * x338 * x431)
    result[2, 5, 9] = numpy.sum(x337 * x424 * x434)
    result[2, 6, 0] = numpy.sum(x257 * x346 * x390)
    result[2, 6, 1] = numpy.sum(x25 * x258 * x400)
    result[2, 6, 2] = numpy.sum(x215 * x25 * x388)
    result[2, 6, 3] = numpy.sum(x217 * x356 * x390)
    result[2, 6, 4] = numpy.sum(x212 * x355 * x401)
    result[2, 6, 5] = numpy.sum(x214 * x355 * x394)
    result[2, 6, 6] = numpy.sum(x262 * x360 * x386)
    result[2, 6, 7] = numpy.sum(x217 * x368 * x388)
    result[2, 6, 8] = numpy.sum(x258 * x369 * x394)
    result[2, 6, 9] = numpy.sum(x20 * x257 * x397)
    result[2, 7, 0] = numpy.sum(x158 * x346 * x405)
    result[2, 7, 1] = numpy.sum(x163 * x25 * x418)
    result[2, 7, 2] = numpy.sum(x226 * x25 * x407)
    result[2, 7, 3] = numpy.sum(x171 * x23 * x418)
    result[2, 7, 4] = numpy.sum(x165 * x365 * x407)
    result[2, 7, 5] = numpy.sum(x226 * x23 * x412)
    result[2, 7, 6] = numpy.sum(x179 * x20 * x405)
    result[2, 7, 7] = numpy.sum(x171 * x367 * x407)
    result[2, 7, 8] = numpy.sum(x163 * x367 * x412)
    result[2, 7, 9] = numpy.sum(x158 * x368 * x416)
    result[2, 8, 0] = numpy.sum(x346 * x399 * x422)
    result[2, 8, 1] = numpy.sum(x120 * x25 * x435)
    result[2, 8, 2] = numpy.sum(x25 * x419 * x427)
    result[2, 8, 3] = numpy.sum(x126 * x23 * x435)
    result[2, 8, 4] = numpy.sum(x184 * x366 * x427)
    result[2, 8, 5] = numpy.sum(x118 * x365 * x431)
    result[2, 8, 6] = numpy.sum(x137 * x368 * x422)
    result[2, 8, 7] = numpy.sum(x126 * x367 * x427)
    result[2, 8, 8] = numpy.sum(x184 * x20 * x431)
    result[2, 8, 9] = numpy.sum(x183 * x19 * x270 * x434)
    result[2, 9, 0] = numpy.sum(x151 * x346 * x436)
    result[2, 9, 1] = numpy.sum(x110 * x25 * x438)
    result[2, 9, 2] = numpy.sum(x25 * x408 * x441)
    result[2, 9, 3] = numpy.sum(x147 * x355 * x436)
    result[2, 9, 4] = numpy.sum(x355 * x409 * x441)
    result[2, 9, 5] = numpy.sum(x356 * x443 * x82)
    result[2, 9, 6] = numpy.sum(x102 * x20 * x437)
    result[2, 9, 7] = numpy.sum(x147 * x363 * x441)
    result[2, 9, 8] = numpy.sum(x360 * x444 * x64)
    result[2, 9, 9] = numpy.sum(x360 * x447)
    result[2, 10, 0] = numpy.sum(x241 * x371 * x396)
    result[2, 10, 1] = numpy.sum(x245 * x384 * x390)
    result[2, 10, 2] = numpy.sum(x241 * x370 * x389)
    result[2, 10, 3] = numpy.sum(x254 * x375 * x386)
    result[2, 10, 4] = numpy.sum(x11 * x245 * x391)
    result[2, 10, 5] = numpy.sum(x241 * x385 * x394)
    result[2, 10, 6] = numpy.sum(x252 * x386)
    result[2, 10, 7] = numpy.sum(x247 * x389 * x8)
    result[2, 10, 8] = numpy.sum(x245 * x376 * x394)
    result[2, 10, 9] = numpy.sum(x241 * x377 * x397)
    result[2, 11, 0] = numpy.sum(x208 * x371 * x404)
    result[2, 11, 1] = numpy.sum(x212 * x370 * x405)
    result[2, 11, 2] = numpy.sum(x215 * x370 * x407)
    result[2, 11, 3] = numpy.sum(x11 * x217 * x405)
    result[2, 11, 4] = numpy.sum(x258 * x378 * x407)
    result[2, 11, 5] = numpy.sum(x11 * x215 * x412)
    result[2, 11, 6] = numpy.sum(x222 * x404 * x8)
    result[2, 11, 7] = numpy.sum(x217 * x380 * x407)
    result[2, 11, 8] = numpy.sum(x212 * x380 * x412)
    result[2, 11, 9] = numpy.sum(x208 * x379 * x416)
    result[2, 12, 0] = numpy.sum(x161 * x371 * x422)
    result[2, 12, 1] = numpy.sum(x166 * x370 * x423)
    result[2, 12, 2] = numpy.sum(x169 * x370 * x427)
    result[2, 12, 3] = numpy.sum(x11 * x171 * x425)
    result[2, 12, 4] = numpy.sum(x11 * x163 * x174 * x427)
    result[2, 12, 5] = numpy.sum(x11 * x169 * x431)
    result[2, 12, 6] = numpy.sum(x179 * x383 * x423)
    result[2, 12, 7] = numpy.sum(x171 * x382 * x427)
    result[2, 12, 8] = numpy.sum(x166 * x381 * x431)
    result[2, 12, 9] = numpy.sum(x161 * x434 * x8)
    result[2, 13, 0] = numpy.sum(x118 * x371 * x437)
    result[2, 13, 1] = numpy.sum(x122 * x370 * x436)
    result[2, 13, 2] = numpy.sum(x370 * x399 * x441)
    result[2, 13, 3] = numpy.sum(x11 * x126 * x438)
    result[2, 13, 4] = numpy.sum(x121 * x378 * x441)
    result[2, 13, 5] = numpy.sum(x269 * x4 * x444)
    result[2, 13, 6] = numpy.sum(x137 * x379 * x436)
    result[2, 13, 7] = numpy.sum(x126 * x380 * x441)
    result[2, 13, 8] = numpy.sum(x122 * x443 * x8)
    result[2, 13, 9] = numpy.sum(x269 * x447)
    result[2, 14, 0] = numpy.sum(x371 * x398 * x448)
    result[2, 14, 1] = numpy.sum(x110 * x384 * x448)
    result[2, 14, 2] = numpy.sum(x370 * x395 * x449)
    result[2, 14, 3] = numpy.sum(x385 * x448 * x85)
    result[2, 14, 4] = numpy.sum(x275 * x4 * x449 * x97)
    result[2, 14, 5] = numpy.sum(x375 * x450)
    result[2, 14, 6] = numpy.sum(x102 * x377 * x448)
    result[2, 14, 7] = numpy.sum(x376 * x449 * x85)
    result[2, 14, 8] = numpy.sum(x450 * x66)
    result[2, 14, 9] = numpy.sum(
        x277 * (x0 * (x240 + 6.0 * x432 + 3.0 * x433 + 3.0 * x442) + x140 * x446)
    )
    return result


def dipole3d_44(ax, da, A, bx, db, B, R):
    """Cartesian 3D (gg) dipole moment integrals.
    The origin is at R.

    Generated code; DO NOT modify by hand!"""

    result = numpy.zeros((3, 15, 15), dtype=float)

    x0 = 0.5 / (ax + bx)
    x1 = (ax + bx) ** (-1.0)
    x2 = -x1 * (ax * A[0] + bx * B[0])
    x3 = -x2 - B[0]
    x4 = -x2 - A[0]
    x5 = ax * bx * x1
    x6 = numpy.exp(-x5 * (A[0] - B[0]) ** 2)
    x7 = 1.772453850905516 * numpy.sqrt(x1)
    x8 = x6 * x7
    x9 = x3 * x8
    x10 = -x2 - R[0]
    x11 = x10 * x8
    x12 = x0 * (x11 + x9)
    x13 = x0 * x8
    x14 = x10 * x9
    x15 = x13 + x14
    x16 = x15 * x4
    x17 = x12 + x16
    x18 = x17 * x4
    x19 = x17 * x3
    x20 = 3.0 * x13
    x21 = x4 * x8
    x22 = x21 * x3
    x23 = x10 * x21
    x24 = x0 * (x14 + x20 + x22 + x23)
    x25 = x3**2 * x8
    x26 = x20 + 2.0 * x22
    x27 = x0 * (x25 + x26)
    x28 = x0 * (x21 + x9)
    x29 = x13 + x22
    x30 = x29 * x3
    x31 = x28 + x30
    x32 = x31 * x4
    x33 = x27 + x32
    x34 = x0 * (2.0 * x18 + 2.0 * x19 + 4.0 * x24 + x33)
    x35 = x15 * x3
    x36 = 3.0 * x12
    x37 = 2.0 * x16
    x38 = x0 * (x31 + x35 + x36 + x37)
    x39 = x19 + x24
    x40 = x39 * x4
    x41 = x38 + x40
    x42 = x3 * x41
    x43 = x34 + x42
    x44 = x3 * x43
    x45 = x4 * x43
    x46 = x3 * x39
    x47 = 3.0 * x40
    x48 = x29 * x4
    x49 = 2.0 * x0 * (2.0 * x28 + x30 + x48)
    x50 = x3 * x33
    x51 = x49 + x50
    x52 = x0 * (5.0 * x38 + 2.0 * x46 + x47 + x51)
    x53 = x33 * x4
    x54 = 3.0 * x0 * (2.0 * x49 + x50 + x53)
    x55 = x3 * x31
    x56 = 3.0 * x32
    x57 = x0 * (5.0 * x27 + 2.0 * x55 + x56)
    x58 = x4 * x51
    x59 = x57 + x58
    x60 = x3 * x59 + x54
    x61 = x4 * x41
    x62 = x0 * (6.0 * x34 + 3.0 * x42 + x59 + 3.0 * x61)
    x63 = x45 + x52
    x64 = x3 * x63 + x62
    x65 = da * db
    x66 = 0.009523809523809524 * x65
    x67 = numpy.exp(-x5 * (A[1] - B[1]) ** 2)
    x68 = numpy.exp(-x5 * (A[2] - B[2]) ** 2)
    x69 = 3.141592653589793 * x1 * x68
    x70 = x67 * x69
    x71 = x66 * x70
    x72 = -x1 * (ax * A[1] + bx * B[1])
    x73 = -x72 - B[1]
    x74 = 2.645751311064591
    x75 = x65 * x74
    x76 = 0.009523809523809524 * x75
    x77 = x70 * x76
    x78 = x77 * (x4 * x63 + x62)
    x79 = -x1 * (ax * A[2] + bx * B[2])
    x80 = -x79 - B[2]
    x81 = x28 + x48
    x82 = x0 * (x11 + x21)
    x83 = x13 + x23
    x84 = x4 * x83
    x85 = x82 + x84
    x86 = x0 * (2.0 * x12 + x37 + x81 + x85)
    x87 = x18 + x24
    x88 = x4 * x87
    x89 = x49 + x53
    x90 = x34 + x61
    x91 = x0 * (3.0 * x38 + x47 + 2.0 * x86 + 2.0 * x88 + x89) + x4 * x90
    x92 = x68 * x7
    x93 = 0.03253000243161777
    x94 = x67 * x7
    x95 = x73**2 * x94
    x96 = x0 * x94
    x97 = x95 + x96
    x98 = x65 * x97
    x99 = x93 * x98
    x100 = 5.916079783099616
    x101 = x100 * x71
    x102 = x80**2 * x92
    x103 = x0 * x92
    x104 = x102 + x103
    x105 = x104 * x65
    x106 = x105 * x93
    x107 = 2.0 * x96
    x108 = x73 * (x107 + x97)
    x109 = 3.0 * x24
    x110 = x4**2 * x8
    x111 = x0 * (x110 + x20 + 2.0 * x23) + x4 * x85
    x112 = x0 * (x110 + x26)
    x113 = x4 * x81
    x114 = x112 + x113
    x115 = x86 + x88
    x116 = x0 * (x109 + x111 + x114 + 3.0 * x18) + x115 * x4
    x117 = x116 * x76
    x118 = x80 * x92
    x119 = 0.009523809523809524 * x100
    x120 = x116 * x119
    x121 = x73 * x94
    x122 = 2.0 * x103
    x123 = x80 * (x104 + x122)
    x124 = 3.0 * x96
    x125 = x0 * (x124 + 3.0 * x95) + x108 * x73
    x126 = x110 + x13
    x127 = 2.0 * x0
    x128 = x126 * x4 + x127 * x21
    x129 = x0 * (x128 + 3.0 * x82 + 3.0 * x84) + x111 * x4
    x130 = x129 * x66
    x131 = x129 * x76
    x132 = 3.0 * x103
    x133 = x0 * (3.0 * x102 + x132) + x123 * x80
    x134 = -x72 - A[1]
    x135 = x64 * x77
    x136 = x134 * x94
    x137 = x136 * x73
    x138 = x137 + x96
    x139 = x138 * x65
    x140 = 0.06666666666666667 * x139
    x141 = 0.06666666666666667 * x65
    x142 = x141 * x80
    x143 = x63 * x70
    x144 = x0 * (x121 + x136)
    x145 = x138 * x73
    x146 = x144 + x145
    x147 = 0.08606629658238704
    x148 = x147 * x65
    x149 = x146 * x148
    x150 = 2.23606797749979
    x151 = x140 * x150
    x152 = x105 * x147
    x153 = x124 + 2.0 * x137
    x154 = x0 * (x153 + x95)
    x155 = x146 * x73
    x156 = x154 + x155
    x157 = x141 * x156
    x158 = x115 * x150
    x159 = x141 * x158
    x160 = x123 * x141
    x161 = 3.0 * x144
    x162 = x0 * (x108 + 3.0 * x145 + x161) + x156 * x73
    x163 = x111 * x76
    x164 = 0.06666666666666667 * x111
    x165 = x164 * x65
    x166 = x111 * x147
    x167 = -x79 - A[2]
    x168 = x141 * x167
    x169 = x167 * x92
    x170 = x169 * x80
    x171 = x103 + x170
    x172 = x171 * x65
    x173 = 0.06666666666666667 * x172
    x174 = x147 * x98
    x175 = x150 * x173
    x176 = x0 * (x118 + x169)
    x177 = x171 * x80
    x178 = x176 + x177
    x179 = x148 * x178
    x180 = x108 * x141
    x181 = x132 + 2.0 * x170
    x182 = x0 * (x102 + x181)
    x183 = x178 * x80
    x184 = x182 + x183
    x185 = x141 * x94
    x186 = 3.0 * x176
    x187 = x0 * (x123 + 3.0 * x177 + x186) + x184 * x80
    x188 = x44 + x52
    x189 = x134**2 * x94
    x190 = x189 + x96
    x191 = x190 * x65
    x192 = x191 * x93
    x193 = x134 * x138
    x194 = x144 + x193
    x195 = x148 * x92
    x196 = x147 * x191
    x197 = x134 * x146
    x198 = x154 + x197
    x199 = 0.1111111111111111 * x65
    x200 = x199 * x41
    x201 = 1.732050807568877
    x202 = x199 * x201
    x203 = x202 * x41
    x204 = x104 * x199
    x205 = 2.0 * x0 * (2.0 * x144 + x145 + x193)
    x206 = x198 * x73
    x207 = x205 + x206
    x208 = x201 * x87
    x209 = x198 * x199
    x210 = x123 * x147
    x211 = 3.0 * x197
    x212 = x0 * (5.0 * x154 + 2.0 * x155 + x211)
    x213 = x207 * x73
    x214 = x212 + x213
    x215 = x65 * x85
    x216 = x215 * x93
    x217 = x147 * x215
    x218 = x146 * x202
    x219 = 0.3333333333333333 * x139
    x220 = x178 * x202
    x221 = x150 * x157
    x222 = 0.3333333333333333 * x172
    x223 = x150 * x184
    x224 = x136 * x141
    x225 = x119 * x215
    x226 = x150 * x85
    x227 = x167**2 * x92
    x228 = x103 + x227
    x229 = x228 * x65
    x230 = x229 * x93
    x231 = x147 * x229
    x232 = x167 * x171
    x233 = x176 + x232
    x234 = x148 * x94
    x235 = x199 * x97
    x236 = x167 * x178
    x237 = x182 + x236
    x238 = x108 * x147
    x239 = x199 * x237
    x240 = 2.0 * x0 * (2.0 * x176 + x177 + x232)
    x241 = x237 * x80
    x242 = x240 + x241
    x243 = x125 * x93
    x244 = 3.0 * x236
    x245 = x0 * (5.0 * x182 + 2.0 * x183 + x244)
    x246 = x242 * x80
    x247 = x245 + x246
    x248 = x134 * (x107 + x190)
    x249 = x248 * x65
    x250 = 0.009523809523809524 * x92
    x251 = x12 + x35
    x252 = x0 * (2.0 * x14 + x20 + x25) + x251 * x3
    x253 = x27 + x55
    x254 = x38 + x46
    x255 = x0 * (x109 + 3.0 * x19 + x252 + x253) + x254 * x3
    x256 = x255 * x74
    x257 = x0 * (x153 + x189)
    x258 = x134 * x194
    x259 = x257 + x258
    x260 = x141 * x92
    x261 = 0.06666666666666667 * x248
    x262 = x261 * x65
    x263 = x134 * x198
    x264 = x205 + x263
    x265 = x150 * x259
    x266 = x141 * x265
    x267 = x134 * x207
    x268 = x212 + x267
    x269 = x17 * x65
    x270 = 0.06666666666666667 * x269
    x271 = x150 * x270
    x272 = 3.0 * x0 * (2.0 * x205 + x206 + x263)
    x273 = x268 * x73 + x272
    x274 = 0.009523809523809524 * x83
    x275 = x274 * x74
    x276 = x275 * x65
    x277 = x141 * x83
    x278 = x119 * x255
    x279 = x150 * x194
    x280 = x141 * x169
    x281 = x150 * x190
    x282 = x202 * x39
    x283 = 0.3333333333333333 * x269
    x284 = x100 * x274
    x285 = x284 * x65
    x286 = x150 * x83
    x287 = x150 * x277
    x288 = x150 * x228
    x289 = x150 * x233
    x290 = x167 * (x122 + x228)
    x291 = x290 * x65
    x292 = 0.009523809523809524 * x291
    x293 = x141 * x290
    x294 = x0 * (x181 + x227)
    x295 = x167 * x233
    x296 = x294 + x295
    x297 = x150 * x296
    x298 = x121 * x141
    x299 = x167 * x237
    x300 = x240 + x299
    x301 = 0.06666666666666667 * x290
    x302 = x150 * x300
    x303 = x167 * x242
    x304 = x245 + x303
    x305 = 3.0 * x0 * (2.0 * x240 + x241 + x299)
    x306 = x304 * x80 + x305
    x307 = x0 * (x124 + 3.0 * x189) + x134 * x248
    x308 = x13 + x25
    x309 = x127 * x9 + x3 * x308
    x310 = x0 * (x309 + 3.0 * x35 + x36) + x252 * x3
    x311 = x310 * x66
    x312 = x0 * (x161 + 3.0 * x193 + x248) + x134 * x259
    x313 = x252 * x76
    x314 = x65 * x92
    x315 = x0 * (3.0 * x154 + x211 + 2.0 * x257 + 2.0 * x258) + x134 * x264
    x316 = x315 * x93
    x317 = x100 * x66
    x318 = x251 * x317
    x319 = x134 * x268 + x272
    x320 = 0.009523809523809524 * x15
    x321 = x320 * x75
    x322 = x100 * x320
    x323 = x322 * x65
    x324 = x6 * x66
    x325 = x324 * x69
    x326 = x325 * (x0 * (7.0 * x212 + 3.0 * x213 + 4.0 * x267) + x134 * x273)
    x327 = x6 * x69
    x328 = x327 * x80
    x329 = x10 * x76
    x330 = x11 * x76
    x331 = x11 * x66
    x332 = x310 * x74
    x333 = 0.009523809523809524 * x169
    x334 = x141 * x259
    x335 = x147 * x251
    x336 = x335 * x65
    x337 = x141 * x15
    x338 = x15 * x150
    x339 = x167 * x327
    x340 = x11 * x74
    x341 = 0.009523809523809524 * x187
    x342 = x147 * x252
    x343 = x199 * x251
    x344 = x201 * x233
    x345 = x147 * x15
    x346 = x15 * x202
    x347 = x11 * x148
    x348 = x141 * x296
    x349 = 3.141592653589793 * x1 * x67
    x350 = x349 * x6
    x351 = x134 * x350
    x352 = x0 * (x132 + 3.0 * x227) + x167 * x290
    x353 = x0 * (x186 + 3.0 * x232 + x290) + x167 * x296
    x354 = x352 * x93
    x355 = x65 * x94
    x356 = x0 * (3.0 * x182 + x244 + 2.0 * x294 + 2.0 * x295) + x167 * x300
    x357 = x356 * x93
    x358 = x167 * x304 + x305
    x359 = x350 * x76
    x360 = x358 * x359
    x361 = x324 * x349
    x362 = x361 * (x0 * (7.0 * x245 + 3.0 * x246 + 4.0 * x303) + x167 * x306)
    x363 = -x72 - R[1]
    x364 = x3 * x51
    x365 = x71 * (x0 * (3.0 * x364 + 7.0 * x57 + 4.0 * x58) + x4 * x60)
    x366 = x4 * x59 + x54
    x367 = x121 * x363
    x368 = x367 + x96
    x369 = 0.009523809523809524 * x368
    x370 = x369 * x75
    x371 = x363 * x77
    x372 = x363 * x94
    x373 = x0 * (x121 + x372)
    x374 = x368 * x73
    x375 = x373 + x374
    x376 = x0 * (2.0 * x112 + 2.0 * x113 + 3.0 * x27 + x56) + x4 * x89
    x377 = x100 * x369
    x378 = x377 * x65
    x379 = x0 * (x124 + 2.0 * x367 + x95) + x375 * x73
    x380 = 3.0 * x28
    x381 = x0 * (x128 + x380 + 3.0 * x48) + x114 * x4
    x382 = x76 * x92
    x383 = x317 * x375
    x384 = x123 * x76
    x385 = x0 * (3.0 * x110 + x20) + x128 * x4
    x386 = 3.0 * x373
    x387 = x0 * (x108 + 3.0 * x374 + x386) + x379 * x73
    x388 = x66 * x92
    x389 = x118 * x76
    x390 = x372 * x66
    x391 = x136 * x363
    x392 = x391 + x96
    x393 = 0.009523809523809524 * x392
    x394 = x393 * x75
    x395 = x134 * x368
    x396 = x373 + x395
    x397 = x141 * x396
    x398 = x141 * x392
    x399 = x0 * (x124 + x137 + x367 + x391)
    x400 = x396 * x73
    x401 = x399 + x400
    x402 = x150 * x397
    x403 = 2.0 * x395
    x404 = x0 * (x146 + x374 + x386 + x403)
    x405 = x401 * x73
    x406 = x404 + x405
    x407 = x114 * x150
    x408 = x141 * x407
    x409 = 3.0 * x399
    x410 = x0 * (x156 + x379 + 3.0 * x400 + x409) + x406 * x73
    x411 = x128 * x75
    x412 = x128 * x141
    x413 = x141 * x368
    x414 = x148 * x375
    x415 = x114 * x141
    x416 = x364 + x57
    x417 = x0 * (x136 + x372)
    x418 = x134 * x392
    x419 = x417 + x418
    x420 = x419 * x93
    x421 = x134 * x396
    x422 = x399 + x421
    x423 = x148 * x51
    x424 = x134 * x401
    x425 = x404 + x424
    x426 = x199 * x425
    x427 = x118 * x202
    x428 = x0 * (x198 + 4.0 * x399 + 2.0 * x400 + 2.0 * x421)
    x429 = x425 * x73
    x430 = x428 + x429
    x431 = x201 * x81
    x432 = x210 * x65
    x433 = 3.0 * x424
    x434 = x0 * (x207 + 5.0 * x404 + 2.0 * x405 + x433)
    x435 = x430 * x73
    x436 = x434 + x435
    x437 = x126 * x65
    x438 = x92 * x93
    x439 = x126 * x148
    x440 = x100 * x393
    x441 = x440 * x65
    x442 = x202 * x401
    x443 = x150 * x81
    x444 = 0.3333333333333333 * x65
    x445 = x178 * x444
    x446 = x119 * x410
    x447 = x199 * x375
    x448 = x202 * x368
    x449 = x148 * x372
    x450 = x0 * (x124 + x189 + 2.0 * x391) + x134 * x419
    x451 = x0 * (3.0 * x30 + x309 + x380) + x253 * x3
    x452 = x0 * (x194 + 2.0 * x373 + x403 + x419)
    x453 = x134 * x422
    x454 = x452 + x453
    x455 = x141 * x253
    x456 = x134 * x425
    x457 = x428 + x456
    x458 = x150 * x454
    x459 = x134 * x430
    x460 = x434 + x459
    x461 = x141 * x29
    x462 = x150 * x461
    x463 = x327 * x4
    x464 = x0 * (x268 + 6.0 * x428 + 3.0 * x429 + 3.0 * x456)
    x465 = x460 * x73 + x464
    x466 = x465 * x76
    x467 = x450 * x76
    x468 = x317 * x419
    x469 = x150 * x455
    x470 = x202 * x31
    x471 = x100 * x325
    x472 = x141 * x21
    x473 = x150 * x398
    x474 = x233 * x444
    x475 = x29 * x444
    x476 = x292 * x74
    x477 = x147 * x291
    x478 = x350 * x4
    x479 = x0 * (x248 + 3.0 * x417 + 3.0 * x418) + x134 * x450
    x480 = x0 * (x20 + 3.0 * x25) + x3 * x309
    x481 = x0 * (x259 + x409 + 3.0 * x421 + x450) + x134 * x454
    x482 = x0 * (x264 + 3.0 * x404 + x433 + 2.0 * x452 + 2.0 * x453) + x134 * x457
    x483 = x308 * x65
    x484 = x119 * x481
    x485 = x3 * x327
    x486 = x76 * (x134 * x460 + x464)
    x487 = x76 * x8
    x488 = x66 * x8
    x489 = x141 * x309
    x490 = x148 * x308
    x491 = x141 * x9
    x492 = x141 * x8
    x493 = x148 * x309
    x494 = x199 * x308
    x495 = x202 * x9
    x496 = x148 * x9
    x497 = x148 * x8
    x498 = x65 * x8
    x499 = x480 * x74
    x500 = x74 * x8
    x501 = x309 * x76
    x502 = x76 * x9
    x503 = -x79 - R[2]
    x504 = x503 * x77
    x505 = x118 * x503
    x506 = x103 + x505
    x507 = 0.009523809523809524 * x506
    x508 = x507 * x75
    x509 = x503 * x92
    x510 = x100 * x507
    x511 = x510 * x65
    x512 = x0 * (x118 + x509)
    x513 = x506 * x80
    x514 = x512 + x513
    x515 = x514 * x93
    x516 = x317 * x514
    x517 = x0 * (x102 + x132 + 2.0 * x505) + x514 * x80
    x518 = x76 * x94
    x519 = x509 * x66
    x520 = 3.0 * x512
    x521 = x0 * (x123 + 3.0 * x513 + x520) + x517 * x80
    x522 = x66 * x94
    x523 = x141 * x59
    x524 = x148 * x514
    x525 = 0.009523809523809524 * x411
    x526 = x169 * x503
    x527 = x103 + x526
    x528 = 0.009523809523809524 * x527
    x529 = x528 * x75
    x530 = x167 * x506
    x531 = x512 + x530
    x532 = x150 * x531
    x533 = x0 * (x132 + x170 + x505 + x526)
    x534 = x531 * x80
    x535 = x533 + x534
    x536 = 2.0 * x530
    x537 = x0 * (x178 + x513 + x520 + x536)
    x538 = x535 * x80
    x539 = x537 + x538
    x540 = 3.0 * x533
    x541 = (
        0.009523809523809524 * x0 * (x184 + x517 + 3.0 * x534 + x540)
        + 0.009523809523809524 * x539 * x80
    )
    x542 = x202 * x506
    x543 = x199 * x514
    x544 = x148 * x509
    x545 = x214 * x93
    x546 = x100 * x528
    x547 = x546 * x65
    x548 = x202 * x33
    x549 = x444 * x531
    x550 = x100 * x541
    x551 = x0 * (x169 + x509)
    x552 = x167 * x527
    x553 = x551 + x552
    x554 = x553 * x65
    x555 = x93 * x94
    x556 = x167 * x531
    x557 = x533 + x556
    x558 = x167 * x535
    x559 = x537 + x558
    x560 = x199 * x559
    x561 = x0 * (x237 + 4.0 * x533 + 2.0 * x534 + 2.0 * x556)
    x562 = x559 * x80
    x563 = x561 + x562
    x564 = 3.0 * x558
    x565 = x0 * (x242 + 5.0 * x537 + 2.0 * x538 + x564)
    x566 = x563 * x80
    x567 = x565 + x566
    x568 = 0.009523809523809524 * x249 * x74
    x569 = x147 * x249
    x570 = x503 * x76
    x571 = x119 * x554
    x572 = x100 * x361
    x573 = x0 * (x132 + x227 + 2.0 * x526) + x167 * x553
    x574 = x0 * (x233 + 2.0 * x512 + x536 + x553)
    x575 = x167 * x557
    x576 = x574 + x575
    x577 = x150 * x576
    x578 = x167 * x559
    x579 = x561 + x578
    x580 = x167 * x563
    x581 = x565 + x580
    x582 = x573 * x76
    x583 = x141 * x581
    x584 = x0 * (x304 + 6.0 * x561 + 3.0 * x562 + 3.0 * x578)
    x585 = x581 * x80 + x584
    x586 = x585 * x76
    x587 = x0 * (x290 + 3.0 * x551 + 3.0 * x552) + x167 * x573
    x588 = x0 * (x296 + x540 + 3.0 * x556 + x573) + x167 * x576
    x589 = x119 * x588
    x590 = x0 * (x300 + 3.0 * x537 + x564 + 2.0 * x574 + 2.0 * x575) + x167 * x579
    x591 = x359 * (x167 * x581 + x584)

    # 675 item(s)
    result[0, 0, 0] = numpy.sum(
        x71 * (x0 * (3.0 * x44 + 4.0 * x45 + 7.0 * x52 + x60) + x4 * x64)
    )
    result[0, 0, 1] = numpy.sum(x73 * x78)
    result[0, 0, 2] = numpy.sum(x78 * x80)
    result[0, 0, 3] = numpy.sum(x91 * x92 * x99)
    result[0, 0, 4] = numpy.sum(x101 * x73 * x80 * x91)
    result[0, 0, 5] = numpy.sum(x106 * x91 * x94)
    result[0, 0, 6] = numpy.sum(x108 * x117 * x92)
    result[0, 0, 7] = numpy.sum(x118 * x120 * x98)
    result[0, 0, 8] = numpy.sum(x105 * x120 * x121)
    result[0, 0, 9] = numpy.sum(x117 * x123 * x94)
    result[0, 0, 10] = numpy.sum(x125 * x130 * x92)
    result[0, 0, 11] = numpy.sum(x108 * x118 * x131)
    result[0, 0, 12] = numpy.sum(x106 * x129 * x97)
    result[0, 0, 13] = numpy.sum(x121 * x123 * x131)
    result[0, 0, 14] = numpy.sum(x130 * x133 * x94)
    result[0, 1, 0] = numpy.sum(x134 * x135)
    result[0, 1, 1] = numpy.sum(x140 * x63 * x92)
    result[0, 1, 2] = numpy.sum(x134 * x142 * x143)
    result[0, 1, 3] = numpy.sum(x149 * x90 * x92)
    result[0, 1, 4] = numpy.sum(x118 * x151 * x90)
    result[0, 1, 5] = numpy.sum(x136 * x152 * x90)
    result[0, 1, 6] = numpy.sum(x115 * x157 * x92)
    result[0, 1, 7] = numpy.sum(x118 * x146 * x159)
    result[0, 1, 8] = numpy.sum(x104 * x140 * x158)
    result[0, 1, 9] = numpy.sum(x115 * x136 * x160)
    result[0, 1, 10] = numpy.sum(x162 * x163 * x92)
    result[0, 1, 11] = numpy.sum(x118 * x156 * x165)
    result[0, 1, 12] = numpy.sum(x105 * x146 * x166)
    result[0, 1, 13] = numpy.sum(x123 * x139 * x164)
    result[0, 1, 14] = numpy.sum(x133 * x136 * x163)
    result[0, 2, 0] = numpy.sum(x135 * x167)
    result[0, 2, 1] = numpy.sum(x143 * x168 * x73)
    result[0, 2, 2] = numpy.sum(x173 * x63 * x94)
    result[0, 2, 3] = numpy.sum(x169 * x174 * x90)
    result[0, 2, 4] = numpy.sum(x121 * x175 * x90)
    result[0, 2, 5] = numpy.sum(x179 * x90 * x94)
    result[0, 2, 6] = numpy.sum(x115 * x169 * x180)
    result[0, 2, 7] = numpy.sum(x158 * x173 * x97)
    result[0, 2, 8] = numpy.sum(x121 * x159 * x178)
    result[0, 2, 9] = numpy.sum(x115 * x184 * x185)
    result[0, 2, 10] = numpy.sum(x125 * x163 * x169)
    result[0, 2, 11] = numpy.sum(x108 * x164 * x172)
    result[0, 2, 12] = numpy.sum(x166 * x178 * x98)
    result[0, 2, 13] = numpy.sum(x121 * x165 * x184)
    result[0, 2, 14] = numpy.sum(x163 * x187 * x94)
    result[0, 3, 0] = numpy.sum(x188 * x192 * x92)
    result[0, 3, 1] = numpy.sum(x194 * x195 * x43)
    result[0, 3, 2] = numpy.sum(x118 * x196 * x43)
    result[0, 3, 3] = numpy.sum(x198 * x200 * x92)
    result[0, 3, 4] = numpy.sum(x118 * x194 * x203)
    result[0, 3, 5] = numpy.sum(x190 * x204 * x41)
    result[0, 3, 6] = numpy.sum(x195 * x207 * x87)
    result[0, 3, 7] = numpy.sum(x118 * x208 * x209)
    result[0, 3, 8] = numpy.sum(x194 * x204 * x208)
    result[0, 3, 9] = numpy.sum(x191 * x210 * x87)
    result[0, 3, 10] = numpy.sum(x214 * x216 * x92)
    result[0, 3, 11] = numpy.sum(x118 * x207 * x217)
    result[0, 3, 12] = numpy.sum(x198 * x204 * x85)
    result[0, 3, 13] = numpy.sum(x194 * x210 * x215)
    result[0, 3, 14] = numpy.sum(x133 * x192 * x85)
    result[0, 4, 0] = numpy.sum(x101 * x134 * x167 * x188)
    result[0, 4, 1] = numpy.sum(x151 * x169 * x43)
    result[0, 4, 2] = numpy.sum(x136 * x175 * x43)
    result[0, 4, 3] = numpy.sum(x169 * x218 * x41)
    result[0, 4, 4] = numpy.sum(x171 * x219 * x41)
    result[0, 4, 5] = numpy.sum(x136 * x220 * x41)
    result[0, 4, 6] = numpy.sum(x169 * x221 * x87)
    result[0, 4, 7] = numpy.sum(x146 * x222 * x87)
    result[0, 4, 8] = numpy.sum(x178 * x219 * x87)
    result[0, 4, 9] = numpy.sum(x223 * x224 * x87)
    result[0, 4, 10] = numpy.sum(x162 * x169 * x225)
    result[0, 4, 11] = numpy.sum(x156 * x173 * x226)
    result[0, 4, 12] = numpy.sum(x146 * x220 * x85)
    result[0, 4, 13] = numpy.sum(x140 * x184 * x226)
    result[0, 4, 14] = numpy.sum(x136 * x187 * x225)
    result[0, 5, 0] = numpy.sum(x188 * x230 * x94)
    result[0, 5, 1] = numpy.sum(x121 * x231 * x43)
    result[0, 5, 2] = numpy.sum(x233 * x234 * x43)
    result[0, 5, 3] = numpy.sum(x228 * x235 * x41)
    result[0, 5, 4] = numpy.sum(x121 * x203 * x233)
    result[0, 5, 5] = numpy.sum(x200 * x237 * x94)
    result[0, 5, 6] = numpy.sum(x229 * x238 * x87)
    result[0, 5, 7] = numpy.sum(x208 * x233 * x235)
    result[0, 5, 8] = numpy.sum(x121 * x208 * x239)
    result[0, 5, 9] = numpy.sum(x234 * x242 * x87)
    result[0, 5, 10] = numpy.sum(x215 * x228 * x243)
    result[0, 5, 11] = numpy.sum(x215 * x233 * x238)
    result[0, 5, 12] = numpy.sum(x235 * x237 * x85)
    result[0, 5, 13] = numpy.sum(x121 * x217 * x242)
    result[0, 5, 14] = numpy.sum(x216 * x247 * x94)
    result[0, 6, 0] = numpy.sum(x249 * x250 * x256)
    result[0, 6, 1] = numpy.sum(x254 * x259 * x260)
    result[0, 6, 2] = numpy.sum(x118 * x254 * x262)
    result[0, 6, 3] = numpy.sum(x195 * x264 * x39)
    result[0, 6, 4] = numpy.sum(x118 * x266 * x39)
    result[0, 6, 5] = numpy.sum(x152 * x248 * x39)
    result[0, 6, 6] = numpy.sum(x268 * x270 * x92)
    result[0, 6, 7] = numpy.sum(x118 * x264 * x271)
    result[0, 6, 8] = numpy.sum(x104 * x265 * x270)
    result[0, 6, 9] = numpy.sum(x123 * x261 * x269)
    result[0, 6, 10] = numpy.sum(x273 * x276 * x92)
    result[0, 6, 11] = numpy.sum(x118 * x268 * x277)
    result[0, 6, 12] = numpy.sum(x152 * x264 * x83)
    result[0, 6, 13] = numpy.sum(x123 * x259 * x277)
    result[0, 6, 14] = numpy.sum(x133 * x249 * x275)
    result[0, 7, 0] = numpy.sum(x169 * x191 * x278)
    result[0, 7, 1] = numpy.sum(x254 * x279 * x280)
    result[0, 7, 2] = numpy.sum(x173 * x254 * x281)
    result[0, 7, 3] = numpy.sum(x169 * x198 * x282)
    result[0, 7, 4] = numpy.sum(x194 * x222 * x39)
    result[0, 7, 5] = numpy.sum(x190 * x220 * x39)
    result[0, 7, 6] = numpy.sum(x169 * x207 * x271)
    result[0, 7, 7] = numpy.sum(x17 * x198 * x222)
    result[0, 7, 8] = numpy.sum(x178 * x194 * x283)
    result[0, 7, 9] = numpy.sum(x184 * x270 * x281)
    result[0, 7, 10] = numpy.sum(x169 * x214 * x285)
    result[0, 7, 11] = numpy.sum(x173 * x207 * x286)
    result[0, 7, 12] = numpy.sum(x198 * x220 * x83)
    result[0, 7, 13] = numpy.sum(x184 * x194 * x287)
    result[0, 7, 14] = numpy.sum(x187 * x191 * x284)
    result[0, 8, 0] = numpy.sum(x136 * x229 * x278)
    result[0, 8, 1] = numpy.sum(x140 * x254 * x288)
    result[0, 8, 2] = numpy.sum(x224 * x254 * x289)
    result[0, 8, 3] = numpy.sum(x218 * x228 * x39)
    result[0, 8, 4] = numpy.sum(x219 * x233 * x39)
    result[0, 8, 5] = numpy.sum(x136 * x237 * x282)
    result[0, 8, 6] = numpy.sum(x156 * x270 * x288)
    result[0, 8, 7] = numpy.sum(x146 * x233 * x283)
    result[0, 8, 8] = numpy.sum(x17 * x219 * x237)
    result[0, 8, 9] = numpy.sum(x136 * x242 * x271)
    result[0, 8, 10] = numpy.sum(x162 * x229 * x284)
    result[0, 8, 11] = numpy.sum(x156 * x233 * x287)
    result[0, 8, 12] = numpy.sum(x218 * x237 * x83)
    result[0, 8, 13] = numpy.sum(x140 * x242 * x286)
    result[0, 8, 14] = numpy.sum(x136 * x247 * x285)
    result[0, 9, 0] = numpy.sum(x256 * x292 * x94)
    result[0, 9, 1] = numpy.sum(x121 * x254 * x293)
    result[0, 9, 2] = numpy.sum(x185 * x254 * x296)
    result[0, 9, 3] = numpy.sum(x174 * x290 * x39)
    result[0, 9, 4] = numpy.sum(x297 * x298 * x39)
    result[0, 9, 5] = numpy.sum(x234 * x300 * x39)
    result[0, 9, 6] = numpy.sum(x108 * x269 * x301)
    result[0, 9, 7] = numpy.sum(x270 * x297 * x97)
    result[0, 9, 8] = numpy.sum(x121 * x270 * x302)
    result[0, 9, 9] = numpy.sum(x270 * x304 * x94)
    result[0, 9, 10] = numpy.sum(x125 * x275 * x291)
    result[0, 9, 11] = numpy.sum(x108 * x277 * x296)
    result[0, 9, 12] = numpy.sum(x174 * x300 * x83)
    result[0, 9, 13] = numpy.sum(x121 * x277 * x304)
    result[0, 9, 14] = numpy.sum(x276 * x306 * x94)
    result[0, 10, 0] = numpy.sum(x307 * x311 * x92)
    result[0, 10, 1] = numpy.sum(x312 * x313 * x92)
    result[0, 10, 2] = numpy.sum(x118 * x307 * x313)
    result[0, 10, 3] = numpy.sum(x251 * x314 * x316)
    result[0, 10, 4] = numpy.sum(x118 * x312 * x318)
    result[0, 10, 5] = numpy.sum(x106 * x251 * x307)
    result[0, 10, 6] = numpy.sum(x319 * x321 * x92)
    result[0, 10, 7] = numpy.sum(x118 * x315 * x323)
    result[0, 10, 8] = numpy.sum(x105 * x312 * x322)
    result[0, 10, 9] = numpy.sum(x123 * x307 * x321)
    result[0, 10, 10] = numpy.sum(x10 * x326)
    result[0, 10, 11] = numpy.sum(x319 * x328 * x329)
    result[0, 10, 12] = numpy.sum(x106 * x11 * x315)
    result[0, 10, 13] = numpy.sum(x123 * x312 * x330)
    result[0, 10, 14] = numpy.sum(x133 * x307 * x331)
    result[0, 11, 0] = numpy.sum(x249 * x332 * x333)
    result[0, 11, 1] = numpy.sum(x169 * x252 * x334)
    result[0, 11, 2] = numpy.sum(x172 * x252 * x261)
    result[0, 11, 3] = numpy.sum(x169 * x264 * x336)
    result[0, 11, 4] = numpy.sum(x173 * x251 * x265)
    result[0, 11, 5] = numpy.sum(x178 * x249 * x335)
    result[0, 11, 6] = numpy.sum(x169 * x268 * x337)
    result[0, 11, 7] = numpy.sum(x173 * x264 * x338)
    result[0, 11, 8] = numpy.sum(x178 * x265 * x337)
    result[0, 11, 9] = numpy.sum(x15 * x184 * x262)
    result[0, 11, 10] = numpy.sum(x273 * x329 * x339)
    result[0, 11, 11] = numpy.sum(x11 * x173 * x268)
    result[0, 11, 12] = numpy.sum(x11 * x179 * x264)
    result[0, 11, 13] = numpy.sum(x11 * x184 * x334)
    result[0, 11, 14] = numpy.sum(x249 * x340 * x341)
    result[0, 12, 0] = numpy.sum(x192 * x228 * x310)
    result[0, 12, 1] = numpy.sum(x194 * x229 * x342)
    result[0, 12, 2] = numpy.sum(x191 * x233 * x342)
    result[0, 12, 3] = numpy.sum(x198 * x228 * x343)
    result[0, 12, 4] = numpy.sum(x194 * x343 * x344)
    result[0, 12, 5] = numpy.sum(x190 * x237 * x343)
    result[0, 12, 6] = numpy.sum(x207 * x229 * x345)
    result[0, 12, 7] = numpy.sum(x198 * x233 * x346)
    result[0, 12, 8] = numpy.sum(x194 * x237 * x346)
    result[0, 12, 9] = numpy.sum(x191 * x242 * x345)
    result[0, 12, 10] = numpy.sum(x11 * x214 * x230)
    result[0, 12, 11] = numpy.sum(x207 * x233 * x347)
    result[0, 12, 12] = numpy.sum(x11 * x198 * x239)
    result[0, 12, 13] = numpy.sum(x194 * x242 * x347)
    result[0, 12, 14] = numpy.sum(x11 * x192 * x247)
    result[0, 13, 0] = numpy.sum(x136 * x292 * x332)
    result[0, 13, 1] = numpy.sum(x139 * x252 * x301)
    result[0, 13, 2] = numpy.sum(x136 * x252 * x348)
    result[0, 13, 3] = numpy.sum(x146 * x291 * x335)
    result[0, 13, 4] = numpy.sum(x140 * x251 * x297)
    result[0, 13, 5] = numpy.sum(x136 * x300 * x336)
    result[0, 13, 6] = numpy.sum(x15 * x156 * x293)
    result[0, 13, 7] = numpy.sum(x146 * x297 * x337)
    result[0, 13, 8] = numpy.sum(x140 * x300 * x338)
    result[0, 13, 9] = numpy.sum(x136 * x304 * x337)
    result[0, 13, 10] = numpy.sum(x162 * x292 * x340)
    result[0, 13, 11] = numpy.sum(x11 * x157 * x296)
    result[0, 13, 12] = numpy.sum(x11 * x149 * x300)
    result[0, 13, 13] = numpy.sum(x11 * x140 * x304)
    result[0, 13, 14] = numpy.sum(x306 * x329 * x351)
    result[0, 14, 0] = numpy.sum(x311 * x352 * x94)
    result[0, 14, 1] = numpy.sum(x121 * x313 * x352)
    result[0, 14, 2] = numpy.sum(x313 * x353 * x94)
    result[0, 14, 3] = numpy.sum(x251 * x354 * x98)
    result[0, 14, 4] = numpy.sum(x121 * x318 * x353)
    result[0, 14, 5] = numpy.sum(x251 * x355 * x357)
    result[0, 14, 6] = numpy.sum(x108 * x321 * x352)
    result[0, 14, 7] = numpy.sum(x322 * x353 * x98)
    result[0, 14, 8] = numpy.sum(x121 * x323 * x356)
    result[0, 14, 9] = numpy.sum(x321 * x358 * x94)
    result[0, 14, 10] = numpy.sum(x125 * x331 * x352)
    result[0, 14, 11] = numpy.sum(x108 * x330 * x353)
    result[0, 14, 12] = numpy.sum(x11 * x356 * x99)
    result[0, 14, 13] = numpy.sum(x10 * x360 * x73)
    result[0, 14, 14] = numpy.sum(x10 * x362)
    result[1, 0, 0] = numpy.sum(x363 * x365)
    result[1, 0, 1] = numpy.sum(x366 * x370 * x92)
    result[1, 0, 2] = numpy.sum(x366 * x371 * x80)
    result[1, 0, 3] = numpy.sum(x314 * x375 * x376 * x93)
    result[1, 0, 4] = numpy.sum(x118 * x376 * x378)
    result[1, 0, 5] = numpy.sum(x106 * x372 * x376)
    result[1, 0, 6] = numpy.sum(x379 * x381 * x382)
    result[1, 0, 7] = numpy.sum(x118 * x381 * x383)
    result[1, 0, 8] = numpy.sum(x105 * x377 * x381)
    result[1, 0, 9] = numpy.sum(x372 * x381 * x384)
    result[1, 0, 10] = numpy.sum(x385 * x387 * x388)
    result[1, 0, 11] = numpy.sum(x379 * x385 * x389)
    result[1, 0, 12] = numpy.sum(x106 * x375 * x385)
    result[1, 0, 13] = numpy.sum(x123 * x370 * x385)
    result[1, 0, 14] = numpy.sum(x133 * x385 * x390)
    result[1, 1, 0] = numpy.sum(x394 * x60 * x92)
    result[1, 1, 1] = numpy.sum(x397 * x59 * x92)
    result[1, 1, 2] = numpy.sum(x118 * x398 * x59)
    result[1, 1, 3] = numpy.sum(x195 * x401 * x89)
    result[1, 1, 4] = numpy.sum(x118 * x402 * x89)
    result[1, 1, 5] = numpy.sum(x152 * x392 * x89)
    result[1, 1, 6] = numpy.sum(x114 * x260 * x406)
    result[1, 1, 7] = numpy.sum(x118 * x401 * x408)
    result[1, 1, 8] = numpy.sum(x104 * x397 * x407)
    result[1, 1, 9] = numpy.sum(x114 * x160 * x392)
    result[1, 1, 10] = numpy.sum(x250 * x410 * x411)
    result[1, 1, 11] = numpy.sum(x118 * x406 * x412)
    result[1, 1, 12] = numpy.sum(x128 * x152 * x401)
    result[1, 1, 13] = numpy.sum(x128 * x160 * x396)
    result[1, 1, 14] = numpy.sum(x133 * x393 * x411)
    result[1, 2, 0] = numpy.sum(x167 * x371 * x60)
    result[1, 2, 1] = numpy.sum(x169 * x413 * x59)
    result[1, 2, 2] = numpy.sum(x173 * x372 * x59)
    result[1, 2, 3] = numpy.sum(x169 * x414 * x89)
    result[1, 2, 4] = numpy.sum(x175 * x368 * x89)
    result[1, 2, 5] = numpy.sum(x179 * x372 * x89)
    result[1, 2, 6] = numpy.sum(x169 * x379 * x415)
    result[1, 2, 7] = numpy.sum(x173 * x375 * x407)
    result[1, 2, 8] = numpy.sum(x178 * x407 * x413)
    result[1, 2, 9] = numpy.sum(x184 * x372 * x415)
    result[1, 2, 10] = numpy.sum(x333 * x387 * x411)
    result[1, 2, 11] = numpy.sum(x128 * x173 * x379)
    result[1, 2, 12] = numpy.sum(x128 * x179 * x375)
    result[1, 2, 13] = numpy.sum(x184 * x368 * x412)
    result[1, 2, 14] = numpy.sum(x341 * x372 * x411)
    result[1, 3, 0] = numpy.sum(x314 * x416 * x420)
    result[1, 3, 1] = numpy.sum(x195 * x422 * x51)
    result[1, 3, 2] = numpy.sum(x118 * x419 * x423)
    result[1, 3, 3] = numpy.sum(x33 * x426 * x92)
    result[1, 3, 4] = numpy.sum(x33 * x422 * x427)
    result[1, 3, 5] = numpy.sum(x204 * x33 * x419)
    result[1, 3, 6] = numpy.sum(x195 * x430 * x81)
    result[1, 3, 7] = numpy.sum(x425 * x427 * x81)
    result[1, 3, 8] = numpy.sum(x204 * x422 * x431)
    result[1, 3, 9] = numpy.sum(x419 * x432 * x81)
    result[1, 3, 10] = numpy.sum(x436 * x437 * x438)
    result[1, 3, 11] = numpy.sum(x118 * x430 * x439)
    result[1, 3, 12] = numpy.sum(x126 * x204 * x425)
    result[1, 3, 13] = numpy.sum(x126 * x422 * x432)
    result[1, 3, 14] = numpy.sum(x133 * x420 * x437)
    result[1, 4, 0] = numpy.sum(x169 * x416 * x441)
    result[1, 4, 1] = numpy.sum(x169 * x402 * x51)
    result[1, 4, 2] = numpy.sum(x175 * x392 * x51)
    result[1, 4, 3] = numpy.sum(x169 * x33 * x442)
    result[1, 4, 4] = numpy.sum(x222 * x33 * x396)
    result[1, 4, 5] = numpy.sum(x220 * x33 * x392)
    result[1, 4, 6] = numpy.sum(x280 * x406 * x443)
    result[1, 4, 7] = numpy.sum(x222 * x401 * x81)
    result[1, 4, 8] = numpy.sum(x396 * x445 * x81)
    result[1, 4, 9] = numpy.sum(x223 * x398 * x81)
    result[1, 4, 10] = numpy.sum(x169 * x437 * x446)
    result[1, 4, 11] = numpy.sum(x126 * x175 * x406)
    result[1, 4, 12] = numpy.sum(x126 * x220 * x401)
    result[1, 4, 13] = numpy.sum(x126 * x223 * x397)
    result[1, 4, 14] = numpy.sum(x187 * x437 * x440)
    result[1, 5, 0] = numpy.sum(x230 * x372 * x416)
    result[1, 5, 1] = numpy.sum(x231 * x368 * x51)
    result[1, 5, 2] = numpy.sum(x233 * x372 * x423)
    result[1, 5, 3] = numpy.sum(x228 * x33 * x447)
    result[1, 5, 4] = numpy.sum(x233 * x33 * x448)
    result[1, 5, 5] = numpy.sum(x239 * x33 * x372)
    result[1, 5, 6] = numpy.sum(x231 * x379 * x81)
    result[1, 5, 7] = numpy.sum(x344 * x447 * x81)
    result[1, 5, 8] = numpy.sum(x237 * x448 * x81)
    result[1, 5, 9] = numpy.sum(x242 * x449 * x81)
    result[1, 5, 10] = numpy.sum(x126 * x230 * x387)
    result[1, 5, 11] = numpy.sum(x233 * x379 * x439)
    result[1, 5, 12] = numpy.sum(x126 * x237 * x447)
    result[1, 5, 13] = numpy.sum(x242 * x368 * x439)
    result[1, 5, 14] = numpy.sum(x247 * x372 * x437 * x93)
    result[1, 6, 0] = numpy.sum(x382 * x450 * x451)
    result[1, 6, 1] = numpy.sum(x454 * x455 * x92)
    result[1, 6, 2] = numpy.sum(x118 * x450 * x455)
    result[1, 6, 3] = numpy.sum(x195 * x31 * x457)
    result[1, 6, 4] = numpy.sum(x118 * x141 * x31 * x458)
    result[1, 6, 5] = numpy.sum(x152 * x31 * x450)
    result[1, 6, 6] = numpy.sum(x460 * x461 * x92)
    result[1, 6, 7] = numpy.sum(x118 * x457 * x462)
    result[1, 6, 8] = numpy.sum(x104 * x454 * x462)
    result[1, 6, 9] = numpy.sum(x160 * x29 * x450)
    result[1, 6, 10] = numpy.sum(x463 * x466)
    result[1, 6, 11] = numpy.sum(x142 * x460 * x463)
    result[1, 6, 12] = numpy.sum(x152 * x21 * x457)
    result[1, 6, 13] = numpy.sum(x160 * x21 * x454)
    result[1, 6, 14] = numpy.sum(x133 * x21 * x467)
    result[1, 7, 0] = numpy.sum(x169 * x451 * x468)
    result[1, 7, 1] = numpy.sum(x169 * x422 * x469)
    result[1, 7, 2] = numpy.sum(x175 * x253 * x419)
    result[1, 7, 3] = numpy.sum(x169 * x425 * x470)
    result[1, 7, 4] = numpy.sum(x222 * x31 * x422)
    result[1, 7, 5] = numpy.sum(x220 * x31 * x419)
    result[1, 7, 6] = numpy.sum(x169 * x430 * x462)
    result[1, 7, 7] = numpy.sum(x222 * x29 * x425)
    result[1, 7, 8] = numpy.sum(x29 * x422 * x445)
    result[1, 7, 9] = numpy.sum(x223 * x419 * x461)
    result[1, 7, 10] = numpy.sum(x167 * x4 * x436 * x471)
    result[1, 7, 11] = numpy.sum(x175 * x21 * x430)
    result[1, 7, 12] = numpy.sum(x21 * x220 * x425)
    result[1, 7, 13] = numpy.sum(x223 * x422 * x472)
    result[1, 7, 14] = numpy.sum(x187 * x21 * x468)
    result[1, 8, 0] = numpy.sum(x229 * x440 * x451)
    result[1, 8, 1] = numpy.sum(x253 * x288 * x397)
    result[1, 8, 2] = numpy.sum(x233 * x253 * x473)
    result[1, 8, 3] = numpy.sum(x228 * x401 * x470)
    result[1, 8, 4] = numpy.sum(x31 * x396 * x474)
    result[1, 8, 5] = numpy.sum(x237 * x392 * x470)
    result[1, 8, 6] = numpy.sum(x288 * x406 * x461)
    result[1, 8, 7] = numpy.sum(x29 * x401 * x474)
    result[1, 8, 8] = numpy.sum(x237 * x396 * x475)
    result[1, 8, 9] = numpy.sum(x242 * x29 * x473)
    result[1, 8, 10] = numpy.sum(x21 * x229 * x446)
    result[1, 8, 11] = numpy.sum(x289 * x406 * x472)
    result[1, 8, 12] = numpy.sum(x21 * x237 * x442)
    result[1, 8, 13] = numpy.sum(x21 * x242 * x402)
    result[1, 8, 14] = numpy.sum(x21 * x247 * x441)
    result[1, 9, 0] = numpy.sum(x372 * x451 * x476)
    result[1, 9, 1] = numpy.sum(x253 * x293 * x368)
    result[1, 9, 2] = numpy.sum(x296 * x372 * x455)
    result[1, 9, 3] = numpy.sum(x31 * x375 * x477)
    result[1, 9, 4] = numpy.sum(x297 * x31 * x413)
    result[1, 9, 5] = numpy.sum(x300 * x31 * x449)
    result[1, 9, 6] = numpy.sum(x29 * x293 * x379)
    result[1, 9, 7] = numpy.sum(x297 * x375 * x461)
    result[1, 9, 8] = numpy.sum(x29 * x302 * x413)
    result[1, 9, 9] = numpy.sum(x304 * x372 * x461)
    result[1, 9, 10] = numpy.sum(x21 * x387 * x476)
    result[1, 9, 11] = numpy.sum(x21 * x348 * x379)
    result[1, 9, 12] = numpy.sum(x21 * x300 * x414)
    result[1, 9, 13] = numpy.sum(x21 * x304 * x413)
    result[1, 9, 14] = numpy.sum(x306 * x363 * x478 * x76)
    result[1, 10, 0] = numpy.sum(x388 * x479 * x480)
    result[1, 10, 1] = numpy.sum(x309 * x382 * x481)
    result[1, 10, 2] = numpy.sum(x309 * x389 * x479)
    result[1, 10, 3] = numpy.sum(x438 * x482 * x483)
    result[1, 10, 4] = numpy.sum(x118 * x483 * x484)
    result[1, 10, 5] = numpy.sum(x106 * x308 * x479)
    result[1, 10, 6] = numpy.sum(x485 * x486)
    result[1, 10, 7] = numpy.sum(x3 * x471 * x482 * x80)
    result[1, 10, 8] = numpy.sum(x105 * x484 * x9)
    result[1, 10, 9] = numpy.sum(x384 * x479 * x9)
    result[1, 10, 10] = numpy.sum(
        x325 * (x0 * (x273 + 7.0 * x434 + 3.0 * x435 + 4.0 * x459) + x134 * x465)
    )
    result[1, 10, 11] = numpy.sum(x328 * x486)
    result[1, 10, 12] = numpy.sum(x106 * x482 * x8)
    result[1, 10, 13] = numpy.sum(x123 * x481 * x487)
    result[1, 10, 14] = numpy.sum(x133 * x479 * x488)
    result[1, 11, 0] = numpy.sum(x169 * x467 * x480)
    result[1, 11, 1] = numpy.sum(x169 * x454 * x489)
    result[1, 11, 2] = numpy.sum(x173 * x309 * x450)
    result[1, 11, 3] = numpy.sum(x169 * x457 * x490)
    result[1, 11, 4] = numpy.sum(x175 * x308 * x454)
    result[1, 11, 5] = numpy.sum(x179 * x308 * x450)
    result[1, 11, 6] = numpy.sum(x168 * x460 * x485)
    result[1, 11, 7] = numpy.sum(x175 * x457 * x9)
    result[1, 11, 8] = numpy.sum(x178 * x458 * x491)
    result[1, 11, 9] = numpy.sum(x184 * x450 * x491)
    result[1, 11, 10] = numpy.sum(x339 * x466)
    result[1, 11, 11] = numpy.sum(x173 * x460 * x8)
    result[1, 11, 12] = numpy.sum(x179 * x457 * x8)
    result[1, 11, 13] = numpy.sum(x184 * x454 * x492)
    result[1, 11, 14] = numpy.sum(x187 * x450 * x487)
    result[1, 12, 0] = numpy.sum(x229 * x420 * x480)
    result[1, 12, 1] = numpy.sum(x231 * x309 * x422)
    result[1, 12, 2] = numpy.sum(x233 * x419 * x493)
    result[1, 12, 3] = numpy.sum(x228 * x425 * x494)
    result[1, 12, 4] = numpy.sum(x344 * x422 * x494)
    result[1, 12, 5] = numpy.sum(x237 * x419 * x494)
    result[1, 12, 6] = numpy.sum(x231 * x430 * x9)
    result[1, 12, 7] = numpy.sum(x233 * x425 * x495)
    result[1, 12, 8] = numpy.sum(x237 * x422 * x495)
    result[1, 12, 9] = numpy.sum(x242 * x419 * x496)
    result[1, 12, 10] = numpy.sum(x230 * x436 * x8)
    result[1, 12, 11] = numpy.sum(x233 * x430 * x497)
    result[1, 12, 12] = numpy.sum(x237 * x426 * x8)
    result[1, 12, 13] = numpy.sum(x242 * x422 * x497)
    result[1, 12, 14] = numpy.sum(x247 * x420 * x498)
    result[1, 13, 0] = numpy.sum(x291 * x393 * x499)
    result[1, 13, 1] = numpy.sum(x293 * x309 * x396)
    result[1, 13, 2] = numpy.sum(x296 * x392 * x489)
    result[1, 13, 3] = numpy.sum(x308 * x401 * x477)
    result[1, 13, 4] = numpy.sum(x297 * x308 * x397)
    result[1, 13, 5] = numpy.sum(x300 * x392 * x490)
    result[1, 13, 6] = numpy.sum(x293 * x406 * x9)
    result[1, 13, 7] = numpy.sum(x297 * x401 * x491)
    result[1, 13, 8] = numpy.sum(x302 * x397 * x9)
    result[1, 13, 9] = numpy.sum(x304 * x398 * x9)
    result[1, 13, 10] = numpy.sum(x292 * x410 * x500)
    result[1, 13, 11] = numpy.sum(x296 * x406 * x492)
    result[1, 13, 12] = numpy.sum(x300 * x401 * x497)
    result[1, 13, 13] = numpy.sum(x304 * x397 * x8)
    result[1, 13, 14] = numpy.sum(x306 * x394 * x8)
    result[1, 14, 0] = numpy.sum(x352 * x390 * x480)
    result[1, 14, 1] = numpy.sum(x309 * x352 * x370)
    result[1, 14, 2] = numpy.sum(x353 * x372 * x501)
    result[1, 14, 3] = numpy.sum(x354 * x375 * x483)
    result[1, 14, 4] = numpy.sum(x353 * x377 * x483)
    result[1, 14, 5] = numpy.sum(x357 * x372 * x483)
    result[1, 14, 6] = numpy.sum(x352 * x379 * x502)
    result[1, 14, 7] = numpy.sum(x353 * x383 * x9)
    result[1, 14, 8] = numpy.sum(x356 * x378 * x9)
    result[1, 14, 9] = numpy.sum(x3 * x360 * x363)
    result[1, 14, 10] = numpy.sum(x352 * x387 * x488)
    result[1, 14, 11] = numpy.sum(x353 * x379 * x487)
    result[1, 14, 12] = numpy.sum(x357 * x375 * x498)
    result[1, 14, 13] = numpy.sum(x358 * x370 * x8)
    result[1, 14, 14] = numpy.sum(x362 * x363)
    result[2, 0, 0] = numpy.sum(x365 * x503)
    result[2, 0, 1] = numpy.sum(x366 * x504 * x73)
    result[2, 0, 2] = numpy.sum(x366 * x508 * x94)
    result[2, 0, 3] = numpy.sum(x376 * x509 * x99)
    result[2, 0, 4] = numpy.sum(x121 * x376 * x511)
    result[2, 0, 5] = numpy.sum(x355 * x376 * x515)
    result[2, 0, 6] = numpy.sum(x108 * x381 * x509 * x76)
    result[2, 0, 7] = numpy.sum(x381 * x510 * x98)
    result[2, 0, 8] = numpy.sum(x121 * x381 * x516)
    result[2, 0, 9] = numpy.sum(x381 * x517 * x518)
    result[2, 0, 10] = numpy.sum(x125 * x385 * x519)
    result[2, 0, 11] = numpy.sum(x108 * x385 * x508)
    result[2, 0, 12] = numpy.sum(x385 * x515 * x98)
    result[2, 0, 13] = numpy.sum(x121 * x385 * x517 * x76)
    result[2, 0, 14] = numpy.sum(x385 * x521 * x522)
    result[2, 1, 0] = numpy.sum(x134 * x504 * x60)
    result[2, 1, 1] = numpy.sum(x140 * x509 * x59)
    result[2, 1, 2] = numpy.sum(x136 * x506 * x523)
    result[2, 1, 3] = numpy.sum(x149 * x509 * x89)
    result[2, 1, 4] = numpy.sum(x151 * x506 * x89)
    result[2, 1, 5] = numpy.sum(x136 * x524 * x89)
    result[2, 1, 6] = numpy.sum(x114 * x157 * x509)
    result[2, 1, 7] = numpy.sum(x146 * x408 * x506)
    result[2, 1, 8] = numpy.sum(x140 * x407 * x514)
    result[2, 1, 9] = numpy.sum(x136 * x415 * x517)
    result[2, 1, 10] = numpy.sum(x162 * x509 * x525)
    result[2, 1, 11] = numpy.sum(x156 * x412 * x506)
    result[2, 1, 12] = numpy.sum(x128 * x149 * x514)
    result[2, 1, 13] = numpy.sum(x128 * x140 * x517)
    result[2, 1, 14] = numpy.sum(x136 * x521 * x525)
    result[2, 2, 0] = numpy.sum(x529 * x60 * x94)
    result[2, 2, 1] = numpy.sum(x121 * x523 * x527)
    result[2, 2, 2] = numpy.sum(x185 * x531 * x59)
    result[2, 2, 3] = numpy.sum(x174 * x527 * x89)
    result[2, 2, 4] = numpy.sum(x298 * x532 * x89)
    result[2, 2, 5] = numpy.sum(x234 * x535 * x89)
    result[2, 2, 6] = numpy.sum(x114 * x180 * x527)
    result[2, 2, 7] = numpy.sum(x408 * x531 * x97)
    result[2, 2, 8] = numpy.sum(x121 * x408 * x535)
    result[2, 2, 9] = numpy.sum(x114 * x185 * x539)
    result[2, 2, 10] = numpy.sum(x125 * x411 * x528)
    result[2, 2, 11] = numpy.sum(x108 * x412 * x531)
    result[2, 2, 12] = numpy.sum(x128 * x174 * x535)
    result[2, 2, 13] = numpy.sum(x121 * x412 * x539)
    result[2, 2, 14] = numpy.sum(x411 * x541 * x94)
    result[2, 3, 0] = numpy.sum(x192 * x416 * x509)
    result[2, 3, 1] = numpy.sum(x194 * x423 * x509)
    result[2, 3, 2] = numpy.sum(x196 * x506 * x51)
    result[2, 3, 3] = numpy.sum(x209 * x33 * x509)
    result[2, 3, 4] = numpy.sum(x194 * x33 * x542)
    result[2, 3, 5] = numpy.sum(x190 * x33 * x543)
    result[2, 3, 6] = numpy.sum(x207 * x544 * x81)
    result[2, 3, 7] = numpy.sum(x198 * x542 * x81)
    result[2, 3, 8] = numpy.sum(x194 * x431 * x543)
    result[2, 3, 9] = numpy.sum(x196 * x517 * x81)
    result[2, 3, 10] = numpy.sum(x437 * x509 * x545)
    result[2, 3, 11] = numpy.sum(x207 * x439 * x506)
    result[2, 3, 12] = numpy.sum(x126 * x198 * x543)
    result[2, 3, 13] = numpy.sum(x194 * x439 * x517)
    result[2, 3, 14] = numpy.sum(x126 * x192 * x521)
    result[2, 4, 0] = numpy.sum(x136 * x416 * x547)
    result[2, 4, 1] = numpy.sum(x151 * x51 * x527)
    result[2, 4, 2] = numpy.sum(x224 * x51 * x532)
    result[2, 4, 3] = numpy.sum(x218 * x33 * x527)
    result[2, 4, 4] = numpy.sum(x219 * x33 * x531)
    result[2, 4, 5] = numpy.sum(x136 * x535 * x548)
    result[2, 4, 6] = numpy.sum(x221 * x527 * x81)
    result[2, 4, 7] = numpy.sum(x146 * x549 * x81)
    result[2, 4, 8] = numpy.sum(x219 * x535 * x81)
    result[2, 4, 9] = numpy.sum(x224 * x443 * x539)
    result[2, 4, 10] = numpy.sum(x162 * x437 * x546)
    result[2, 4, 11] = numpy.sum(x126 * x221 * x531)
    result[2, 4, 12] = numpy.sum(x126 * x218 * x535)
    result[2, 4, 13] = numpy.sum(x126 * x151 * x539)
    result[2, 4, 14] = numpy.sum(x136 * x437 * x550)
    result[2, 5, 0] = numpy.sum(x416 * x554 * x555)
    result[2, 5, 1] = numpy.sum(x121 * x423 * x553)
    result[2, 5, 2] = numpy.sum(x234 * x51 * x557)
    result[2, 5, 3] = numpy.sum(x235 * x33 * x553)
    result[2, 5, 4] = numpy.sum(x121 * x548 * x557)
    result[2, 5, 5] = numpy.sum(x33 * x560 * x94)
    result[2, 5, 6] = numpy.sum(x238 * x554 * x81)
    result[2, 5, 7] = numpy.sum(x235 * x431 * x557)
    result[2, 5, 8] = numpy.sum(x121 * x202 * x559 * x81)
    result[2, 5, 9] = numpy.sum(x234 * x563 * x81)
    result[2, 5, 10] = numpy.sum(x243 * x437 * x553)
    result[2, 5, 11] = numpy.sum(x238 * x437 * x557)
    result[2, 5, 12] = numpy.sum(x126 * x235 * x559)
    result[2, 5, 13] = numpy.sum(x121 * x439 * x563)
    result[2, 5, 14] = numpy.sum(x437 * x555 * x567)
    result[2, 6, 0] = numpy.sum(x451 * x509 * x568)
    result[2, 6, 1] = numpy.sum(x259 * x455 * x509)
    result[2, 6, 2] = numpy.sum(x253 * x262 * x506)
    result[2, 6, 3] = numpy.sum(x264 * x31 * x544)
    result[2, 6, 4] = numpy.sum(x266 * x31 * x506)
    result[2, 6, 5] = numpy.sum(x31 * x514 * x569)
    result[2, 6, 6] = numpy.sum(x268 * x461 * x509)
    result[2, 6, 7] = numpy.sum(x264 * x462 * x506)
    result[2, 6, 8] = numpy.sum(x265 * x461 * x514)
    result[2, 6, 9] = numpy.sum(x262 * x29 * x517)
    result[2, 6, 10] = numpy.sum(x273 * x463 * x570)
    result[2, 6, 11] = numpy.sum(x268 * x472 * x506)
    result[2, 6, 12] = numpy.sum(x21 * x264 * x524)
    result[2, 6, 13] = numpy.sum(x21 * x334 * x517)
    result[2, 6, 14] = numpy.sum(x21 * x521 * x568)
    result[2, 7, 0] = numpy.sum(x191 * x451 * x546)
    result[2, 7, 1] = numpy.sum(x279 * x455 * x527)
    result[2, 7, 2] = numpy.sum(x281 * x455 * x531)
    result[2, 7, 3] = numpy.sum(x198 * x470 * x527)
    result[2, 7, 4] = numpy.sum(x194 * x31 * x549)
    result[2, 7, 5] = numpy.sum(x190 * x470 * x535)
    result[2, 7, 6] = numpy.sum(x207 * x462 * x527)
    result[2, 7, 7] = numpy.sum(x198 * x475 * x531)
    result[2, 7, 8] = numpy.sum(x194 * x475 * x535)
    result[2, 7, 9] = numpy.sum(x281 * x461 * x539)
    result[2, 7, 10] = numpy.sum(x21 * x214 * x547)
    result[2, 7, 11] = numpy.sum(x207 * x472 * x532)
    result[2, 7, 12] = numpy.sum(x198 * x202 * x21 * x535)
    result[2, 7, 13] = numpy.sum(x279 * x472 * x539)
    result[2, 7, 14] = numpy.sum(x191 * x21 * x550)
    result[2, 8, 0] = numpy.sum(x136 * x451 * x571)
    result[2, 8, 1] = numpy.sum(x151 * x253 * x553)
    result[2, 8, 2] = numpy.sum(x136 * x469 * x557)
    result[2, 8, 3] = numpy.sum(x218 * x31 * x553)
    result[2, 8, 4] = numpy.sum(x219 * x31 * x557)
    result[2, 8, 5] = numpy.sum(x136 * x470 * x559)
    result[2, 8, 6] = numpy.sum(x156 * x462 * x553)
    result[2, 8, 7] = numpy.sum(x146 * x475 * x557)
    result[2, 8, 8] = numpy.sum(x219 * x29 * x559)
    result[2, 8, 9] = numpy.sum(x136 * x462 * x563)
    result[2, 8, 10] = numpy.sum(x162 * x21 * x571)
    result[2, 8, 11] = numpy.sum(x21 * x221 * x557)
    result[2, 8, 12] = numpy.sum(x21 * x218 * x559)
    result[2, 8, 13] = numpy.sum(x151 * x21 * x563)
    result[2, 8, 14] = numpy.sum(x134 * x4 * x567 * x572)
    result[2, 9, 0] = numpy.sum(x451 * x518 * x573)
    result[2, 9, 1] = numpy.sum(x121 * x455 * x573)
    result[2, 9, 2] = numpy.sum(x455 * x576 * x94)
    result[2, 9, 3] = numpy.sum(x174 * x31 * x573)
    result[2, 9, 4] = numpy.sum(x298 * x31 * x577)
    result[2, 9, 5] = numpy.sum(x234 * x31 * x579)
    result[2, 9, 6] = numpy.sum(x180 * x29 * x573)
    result[2, 9, 7] = numpy.sum(x462 * x576 * x97)
    result[2, 9, 8] = numpy.sum(x121 * x462 * x579)
    result[2, 9, 9] = numpy.sum(x461 * x581 * x94)
    result[2, 9, 10] = numpy.sum(x125 * x21 * x582)
    result[2, 9, 11] = numpy.sum(x180 * x21 * x576)
    result[2, 9, 12] = numpy.sum(x174 * x21 * x579)
    result[2, 9, 13] = numpy.sum(x478 * x583 * x73)
    result[2, 9, 14] = numpy.sum(x478 * x586)
    result[2, 10, 0] = numpy.sum(x307 * x480 * x519)
    result[2, 10, 1] = numpy.sum(x312 * x501 * x509)
    result[2, 10, 2] = numpy.sum(x307 * x309 * x508)
    result[2, 10, 3] = numpy.sum(x316 * x483 * x509)
    result[2, 10, 4] = numpy.sum(x312 * x483 * x510)
    result[2, 10, 5] = numpy.sum(x307 * x483 * x515)
    result[2, 10, 6] = numpy.sum(x319 * x485 * x570)
    result[2, 10, 7] = numpy.sum(x315 * x511 * x9)
    result[2, 10, 8] = numpy.sum(x312 * x516 * x9)
    result[2, 10, 9] = numpy.sum(x307 * x502 * x517)
    result[2, 10, 10] = numpy.sum(x326 * x503)
    result[2, 10, 11] = numpy.sum(x319 * x508 * x8)
    result[2, 10, 12] = numpy.sum(x315 * x498 * x515)
    result[2, 10, 13] = numpy.sum(x312 * x487 * x517)
    result[2, 10, 14] = numpy.sum(x307 * x488 * x521)
    result[2, 11, 0] = numpy.sum(x249 * x499 * x528)
    result[2, 11, 1] = numpy.sum(x259 * x489 * x527)
    result[2, 11, 2] = numpy.sum(x262 * x309 * x531)
    result[2, 11, 3] = numpy.sum(x264 * x490 * x527)
    result[2, 11, 4] = numpy.sum(x266 * x308 * x531)
    result[2, 11, 5] = numpy.sum(x308 * x535 * x569)
    result[2, 11, 6] = numpy.sum(x268 * x491 * x527)
    result[2, 11, 7] = numpy.sum(x264 * x491 * x532)
    result[2, 11, 8] = numpy.sum(x266 * x535 * x9)
    result[2, 11, 9] = numpy.sum(x262 * x539 * x9)
    result[2, 11, 10] = numpy.sum(x273 * x529 * x8)
    result[2, 11, 11] = numpy.sum(x268 * x492 * x531)
    result[2, 11, 12] = numpy.sum(x264 * x497 * x535)
    result[2, 11, 13] = numpy.sum(x259 * x492 * x539)
    result[2, 11, 14] = numpy.sum(x249 * x500 * x541)
    result[2, 12, 0] = numpy.sum(x192 * x480 * x553)
    result[2, 12, 1] = numpy.sum(x194 * x493 * x553)
    result[2, 12, 2] = numpy.sum(x196 * x309 * x557)
    result[2, 12, 3] = numpy.sum(x198 * x494 * x553)
    result[2, 12, 4] = numpy.sum(x194 * x201 * x494 * x557)
    result[2, 12, 5] = numpy.sum(x190 * x494 * x559)
    result[2, 12, 6] = numpy.sum(x207 * x496 * x553)
    result[2, 12, 7] = numpy.sum(x198 * x495 * x557)
    result[2, 12, 8] = numpy.sum(x194 * x495 * x559)
    result[2, 12, 9] = numpy.sum(x196 * x563 * x9)
    result[2, 12, 10] = numpy.sum(x545 * x554 * x8)
    result[2, 12, 11] = numpy.sum(x207 * x497 * x557)
    result[2, 12, 12] = numpy.sum(x198 * x560 * x8)
    result[2, 12, 13] = numpy.sum(x194 * x497 * x563)
    result[2, 12, 14] = numpy.sum(x192 * x567 * x8)
    result[2, 13, 0] = numpy.sum(x136 * x480 * x582)
    result[2, 13, 1] = numpy.sum(x140 * x309 * x573)
    result[2, 13, 2] = numpy.sum(x136 * x489 * x576)
    result[2, 13, 3] = numpy.sum(x146 * x490 * x573)
    result[2, 13, 4] = numpy.sum(x151 * x308 * x576)
    result[2, 13, 5] = numpy.sum(x136 * x490 * x579)
    result[2, 13, 6] = numpy.sum(x157 * x573 * x9)
    result[2, 13, 7] = numpy.sum(x146 * x491 * x577)
    result[2, 13, 8] = numpy.sum(x151 * x579 * x9)
    result[2, 13, 9] = numpy.sum(x3 * x351 * x583)
    result[2, 13, 10] = numpy.sum(x162 * x487 * x573)
    result[2, 13, 11] = numpy.sum(x157 * x576 * x8)
    result[2, 13, 12] = numpy.sum(x149 * x579 * x8)
    result[2, 13, 13] = numpy.sum(x140 * x581 * x8)
    result[2, 13, 14] = numpy.sum(x351 * x586)
    result[2, 14, 0] = numpy.sum(x480 * x522 * x587)
    result[2, 14, 1] = numpy.sum(x121 * x501 * x587)
    result[2, 14, 2] = numpy.sum(x309 * x518 * x588)
    result[2, 14, 3] = numpy.sum(x308 * x587 * x99)
    result[2, 14, 4] = numpy.sum(x121 * x483 * x589)
    result[2, 14, 5] = numpy.sum(x483 * x555 * x590)
    result[2, 14, 6] = numpy.sum(x108 * x502 * x587)
    result[2, 14, 7] = numpy.sum(x589 * x9 * x98)
    result[2, 14, 8] = numpy.sum(x3 * x572 * x590 * x73)
    result[2, 14, 9] = numpy.sum(x3 * x591)
    result[2, 14, 10] = numpy.sum(x125 * x488 * x587)
    result[2, 14, 11] = numpy.sum(x108 * x487 * x588)
    result[2, 14, 12] = numpy.sum(x590 * x8 * x99)
    result[2, 14, 13] = numpy.sum(x591 * x73)
    result[2, 14, 14] = numpy.sum(
        x361 * (x0 * (x306 + 7.0 * x565 + 3.0 * x566 + 4.0 * x580) + x167 * x585)
    )
    return result


dipole3d = {
    (0, 0): dipole3d_00,
    (0, 1): dipole3d_01,
    (0, 2): dipole3d_02,
    (0, 3): dipole3d_03,
    (0, 4): dipole3d_04,
    (1, 0): dipole3d_10,
    (1, 1): dipole3d_11,
    (1, 2): dipole3d_12,
    (1, 3): dipole3d_13,
    (1, 4): dipole3d_14,
    (2, 0): dipole3d_20,
    (2, 1): dipole3d_21,
    (2, 2): dipole3d_22,
    (2, 3): dipole3d_23,
    (2, 4): dipole3d_24,
    (3, 0): dipole3d_30,
    (3, 1): dipole3d_31,
    (3, 2): dipole3d_32,
    (3, 3): dipole3d_33,
    (3, 4): dipole3d_34,
    (4, 0): dipole3d_40,
    (4, 1): dipole3d_41,
    (4, 2): dipole3d_42,
    (4, 3): dipole3d_43,
    (4, 4): dipole3d_44,
}
