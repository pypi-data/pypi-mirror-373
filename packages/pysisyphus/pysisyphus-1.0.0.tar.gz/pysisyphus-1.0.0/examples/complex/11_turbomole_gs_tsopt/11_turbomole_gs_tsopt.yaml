# C2H4 + HF -> CH3CH2F
geom:
 # Interestingly DLC ('type: dlc') are worse in this case ...
 type: cart
 # Inline geometry input. Optimized at GFN2-XTB level.
 fn: |
  8
  
  C -0.61261528  0.68612041  0.00705827
  H -0.63922575  1.25650024  0.92206726
  H -0.66061572  1.25621169 -0.90725999
  C -0.53458278 -0.63601849  0.00635475
  H -0.52803633 -1.20792700 -0.90838571
  H -0.50664700 -1.20763777  0.92087333
  F  2.21692121 -0.07641798 -0.02592285
  H  1.26480164 -0.07083110 -0.01478506
  8

  C -0.13568712  0.77294790 -0.04598245
  H -0.60737500  1.17635452  0.84558272
  H -0.73032797  1.05023924 -0.91165120
  C  0.03596907 -0.74069255  0.05059925
  H -0.45158834 -1.26822562 -0.77550337
  H -0.32709145 -1.14067038  1.00290559
  F  1.36759521 -1.07707011 -0.01849861
  H  0.84850560  1.22711700 -0.14745194
calc:
 type: turbomole
 pal: 2
 charge: 0
 mult: 1
 # Directory containing the pre-generated control file etc.
 control_path: control_path
# Preoptimize geometries for a few cycles
preopt:
 max_cycles: 5
# Growing string with a total of 1+9+1 nodes
cos:
 type: gs
 climb: True
 max_nodes: 9
opt:
 type: string
 # Only check for convergence of the root mean square of the forces
 rms_force: 0.0015
 rms_force_only: True
tsopt:
 type: rsirfo
 do_hess: True
 thresh: gau
# IRC using default arguments
irc:
# Optimize IRC ends to stationary points
endopt:
 # Optimizing fragments separately does not work with the current Turbomole
 # calculator, as the control path is only valid for the whole system.
 #fragments: True
