"""
Molecular integrals over Gaussian basis functions generated by sympleints.
See https://github.com/eljost/sympleints for more information.

sympleints version: 0.1.dev79+g63f1ef8.d20230515
symppy version: 1.10.1

sympleints was executed with the following arguments:
	lmax = 4
	lauxmax = 6
	write = False
	out_dir = devel_ints
	keys = ['~2c2e', '~3c2e_sph']
	sph = False
	opt_basic = True
	normalize = cgto
"""

import numpy
from pysisyphus.wavefunction.ints.boys import boys


def coulomb3d_00(ax, da, A, bx, db, B, R):
    """Cartesian (ss) 1-electron Coulomb integral.

    Generated code; DO NOT modify by hand!"""

    result = numpy.zeros((1, 1), dtype=float)

    x0 = ax + bx
    x1 = x0 ** (-1.0)

    # 1 item(s)
    result[0, 0] = numpy.sum(
        6.283185307179586
        * da
        * db
        * x1
        * boys(
            0,
            x0
            * (
                (-x1 * (ax * A[0] + bx * B[0]) + R[0]) ** 2
                + (-x1 * (ax * A[1] + bx * B[1]) + R[1]) ** 2
                + (-x1 * (ax * A[2] + bx * B[2]) + R[2]) ** 2
            ),
        )
        * numpy.exp(
            -ax * bx * x1 * ((A[0] - B[0]) ** 2 + (A[1] - B[1]) ** 2 + (A[2] - B[2]) ** 2)
        )
    )
    return result


def coulomb3d_01(ax, da, A, bx, db, B, R):
    """Cartesian (sp) 1-electron Coulomb integral.

    Generated code; DO NOT modify by hand!"""

    result = numpy.zeros((1, 3), dtype=float)

    x0 = ax + bx
    x1 = x0 ** (-1.0)
    x2 = -x1 * (ax * A[0] + bx * B[0])
    x3 = x2 + R[0]
    x4 = -x1 * (ax * A[1] + bx * B[1])
    x5 = x4 + R[1]
    x6 = -x1 * (ax * A[2] + bx * B[2])
    x7 = x6 + R[2]
    x8 = x0 * (x3**2 + x5**2 + x7**2)
    x9 = boys(0, x8)
    x10 = boys(1, x8)
    x11 = (
        6.283185307179586
        * da
        * db
        * x1
        * numpy.exp(
            -ax * bx * x1 * ((A[0] - B[0]) ** 2 + (A[1] - B[1]) ** 2 + (A[2] - B[2]) ** 2)
        )
    )

    # 3 item(s)
    result[0, 0] = numpy.sum(x11 * (x10 * x3 - x9 * (x2 + B[0])))
    result[0, 1] = numpy.sum(x11 * (x10 * x5 - x9 * (x4 + B[1])))
    result[0, 2] = numpy.sum(x11 * (x10 * x7 - x9 * (x6 + B[2])))
    return result


def coulomb3d_02(ax, da, A, bx, db, B, R):
    """Cartesian (sd) 1-electron Coulomb integral.

    Generated code; DO NOT modify by hand!"""

    result = numpy.zeros((1, 6), dtype=float)

    x0 = ax + bx
    x1 = x0 ** (-1.0)
    x2 = -x1 * (ax * A[0] + bx * B[0])
    x3 = x2 + R[0]
    x4 = -x1 * (ax * A[1] + bx * B[1])
    x5 = x4 + R[1]
    x6 = -x1 * (ax * A[2] + bx * B[2])
    x7 = x6 + R[2]
    x8 = x0 * (x3**2 + x5**2 + x7**2)
    x9 = boys(1, x8)
    x10 = boys(0, x8)
    x11 = x1 * (x10 - x9)
    x12 = x2 + B[0]
    x13 = boys(2, x8)
    x14 = (
        3.141592653589793
        * da
        * db
        * x1
        * numpy.exp(
            -ax * bx * x1 * ((A[0] - B[0]) ** 2 + (A[1] - B[1]) ** 2 + (A[2] - B[2]) ** 2)
        )
    )
    x15 = 0.5773502691896258 * x14
    x16 = x4 + B[1]
    x17 = x10 * x16 - x5 * x9
    x18 = -x13 * x5 + x16 * x9
    x19 = 2.0 * x14
    x20 = x6 + B[2]
    x21 = x10 * x20 - x7 * x9
    x22 = -x21
    x23 = -x13 * x7 + x20 * x9
    x24 = -x23

    # 6 item(s)
    result[0, 0] = numpy.sum(
        x15 * (x11 + 2.0 * x12 * (x10 * x12 - x3 * x9) - 2.0 * x3 * (x12 * x9 - x13 * x3))
    )
    result[0, 1] = numpy.sum(x19 * (x12 * x17 - x18 * x3))
    result[0, 2] = numpy.sum(x19 * (-x12 * x22 + x24 * x3))
    result[0, 3] = numpy.sum(x15 * (x11 + 2.0 * x16 * x17 - 2.0 * x18 * x5))
    result[0, 4] = numpy.sum(x19 * (-x16 * x22 + x24 * x5))
    result[0, 5] = numpy.sum(x15 * (x11 + 2.0 * x20 * x21 - 2.0 * x23 * x7))
    return result


def coulomb3d_03(ax, da, A, bx, db, B, R):
    """Cartesian (sf) 1-electron Coulomb integral.

    Generated code; DO NOT modify by hand!"""

    result = numpy.zeros((1, 10), dtype=float)

    x0 = ax + bx
    x1 = x0 ** (-1.0)
    x2 = -x1 * (ax * A[0] + bx * B[0])
    x3 = x2 + B[0]
    x4 = x2 + R[0]
    x5 = -x1 * (ax * A[1] + bx * B[1])
    x6 = x5 + R[1]
    x7 = -x1 * (ax * A[2] + bx * B[2])
    x8 = x7 + R[2]
    x9 = x0 * (x4**2 + x6**2 + x8**2)
    x10 = boys(1, x9)
    x11 = boys(0, x9)
    x12 = x1 * (-x10 + x11)
    x13 = x10 * x3
    x14 = boys(2, x9)
    x15 = x14 * x4
    x16 = x13 - x15
    x17 = 2.0 * x4
    x18 = -x10 * x4 + x11 * x3
    x19 = 2.0 * x3
    x20 = x1 * (x10 - x14)
    x21 = boys(3, x9)
    x22 = 2.0 * x1
    x23 = (
        3.141592653589793
        * da
        * db
        * numpy.exp(
            -ax * bx * x1 * ((A[0] - B[0]) ** 2 + (A[1] - B[1]) ** 2 + (A[2] - B[2]) ** 2)
        )
    )
    x24 = x1 * x23
    x25 = 0.2581988897471611 * x24
    x26 = x5 + B[1]
    x27 = x10 * x26
    x28 = -x10 * x6 + x11 * x26
    x29 = x1 * (x14 * x6 - x27 + x28)
    x30 = -x28
    x31 = -x14 * x6 + x27
    x32 = -x31
    x33 = x14 * x26 - x21 * x6
    x34 = -x33
    x35 = 0.5773502691896258 * x24
    x36 = x7 + B[2]
    x37 = x10 * x36
    x38 = -x10 * x8 + x11 * x36
    x39 = x1 * (x14 * x8 - x37 + x38)
    x40 = -x38
    x41 = -x14 * x8 + x37
    x42 = -x41
    x43 = x14 * x36 - x21 * x8
    x44 = -x43
    x45 = 2.0 * x26
    x46 = 2.0 * x6
    x47 = x26 * x40 - x42 * x6
    x48 = x26 * x42 - x44 * x6
    x49 = 2.0 * x36
    x50 = 2.0 * x8
    x51 = x12 - x40 * x49 + x42 * x50
    x52 = x20 - x42 * x49 + x44 * x50

    # 10 item(s)
    result[0, 0] = numpy.sum(
        -x25
        * (
            x22 * (-x13 + x15 + x18)
            + x3 * (x12 - x16 * x17 + x18 * x19)
            - x4 * (x16 * x19 - x17 * (x14 * x3 - x21 * x4) + x20)
        )
    )
    result[0, 1] = numpy.sum(
        -x35 * (x17 * (x3 * x32 - x34 * x4) + x29 - 2.0 * x3 * (x3 * x30 - x32 * x4))
    )
    result[0, 2] = numpy.sum(
        -x35 * (x17 * (x3 * x42 - x4 * x44) - 2.0 * x3 * (x3 * x40 - x4 * x42) + x39)
    )
    result[0, 3] = numpy.sum(
        -x35 * (x3 * (x12 - x30 * x45 + x32 * x46) - x4 * (x20 - x32 * x45 + x34 * x46))
    )
    result[0, 4] = numpy.sum(x22 * x23 * (x3 * x47 - x4 * x48))
    result[0, 5] = numpy.sum(x35 * (-x3 * x51 + x4 * x52))
    result[0, 6] = numpy.sum(
        -x25
        * (
            x26 * (x12 + x28 * x45 - x31 * x46)
            + 2.0 * x29
            - x6 * (x20 + x31 * x45 - x33 * x46)
        )
    )
    result[0, 7] = numpy.sum(x35 * (2.0 * x26 * x47 - x39 - x46 * x48))
    result[0, 8] = numpy.sum(x35 * (-x26 * x51 + x52 * x6))
    result[0, 9] = numpy.sum(
        -x25
        * (
            x36 * (x12 + x38 * x49 - x41 * x50)
            + 2.0 * x39
            - x8 * (x20 + x41 * x49 - x43 * x50)
        )
    )
    return result


def coulomb3d_04(ax, da, A, bx, db, B, R):
    """Cartesian (sg) 1-electron Coulomb integral.

    Generated code; DO NOT modify by hand!"""

    result = numpy.zeros((1, 15), dtype=float)

    x0 = ax + bx
    x1 = x0 ** (-1.0)
    x2 = -x1 * (ax * A[0] + bx * B[0])
    x3 = -x2 - B[0]
    x4 = 0.5 / (ax + bx)
    x5 = -x2 - R[0]
    x6 = -x1 * (ax * A[1] + bx * B[1])
    x7 = -x6 - R[1]
    x8 = -x1 * (ax * A[2] + bx * B[2])
    x9 = -x8 - R[2]
    x10 = x0 * (x5**2 + x7**2 + x9**2)
    x11 = (
        6.283185307179586
        * x1
        * numpy.exp(
            -ax * bx * x1 * ((A[0] - B[0]) ** 2 + (A[1] - B[1]) ** 2 + (A[2] - B[2]) ** 2)
        )
    )
    x12 = x11 * boys(1, x10)
    x13 = x11 * boys(0, x10)
    x14 = x4 * (-x12 + x13)
    x15 = -x12 * x5 + x13 * x3
    x16 = x11 * boys(2, x10)
    x17 = x16 * x5
    x18 = x12 * x3
    x19 = -x17 + x18
    x20 = x14 + x15 * x3 - x19 * x5
    x21 = x4 * (x12 - x16)
    x22 = x19 * x3
    x23 = x11 * boys(3, x10)
    x24 = x23 * x5
    x25 = x16 * x3
    x26 = -x24 + x25
    x27 = x26 * x5
    x28 = x21 + x22 - x27
    x29 = 2.0 * x4
    x30 = x4 * (x16 - x23)
    x31 = x11 * boys(4, x10)
    x32 = -x21
    x33 = da * db
    x34 = 0.09759000729485332 * x33
    x35 = -x6 - B[1]
    x36 = x12 * x35
    x37 = x16 * x7
    x38 = -x12 * x7 + x13 * x35
    x39 = x4 * (-x36 + x37 + x38)
    x40 = x36 - x37
    x41 = x3 * x38 - x40 * x5
    x42 = x3 * x40
    x43 = x23 * x7
    x44 = x16 * x35
    x45 = -x43 + x44
    x46 = x45 * x5
    x47 = x42 - x46
    x48 = x4 * (x40 + x43 - x44)
    x49 = x23 * x35 - x31 * x7
    x50 = 0.2581988897471611 * x33
    x51 = -x8 - B[2]
    x52 = x12 * x51
    x53 = x16 * x9
    x54 = -x12 * x9 + x13 * x51
    x55 = x4 * (-x52 + x53 + x54)
    x56 = x52 - x53
    x57 = x3 * x54 - x5 * x56
    x58 = x3 * x56
    x59 = x23 * x9
    x60 = x16 * x51
    x61 = -x59 + x60
    x62 = x5 * x61
    x63 = x58 - x62
    x64 = x4 * (x56 + x59 - x60)
    x65 = x23 * x51 - x31 * x9
    x66 = x45 * x7
    x67 = x35 * x40
    x68 = x14 + x35 * x38 - x40 * x7
    x69 = x4 * (x32 + x66 - x67 + x68)
    x70 = x21 - x66 + x67
    x71 = x30 + x35 * x45 - x49 * x7
    x72 = 0.3333333333333333 * x33
    x73 = x61 * x7
    x74 = x35 * x56
    x75 = x35 * x54 - x56 * x7
    x76 = x4 * (x73 - x74 + x75)
    x77 = -x73 + x74
    x78 = x35 * x61 - x65 * x7
    x79 = 1.732050807568877 * x72
    x80 = x61 * x9
    x81 = x51 * x56
    x82 = x14 + x51 * x54 - x56 * x9
    x83 = x4 * (x32 + x80 - x81 + x82)
    x84 = x21 - x80 + x81
    x85 = x30 + x51 * x61 - x65 * x9
    x86 = x35 * x68 + 2.0 * x39 - x7 * x70
    x87 = x35 * x70 + 2.0 * x48 - x7 * x71
    x88 = x35 * x75 + x55 - x7 * x77
    x89 = x35 * x77 + x64 - x7 * x78
    x90 = x35 * x82 - x7 * x84
    x91 = x35 * x84 - x7 * x85
    x92 = x51 * x82 + 2.0 * x55 - x84 * x9
    x93 = x51 * x84 + 2.0 * x64 - x85 * x9

    # 15 item(s)
    result[0, 0] = numpy.sum(
        x34
        * (
            x3 * (x20 * x3 - x28 * x5 + x29 * (x15 + x17 - x18))
            + 3.0 * x4 * (x20 - x22 + x27 + x32)
            - x5
            * (
                x28 * x3
                + x29 * (x19 + x24 - x25)
                - x5 * (x26 * x3 + x30 - x5 * (x23 * x3 - x31 * x5))
            )
        )
    )
    result[0, 1] = numpy.sum(
        x50
        * (
            x29 * (x41 - x42 + x46)
            + x3 * (x3 * x41 + x39 - x47 * x5)
            - x5 * (x3 * x47 + x48 - x5 * (x3 * x45 - x49 * x5))
        )
    )
    result[0, 2] = numpy.sum(
        x50
        * (
            x29 * (x57 - x58 + x62)
            + x3 * (x3 * x57 - x5 * x63 + x55)
            - x5 * (x3 * x63 - x5 * (x3 * x61 - x5 * x65) + x64)
        )
    )
    result[0, 3] = numpy.sum(
        x72 * (x3 * (x3 * x68 - x5 * x70) - x5 * (x3 * x70 - x5 * x71) + x69)
    )
    result[0, 4] = numpy.sum(
        x79 * (x3 * (x3 * x75 - x5 * x77) - x5 * (x3 * x77 - x5 * x78) + x76)
    )
    result[0, 5] = numpy.sum(
        x72 * (x3 * (x3 * x82 - x5 * x84) - x5 * (x3 * x84 - x5 * x85) + x83)
    )
    result[0, 6] = numpy.sum(x50 * (x3 * x86 - x5 * x87))
    result[0, 7] = numpy.sum(x79 * (x3 * x88 - x5 * x89))
    result[0, 8] = numpy.sum(x79 * (x3 * x90 - x5 * x91))
    result[0, 9] = numpy.sum(x50 * (x3 * x92 - x5 * x93))
    result[0, 10] = numpy.sum(x34 * (x35 * x86 + 3.0 * x69 - x7 * x87))
    result[0, 11] = numpy.sum(x50 * (x35 * x88 - x7 * x89 + 2.0 * x76))
    result[0, 12] = numpy.sum(x72 * (x35 * x90 - x7 * x91 + x83))
    result[0, 13] = numpy.sum(x50 * (x35 * x92 - x7 * x93))
    result[0, 14] = numpy.sum(x34 * (x51 * x92 + 3.0 * x83 - x9 * x93))
    return result


def coulomb3d_10(ax, da, A, bx, db, B, R):
    """Cartesian (ps) 1-electron Coulomb integral.

    Generated code; DO NOT modify by hand!"""

    result = numpy.zeros((3, 1), dtype=float)

    x0 = ax + bx
    x1 = x0 ** (-1.0)
    x2 = -x1 * (ax * A[0] + bx * B[0])
    x3 = x2 + R[0]
    x4 = -x1 * (ax * A[1] + bx * B[1])
    x5 = x4 + R[1]
    x6 = -x1 * (ax * A[2] + bx * B[2])
    x7 = x6 + R[2]
    x8 = x0 * (x3**2 + x5**2 + x7**2)
    x9 = boys(0, x8)
    x10 = boys(1, x8)
    x11 = (
        6.283185307179586
        * da
        * db
        * x1
        * numpy.exp(
            -ax * bx * x1 * ((A[0] - B[0]) ** 2 + (A[1] - B[1]) ** 2 + (A[2] - B[2]) ** 2)
        )
    )

    # 3 item(s)
    result[0, 0] = numpy.sum(x11 * (x10 * x3 - x9 * (x2 + A[0])))
    result[1, 0] = numpy.sum(x11 * (x10 * x5 - x9 * (x4 + A[1])))
    result[2, 0] = numpy.sum(x11 * (x10 * x7 - x9 * (x6 + A[2])))
    return result


def coulomb3d_11(ax, da, A, bx, db, B, R):
    """Cartesian (pp) 1-electron Coulomb integral.

    Generated code; DO NOT modify by hand!"""

    result = numpy.zeros((3, 3), dtype=float)

    x0 = ax + bx
    x1 = x0 ** (-1.0)
    x2 = -x1 * (ax * A[0] + bx * B[0])
    x3 = x2 + R[0]
    x4 = -x1 * (ax * A[1] + bx * B[1])
    x5 = x4 + R[1]
    x6 = -x1 * (ax * A[2] + bx * B[2])
    x7 = x6 + R[2]
    x8 = x0 * (x3**2 + x5**2 + x7**2)
    x9 = boys(1, x8)
    x10 = boys(0, x8)
    x11 = x1 * (x10 - x9)
    x12 = x2 + B[0]
    x13 = boys(2, x8)
    x14 = x2 + A[0]
    x15 = (
        3.141592653589793
        * da
        * db
        * x1
        * numpy.exp(
            -ax * bx * x1 * ((A[0] - B[0]) ** 2 + (A[1] - B[1]) ** 2 + (A[2] - B[2]) ** 2)
        )
    )
    x16 = x4 + B[1]
    x17 = -x5 * x9
    x18 = x10 * x16 + x17
    x19 = -x13 * x5
    x20 = x16 * x9 + x19
    x21 = 2.0 * x15
    x22 = x6 + B[2]
    x23 = -x7 * x9
    x24 = x10 * x22 + x23
    x25 = -x24
    x26 = -x13 * x7
    x27 = x22 * x9 + x26
    x28 = -x27
    x29 = x4 + A[1]
    x30 = x6 + A[2]
    x31 = -x10 * x30 - x23
    x32 = -x26 - x30 * x9

    # 9 item(s)
    result[0, 0] = numpy.sum(
        x15 * (x11 + 2.0 * x14 * (x10 * x12 - x3 * x9) - 2.0 * x3 * (x12 * x9 - x13 * x3))
    )
    result[0, 1] = numpy.sum(x21 * (x14 * x18 - x20 * x3))
    result[0, 2] = numpy.sum(x21 * (-x14 * x25 + x28 * x3))
    result[1, 0] = numpy.sum(x21 * (x12 * (x10 * x29 + x17) - x3 * (x19 + x29 * x9)))
    result[1, 1] = numpy.sum(x15 * (x11 + 2.0 * x18 * x29 - 2.0 * x20 * x5))
    result[1, 2] = numpy.sum(x21 * (-x25 * x29 + x28 * x5))
    result[2, 0] = numpy.sum(x21 * (-x12 * x31 + x3 * x32))
    result[2, 1] = numpy.sum(x21 * (-x16 * x31 + x32 * x5))
    result[2, 2] = numpy.sum(x15 * (x11 + 2.0 * x24 * x30 - 2.0 * x27 * x7))
    return result


def coulomb3d_12(ax, da, A, bx, db, B, R):
    """Cartesian (pd) 1-electron Coulomb integral.

    Generated code; DO NOT modify by hand!"""

    result = numpy.zeros((3, 6), dtype=float)

    x0 = ax + bx
    x1 = x0 ** (-1.0)
    x2 = -x1 * (ax * A[0] + bx * B[0])
    x3 = x2 + A[0]
    x4 = x2 + R[0]
    x5 = -x1 * (ax * A[1] + bx * B[1])
    x6 = x5 + R[1]
    x7 = -x1 * (ax * A[2] + bx * B[2])
    x8 = x7 + R[2]
    x9 = x0 * (x4**2 + x6**2 + x8**2)
    x10 = boys(1, x9)
    x11 = boys(0, x9)
    x12 = x1 * (-x10 + x11)
    x13 = x2 + B[0]
    x14 = x10 * x13
    x15 = boys(2, x9)
    x16 = x15 * x4
    x17 = x14 - x16
    x18 = 2.0 * x4
    x19 = -x10 * x4 + x11 * x13
    x20 = 2.0 * x13
    x21 = x1 * (x10 - x15)
    x22 = boys(3, x9)
    x23 = 2.0 * x1
    x24 = (
        3.141592653589793
        * da
        * db
        * numpy.exp(
            -ax * bx * x1 * ((A[0] - B[0]) ** 2 + (A[1] - B[1]) ** 2 + (A[2] - B[2]) ** 2)
        )
    )
    x25 = x1 * x24
    x26 = 0.5773502691896258 * x25
    x27 = x15 * x6
    x28 = x5 + B[1]
    x29 = x10 * x28
    x30 = -x10 * x6
    x31 = x11 * x28 + x30
    x32 = x1 * (x27 - x29 + x31)
    x33 = -x31
    x34 = -x15 * x6
    x35 = x29 + x34
    x36 = -x35
    x37 = -x22 * x6
    x38 = x15 * x28 + x37
    x39 = -x38
    x40 = x15 * x8
    x41 = x7 + B[2]
    x42 = x10 * x41
    x43 = -x10 * x8
    x44 = x11 * x41 + x43
    x45 = x1 * (x40 - x42 + x44)
    x46 = -x44
    x47 = -x15 * x8
    x48 = x42 + x47
    x49 = -x48
    x50 = -x22 * x8
    x51 = x15 * x41 + x50
    x52 = -x51
    x53 = 2.0 * x28
    x54 = 2.0 * x6
    x55 = x12 + x36 * x54
    x56 = x21 + x39 * x54
    x57 = -x49 * x6
    x58 = x28 * x46 + x57
    x59 = -x52 * x6
    x60 = x28 * x49 + x59
    x61 = x23 * x24
    x62 = 2.0 * x41
    x63 = 2.0 * x8
    x64 = x12 + x49 * x63
    x65 = -x46 * x62 + x64
    x66 = x21 + x52 * x63
    x67 = -x49 * x62 + x66
    x68 = x5 + A[1]
    x69 = x10 * x68
    x70 = x11 * x68 + x30
    x71 = -x34 - x69
    x72 = 2.0 * x68
    x73 = x7 + A[2]
    x74 = x10 * x73
    x75 = x11 * x73 + x43
    x76 = x1 * (x40 - x74 + x75)
    x77 = -x75
    x78 = -x47 - x74
    x79 = -x15 * x73 - x50
    x80 = x28 * x77 - x6 * x78
    x81 = x28 * x78 - x6 * x79
    x82 = 2.0 * x73
    x83 = -x46 * x82 + x64
    x84 = -x49 * x82 + x66

    # 18 item(s)
    result[0, 0] = numpy.sum(
        -x26
        * (
            x23 * (-x14 + x16 + x19)
            + x3 * (x12 - x17 * x18 + x19 * x20)
            - x4 * (x17 * x20 - x18 * (x13 * x15 - x22 * x4) + x21)
        )
    )
    result[0, 1] = numpy.sum(
        -x25 * (x18 * (x13 * x36 - x39 * x4) - 2.0 * x3 * (x13 * x33 - x36 * x4) + x32)
    )
    result[0, 2] = numpy.sum(
        -x25 * (x18 * (x13 * x49 - x4 * x52) - 2.0 * x3 * (x13 * x46 - x4 * x49) + x45)
    )
    result[0, 3] = numpy.sum(x26 * (x3 * (x33 * x53 - x55) - x4 * (x36 * x53 - x56)))
    result[0, 4] = numpy.sum(x61 * (x3 * x58 - x4 * x60))
    result[0, 5] = numpy.sum(x26 * (-x3 * x65 + x4 * x67))
    result[1, 0] = numpy.sum(
        -x26
        * (
            x1 * (x27 - x69 + x70)
            + 2.0 * x13 * (x13 * x70 + x4 * x71)
            + x18 * (x13 * x71 + x4 * (x15 * x68 + x37))
        )
    )
    result[1, 1] = numpy.sum(x25 * (x13 * (x33 * x72 - x55) - x4 * (x36 * x72 - x56)))
    result[1, 2] = numpy.sum(x61 * (x13 * (x46 * x68 + x57) - x4 * (x49 * x68 + x59)))
    result[1, 3] = numpy.sum(
        -x26
        * (
            2.0 * x32
            - x6 * (x21 + x35 * x53 - x38 * x54)
            + x68 * (x12 + x31 * x53 - x35 * x54)
        )
    )
    result[1, 4] = numpy.sum(x25 * (-x45 - x54 * x60 + 2.0 * x58 * x68))
    result[1, 5] = numpy.sum(x26 * (x6 * x67 - x65 * x68))
    result[2, 0] = numpy.sum(
        -x26 * (-2.0 * x13 * (x13 * x77 - x4 * x78) + x18 * (x13 * x78 - x4 * x79) + x76)
    )
    result[2, 1] = numpy.sum(x61 * (x13 * x80 - x4 * x81))
    result[2, 2] = numpy.sum(x25 * (-x13 * x83 + x4 * x84))
    result[2, 3] = numpy.sum(x26 * (2.0 * x28 * x80 - x54 * x81 - x76))
    result[2, 4] = numpy.sum(x25 * (-x28 * x83 + x6 * x84))
    result[2, 5] = numpy.sum(
        -x26
        * (
            2.0 * x45
            + x73 * (x12 + x44 * x62 - x48 * x63)
            - x8 * (x21 + x48 * x62 - x51 * x63)
        )
    )
    return result


def coulomb3d_13(ax, da, A, bx, db, B, R):
    """Cartesian (pf) 1-electron Coulomb integral.

    Generated code; DO NOT modify by hand!"""

    result = numpy.zeros((3, 10), dtype=float)

    x0 = ax + bx
    x1 = x0 ** (-1.0)
    x2 = -x1 * (ax * A[0] + bx * B[0])
    x3 = x2 + A[0]
    x4 = x2 + B[0]
    x5 = x2 + R[0]
    x6 = -x1 * (ax * A[1] + bx * B[1])
    x7 = x6 + R[1]
    x8 = -x1 * (ax * A[2] + bx * B[2])
    x9 = x8 + R[2]
    x10 = x0 * (x5**2 + x7**2 + x9**2)
    x11 = boys(1, x10)
    x12 = boys(0, x10)
    x13 = x1 * (-x11 + x12)
    x14 = x11 * x4
    x15 = boys(2, x10)
    x16 = x15 * x5
    x17 = x14 - x16
    x18 = 2.0 * x5
    x19 = -x11 * x5 + x12 * x4
    x20 = 2.0 * x4
    x21 = x1 * (x11 - x15)
    x22 = x15 * x4
    x23 = boys(3, x10)
    x24 = x23 * x5
    x25 = x22 - x24
    x26 = x17 * x20 - x18 * x25 + x21
    x27 = 2.0 * x1
    x28 = x1 * (x15 - x23)
    x29 = boys(4, x10)
    x30 = -x13
    x31 = -x17
    x32 = 1.5 * x1
    x33 = (
        3.141592653589793
        * da
        * db
        * x1
        * numpy.exp(
            -ax * bx * x1 * ((A[0] - B[0]) ** 2 + (A[1] - B[1]) ** 2 + (A[2] - B[2]) ** 2)
        )
    )
    x34 = 0.2581988897471611 * x33
    x35 = x15 * x7
    x36 = x6 + B[1]
    x37 = x11 * x36
    x38 = -x11 * x7
    x39 = x12 * x36 + x38
    x40 = x35 - x37 + x39
    x41 = x1 * x40
    x42 = -x39
    x43 = -x35
    x44 = x37 + x43
    x45 = -x44
    x46 = x4 * x42 - x45 * x5
    x47 = x4 * x45
    x48 = x15 * x36
    x49 = x23 * x7
    x50 = -x49
    x51 = x48 + x50
    x52 = -x51
    x53 = x5 * x52
    x54 = x47 - x53
    x55 = x44 - x48 + x49
    x56 = x1 * x55
    x57 = -x29 * x7
    x58 = x23 * x36 + x57
    x59 = -x58
    x60 = 0.5773502691896258 * x33
    x61 = x15 * x9
    x62 = x8 + B[2]
    x63 = x11 * x62
    x64 = -x11 * x9
    x65 = x12 * x62 + x64
    x66 = x61 - x63 + x65
    x67 = x1 * x66
    x68 = -x65
    x69 = -x61
    x70 = x63 + x69
    x71 = -x70
    x72 = x4 * x68 - x5 * x71
    x73 = x4 * x71
    x74 = x15 * x62
    x75 = x23 * x9
    x76 = -x75
    x77 = x74 + x76
    x78 = -x77
    x79 = x5 * x78
    x80 = x73 - x79
    x81 = x70 - x74 + x75
    x82 = x1 * x81
    x83 = -x29 * x9
    x84 = x23 * x62 + x83
    x85 = -x84
    x86 = 2.0 * x36
    x87 = 2.0 * x7
    x88 = x21 + x52 * x87
    x89 = -x45 * x86 + x88
    x90 = x28 + x59 * x87
    x91 = -x52 * x86 + x90
    x92 = x42 * x86
    x93 = x45 * x87
    x94 = x30 - x93
    x95 = x89 + x92 + x94
    x96 = 0.5 * x1
    x97 = x13 + x93
    x98 = -x92 + x97
    x99 = x7 * x78
    x100 = x36 * x71
    x101 = -x7 * x71
    x102 = x101 + x36 * x68
    x103 = x1 * (-x100 + x102 + x99)
    x104 = -x102
    x105 = -x7 * x78
    x106 = x100 + x105
    x107 = -x106
    x108 = -x7 * x85
    x109 = x108 + x36 * x78
    x110 = -x109
    x111 = 2.0 * x62
    x112 = 2.0 * x9
    x113 = x112 * x78 + x21
    x114 = -x111 * x71 + x113
    x115 = x112 * x85 + x28
    x116 = -x111 * x78 + x115
    x117 = x111 * x68
    x118 = x112 * x71
    x119 = -x118 + x30
    x120 = x114 + x117 + x119
    x121 = x120 * x96
    x122 = x118 + x13
    x123 = -x117 + x122
    x124 = -x27 * x40 + x7 * x89
    x125 = -x27 * x55 + x7 * x91
    x126 = -x1 * x66
    x127 = x107 * x87 + x126
    x128 = -x1 * x81
    x129 = x110 * x87 + x128
    x130 = -x114 * x7
    x131 = x123 * x36 + x130
    x132 = -x116 * x7
    x133 = x114 * x36 + x132
    x134 = x114 * x9 + 2.0 * x126
    x135 = -x123 * x62 + x134
    x136 = x116 * x9 + 2.0 * x128
    x137 = -x114 * x62 + x136
    x138 = x6 + A[1]
    x139 = x11 * x138
    x140 = x12 * x138 + x38
    x141 = x139 + x43
    x142 = -x141
    x143 = -x140 * x4 - x142 * x5
    x144 = x142 * x4
    x145 = x138 * x15
    x146 = -x145 - x50
    x147 = x146 * x5
    x148 = x144 - x147
    x149 = 2.0 * x138
    x150 = -x149 * x45 + x88
    x151 = x149 * x42
    x152 = x138 * x71
    x153 = x101 + x138 * x68
    x154 = -x105 - x152
    x155 = x21 + x44 * x86 - x51 * x87
    x156 = x8 + A[2]
    x157 = x11 * x156
    x158 = x12 * x156 + x64
    x159 = -x157 + x158 + x61
    x160 = x1 * x159
    x161 = -x158
    x162 = x157 + x69
    x163 = -x162
    x164 = x161 * x4 - x163 * x5
    x165 = x163 * x4
    x166 = x15 * x156
    x167 = -x166 - x76
    x168 = x167 * x5
    x169 = x165 - x168
    x170 = x162 - x166 + x75
    x171 = x1 * x170
    x172 = -x156 * x23 - x83
    x173 = x163 * x36
    x174 = x161 * x36 - x163 * x7
    x175 = x1 * (x167 * x7 - x173 + x174)
    x176 = -x174
    x177 = -x167 * x7 + x173
    x178 = -x177
    x179 = x167 * x36 - x172 * x7
    x180 = -x179
    x181 = 2.0 * x156
    x182 = x113 - x181 * x71
    x183 = x115 - x181 * x78
    x184 = x181 * x68
    x185 = x96 * (x119 + x182 + x184)
    x186 = x122 - x184
    x187 = -x182 * x7 + x186 * x36
    x188 = x182 * x36 - x183 * x7
    x189 = -x123 * x156 + x134
    x190 = -x114 * x156 + x136
    x191 = x111 * x70 - x112 * x77 + x21

    # 30 item(s)
    result[0, 0] = numpy.sum(
        x34
        * (
            x3
            * (-x26 * x5 + x27 * (-x14 + x16 + x19) + x4 * (x13 - x17 * x18 + x19 * x20))
            + x32 * (x18 * x25 + x18 * x31 + x19 * x20 + x20 * x31 - x21 - x30)
            - x5
            * (
                x26 * x4
                + x27 * (x17 - x22 + x24)
                - x5 * (-x18 * (x23 * x4 - x29 * x5) + x20 * x25 + x28)
            )
        )
    )
    result[0, 1] = numpy.sum(
        -x60
        * (
            x27 * (x46 - x47 + x53)
            - x3 * (x18 * x54 - 2.0 * x4 * x46 + x41)
            + x5 * (x18 * (x4 * x52 - x5 * x59) - 2.0 * x4 * x54 + x56)
        )
    )
    result[0, 2] = numpy.sum(
        -x60
        * (
            x27 * (x72 - x73 + x79)
            - x3 * (x18 * x80 - 2.0 * x4 * x72 + x67)
            + x5 * (x18 * (x4 * x78 - x5 * x85) - 2.0 * x4 * x80 + x82)
        )
    )
    result[0, 3] = numpy.sum(
        -x60 * (-x3 * (x4 * x98 - x5 * x89) + x5 * (x4 * x89 - x5 * x91) + x95 * x96)
    )
    result[0, 4] = numpy.sum(
        -x33 * (x103 + x18 * (x107 * x4 - x110 * x5) - 2.0 * x3 * (x104 * x4 - x107 * x5))
    )
    result[0, 5] = numpy.sum(
        -x60 * (x121 + x3 * (x114 * x5 - x123 * x4) + x5 * (x114 * x4 - x116 * x5))
    )
    result[0, 6] = numpy.sum(-x34 * (x3 * (x124 - x36 * x98) - x5 * (x125 - x36 * x89)))
    result[0, 7] = numpy.sum(x60 * (x3 * (x104 * x86 - x127) - x5 * (x107 * x86 - x129)))
    result[0, 8] = numpy.sum(x60 * (x131 * x3 - x133 * x5))
    result[0, 9] = numpy.sum(x34 * (-x135 * x3 + x137 * x5))
    result[1, 0] = numpy.sum(
        -x34
        * (
            x27 * (x143 - x144 + x147)
            - x4 * (x1 * (-x139 + x140 + x35) - 2.0 * x143 * x4 + x148 * x18)
            + x5
            * (
                x1 * (x141 - x145 + x49)
                - 2.0 * x148 * x4
                + x18 * (x146 * x4 + x5 * (x138 * x23 + x57))
            )
        )
    )
    result[1, 1] = numpy.sum(
        -x60
        * (
            x4 * (x150 * x5 + x4 * (x151 - x97))
            + x5 * (x150 * x4 + x5 * (x149 * x52 - x90))
            + x96 * (x150 + x151 + x94)
        )
    )
    result[1, 2] = numpy.sum(
        -x60
        * (
            x1 * (-x152 + x153 + x99)
            + x18 * (x154 * x4 + x5 * (x108 + x138 * x78))
            + 2.0 * x4 * (x153 * x4 + x154 * x5)
        )
    )
    result[1, 3] = numpy.sum(-x60 * (x4 * (x124 - x138 * x98) - x5 * (x125 - x138 * x89)))
    result[1, 4] = numpy.sum(
        x33 * (x4 * (x104 * x149 - x127) - x5 * (x107 * x149 - x129))
    )
    result[1, 5] = numpy.sum(
        x60 * (x4 * (x123 * x138 + x130) - x5 * (x114 * x138 + x132))
    )
    result[1, 6] = numpy.sum(
        -x34
        * (
            -x138 * (-x155 * x7 + x36 * (x13 + x39 * x86 - x44 * x87) + 2.0 * x41)
            + x32 * x95
            + x7 * (x155 * x36 + 2.0 * x56 - x7 * (x28 + x51 * x86 - x58 * x87))
        )
    )
    result[1, 7] = numpy.sum(
        -x60
        * (
            2.0 * x103
            - x138 * (-2.0 * x102 * x36 + x106 * x87 + x67)
            + x7 * (-2.0 * x106 * x36 + x109 * x87 + x82)
        )
    )
    result[1, 8] = numpy.sum(x60 * (-x121 + x131 * x138 - x133 * x7))
    result[1, 9] = numpy.sum(x34 * (-x135 * x138 + x137 * x7))
    result[2, 0] = numpy.sum(
        -x34
        * (
            x27 * (x164 - x165 + x168)
            - x4 * (x160 - 2.0 * x164 * x4 + x169 * x18)
            + x5 * (-2.0 * x169 * x4 + x171 + x18 * (x167 * x4 - x172 * x5))
        )
    )
    result[2, 1] = numpy.sum(
        -x60 * (x175 + x18 * (x178 * x4 - x180 * x5) - 2.0 * x4 * (x176 * x4 - x178 * x5))
    )
    result[2, 2] = numpy.sum(
        x60 * (-2.0 * x182 * x4 * x5 + x183 * x5**2 - x185 + x186 * x4**2)
    )
    result[2, 3] = numpy.sum(
        x60
        * (
            x4 * (x1 * x159 + x176 * x86 - x178 * x87)
            - x5 * (x1 * x170 + x178 * x86 - x180 * x87)
        )
    )
    result[2, 4] = numpy.sum(x33 * (x187 * x4 - x188 * x5))
    result[2, 5] = numpy.sum(x60 * (-x189 * x4 + x190 * x5))
    result[2, 6] = numpy.sum(
        -x34
        * (
            2.0 * x175
            - x36 * (x160 - 2.0 * x174 * x36 + x177 * x87)
            + x7 * (x171 - 2.0 * x177 * x36 + x179 * x87)
        )
    )
    result[2, 7] = numpy.sum(x60 * (-x185 + x187 * x36 - x188 * x7))
    result[2, 8] = numpy.sum(x60 * (-x189 * x36 + x190 * x7))
    result[2, 9] = numpy.sum(
        -x34
        * (
            x120 * x32
            - x156 * (-x191 * x9 + x62 * (x111 * x65 - x112 * x70 + x13) + 2.0 * x67)
            + x9 * (x191 * x62 + 2.0 * x82 - x9 * (x111 * x77 - x112 * x84 + x28))
        )
    )
    return result


def coulomb3d_14(ax, da, A, bx, db, B, R):
    """Cartesian (pg) 1-electron Coulomb integral.

    Generated code; DO NOT modify by hand!"""

    result = numpy.zeros((3, 15), dtype=float)

    x0 = ax + bx
    x1 = x0 ** (-1.0)
    x2 = -x1 * (ax * A[0] + bx * B[0])
    x3 = -x2 - A[0]
    x4 = -x2 - B[0]
    x5 = 0.5 / (ax + bx)
    x6 = -x2 - R[0]
    x7 = -x1 * (ax * A[1] + bx * B[1])
    x8 = -x7 - R[1]
    x9 = -x1 * (ax * A[2] + bx * B[2])
    x10 = -x9 - R[2]
    x11 = x0 * (x10**2 + x6**2 + x8**2)
    x12 = (
        6.283185307179586
        * x1
        * numpy.exp(
            -ax * bx * x1 * ((A[0] - B[0]) ** 2 + (A[1] - B[1]) ** 2 + (A[2] - B[2]) ** 2)
        )
    )
    x13 = x12 * boys(1, x11)
    x14 = x12 * boys(0, x11)
    x15 = x5 * (-x13 + x14)
    x16 = -x13 * x6 + x14 * x4
    x17 = x12 * boys(2, x11)
    x18 = x17 * x6
    x19 = x13 * x4
    x20 = -x18 + x19
    x21 = x15 + x16 * x4 - x20 * x6
    x22 = x5 * (x13 - x17)
    x23 = x20 * x4
    x24 = x12 * boys(3, x11)
    x25 = x24 * x6
    x26 = x17 * x4
    x27 = -x25 + x26
    x28 = x27 * x6
    x29 = x22 + x23 - x28
    x30 = 2.0 * x5
    x31 = x21 * x4 - x29 * x6 + x30 * (x16 + x18 - x19)
    x32 = x29 * x4
    x33 = x5 * (x17 - x24)
    x34 = x27 * x4
    x35 = x12 * boys(4, x11)
    x36 = x35 * x6
    x37 = x24 * x4
    x38 = -x36 + x37
    x39 = x38 * x6
    x40 = x33 + x34 - x39
    x41 = x40 * x6
    x42 = x30 * (x20 + x25 - x26)
    x43 = x32 - x41 + x42
    x44 = -x22
    x45 = 3.0 * x5
    x46 = x5 * (x24 - x35)
    x47 = x12 * boys(5, x11)
    x48 = -x33
    x49 = da * db
    x50 = 0.09759000729485332 * x49
    x51 = -x7 - B[1]
    x52 = x13 * x51
    x53 = x17 * x8
    x54 = -x13 * x8
    x55 = x14 * x51 + x54
    x56 = x5 * (-x52 + x53 + x55)
    x57 = -x53
    x58 = x52 + x57
    x59 = x4 * x55 - x58 * x6
    x60 = x4 * x58
    x61 = x24 * x8
    x62 = -x61
    x63 = x17 * x51
    x64 = x62 + x63
    x65 = x6 * x64
    x66 = x60 - x65
    x67 = x4 * x59 + x56 - x6 * x66
    x68 = x5 * (x58 + x61 - x63)
    x69 = x4 * x66
    x70 = x4 * x64
    x71 = x35 * x8
    x72 = -x71
    x73 = x24 * x51
    x74 = x72 + x73
    x75 = x6 * x74
    x76 = x70 - x75
    x77 = x6 * x76
    x78 = x68 + x69 - x77
    x79 = x5 * (x64 + x71 - x73)
    x80 = -x47 * x8
    x81 = x35 * x51 + x80
    x82 = 0.2581988897471611 * x49
    x83 = -x9 - B[2]
    x84 = x13 * x83
    x85 = x10 * x17
    x86 = -x10 * x13
    x87 = x14 * x83 + x86
    x88 = x5 * (-x84 + x85 + x87)
    x89 = -x85
    x90 = x84 + x89
    x91 = x4 * x87 - x6 * x90
    x92 = x4 * x90
    x93 = x10 * x24
    x94 = -x93
    x95 = x17 * x83
    x96 = x94 + x95
    x97 = x6 * x96
    x98 = x92 - x97
    x99 = x4 * x91 - x6 * x98 + x88
    x100 = x5 * (x90 + x93 - x95)
    x101 = x4 * x98
    x102 = x4 * x96
    x103 = x10 * x35
    x104 = -x103
    x105 = x24 * x83
    x106 = x104 + x105
    x107 = x106 * x6
    x108 = x102 - x107
    x109 = x108 * x6
    x110 = x100 + x101 - x109
    x111 = x5 * (x103 - x105 + x96)
    x112 = -x10 * x47
    x113 = x112 + x35 * x83
    x114 = -x100
    x115 = x51 * x58
    x116 = x15 - x58 * x8
    x117 = x116 + x51 * x55
    x118 = x64 * x8
    x119 = x118 + x44
    x120 = x5 * (-x115 + x117 + x119)
    x121 = -x118 + x22
    x122 = x115 + x121
    x123 = x117 * x4 - x122 * x6
    x124 = x122 * x4
    x125 = x51 * x64
    x126 = x74 * x8
    x127 = -x126 + x33
    x128 = x125 + x127
    x129 = x128 * x6
    x130 = x124 - x129
    x131 = x126 + x48
    x132 = x5 * (x122 - x125 + x131)
    x133 = x46 - x8 * x81
    x134 = x133 + x51 * x74
    x135 = 0.3333333333333333 * x49
    x136 = x8 * x96
    x137 = x51 * x90
    x138 = -x8 * x90
    x139 = x138 + x51 * x87
    x140 = x5 * (x136 - x137 + x139)
    x141 = -x136
    x142 = x137 + x141
    x143 = x139 * x4 - x142 * x6
    x144 = x142 * x4
    x145 = x51 * x96
    x146 = x106 * x8
    x147 = -x146
    x148 = x145 + x147
    x149 = x148 * x6
    x150 = x144 - x149
    x151 = x5 * (x142 - x145 + x146)
    x152 = -x113 * x8
    x153 = x106 * x51 + x152
    x154 = 1.732050807568877 * x135
    x155 = x83 * x90
    x156 = -x10 * x90 + x15
    x157 = x156 + x83 * x87
    x158 = x10 * x96
    x159 = x158 + x44
    x160 = x5 * (-x155 + x157 + x159)
    x161 = -x158 + x22
    x162 = x155 + x161
    x163 = x157 * x4 - x162 * x6
    x164 = x162 * x4
    x165 = x83 * x96
    x166 = x10 * x106
    x167 = -x166 + x33
    x168 = x165 + x167
    x169 = x168 * x6
    x170 = x164 - x169
    x171 = x166 + x48
    x172 = x5 * (x162 - x165 + x171)
    x173 = -x10 * x113 + x46
    x174 = x106 * x83 + x173
    x175 = x122 * x51
    x176 = -x122 * x8 + 2.0 * x56
    x177 = x117 * x51 + x176
    x178 = x128 * x8
    x179 = 2.0 * x68
    x180 = x178 - x179
    x181 = x5 * (-x175 + x177 + x180)
    x182 = -x178 + x179
    x183 = x175 + x182
    x184 = -x134 * x8 + 2.0 * x79
    x185 = x128 * x51 + x184
    x186 = x142 * x51
    x187 = -x142 * x8 + x88
    x188 = x139 * x51 + x187
    x189 = x148 * x8
    x190 = x114 + x189
    x191 = x5 * (-x186 + x188 + x190)
    x192 = x100 - x189
    x193 = x186 + x192
    x194 = x111 - x153 * x8
    x195 = x148 * x51 + x194
    x196 = x168 * x8
    x197 = x162 * x51
    x198 = -x162 * x8
    x199 = x157 * x51 + x198
    x200 = x5 * (x196 - x197 + x199)
    x201 = -x196
    x202 = x197 + x201
    x203 = -x174 * x8
    x204 = x168 * x51 + x203
    x205 = x162 * x83
    x206 = -x10 * x162 + 2.0 * x88
    x207 = x157 * x83 + x206
    x208 = x10 * x168
    x209 = 2.0 * x100
    x210 = x208 - x209
    x211 = x5 * (-x205 + x207 + x210)
    x212 = -x208 + x209
    x213 = x205 + x212
    x214 = -x10 * x174 + 2.0 * x111
    x215 = x168 * x83 + x214
    x216 = 3.0 * x120 - x183 * x8
    x217 = x177 * x51 + x216
    x218 = 3.0 * x132 - x185 * x8
    x219 = x183 * x51 + x218
    x220 = 2.0 * x140 - x193 * x8
    x221 = x188 * x51 + x220
    x222 = 2.0 * x151 - x195 * x8
    x223 = x193 * x51 + x222
    x224 = x160 - x202 * x8
    x225 = x199 * x51 + x224
    x226 = x172 - x204 * x8
    x227 = x202 * x51 + x226
    x228 = -x213 * x8
    x229 = x207 * x51 + x228
    x230 = -x215 * x8
    x231 = x213 * x51 + x230
    x232 = -x10 * x213 + 3.0 * x160
    x233 = x207 * x83 + x232
    x234 = -x10 * x215 + 3.0 * x172
    x235 = x213 * x83 + x234
    x236 = -x7 - A[1]
    x237 = x13 * x236
    x238 = x14 * x236 + x54
    x239 = x237 + x57
    x240 = x238 * x4 - x239 * x6
    x241 = x239 * x4
    x242 = x17 * x236
    x243 = x242 + x62
    x244 = x243 * x6
    x245 = x241 - x244
    x246 = x240 * x4 - x245 * x6 + x5 * (-x237 + x238 + x53)
    x247 = x5 * (x239 - x242 + x61)
    x248 = x245 * x4
    x249 = x243 * x4
    x250 = x236 * x24
    x251 = x250 + x72
    x252 = x251 * x6
    x253 = x249 - x252
    x254 = x253 * x6
    x255 = x247 + x248 - x254
    x256 = x236 * x58
    x257 = x116 + x236 * x55
    x258 = x121 + x256
    x259 = x257 * x4 - x258 * x6
    x260 = x258 * x4
    x261 = x236 * x64
    x262 = x127 + x261
    x263 = x262 * x6
    x264 = x260 - x263
    x265 = x236 * x90
    x266 = x138 + x236 * x87
    x267 = x141 + x265
    x268 = x266 * x4 - x267 * x6
    x269 = x267 * x4
    x270 = x236 * x96
    x271 = x147 + x270
    x272 = x271 * x6
    x273 = x269 - x272
    x274 = x122 * x236
    x275 = x117 * x236 + x176
    x276 = x182 + x274
    x277 = x142 * x236
    x278 = x139 * x236 + x187
    x279 = x192 + x277
    x280 = x162 * x236
    x281 = x157 * x236 + x198
    x282 = x201 + x280
    x283 = -x9 - A[2]
    x284 = x13 * x283
    x285 = x14 * x283 + x86
    x286 = x5 * (-x284 + x285 + x85)
    x287 = x284 + x89
    x288 = x285 * x4 - x287 * x6
    x289 = x287 * x4
    x290 = x17 * x283
    x291 = x290 + x94
    x292 = x291 * x6
    x293 = x289 - x292
    x294 = x286 + x288 * x4 - x293 * x6
    x295 = x5 * (x287 - x290 + x93)
    x296 = x293 * x4
    x297 = x291 * x4
    x298 = x24 * x283
    x299 = x104 + x298
    x300 = x299 * x6
    x301 = x297 - x300
    x302 = x301 * x6
    x303 = x295 + x296 - x302
    x304 = x5 * (x103 + x291 - x298)
    x305 = x112 + x283 * x35
    x306 = -x295
    x307 = x291 * x8
    x308 = x287 * x51
    x309 = x285 * x51 - x287 * x8
    x310 = x5 * (x307 - x308 + x309)
    x311 = -x307 + x308
    x312 = x309 * x4 - x311 * x6
    x313 = x311 * x4
    x314 = x291 * x51
    x315 = x299 * x8
    x316 = x314 - x315
    x317 = x316 * x6
    x318 = x313 - x317
    x319 = x5 * (x311 - x314 + x315)
    x320 = x299 * x51 - x305 * x8
    x321 = x283 * x90
    x322 = x156 + x283 * x87
    x323 = x5 * (x159 - x321 + x322)
    x324 = x161 + x321
    x325 = x322 * x4 - x324 * x6
    x326 = x324 * x4
    x327 = x283 * x96
    x328 = x167 + x327
    x329 = x328 * x6
    x330 = x326 - x329
    x331 = x5 * (x171 + x324 - x327)
    x332 = x106 * x283 + x173
    x333 = x316 * x8
    x334 = x311 * x51
    x335 = x286 + x309 * x51 - x311 * x8
    x336 = x5 * (x306 + x333 - x334 + x335)
    x337 = x295 - x333 + x334
    x338 = x304 + x316 * x51 - x320 * x8
    x339 = x328 * x8
    x340 = x324 * x51
    x341 = x322 * x51 - x324 * x8
    x342 = x5 * (x339 - x340 + x341)
    x343 = -x339 + x340
    x344 = x328 * x51 - x332 * x8
    x345 = x162 * x283
    x346 = x157 * x283 + x206
    x347 = x5 * (x210 - x345 + x346)
    x348 = x212 + x345
    x349 = x168 * x283 + x214
    x350 = 2.0 * x310 + x335 * x51 - x337 * x8
    x351 = 2.0 * x319 + x337 * x51 - x338 * x8
    x352 = x323 + x341 * x51 - x343 * x8
    x353 = x331 + x343 * x51 - x344 * x8
    x354 = x346 * x51 - x348 * x8
    x355 = x348 * x51 - x349 * x8
    x356 = x207 * x283 + x232
    x357 = x213 * x283 + x234

    # 45 item(s)
    result[0, 0] = numpy.sum(
        x50
        * (
            x3 * (x31 * x4 - x43 * x6 + x45 * (x21 - x23 + x28 + x44))
            + 4.0 * x5 * (x31 - x32 + x41 - x42)
            - x6
            * (
                x4 * x43
                + x45 * (x29 - x34 + x39 + x48)
                - x6
                * (
                    x30 * (x27 + x36 - x37)
                    + x4 * x40
                    - x6 * (x38 * x4 + x46 - x6 * (x35 * x4 - x47 * x6))
                )
            )
        )
    )
    result[0, 1] = numpy.sum(
        x82
        * (
            x3 * (x30 * (x59 - x60 + x65) + x4 * x67 - x6 * x78)
            + x45 * (x67 - x68 - x69 + x77)
            - x6
            * (
                x30 * (x66 - x70 + x75)
                + x4 * x78
                - x6 * (x4 * x76 - x6 * (x4 * x74 - x6 * x81) + x79)
            )
        )
    )
    result[0, 2] = numpy.sum(
        x82
        * (
            x3 * (-x110 * x6 + x30 * (x91 - x92 + x97) + x4 * x99)
            + x45 * (-x101 + x109 + x114 + x99)
            - x6
            * (
                x110 * x4
                + x30 * (-x102 + x107 + x98)
                - x6 * (x108 * x4 + x111 - x6 * (x106 * x4 - x113 * x6))
            )
        )
    )
    result[0, 3] = numpy.sum(
        x135
        * (
            x3 * (x120 + x123 * x4 - x130 * x6)
            + x30 * (x123 - x124 + x129)
            - x6 * (x130 * x4 + x132 - x6 * (x128 * x4 - x134 * x6))
        )
    )
    result[0, 4] = numpy.sum(
        x154
        * (
            x3 * (x140 + x143 * x4 - x150 * x6)
            + x30 * (x143 - x144 + x149)
            - x6 * (x150 * x4 + x151 - x6 * (x148 * x4 - x153 * x6))
        )
    )
    result[0, 5] = numpy.sum(
        x135
        * (
            x3 * (x160 + x163 * x4 - x170 * x6)
            + x30 * (x163 - x164 + x169)
            - x6 * (x170 * x4 + x172 - x6 * (x168 * x4 - x174 * x6))
        )
    )
    result[0, 6] = numpy.sum(
        x82 * (x181 + x3 * (x177 * x4 - x183 * x6) - x6 * (x183 * x4 - x185 * x6))
    )
    result[0, 7] = numpy.sum(
        x154 * (x191 + x3 * (x188 * x4 - x193 * x6) - x6 * (x193 * x4 - x195 * x6))
    )
    result[0, 8] = numpy.sum(
        x154 * (x200 + x3 * (x199 * x4 - x202 * x6) - x6 * (x202 * x4 - x204 * x6))
    )
    result[0, 9] = numpy.sum(
        x82 * (x211 + x3 * (x207 * x4 - x213 * x6) - x6 * (x213 * x4 - x215 * x6))
    )
    result[0, 10] = numpy.sum(x50 * (x217 * x3 - x219 * x6))
    result[0, 11] = numpy.sum(x82 * (x221 * x3 - x223 * x6))
    result[0, 12] = numpy.sum(x135 * (x225 * x3 - x227 * x6))
    result[0, 13] = numpy.sum(x82 * (x229 * x3 - x231 * x6))
    result[0, 14] = numpy.sum(x50 * (x233 * x3 - x235 * x6))
    result[1, 0] = numpy.sum(
        x50
        * (
            x4 * (x246 * x4 - x255 * x6 + x30 * (x240 - x241 + x244))
            + x45 * (x246 - x247 - x248 + x254)
            - x6
            * (
                x255 * x4
                + x30 * (x245 - x249 + x252)
                - x6
                * (
                    x253 * x4
                    + x5 * (x243 - x250 + x71)
                    - x6 * (x251 * x4 - x6 * (x236 * x35 + x80))
                )
            )
        )
    )
    result[1, 1] = numpy.sum(
        x82
        * (
            x30 * (x259 - x260 + x263)
            + x4 * (x259 * x4 - x264 * x6 + x5 * (x119 - x256 + x257))
            - x6
            * (
                x264 * x4
                + x5 * (x131 + x258 - x261)
                - x6 * (x262 * x4 - x6 * (x133 + x236 * x74))
            )
        )
    )
    result[1, 2] = numpy.sum(
        x82
        * (
            x30 * (x268 - x269 + x272)
            + x4 * (x268 * x4 - x273 * x6 + x5 * (x136 - x265 + x266))
            - x6
            * (
                x273 * x4
                + x5 * (x146 + x267 - x270)
                - x6 * (x271 * x4 - x6 * (x106 * x236 + x152))
            )
        )
    )
    result[1, 3] = numpy.sum(
        x135
        * (
            x4 * (x275 * x4 - x276 * x6)
            + x5 * (x180 - x274 + x275)
            - x6 * (x276 * x4 - x6 * (x128 * x236 + x184))
        )
    )
    result[1, 4] = numpy.sum(
        x154
        * (
            x4 * (x278 * x4 - x279 * x6)
            + x5 * (x190 - x277 + x278)
            - x6 * (x279 * x4 - x6 * (x148 * x236 + x194))
        )
    )
    result[1, 5] = numpy.sum(
        x135
        * (
            x4 * (x281 * x4 - x282 * x6)
            + x5 * (x196 - x280 + x281)
            - x6 * (x282 * x4 - x6 * (x168 * x236 + x203))
        )
    )
    result[1, 6] = numpy.sum(
        x82 * (x4 * (x177 * x236 + x216) - x6 * (x183 * x236 + x218))
    )
    result[1, 7] = numpy.sum(
        x154 * (x4 * (x188 * x236 + x220) - x6 * (x193 * x236 + x222))
    )
    result[1, 8] = numpy.sum(
        x154 * (x4 * (x199 * x236 + x224) - x6 * (x202 * x236 + x226))
    )
    result[1, 9] = numpy.sum(
        x82 * (x4 * (x207 * x236 + x228) - x6 * (x213 * x236 + x230))
    )
    result[1, 10] = numpy.sum(x50 * (4.0 * x181 + x217 * x236 - x219 * x8))
    result[1, 11] = numpy.sum(x82 * (3.0 * x191 + x221 * x236 - x223 * x8))
    result[1, 12] = numpy.sum(x135 * (2.0 * x200 + x225 * x236 - x227 * x8))
    result[1, 13] = numpy.sum(x82 * (x211 + x229 * x236 - x231 * x8))
    result[1, 14] = numpy.sum(x50 * (x233 * x236 - x235 * x8))
    result[2, 0] = numpy.sum(
        x50
        * (
            x4 * (x294 * x4 + x30 * (x288 - x289 + x292) - x303 * x6)
            + x45 * (x294 - x296 + x302 + x306)
            - x6
            * (
                x30 * (x293 - x297 + x300)
                + x303 * x4
                - x6 * (x301 * x4 + x304 - x6 * (x299 * x4 - x305 * x6))
            )
        )
    )
    result[2, 1] = numpy.sum(
        x82
        * (
            x30 * (x312 - x313 + x317)
            + x4 * (x310 + x312 * x4 - x318 * x6)
            - x6 * (x318 * x4 + x319 - x6 * (x316 * x4 - x320 * x6))
        )
    )
    result[2, 2] = numpy.sum(
        x82
        * (
            x30 * (x325 - x326 + x329)
            + x4 * (x323 + x325 * x4 - x330 * x6)
            - x6 * (x330 * x4 + x331 - x6 * (x328 * x4 - x332 * x6))
        )
    )
    result[2, 3] = numpy.sum(
        x135 * (x336 + x4 * (x335 * x4 - x337 * x6) - x6 * (x337 * x4 - x338 * x6))
    )
    result[2, 4] = numpy.sum(
        x154 * (x342 + x4 * (x341 * x4 - x343 * x6) - x6 * (x343 * x4 - x344 * x6))
    )
    result[2, 5] = numpy.sum(
        x135 * (x347 + x4 * (x346 * x4 - x348 * x6) - x6 * (x348 * x4 - x349 * x6))
    )
    result[2, 6] = numpy.sum(x82 * (x350 * x4 - x351 * x6))
    result[2, 7] = numpy.sum(x154 * (x352 * x4 - x353 * x6))
    result[2, 8] = numpy.sum(x154 * (x354 * x4 - x355 * x6))
    result[2, 9] = numpy.sum(x82 * (x356 * x4 - x357 * x6))
    result[2, 10] = numpy.sum(x50 * (3.0 * x336 + x350 * x51 - x351 * x8))
    result[2, 11] = numpy.sum(x82 * (2.0 * x342 + x352 * x51 - x353 * x8))
    result[2, 12] = numpy.sum(x135 * (x347 + x354 * x51 - x355 * x8))
    result[2, 13] = numpy.sum(x82 * (x356 * x51 - x357 * x8))
    result[2, 14] = numpy.sum(x50 * (-x10 * x235 + 4.0 * x211 + x233 * x283))
    return result


def coulomb3d_20(ax, da, A, bx, db, B, R):
    """Cartesian (ds) 1-electron Coulomb integral.

    Generated code; DO NOT modify by hand!"""

    result = numpy.zeros((6, 1), dtype=float)

    x0 = ax + bx
    x1 = x0 ** (-1.0)
    x2 = -x1 * (ax * A[0] + bx * B[0])
    x3 = x2 + R[0]
    x4 = -x1 * (ax * A[1] + bx * B[1])
    x5 = x4 + R[1]
    x6 = -x1 * (ax * A[2] + bx * B[2])
    x7 = x6 + R[2]
    x8 = x0 * (x3**2 + x5**2 + x7**2)
    x9 = boys(1, x8)
    x10 = boys(0, x8)
    x11 = x1 * (x10 - x9)
    x12 = x2 + A[0]
    x13 = boys(2, x8)
    x14 = (
        3.141592653589793
        * da
        * db
        * x1
        * numpy.exp(
            -ax * bx * x1 * ((A[0] - B[0]) ** 2 + (A[1] - B[1]) ** 2 + (A[2] - B[2]) ** 2)
        )
    )
    x15 = 0.5773502691896258 * x14
    x16 = x4 + A[1]
    x17 = x10 * x16 - x5 * x9
    x18 = -x13 * x5 + x16 * x9
    x19 = 2.0 * x14
    x20 = x6 + A[2]
    x21 = x10 * x20 - x7 * x9
    x22 = -x21
    x23 = -x13 * x7 + x20 * x9
    x24 = -x23

    # 6 item(s)
    result[0, 0] = numpy.sum(
        x15 * (x11 + 2.0 * x12 * (x10 * x12 - x3 * x9) - 2.0 * x3 * (x12 * x9 - x13 * x3))
    )
    result[1, 0] = numpy.sum(x19 * (x12 * x17 - x18 * x3))
    result[2, 0] = numpy.sum(x19 * (-x12 * x22 + x24 * x3))
    result[3, 0] = numpy.sum(x15 * (x11 + 2.0 * x16 * x17 - 2.0 * x18 * x5))
    result[4, 0] = numpy.sum(x19 * (-x16 * x22 + x24 * x5))
    result[5, 0] = numpy.sum(x15 * (x11 + 2.0 * x20 * x21 - 2.0 * x23 * x7))
    return result


def coulomb3d_21(ax, da, A, bx, db, B, R):
    """Cartesian (dp) 1-electron Coulomb integral.

    Generated code; DO NOT modify by hand!"""

    result = numpy.zeros((6, 3), dtype=float)

    x0 = ax + bx
    x1 = x0 ** (-1.0)
    x2 = -x1 * (ax * A[0] + bx * B[0])
    x3 = x2 + A[0]
    x4 = x2 + R[0]
    x5 = -x1 * (ax * A[1] + bx * B[1])
    x6 = x5 + R[1]
    x7 = -x1 * (ax * A[2] + bx * B[2])
    x8 = x7 + R[2]
    x9 = x0 * (x4**2 + x6**2 + x8**2)
    x10 = boys(0, x9)
    x11 = boys(2, x9)
    x12 = x11 * x4
    x13 = boys(1, x9)
    x14 = -x13 * x4
    x15 = x2 + B[0]
    x16 = x13 * x15
    x17 = x10 * x15 + x14
    x18 = x1 * (x10 - x13)
    x19 = -x12 + x16
    x20 = 2.0 * x4
    x21 = 2.0 * x3
    x22 = x1 * (-x11 + x13)
    x23 = boys(3, x9)
    x24 = (
        3.141592653589793
        * da
        * db
        * x1
        * numpy.exp(
            -ax * bx * x1 * ((A[0] - B[0]) ** 2 + (A[1] - B[1]) ** 2 + (A[2] - B[2]) ** 2)
        )
    )
    x25 = 0.5773502691896258 * x24
    x26 = x11 * x6
    x27 = x5 + B[1]
    x28 = x13 * x27
    x29 = -x13 * x6
    x30 = x10 * x27 + x29
    x31 = x1 * (x26 - x28 + x30)
    x32 = -x30
    x33 = -x11 * x6
    x34 = x28 + x33
    x35 = -x34
    x36 = -x23 * x6
    x37 = x11 * x27 + x36
    x38 = -x37
    x39 = x11 * x8
    x40 = x7 + B[2]
    x41 = x13 * x40
    x42 = -x13 * x8
    x43 = x10 * x40 + x42
    x44 = x1 * (x39 - x41 + x43)
    x45 = -x43
    x46 = -x11 * x8
    x47 = x41 + x46
    x48 = -x47
    x49 = -x23 * x8
    x50 = x11 * x40 + x49
    x51 = -x50
    x52 = x5 + A[1]
    x53 = x13 * x52
    x54 = x10 * x52 + x29
    x55 = x1 * (x26 - x53 + x54)
    x56 = -x54
    x57 = -x33 - x53
    x58 = -x11 * x52 - x36
    x59 = 2.0 * x52
    x60 = 2.0 * x6
    x61 = x45 * x52 - x48 * x6
    x62 = x48 * x52 - x51 * x6
    x63 = 2.0 * x24
    x64 = x7 + A[2]
    x65 = x13 * x64
    x66 = x10 * x64 + x42
    x67 = x1 * (x39 - x65 + x66)
    x68 = -x66
    x69 = -x46 - x65
    x70 = -x11 * x64 - x49
    x71 = -x6 * x69
    x72 = x27 * x68 + x71
    x73 = -x6 * x70
    x74 = x27 * x69 + x73
    x75 = 2.0 * x64
    x76 = 2.0 * x8
    x77 = x18 - x45 * x75 + x48 * x76
    x78 = x22 - x48 * x75 + x51 * x76
    x79 = x18 - x68 * x75 + x69 * x76
    x80 = x22 - x69 * x75 + x70 * x76

    # 18 item(s)
    result[0, 0] = numpy.sum(
        -x25
        * (
            x1 * (x12 - x16 + x17)
            + x1 * (x10 * x3 + x12 - x13 * x3 + x14)
            + x3 * (x17 * x21 + x18 - x19 * x20)
            - x4 * (x19 * x21 - x20 * (x11 * x15 - x23 * x4) + x22)
        )
    )
    result[0, 1] = numpy.sum(
        -x25 * (x20 * (x3 * x35 - x38 * x4) - 2.0 * x3 * (x3 * x32 - x35 * x4) + x31)
    )
    result[0, 2] = numpy.sum(
        -x25 * (x20 * (x3 * x48 - x4 * x51) - 2.0 * x3 * (x3 * x45 - x4 * x48) + x44)
    )
    result[1, 0] = numpy.sum(
        -x24 * (x20 * (x15 * x57 - x4 * x58) - 2.0 * x3 * (x15 * x56 - x4 * x57) + x55)
    )
    result[1, 1] = numpy.sum(
        -x24 * (x3 * (x18 - x32 * x59 + x35 * x60) - x4 * (x22 - x35 * x59 + x38 * x60))
    )
    result[1, 2] = numpy.sum(x63 * (x3 * x61 - x4 * x62))
    result[2, 0] = numpy.sum(
        -x24 * (x20 * (x15 * x69 - x4 * x70) - 2.0 * x3 * (x15 * x68 - x4 * x69) + x67)
    )
    result[2, 1] = numpy.sum(x63 * (x3 * x72 - x4 * x74))
    result[2, 2] = numpy.sum(x24 * (-x3 * x77 + x4 * x78))
    result[3, 0] = numpy.sum(
        -x25 * (x15 * (x18 - x56 * x59 + x57 * x60) - x4 * (x22 - x57 * x59 + x58 * x60))
    )
    result[3, 1] = numpy.sum(
        -x25
        * (
            x31
            + x52 * (x18 + x30 * x59 - x34 * x60)
            + x55
            - x6 * (x22 + x34 * x59 - x37 * x60)
        )
    )
    result[3, 2] = numpy.sum(x25 * (-x44 + 2.0 * x52 * x61 - x60 * x62))
    result[4, 0] = numpy.sum(x63 * (x15 * (x52 * x68 + x71) - x4 * (x52 * x69 + x73)))
    result[4, 1] = numpy.sum(x24 * (2.0 * x52 * x72 - x60 * x74 - x67))
    result[4, 2] = numpy.sum(x24 * (-x52 * x77 + x6 * x78))
    result[5, 0] = numpy.sum(x25 * (-x15 * x79 + x4 * x80))
    result[5, 1] = numpy.sum(x25 * (-x27 * x79 + x6 * x80))
    result[5, 2] = numpy.sum(
        -x25
        * (
            x44
            + x64 * (x18 + x43 * x75 - x47 * x76)
            + x67
            - x8 * (x22 + x47 * x75 - x50 * x76)
        )
    )
    return result


def coulomb3d_22(ax, da, A, bx, db, B, R):
    """Cartesian (dd) 1-electron Coulomb integral.

    Generated code; DO NOT modify by hand!"""

    result = numpy.zeros((6, 6), dtype=float)

    x0 = ax + bx
    x1 = x0 ** (-1.0)
    x2 = -x1 * (ax * A[0] + bx * B[0])
    x3 = x2 + B[0]
    x4 = x2 + R[0]
    x5 = -x1 * (ax * A[1] + bx * B[1])
    x6 = x5 + R[1]
    x7 = -x1 * (ax * A[2] + bx * B[2])
    x8 = x7 + R[2]
    x9 = x0 * (x4**2 + x6**2 + x8**2)
    x10 = boys(1, x9)
    x11 = x10 * x3
    x12 = boys(2, x9)
    x13 = x12 * x4
    x14 = x11 - x13
    x15 = -x14
    x16 = x2 + A[0]
    x17 = 2.0 * x16
    x18 = boys(0, x9)
    x19 = -x10 * x4 + x18 * x3
    x20 = -x19
    x21 = x1 * (x10 - x12)
    x22 = x1 * (-x10 + x18)
    x23 = -x22
    x24 = 2.0 * x4
    x25 = x12 * x3
    x26 = boys(3, x9)
    x27 = x26 * x4
    x28 = x25 - x27
    x29 = -x15 * x24 + x21 + x23 - x24 * x28
    x30 = 2.0 * x3
    x31 = x14 * x30 + x21 - x24 * x28
    x32 = 2.0 * x1
    x33 = 0.5 * x1
    x34 = x1 * (x12 - x26)
    x35 = boys(4, x9)
    x36 = (
        3.141592653589793
        * da
        * db
        * x1
        * numpy.exp(
            -ax * bx * x1 * ((A[0] - B[0]) ** 2 + (A[1] - B[1]) ** 2 + (A[2] - B[2]) ** 2)
        )
    )
    x37 = 0.3333333333333333 * x36
    x38 = x5 + B[1]
    x39 = -x10 * x6
    x40 = x18 * x38 + x39
    x41 = -x40
    x42 = x12 * x38
    x43 = x26 * x6
    x44 = -x43
    x45 = x42 + x44
    x46 = -x45
    x47 = x4 * x46
    x48 = x10 * x38
    x49 = x12 * x6
    x50 = -x49
    x51 = x48 + x50
    x52 = -x51
    x53 = -x4 * x52
    x54 = x3 * x52
    x55 = x3 * x41 + x53
    x56 = x40 - x48 + x49
    x57 = x1 * x56
    x58 = -x47 + x54
    x59 = -x42 + x43 + x51
    x60 = x1 * x59
    x61 = -x35 * x6
    x62 = x26 * x38 + x61
    x63 = -x62
    x64 = 1.732050807568877 * x37
    x65 = x7 + B[2]
    x66 = -x10 * x8
    x67 = x18 * x65 + x66
    x68 = -x67
    x69 = x12 * x65
    x70 = x26 * x8
    x71 = -x70
    x72 = x69 + x71
    x73 = -x72
    x74 = x4 * x73
    x75 = x10 * x65
    x76 = x12 * x8
    x77 = -x76
    x78 = x75 + x77
    x79 = -x78
    x80 = -x4 * x79
    x81 = x3 * x79
    x82 = x3 * x68 + x80
    x83 = x67 - x75 + x76
    x84 = x1 * x83
    x85 = -x74 + x81
    x86 = -x69 + x70 + x78
    x87 = x1 * x86
    x88 = -x35 * x8
    x89 = x26 * x65 + x88
    x90 = -x89
    x91 = 2.0 * x38
    x92 = 2.0 * x6
    x93 = x21 + x46 * x92
    x94 = -x52 * x91 + x93
    x95 = x34 + x63 * x92
    x96 = -x46 * x91 + x95
    x97 = x41 * x91
    x98 = x52 * x92
    x99 = x23 - x98
    x100 = x33 * (x94 + x97 + x99)
    x101 = x22 + x98
    x102 = x101 - x97
    x103 = x6 * x73
    x104 = x38 * x79
    x105 = -x6 * x79
    x106 = x105 + x38 * x68
    x107 = x1 * (x103 - x104 + x106)
    x108 = -x106
    x109 = -x6 * x73
    x110 = x104 + x109
    x111 = -x110
    x112 = -x6 * x90
    x113 = x112 + x38 * x73
    x114 = -x113
    x115 = 2.0 * x65
    x116 = 2.0 * x8
    x117 = x116 * x73 + x21
    x118 = -x115 * x79 + x117
    x119 = x116 * x90 + x34
    x120 = -x115 * x73 + x119
    x121 = x115 * x68
    x122 = x116 * x79
    x123 = -x122 + x23
    x124 = x33 * (x118 + x121 + x123)
    x125 = x122 + x22
    x126 = -x121 + x125
    x127 = x5 + A[1]
    x128 = x10 * x127
    x129 = x127 * x18 + x39
    x130 = -x128 + x129 + x49
    x131 = -x129
    x132 = x128 + x50
    x133 = -x132
    x134 = x131 * x3 - x133 * x4
    x135 = x133 * x3
    x136 = x12 * x127
    x137 = -x136 - x44
    x138 = x137 * x4
    x139 = x135 - x138
    x140 = x132 - x136 + x43
    x141 = -x127 * x26 - x61
    x142 = 2.0 * x127
    x143 = -x142 * x52 + x93
    x144 = -x142 * x46 + x95
    x145 = x142 * x41
    x146 = x1 * (x143 + x145 + x99)
    x147 = x101 - x145
    x148 = x127 * x79
    x149 = x105 + x127 * x68
    x150 = x1 * (x103 - x148 + x149)
    x151 = -x149
    x152 = -x109 - x148
    x153 = -x112 - x127 * x73
    x154 = -x1 * x56
    x155 = -x1 * x59
    x156 = -x1 * x83
    x157 = -x1 * x86
    x158 = -x118 * x6 + x126 * x127
    x159 = x118 * x127 - x120 * x6
    x160 = x7 + A[2]
    x161 = x10 * x160
    x162 = x160 * x18 + x66
    x163 = -x161 + x162 + x76
    x164 = x1 * x163
    x165 = -x162
    x166 = x161 + x77
    x167 = -x166
    x168 = x165 * x3 - x167 * x4
    x169 = x167 * x3
    x170 = x12 * x160
    x171 = -x170 - x71
    x172 = x171 * x4
    x173 = x169 - x172
    x174 = x166 - x170 + x70
    x175 = x1 * x174
    x176 = -x160 * x26 - x88
    x177 = x171 * x6
    x178 = x167 * x38
    x179 = -x167 * x6
    x180 = x165 * x38 + x179
    x181 = x1 * (x177 - x178 + x180)
    x182 = -x180
    x183 = -x171 * x6
    x184 = x178 + x183
    x185 = -x184
    x186 = -x176 * x6
    x187 = x171 * x38 + x186
    x188 = -x187
    x189 = 2.0 * x160
    x190 = x117 - x189 * x79
    x191 = x119 - x189 * x73
    x192 = x189 * x68
    x193 = x1 * (x123 + x190 + x192)
    x194 = 0.5 * x193
    x195 = x125 - x192
    x196 = -x1 * x163
    x197 = x185 * x92 + x196
    x198 = -x1 * x174
    x199 = x188 * x92 + x198
    x200 = -x190 * x6
    x201 = x195 * x38 + x200
    x202 = -x191 * x6
    x203 = x190 * x38 + x202
    x204 = x118 * x8 - x126 * x160 + 2.0 * x156
    x205 = -x118 * x160 + x120 * x8 + 2.0 * x157
    x206 = -x133 * x142 + x137 * x92 + x21
    x207 = x133 * x92
    x208 = x131 * x142
    x209 = x21 - x45 * x92 + x51 * x91
    x210 = x127 * x167
    x211 = x127 * x165 + x179
    x212 = -x183 - x210
    x213 = x116 * x171 - x167 * x189 + x21
    x214 = x116 * x176 - x171 * x189 + x34
    x215 = x116 * x167
    x216 = x165 * x189
    x217 = x33 * (x213 - x215 + x216 + x23)
    x218 = x215 - x216 + x22
    x219 = -x213 * x6 + x218 * x38
    x220 = x213 * x38 - x214 * x6
    x221 = x156 - x160 * x195 + x190 * x8 + x196
    x222 = x157 - x160 * x190 + x191 * x8 + x198
    x223 = x115 * x78 - x116 * x72 + x21

    # 36 item(s)
    result[0, 0] = numpy.sum(
        -x37
        * (
            x1 * (-x15 * x17 + x17 * x20 + x29)
            - x16
            * (x16 * (-x14 * x24 + x19 * x30 + x22) - x31 * x4 + x32 * (-x11 + x13 + x19))
            + x33 * (-x15 * x30 + x20 * x30 + x29)
            + x4
            * (
                x16 * x31
                + x32 * (x14 - x25 + x27)
                - x4 * (-x24 * (x26 * x3 - x35 * x4) + x28 * x30 + x34)
            )
        )
    )
    result[0, 1] = numpy.sum(
        -x64
        * (
            x1 * (x47 - x54 + x55)
            + x1 * (x16 * x41 - x16 * x52 + x47 + x53)
            - x16 * (-2.0 * x16 * x55 + x24 * x58 + x57)
            + x4 * (-2.0 * x16 * x58 + x24 * (x3 * x46 - x4 * x63) + x60)
        )
    )
    result[0, 2] = numpy.sum(
        -x64
        * (
            x1 * (x74 - x81 + x82)
            + x1 * (x16 * x68 - x16 * x79 + x74 + x80)
            - x16 * (-2.0 * x16 * x82 + x24 * x85 + x84)
            + x4 * (-2.0 * x16 * x85 + x24 * (x3 * x73 - x4 * x90) + x87)
        )
    )
    result[0, 3] = numpy.sum(
        x37 * (-x100 + x102 * x16**2 - 2.0 * x16 * x4 * x94 + x4**2 * x96)
    )
    result[0, 4] = numpy.sum(
        -x64
        * (x107 - 2.0 * x16 * (x108 * x16 - x111 * x4) + x24 * (x111 * x16 - x114 * x4))
    )
    result[0, 5] = numpy.sum(
        x37 * (-2.0 * x118 * x16 * x4 + x120 * x4**2 - x124 + x126 * x16**2)
    )
    result[1, 0] = numpy.sum(
        -x64
        * (
            -x16 * (x1 * x130 - 2.0 * x134 * x3 + x139 * x24)
            + x32 * (x134 - x135 + x138)
            + x4 * (x1 * x140 - 2.0 * x139 * x3 + x24 * (x137 * x3 - x141 * x4))
        )
    )
    result[1, 1] = numpy.sum(
        -0.5
        * x36
        * (
            x146
            + 2.0 * x16 * (x143 * x4 - x147 * x3)
            + 2.0 * x4 * (x143 * x3 - x144 * x4)
        )
    )
    result[1, 2] = numpy.sum(
        -x36
        * (x150 - 2.0 * x16 * (x151 * x3 - x152 * x4) + x24 * (x152 * x3 - x153 * x4))
    )
    result[1, 3] = numpy.sum(
        -x64
        * (
            x16 * (-x102 * x127 + 2.0 * x154 + x6 * x94)
            - x4 * (-x127 * x94 + 2.0 * x155 + x6 * x96)
        )
    )
    result[1, 4] = numpy.sum(
        -x36
        * (
            x16 * (-x108 * x142 + x111 * x92 + x156)
            - x4 * (-x111 * x142 + x114 * x92 + x157)
        )
    )
    result[1, 5] = numpy.sum(x64 * (x158 * x16 - x159 * x4))
    result[2, 0] = numpy.sum(
        -x64
        * (
            -x16 * (x164 - 2.0 * x168 * x3 + x173 * x24)
            + x32 * (x168 - x169 + x172)
            + x4 * (-2.0 * x173 * x3 + x175 + x24 * (x171 * x3 - x176 * x4))
        )
    )
    result[2, 1] = numpy.sum(
        -x36
        * (-2.0 * x16 * (x182 * x3 - x185 * x4) + x181 + x24 * (x185 * x3 - x188 * x4))
    )
    result[2, 2] = numpy.sum(
        -x36 * (x16 * (x190 * x4 - x195 * x3) + x194 + x4 * (x190 * x3 - x191 * x4))
    )
    result[2, 3] = numpy.sum(x64 * (x16 * (x182 * x91 - x197) - x4 * (x185 * x91 - x199)))
    result[2, 4] = numpy.sum(x36 * (x16 * x201 - x203 * x4))
    result[2, 5] = numpy.sum(x64 * (-x16 * x204 + x205 * x4))
    result[3, 0] = numpy.sum(
        -x37
        * (
            x3 * (x206 * x4 - x3 * (x207 - x208 + x22))
            + x33 * (x206 - x207 + x208 + x23)
            + x4 * (x206 * x3 - x4 * (-x137 * x142 + x141 * x92 + x34))
        )
    )
    result[3, 1] = numpy.sum(
        x64
        * (
            x3 * (x1 * x130 + x127 * x147 - x143 * x6 - x154)
            - x4 * (x1 * x140 + x127 * x143 - x144 * x6 - x155)
        )
    )
    result[3, 2] = numpy.sum(
        -x64
        * (
            x3 * (-x142 * x151 + x152 * x92 + x156)
            - x4 * (-x142 * x152 + x153 * x92 + x157)
        )
    )
    result[3, 3] = numpy.sum(
        -x37
        * (
            x100
            - x127 * (x127 * (x22 + x40 * x91 - x51 * x92) - x209 * x6 + 2.0 * x57)
            + x146
            + x6 * (x127 * x209 - x6 * (x34 + x45 * x91 - x62 * x92) + 2.0 * x60)
        )
    )
    result[3, 4] = numpy.sum(
        -x64
        * (
            x107
            - x127 * (-2.0 * x106 * x127 + x110 * x92 + x84)
            + x150
            + x6 * (-2.0 * x110 * x127 + x113 * x92 + x87)
        )
    )
    result[3, 5] = numpy.sum(x37 * (-x124 + x127 * x158 - x159 * x6))
    result[4, 0] = numpy.sum(
        -x64
        * (
            x1 * (x177 - x210 + x211)
            + x24 * (x212 * x3 + x4 * (x127 * x171 + x186))
            + 2.0 * x3 * (x211 * x3 + x212 * x4)
        )
    )
    result[4, 1] = numpy.sum(
        x36 * (x3 * (x142 * x182 - x197) - x4 * (x142 * x185 - x199))
    )
    result[4, 2] = numpy.sum(
        x36 * (x3 * (x127 * x195 + x200) - x4 * (x127 * x190 + x202))
    )
    result[4, 3] = numpy.sum(
        -x64
        * (
            -x127 * (x164 - 2.0 * x180 * x38 + x184 * x92)
            + 2.0 * x181
            + x6 * (x175 - 2.0 * x184 * x38 + x187 * x92)
        )
    )
    result[4, 4] = numpy.sum(x36 * (x127 * x201 - x194 - x203 * x6))
    result[4, 5] = numpy.sum(x64 * (-x127 * x204 + x205 * x6))
    result[5, 0] = numpy.sum(
        x37 * (-2.0 * x213 * x3 * x4 + x214 * x4**2 - x217 + x218 * x3**2)
    )
    result[5, 1] = numpy.sum(x64 * (x219 * x3 - x220 * x4))
    result[5, 2] = numpy.sum(x64 * (-x221 * x3 + x222 * x4))
    result[5, 3] = numpy.sum(x37 * (-x217 + x219 * x38 - x220 * x6))
    result[5, 4] = numpy.sum(x64 * (-x221 * x38 + x222 * x6))
    result[5, 5] = numpy.sum(
        -x37
        * (
            x124
            - x160 * (x160 * (x115 * x67 - x116 * x78 + x22) - x223 * x8 + 2.0 * x84)
            + x193
            + x8 * (x160 * x223 - x8 * (x115 * x72 - x116 * x89 + x34) + 2.0 * x87)
        )
    )
    return result


def coulomb3d_23(ax, da, A, bx, db, B, R):
    """Cartesian (df) 1-electron Coulomb integral.

    Generated code; DO NOT modify by hand!"""

    result = numpy.zeros((6, 10), dtype=float)

    x0 = ax + bx
    x1 = x0 ** (-1.0)
    x2 = -x1 * (ax * A[0] + bx * B[0])
    x3 = x2 + B[0]
    x4 = x2 + R[0]
    x5 = -x1 * (ax * A[1] + bx * B[1])
    x6 = x5 + R[1]
    x7 = -x1 * (ax * A[2] + bx * B[2])
    x8 = x7 + R[2]
    x9 = x0 * (x4**2 + x6**2 + x8**2)
    x10 = boys(1, x9)
    x11 = boys(0, x9)
    x12 = x1 * (-x10 + x11)
    x13 = -x10 * x4 + x11 * x3
    x14 = 2.0 * x3
    x15 = -x13 * x14
    x16 = x10 * x3
    x17 = boys(2, x9)
    x18 = x17 * x4
    x19 = x16 - x18
    x20 = -x19
    x21 = 2.0 * x4
    x22 = x20 * x21
    x23 = x12 - x15 + x22
    x24 = x1 * (x10 - x17)
    x25 = x14 * x20
    x26 = x17 * x3
    x27 = boys(3, x9)
    x28 = x27 * x4
    x29 = x26 - x28
    x30 = -2.0 * x29
    x31 = x30 * x4
    x32 = x24 - x25 + x31
    x33 = x1 * (x17 - x27)
    x34 = x27 * x3
    x35 = boys(4, x9)
    x36 = x34 - x35 * x4
    x37 = -x21 * x36 - x3 * x30 + x33
    x38 = x13 - x16 + x18
    x39 = 2.0 * x1
    x40 = x19 - x26 + x28
    x41 = -x32 * x4 + x37 * x4 + x38 * x39 - x39 * x40
    x42 = x2 + A[0]
    x43 = x14 * x19 - x21 * x29 + x24
    x44 = x14 * x29 - x21 * x36 + x33
    x45 = -x3 * x43 - x39 * x40 + x4 * x44
    x46 = 2.0 * x42
    x47 = -x12
    x48 = 3.0 * x1
    x49 = x1 * (x27 - x35)
    x50 = boys(5, x9)
    x51 = -x24
    x52 = (
        3.141592653589793
        * da
        * db
        * numpy.exp(
            -ax * bx * x1 * ((A[0] - B[0]) ** 2 + (A[1] - B[1]) ** 2 + (A[2] - B[2]) ** 2)
        )
    )
    x53 = x1 * x52
    x54 = 2.23606797749979 * x53
    x55 = 0.03333333333333333 * x54
    x56 = x5 + B[1]
    x57 = x10 * x56
    x58 = x17 * x6
    x59 = -x58
    x60 = x57 + x59
    x61 = -x60
    x62 = x3 * x61
    x63 = x17 * x56
    x64 = x27 * x6
    x65 = -x64
    x66 = x63 + x65
    x67 = -x66
    x68 = x4 * x67
    x69 = x62 - x68
    x70 = -x69
    x71 = -x10 * x6
    x72 = x11 * x56 + x71
    x73 = -x72
    x74 = x3 * x73 - x4 * x61
    x75 = -x74
    x76 = x60 - x63 + x64
    x77 = -x1 * x76
    x78 = -x57 + x58 + x72
    x79 = -x1 * x78
    x80 = -x79
    x81 = x3 * x67
    x82 = x27 * x56
    x83 = x35 * x6
    x84 = -x83
    x85 = x82 + x84
    x86 = -x85
    x87 = x4 * x86
    x88 = x81 - x87
    x89 = -x21 * x70 - x21 * x88 + x77 + x80
    x90 = x1 * x78
    x91 = x1 * x76
    x92 = -x21 * x88 + 2.0 * x3 * x69 - x91
    x93 = 0.5 * x1
    x94 = x66 - x82 + x83
    x95 = x1 * x94
    x96 = -x50 * x6
    x97 = x35 * x56 + x96
    x98 = -x97
    x99 = 0.3333333333333333 * x53
    x100 = x7 + B[2]
    x101 = x10 * x100
    x102 = x17 * x8
    x103 = -x102
    x104 = x101 + x103
    x105 = -x104
    x106 = x105 * x3
    x107 = x100 * x17
    x108 = x27 * x8
    x109 = -x108
    x110 = x107 + x109
    x111 = -x110
    x112 = x111 * x4
    x113 = x106 - x112
    x114 = -x113
    x115 = -x10 * x8
    x116 = x100 * x11 + x115
    x117 = -x116
    x118 = -x105 * x4 + x117 * x3
    x119 = -x118
    x120 = x104 - x107 + x108
    x121 = -x1 * x120
    x122 = -x101 + x102 + x116
    x123 = -x1 * x122
    x124 = -x123
    x125 = x111 * x3
    x126 = x100 * x27
    x127 = x35 * x8
    x128 = -x127
    x129 = x126 + x128
    x130 = -x129
    x131 = x130 * x4
    x132 = x125 - x131
    x133 = -x114 * x21 + x121 + x124 - x132 * x21
    x134 = x1 * x122
    x135 = x1 * x120
    x136 = 2.0 * x113 * x3 - x132 * x21 - x135
    x137 = x110 - x126 + x127
    x138 = x1 * x137
    x139 = -x50 * x8
    x140 = x100 * x35 + x139
    x141 = -x140
    x142 = 2.0 * x56
    x143 = x142 * x73
    x144 = 2.0 * x6
    x145 = x144 * x61
    x146 = x12 + x145
    x147 = -x143 + x146
    x148 = 2.0 * x67
    x149 = x144 * x86 + x33
    x150 = -x148 * x56 + x149
    x151 = x150 * x4
    x152 = x142 * x61
    x153 = x148 * x6
    x154 = x153 + x24
    x155 = -x152 + x154
    x156 = -x155 * x4
    x157 = x155 * x3
    x158 = x147 * x3 + x156
    x159 = -x145 + x47
    x160 = x143 + x155 + x159
    x161 = x1 * x160
    x162 = -x151 + x157
    x163 = -x153 + x51
    x164 = x150 + x152 + x163
    x165 = x1 * x164
    x166 = x144 * x98 + x49
    x167 = -x142 * x86 + x166
    x168 = 0.1666666666666667 * x53
    x169 = -x105 * x6
    x170 = x117 * x56 + x169
    x171 = -x170
    x172 = x111 * x56
    x173 = x130 * x6
    x174 = -x173
    x175 = x172 + x174
    x176 = -x175
    x177 = x176 * x4
    x178 = x105 * x56
    x179 = x111 * x6
    x180 = -x179
    x181 = x178 + x180
    x182 = -x181
    x183 = -x182 * x4
    x184 = x182 * x3
    x185 = x171 * x3 + x183
    x186 = x170 - x178 + x179
    x187 = x1 * x186
    x188 = -x177 + x184
    x189 = -x172 + x173 + x181
    x190 = x1 * x189
    x191 = -x141 * x6
    x192 = x130 * x56 + x191
    x193 = -x192
    x194 = 1.732050807568877
    x195 = x194 * x99
    x196 = 2.0 * x100
    x197 = x117 * x196
    x198 = 2.0 * x8
    x199 = x105 * x198
    x200 = x12 + x199
    x201 = -x197 + x200
    x202 = 2.0 * x111
    x203 = x130 * x198 + x33
    x204 = -x100 * x202 + x203
    x205 = x204 * x4
    x206 = x105 * x196
    x207 = x202 * x8
    x208 = x207 + x24
    x209 = -x206 + x208
    x210 = -x209 * x4
    x211 = x209 * x3
    x212 = x201 * x3 + x210
    x213 = -x199 + x47
    x214 = x197 + x209 + x213
    x215 = x1 * x214
    x216 = -x205 + x211
    x217 = -x207 + x51
    x218 = x204 + x206 + x217
    x219 = x1 * x218
    x220 = x141 * x198 + x49
    x221 = -x130 * x196 + x220
    x222 = x150 * x6 + 2.0 * x77
    x223 = -x155 * x56 + x222
    x224 = -x1 * x94
    x225 = x167 * x6 + 2.0 * x224
    x226 = -x150 * x56 + x225
    x227 = x147 * x56
    x228 = x155 * x6
    x229 = 2.0 * x79
    x230 = -x228 - x229
    x231 = x1 * (x223 + x227 + x230)
    x232 = x228 + x229
    x233 = -x227 + x232
    x234 = 0.06666666666666667 * x54
    x235 = x121 + x144 * x176
    x236 = -x142 * x182 + x235
    x237 = -x1 * x137
    x238 = x144 * x193 + x237
    x239 = -x142 * x176 + x238
    x240 = x142 * x171
    x241 = x144 * x182
    x242 = x124 - x241
    x243 = x93 * (x236 + x240 + x242)
    x244 = x123 + x241
    x245 = -x240 + x244
    x246 = x209 * x56
    x247 = -x204 * x6
    x248 = x246 + x247
    x249 = -x248
    x250 = -x221 * x6
    x251 = x204 * x56 + x250
    x252 = -x251
    x253 = x204 * x6
    x254 = -x209 * x6
    x255 = x201 * x56 + x254
    x256 = x1 * (-x246 + x253 + x255)
    x257 = -x255
    x258 = 2.0 * x121 + x204 * x8
    x259 = -x100 * x209 + x258
    x260 = x221 * x8 + 2.0 * x237
    x261 = -x100 * x204 + x260
    x262 = x100 * x201
    x263 = x209 * x8
    x264 = 2.0 * x123
    x265 = -x263 - x264
    x266 = x1 * (x259 + x262 + x265)
    x267 = 0.5 * x266
    x268 = x263 + x264
    x269 = -x262 + x268
    x270 = x5 + A[1]
    x271 = x10 * x270
    x272 = x11 * x270 + x71
    x273 = -x271 + x272 + x58
    x274 = -x272
    x275 = x271 + x59
    x276 = -x275
    x277 = x274 * x3 - x276 * x4
    x278 = x276 * x3
    x279 = x17 * x270
    x280 = x279 + x65
    x281 = -x280
    x282 = x281 * x4
    x283 = x278 - x282
    x284 = x275 - x279 + x64
    x285 = x281 * x3
    x286 = x27 * x270
    x287 = -x286 - x84
    x288 = x287 * x4
    x289 = x285 - x288
    x290 = -x1 * x284 - x21 * x289 + 2.0 * x283 * x3
    x291 = x280 - x286 + x83
    x292 = -x270 * x35 - x96
    x293 = -x1 * x284
    x294 = -x1 * x273
    x295 = -x294
    x296 = -x283
    x297 = 1.5 * x1
    x298 = 3.872983346207417 * x53
    x299 = 0.06666666666666667 * x298
    x300 = -x148 * x270 + x149
    x301 = x300 * x4
    x302 = 2.0 * x270
    x303 = x302 * x61
    x304 = x154 - x303
    x305 = x3 * x304
    x306 = x302 * x73
    x307 = x146 - x306
    x308 = x3 * x307 - x304 * x4
    x309 = x159 + x304 + x306
    x310 = -x301 + x305
    x311 = 0.5 * x42
    x312 = x163 + x300 + x303
    x313 = x166 - x302 * x86
    x314 = x105 * x270
    x315 = x117 * x270 + x169
    x316 = x179 - x314 + x315
    x317 = -x315
    x318 = x180 + x314
    x319 = -x318
    x320 = x3 * x317 - x319 * x4
    x321 = x3 * x319
    x322 = x111 * x270
    x323 = -x174 - x322
    x324 = x323 * x4
    x325 = x321 - x324
    x326 = x173 + x318 - x322
    x327 = -x130 * x270 - x191
    x328 = -x155 * x270 + x222
    x329 = -x150 * x270 + x225
    x330 = x147 * x270
    x331 = x230 + x328 + x330
    x332 = x232 - x330
    x333 = -x182 * x302 + x235
    x334 = -x176 * x302 + x238
    x335 = x171 * x302
    x336 = x1 * (x242 + x333 + x335)
    x337 = x244 - x335
    x338 = x209 * x270
    x339 = -x247 - x338
    x340 = -x204 * x270 - x250
    x341 = x201 * x270 + x254
    x342 = x1 * (x253 - x338 + x341)
    x343 = -x341
    x344 = -x1 * x160
    x345 = -x1 * x164
    x346 = 0.03333333333333333 * x298
    x347 = -x1 * x186
    x348 = -x1 * x189
    x349 = -x1 * x214
    x350 = -x1 * x218
    x351 = x168 * x194
    x352 = -x259 * x6 + x269 * x270
    x353 = x259 * x270 - x261 * x6
    x354 = x7 + A[2]
    x355 = x10 * x354
    x356 = x11 * x354 + x115
    x357 = x102 - x355 + x356
    x358 = x1 * x357
    x359 = -x356
    x360 = x103 + x355
    x361 = -x360
    x362 = x3 * x359 - x361 * x4
    x363 = x3 * x361
    x364 = x17 * x354
    x365 = x109 + x364
    x366 = -x365
    x367 = x366 * x4
    x368 = x363 - x367
    x369 = x108 + x360 - x364
    x370 = x1 * x369
    x371 = x3 * x366
    x372 = x27 * x354
    x373 = -x128 - x372
    x374 = x373 * x4
    x375 = x371 - x374
    x376 = -x21 * x375 + 2.0 * x3 * x368 - x370
    x377 = x127 + x365 - x372
    x378 = x1 * x377
    x379 = -x139 - x35 * x354
    x380 = -x1 * x369
    x381 = -x1 * x357
    x382 = -x381
    x383 = -x368
    x384 = x366 * x6
    x385 = x361 * x56
    x386 = -x361 * x6
    x387 = x359 * x56 + x386
    x388 = x384 - x385 + x387
    x389 = x1 * x388
    x390 = -x387
    x391 = -x384
    x392 = x385 + x391
    x393 = -x392
    x394 = x3 * x390 - x393 * x4
    x395 = x3 * x393
    x396 = x366 * x56
    x397 = x373 * x6
    x398 = -x397
    x399 = x396 + x398
    x400 = -x399
    x401 = x4 * x400
    x402 = x395 - x401
    x403 = x392 - x396 + x397
    x404 = x1 * x403
    x405 = -x379 * x6
    x406 = x373 * x56 + x405
    x407 = -x406
    x408 = -x202 * x354 + x203
    x409 = x4 * x408
    x410 = 2.0 * x354
    x411 = x105 * x410
    x412 = x208 - x411
    x413 = x3 * x412
    x414 = x117 * x410
    x415 = x200 - x414
    x416 = x3 * x415 - x4 * x412
    x417 = x213 + x412 + x414
    x418 = x1 * x417
    x419 = -x409 + x413
    x420 = x217 + x408 + x411
    x421 = x1 * x420
    x422 = -x130 * x410 + x220
    x423 = x144 * x400 + x380
    x424 = -x142 * x393 + x423
    x425 = -x1 * x377
    x426 = x144 * x407 + x425
    x427 = -x142 * x400 + x426
    x428 = x142 * x390
    x429 = x144 * x393
    x430 = x382 - x429
    x431 = x424 + x428 + x430
    x432 = x381 + x429
    x433 = -x428 + x432
    x434 = x412 * x56
    x435 = -x408 * x6
    x436 = x434 + x435
    x437 = -x436
    x438 = -x422 * x6
    x439 = x408 * x56 + x438
    x440 = -x439
    x441 = x408 * x6
    x442 = -x412 * x6
    x443 = x415 * x56 + x442
    x444 = x1 * (-x434 + x441 + x443)
    x445 = -x443
    x446 = -x209 * x354 + x258
    x447 = -x204 * x354 + x260
    x448 = x201 * x354
    x449 = x265 + x446 + x448
    x450 = x449 * x93
    x451 = x268 - x448
    x452 = -x388 * x39 + x424 * x6
    x453 = -x39 * x403 + x427 * x6
    x454 = -x1 * x417
    x455 = x144 * x437 + x454
    x456 = -x1 * x420
    x457 = x144 * x440 + x456
    x458 = -x446 * x6
    x459 = x451 * x56 + x458
    x460 = -x447 * x6
    x461 = x446 * x56 + x460
    x462 = x198 * x259 - x269 * x410 + 3.0 * x349
    x463 = x198 * x261 - x259 * x410 + 3.0 * x350
    x464 = x144 * x287 - x281 * x302 + x33
    x465 = x4 * x464
    x466 = x276 * x302
    x467 = x144 * x281
    x468 = x24 - x466 + x467
    x469 = x3 * x468
    x470 = x274 * x302
    x471 = x144 * x276
    x472 = x3 * (x12 - x470 + x471) - x4 * x468
    x473 = -x465 + x469
    x474 = 0.5 * x3
    x475 = -x270 * x304 + x293 + x300 * x6 + x77
    x476 = x270 * x307
    x477 = x304 * x6
    x478 = x121 + x144 * x323 - x302 * x319
    x479 = x144 * x319
    x480 = x302 * x317
    x481 = x142 * x60 - x144 * x66 + x24
    x482 = x142 * x66 - x144 * x85 + x33
    x483 = -x481 * x56 + x482 * x6 - 2.0 * x91
    x484 = -x135 - x144 * x175 + 2.0 * x181 * x56
    x485 = x270 * x361
    x486 = x270 * x359 + x386
    x487 = x391 + x485
    x488 = -x487
    x489 = -x3 * x486 - x4 * x488
    x490 = x3 * x488
    x491 = x270 * x366
    x492 = -x398 - x491
    x493 = x4 * x492
    x494 = x490 - x493
    x495 = -x302 * x393 + x423
    x496 = x302 * x390
    x497 = x270 * x412
    x498 = -x435 - x497
    x499 = x270 * x415 + x442
    x500 = -x144 * x399 - x370 + 2.0 * x392 * x56
    x501 = x198 * x373 + x33 - x366 * x410
    x502 = x4 * x501
    x503 = x361 * x410
    x504 = x198 * x366
    x505 = x24 - x503 + x504
    x506 = x3 * x505
    x507 = x359 * x410
    x508 = x198 * x361
    x509 = x12 - x507 + x508
    x510 = x3 * x509 - x4 * x505
    x511 = x47 + x505 + x507 - x508
    x512 = x1 * x511
    x513 = -x502 + x506
    x514 = x501 + x503 - x504 + x51
    x515 = x1 * x514
    x516 = x198 * x379 - x373 * x410 + x49
    x517 = x505 * x56
    x518 = -x501 * x6 + x517
    x519 = -x518
    x520 = x501 * x56 - x516 * x6
    x521 = -x520
    x522 = -x505 * x6 + x509 * x56
    x523 = x1 * (x501 * x6 - x517 + x522)
    x524 = -x522
    x525 = x121 - x354 * x412 + x380 + x408 * x8
    x526 = x237 - x354 * x408 + x422 * x8 + x425
    x527 = x354 * x415
    x528 = x412 * x8
    x529 = x93 * (x124 + x382 + x525 + x527 - x528)
    x530 = x123 + x381 - x527 + x528
    x531 = -x525 * x6 + x530 * x56
    x532 = x525 * x56 - x526 * x6
    x533 = x198 * x446 + x349 - x410 * x451 + 2.0 * x454
    x534 = x198 * x447 + x350 - x410 * x446 + 2.0 * x456
    x535 = x104 * x196 - x110 * x198 + x24
    x536 = x110 * x196 - x129 * x198 + x33
    x537 = -x100 * x535 - 2.0 * x135 + x536 * x8

    # 60 item(s)
    result[0, 0] = numpy.sum(
        -x55
        * (
            x1 * (x23 * x3 - x3 * x32 + x41)
            + x4
            * (
                2.0
                * x4
                * (
                    x3 * x44
                    + x39 * (x29 - x34 + x35 * x4)
                    - x4 * (x14 * x36 - x21 * (x3 * x35 - x4 * x50) + x49)
                )
                + x45 * x46
                + x48 * (x25 - x31 + x37 + x51)
            )
            + x42
            * (
                2.0 * x4 * x45
                + x46 * (x3 * (x12 + x13 * x14 - x19 * x21) + x38 * x39 - x4 * x43)
                - x48 * (x15 - x22 + x32 + x47)
            )
            + x48 * (x23 * x42 - x32 * x42 + x41)
        )
    )
    result[0, 1] = numpy.sum(
        -x99
        * (
            x1 * (-x46 * x70 + x46 * x75 + x89)
            + x4
            * (
                x39 * (x69 - x81 + x87)
                + x4 * (x21 * (x3 * x86 - x4 * x98) - 2.0 * x3 * x88 + x95)
                + x42 * x92
            )
            + x42
            * (
                -x39 * (-x62 + x68 + x74)
                + x4 * x92
                + x42 * (x21 * x69 - 2.0 * x3 * x74 + x90)
            )
            + x93 * (-x14 * x70 + x14 * x75 + x89)
        )
    )
    result[0, 2] = numpy.sum(
        -x99
        * (
            x1 * (-x114 * x46 + x119 * x46 + x133)
            + x4
            * (
                x136 * x42
                + x39 * (x113 - x125 + x131)
                + x4 * (-2.0 * x132 * x3 + x138 + x21 * (x130 * x3 - x141 * x4))
            )
            + x42
            * (
                x136 * x4
                - x39 * (-x106 + x112 + x118)
                + x42 * (x113 * x21 - 2.0 * x118 * x3 + x134)
            )
            + x93 * (-x114 * x14 + x119 * x14 + x133)
        )
    )
    result[0, 3] = numpy.sum(
        -x168
        * (
            x1 * (x151 - x157 + x158)
            + x1 * (x147 * x42 + x151 - x155 * x42 + x156)
            + x4 * (-2.0 * x162 * x42 + x165 + x21 * (x150 * x3 - x167 * x4))
            - x42 * (-2.0 * x158 * x42 + x161 + x162 * x21)
        )
    )
    result[0, 4] = numpy.sum(
        -x195
        * (
            x1 * (x177 - x184 + x185)
            + x1 * (x171 * x42 + x177 - x182 * x42 + x183)
            + x4 * (-2.0 * x188 * x42 + x190 + x21 * (x176 * x3 - x193 * x4))
            - x42 * (-2.0 * x185 * x42 + x187 + x188 * x21)
        )
    )
    result[0, 5] = numpy.sum(
        -x168
        * (
            x1 * (x205 - x211 + x212)
            + x1 * (x201 * x42 + x205 - x209 * x42 + x210)
            + x4 * (x21 * (x204 * x3 - x221 * x4) - 2.0 * x216 * x42 + x219)
            - x42 * (x21 * x216 - 2.0 * x212 * x42 + x215)
        )
    )
    result[0, 6] = numpy.sum(
        0.5
        * x234
        * (-4.0 * x223 * x4 * x42 + 2.0 * x226 * x4**2 - x231 + 2.0 * x233 * x42**2)
    )
    result[0, 7] = numpy.sum(
        x99 * (-2.0 * x236 * x4 * x42 + x239 * x4**2 - x243 + x245 * x42**2)
    )
    result[0, 8] = numpy.sum(
        0.5
        * x99
        * (-4.0 * x249 * x4 * x42 + 2.0 * x252 * x4**2 - x256 + 2.0 * x257 * x42**2)
    )
    result[0, 9] = numpy.sum(
        x234 * (-2.0 * x259 * x4 * x42 + x261 * x4**2 - x267 + x269 * x42**2)
    )
    result[1, 0] = numpy.sum(
        x299
        * (
            x297 * (x14 * x277 + x14 * x296 + x21 * x289 + x21 * x296 - x293 - x295)
            - x4
            * (
                x290 * x3
                + x39 * (x283 - x285 + x288)
                + x4 * (x1 * x291 + x21 * (x287 * x3 - x292 * x4) - 2.0 * x289 * x3)
            )
            + x42
            * (
                -x290 * x4
                - x3 * (x1 * x273 + x21 * x283 - 2.0 * x277 * x3)
                + x39 * (x277 - x278 + x282)
            )
        )
    )
    result[1, 1] = numpy.sum(
        -0.5
        * x195
        * (
            2.0 * x1 * (x301 - x305 + x308)
            - 2.0 * x311 * (x1 * x309 + x21 * x310 - 2.0 * x3 * x308)
            + x4 * (x1 * x312 + x21 * (x3 * x300 - x313 * x4) - 2.0 * x3 * x310)
        )
    )
    result[1, 2] = numpy.sum(
        -x195
        * (
            x39 * (x320 - x321 + x324)
            + x4 * (x1 * x326 + x21 * (x3 * x323 - x327 * x4) - 2.0 * x3 * x325)
            - x42 * (x1 * x316 + x21 * x325 - 2.0 * x3 * x320)
        )
    )
    result[1, 3] = numpy.sum(
        -x195
        * (x331 * x93 + x4 * (x3 * x328 - x329 * x4) - x42 * (x3 * x332 - x328 * x4))
    )
    result[1, 4] = numpy.sum(
        -0.5
        * x53
        * (
            x336
            + 2.0 * x4 * (x3 * x333 - x334 * x4)
            - 2.0 * x42 * (x3 * x337 - x333 * x4)
        )
    )
    result[1, 5] = numpy.sum(
        -0.5
        * x195
        * (
            x342
            + 2.0 * x4 * (x3 * x339 - x340 * x4)
            - 2.0 * x42 * (x3 * x343 - x339 * x4)
        )
    )
    result[1, 6] = numpy.sum(
        x346
        * (
            x4 * (x144 * x226 - x223 * x302 + 3.0 * x345)
            - x42 * (x144 * x223 - x233 * x302 + 3.0 * x344)
        )
    )
    result[1, 7] = numpy.sum(
        x195
        * (
            x4 * (-x236 * x270 + x239 * x6 + 2.0 * x348)
            - x42 * (x236 * x6 - x245 * x270 + 2.0 * x347)
        )
    )
    result[1, 8] = numpy.sum(
        x351
        * (
            x4 * (x144 * x252 - x249 * x302 + x350)
            - x42 * (x144 * x249 - x257 * x302 + x349)
        )
    )
    result[1, 9] = numpy.sum(x299 * (x352 * x42 - x353 * x4))
    result[2, 0] = numpy.sum(
        x299
        * (
            x297 * (x14 * x362 + x14 * x383 + x21 * x375 + x21 * x383 - x380 - x382)
            - x4
            * (
                x3 * x376
                + x39 * (x368 - x371 + x374)
                + x4 * (x21 * (x3 * x373 - x379 * x4) - 2.0 * x3 * x375 + x378)
            )
            + x42
            * (
                -x3 * (x21 * x368 - 2.0 * x3 * x362 + x358)
                - x376 * x4
                + x39 * (x362 - x363 + x367)
            )
        )
    )
    result[2, 1] = numpy.sum(
        -x195
        * (
            x39 * (x394 - x395 + x401)
            + x4 * (x21 * (x3 * x400 - x4 * x407) - 2.0 * x3 * x402 + x404)
            - x42 * (x21 * x402 - 2.0 * x3 * x394 + x389)
        )
    )
    result[2, 2] = numpy.sum(
        -0.5
        * x195
        * (
            2.0 * x1 * (x409 - x413 + x416)
            - 2.0 * x311 * (x21 * x419 - 2.0 * x3 * x416 + x418)
            + x4 * (x21 * (x3 * x408 - x4 * x422) - 2.0 * x3 * x419 + x421)
        )
    )
    result[2, 3] = numpy.sum(
        -x195
        * (x4 * (x3 * x424 - x4 * x427) - x42 * (x3 * x433 - x4 * x424) + x431 * x93)
    )
    result[2, 4] = numpy.sum(
        -0.5
        * x53
        * (
            2.0 * x4 * (x3 * x437 - x4 * x440)
            - 2.0 * x42 * (x3 * x445 - x4 * x437)
            + x444
        )
    )
    result[2, 5] = numpy.sum(
        -x195 * (x4 * (x3 * x446 - x4 * x447) - x42 * (x3 * x451 - x4 * x446) + x450)
    )
    result[2, 6] = numpy.sum(
        x299 * (-x4 * (x424 * x56 - x453) + x42 * (x433 * x56 - x452))
    )
    result[2, 7] = numpy.sum(
        x351 * (-x4 * (x142 * x437 - x457) + x42 * (x142 * x445 - x455))
    )
    result[2, 8] = numpy.sum(x195 * (-x4 * x461 + x42 * x459))
    result[2, 9] = numpy.sum(x346 * (x4 * x463 - x42 * x462))
    result[3, 0] = numpy.sum(
        -0.5
        * x234
        * (
            2.0 * x1 * (x465 - x469 + x472)
            + x4
            * (
                x1 * (x464 + x466 - x467 + x51)
                + x21 * (x3 * x464 - x4 * (x144 * x292 - x287 * x302 + x49))
                - 2.0 * x3 * x473
            )
            - 2.0
            * x474
            * (x1 * (x468 + x47 + x470 - x471) + x21 * x473 - 2.0 * x3 * x472)
        )
    )
    result[3, 1] = numpy.sum(
        -x99
        * (
            -x3 * (x3 * (x294 - x476 + x477 + x79) - x4 * x475)
            + x4 * (x3 * x475 + x4 * (x1 * x291 - x224 + x270 * x300 - x313 * x6))
            + x93 * (x295 + x475 + x476 - x477 + x80)
        )
    )
    result[3, 2] = numpy.sum(
        -x99
        * (
            -x3 * (x3 * (x123 + x479 - x480) - x4 * x478)
            + x4 * (x3 * x478 - x4 * (x144 * x327 + x237 - x302 * x323))
            + x93 * (x124 + x478 - x479 + x480)
        )
    )
    result[3, 3] = numpy.sum(
        -x168
        * (
            x3 * (x144 * x328 - x302 * x332 - x309 * x39 + x344)
            - x4 * (x144 * x329 - x302 * x328 - x312 * x39 + x345)
        )
    )
    result[3, 4] = numpy.sum(
        x195
        * (
            x3 * (x1 * x316 + x270 * x337 - x333 * x6 - x347)
            - x4 * (x1 * x326 + x270 * x333 - x334 * x6 - x348)
        )
    )
    result[3, 5] = numpy.sum(
        -x168
        * (
            x3 * (x144 * x339 - x302 * x343 + x349)
            - x4 * (x144 * x340 - x302 * x339 + x350)
        )
    )
    result[3, 6] = numpy.sum(
        -x55
        * (
            x231
            + x270
            * (
                -3.0 * x161
                + x302 * (-x481 * x6 + x56 * (x12 + x142 * x72 - x144 * x60) + 2.0 * x90)
                + 2.0 * x483 * x6
            )
            + x331 * x48
            + x6
            * (
                3.0 * x165
                + x302 * x483
                + 2.0
                * x6
                * (x482 * x56 - x6 * (x142 * x85 - x144 * x97 + x49) + 2.0 * x95)
            )
        )
    )
    result[3, 7] = numpy.sum(
        -x99
        * (
            x243
            + x270
            * (-2.0 * x187 + x270 * (x134 + x144 * x181 - 2.0 * x170 * x56) + x484 * x6)
            + x336
            + x6
            * (2.0 * x190 + x270 * x484 + x6 * (x138 + x144 * x192 - 2.0 * x175 * x56))
        )
    )
    result[3, 8] = numpy.sum(
        -x168
        * (
            x256
            - x270 * (x144 * x248 + x215 - 2.0 * x255 * x270)
            + x342
            + x6 * (x144 * x251 + x219 - 2.0 * x248 * x270)
        )
    )
    result[3, 9] = numpy.sum(x234 * (-x267 + x270 * x352 - x353 * x6))
    result[4, 0] = numpy.sum(
        -x299
        * (
            -x3 * (x1 * (x384 - x485 + x486) + x21 * x494 - 2.0 * x3 * x489)
            + x39 * (x489 - x490 + x493)
            + x4
            * (
                x1 * (x397 + x487 - x491)
                + x21 * (x3 * x492 + x4 * (x270 * x373 + x405))
                - 2.0 * x3 * x494
            )
        )
    )
    result[4, 1] = numpy.sum(
        -x195
        * (
            -x3 * (x3 * (x432 - x496) - x4 * x495)
            + x4 * (x3 * x495 + x4 * (x302 * x400 - x426))
            + x93 * (x430 + x495 + x496)
        )
    )
    result[4, 2] = numpy.sum(
        -x195
        * (
            x3 * (x3 * x499 + x4 * x498)
            + x4 * (x3 * x498 + x4 * (x270 * x408 + x438))
            + x93 * (x441 - x497 + x499)
        )
    )
    result[4, 3] = numpy.sum(
        x195 * (x3 * (x270 * x433 - x452) - x4 * (x270 * x424 - x453))
    )
    result[4, 4] = numpy.sum(
        x52 * x93 * (x3 * (x302 * x445 - x455) - x4 * (x302 * x437 - x457))
    )
    result[4, 5] = numpy.sum(
        x195 * (x3 * (x270 * x451 + x458) - x4 * (x270 * x446 + x460))
    )
    result[4, 6] = numpy.sum(
        -x299
        * (
            x270
            * (-2.0 * x389 + x500 * x6 + x56 * (x144 * x392 + x358 - 2.0 * x387 * x56))
            + x297 * x431
            + x6
            * (2.0 * x404 + x500 * x56 + x6 * (x144 * x406 + x378 - 2.0 * x399 * x56))
        )
    )
    result[4, 7] = numpy.sum(
        -0.5
        * x195
        * (
            -x270 * (x144 * x436 + x418 - 2.0 * x443 * x56)
            + 2.0 * x444
            + x6 * (x144 * x439 + x421 - 2.0 * x436 * x56)
        )
    )
    result[4, 8] = numpy.sum(x195 * (x270 * x459 - x450 - x461 * x6))
    result[4, 9] = numpy.sum(x346 * (-x270 * x462 + x463 * x6))
    result[5, 0] = numpy.sum(
        -0.5
        * x234
        * (
            2.0 * x1 * (x502 - x506 + x510)
            + x4 * (x21 * (x3 * x501 - x4 * x516) - 2.0 * x3 * x513 + x515)
            - 2.0 * x474 * (x21 * x513 - 2.0 * x3 * x510 + x512)
        )
    )
    result[5, 1] = numpy.sum(
        0.5
        * x99
        * (2.0 * x3**2 * x524 - 4.0 * x3 * x4 * x519 + 2.0 * x4**2 * x521 - x523)
    )
    result[5, 2] = numpy.sum(
        x99 * (x3**2 * x530 - 2.0 * x3 * x4 * x525 + x4**2 * x526 - x529)
    )
    result[5, 3] = numpy.sum(
        x168
        * (
            x3 * (x1 * x511 + x142 * x524 - x144 * x519)
            - x4 * (x1 * x514 + x142 * x519 - x144 * x521)
        )
    )
    result[5, 4] = numpy.sum(x195 * (x3 * x531 - x4 * x532))
    result[5, 5] = numpy.sum(x168 * (-x3 * x533 + x4 * x534))
    result[5, 6] = numpy.sum(
        -0.5
        * x234
        * (
            2.0 * x523
            - x56 * (x144 * x518 + x512 - 2.0 * x522 * x56)
            + x6 * (x144 * x520 + x515 - 2.0 * x518 * x56)
        )
    )
    result[5, 7] = numpy.sum(x99 * (-x529 + x531 * x56 - x532 * x6))
    result[5, 8] = numpy.sum(x168 * (-x533 * x56 + x534 * x6))
    result[5, 9] = numpy.sum(
        -x55
        * (
            x266
            + x354
            * (
                -3.0 * x215
                + x410
                * (x100 * (-x104 * x198 + x116 * x196 + x12) + 2.0 * x134 - x535 * x8)
                + 2.0 * x537 * x8
            )
            + x449 * x48
            + x8
            * (
                3.0 * x219
                + x410 * x537
                + 2.0
                * x8
                * (x100 * x536 + 2.0 * x138 - x8 * (x129 * x196 - x140 * x198 + x49))
            )
        )
    )
    return result


def coulomb3d_24(ax, da, A, bx, db, B, R):
    """Cartesian (dg) 1-electron Coulomb integral.

    Generated code; DO NOT modify by hand!"""

    result = numpy.zeros((6, 15), dtype=float)

    x0 = 0.5 / (ax + bx)
    x1 = ax + bx
    x2 = x1 ** (-1.0)
    x3 = -x2 * (ax * A[0] + bx * B[0])
    x4 = -x3 - B[0]
    x5 = -x3 - R[0]
    x6 = -x2 * (ax * A[1] + bx * B[1])
    x7 = -x6 - R[1]
    x8 = -x2 * (ax * A[2] + bx * B[2])
    x9 = -x8 - R[2]
    x10 = x1 * (x5**2 + x7**2 + x9**2)
    x11 = (
        6.283185307179586
        * x2
        * numpy.exp(
            -ax * bx * x2 * ((A[0] - B[0]) ** 2 + (A[1] - B[1]) ** 2 + (A[2] - B[2]) ** 2)
        )
    )
    x12 = x11 * boys(2, x10)
    x13 = x11 * boys(1, x10)
    x14 = x0 * (-x12 + x13)
    x15 = x12 * x5
    x16 = x13 * x4
    x17 = -x15 + x16
    x18 = x17 * x4
    x19 = x11 * boys(3, x10)
    x20 = x19 * x5
    x21 = x12 * x4
    x22 = -x20 + x21
    x23 = x22 * x5
    x24 = x14 + x18 - x23
    x25 = x24 * x4
    x26 = x0 * (x12 - x19)
    x27 = x22 * x4
    x28 = x11 * boys(4, x10)
    x29 = x28 * x5
    x30 = x19 * x4
    x31 = -x29 + x30
    x32 = x31 * x5
    x33 = x26 + x27 - x32
    x34 = x33 * x5
    x35 = 2.0 * x0
    x36 = x35 * (x17 + x20 - x21)
    x37 = x25 - x34 + x36
    x38 = x37 * x4
    x39 = x11 * boys(0, x10)
    x40 = x0 * (-x13 + x39)
    x41 = -x13 * x5 + x39 * x4
    x42 = -x17 * x5 + x4 * x41 + x40
    x43 = -x24 * x5 + x35 * (x15 - x16 + x41) + x4 * x42
    x44 = -x14
    x45 = 3.0 * x0
    x46 = -x37 * x5 + x45 * (-x18 + x23 + x42 + x44)
    x47 = x4 * x43 + x46
    x48 = x33 * x4
    x49 = x0 * (x19 - x28)
    x50 = x31 * x4
    x51 = x11 * boys(5, x10)
    x52 = x5 * x51
    x53 = x28 * x4
    x54 = -x52 + x53
    x55 = x5 * x54
    x56 = x49 + x50 - x55
    x57 = x5 * x56
    x58 = x35 * (x22 + x29 - x30)
    x59 = x48 - x57 + x58
    x60 = x5 * x59
    x61 = -x26
    x62 = x45 * (x24 - x27 + x32 + x61)
    x63 = x60 - x62
    x64 = -x3 - A[0]
    x65 = x38 - x60 + x62
    x66 = 4.0 * x0
    x67 = x0 * (x28 - x51)
    x68 = x11 * boys(6, x10)
    x69 = -x49
    x70 = da * db
    x71 = 0.009523809523809524 * x70
    x72 = 5.916079783099616 * x71
    x73 = -x6 - B[1]
    x74 = x12 * x73
    x75 = x19 * x7
    x76 = x12 * x7
    x77 = -x76
    x78 = x13 * x73
    x79 = x77 + x78
    x80 = x0 * (-x74 + x75 + x79)
    x81 = x4 * x79
    x82 = -x75
    x83 = x74 + x82
    x84 = x5 * x83
    x85 = x81 - x84
    x86 = x4 * x85
    x87 = x4 * x83
    x88 = x28 * x7
    x89 = -x88
    x90 = x19 * x73
    x91 = x89 + x90
    x92 = x5 * x91
    x93 = x87 - x92
    x94 = x5 * x93
    x95 = x80 + x86 - x94
    x96 = x4 * x95
    x97 = -x13 * x7
    x98 = x39 * x73 + x97
    x99 = x0 * (x76 - x78 + x98)
    x100 = x4 * x98 - x5 * x79
    x101 = x100 * x4 - x5 * x85 + x99
    x102 = x35 * (x100 - x81 + x84) - x5 * x95
    x103 = x101 * x4 + x102
    x104 = x0 * (x83 + x88 - x90)
    x105 = x4 * x93
    x106 = x4 * x91
    x107 = x51 * x7
    x108 = -x107
    x109 = x28 * x73
    x110 = x108 + x109
    x111 = x110 * x5
    x112 = x106 - x111
    x113 = x112 * x5
    x114 = x104 + x105 - x113
    x115 = x114 * x5
    x116 = x35 * (x85 - x87 + x92)
    x117 = x115 - x116
    x118 = -x115 + x116 + x96
    x119 = -x80
    x120 = x0 * (x107 - x109 + x91)
    x121 = -x68 * x7
    x122 = x121 + x51 * x73
    x123 = -x104
    x124 = 0.06666666666666667 * x70
    x125 = 2.23606797749979 * x124
    x126 = -x8 - B[2]
    x127 = x12 * x126
    x128 = x19 * x9
    x129 = x12 * x9
    x130 = -x129
    x131 = x126 * x13
    x132 = x130 + x131
    x133 = x0 * (-x127 + x128 + x132)
    x134 = x132 * x4
    x135 = -x128
    x136 = x127 + x135
    x137 = x136 * x5
    x138 = x134 - x137
    x139 = x138 * x4
    x140 = x136 * x4
    x141 = x28 * x9
    x142 = -x141
    x143 = x126 * x19
    x144 = x142 + x143
    x145 = x144 * x5
    x146 = x140 - x145
    x147 = x146 * x5
    x148 = x133 + x139 - x147
    x149 = x148 * x4
    x150 = -x13 * x9
    x151 = x126 * x39 + x150
    x152 = x0 * (x129 - x131 + x151)
    x153 = -x132 * x5 + x151 * x4
    x154 = -x138 * x5 + x152 + x153 * x4
    x155 = -x148 * x5 + x35 * (-x134 + x137 + x153)
    x156 = x154 * x4 + x155
    x157 = x0 * (x136 + x141 - x143)
    x158 = x146 * x4
    x159 = x144 * x4
    x160 = x51 * x9
    x161 = -x160
    x162 = x126 * x28
    x163 = x161 + x162
    x164 = x163 * x5
    x165 = x159 - x164
    x166 = x165 * x5
    x167 = x157 + x158 - x166
    x168 = x167 * x5
    x169 = x35 * (x138 - x140 + x145)
    x170 = x168 - x169
    x171 = x149 - x168 + x169
    x172 = -x133
    x173 = x0 * (x144 + x160 - x162)
    x174 = -x68 * x9
    x175 = x126 * x51 + x174
    x176 = -x157
    x177 = x73 * x79
    x178 = x7 * x83
    x179 = x14 - x178
    x180 = x177 + x179
    x181 = x180 * x4
    x182 = x73 * x83
    x183 = x7 * x91
    x184 = -x183 + x26
    x185 = x182 + x184
    x186 = x185 * x5
    x187 = x181 - x186
    x188 = x187 * x4
    x189 = x40 - x7 * x79
    x190 = x189 + x73 * x98
    x191 = -x180 * x5 + x190 * x4
    x192 = x178 + x44
    x193 = x0 * (-x177 + x190 + x192)
    x194 = -x187 * x5 + x193
    x195 = x191 * x4 + x194
    x196 = x185 * x4
    x197 = x73 * x91
    x198 = x110 * x7
    x199 = -x198 + x49
    x200 = x197 + x199
    x201 = x200 * x5
    x202 = x196 - x201
    x203 = x202 * x5
    x204 = x183 + x61
    x205 = x0 * (x180 - x182 + x204)
    x206 = -x205
    x207 = x203 + x206
    x208 = x188 - x203 + x205
    x209 = x198 + x69
    x210 = x0 * (x185 - x197 + x209)
    x211 = -x122 * x7 + x67
    x212 = x110 * x73 + x211
    x213 = 1.732050807568877
    x214 = 0.1111111111111111 * x213 * x70
    x215 = x132 * x73
    x216 = x136 * x7
    x217 = -x216
    x218 = x215 + x217
    x219 = x218 * x4
    x220 = x136 * x73
    x221 = x144 * x7
    x222 = -x221
    x223 = x220 + x222
    x224 = x223 * x5
    x225 = x219 - x224
    x226 = x225 * x4
    x227 = -x132 * x7
    x228 = x151 * x73 + x227
    x229 = -x218 * x5 + x228 * x4
    x230 = x0 * (-x215 + x216 + x228)
    x231 = -x225 * x5 + x230
    x232 = x229 * x4 + x231
    x233 = x223 * x4
    x234 = x144 * x73
    x235 = x163 * x7
    x236 = -x235
    x237 = x234 + x236
    x238 = x237 * x5
    x239 = x233 - x238
    x240 = x239 * x5
    x241 = x0 * (x218 - x220 + x221)
    x242 = -x241
    x243 = x240 + x242
    x244 = x226 - x240 + x241
    x245 = x0 * (x223 - x234 + x235)
    x246 = -x175 * x7
    x247 = x163 * x73 + x246
    x248 = 0.3333333333333333 * x70
    x249 = x126 * x132
    x250 = x136 * x9
    x251 = x14 - x250
    x252 = x249 + x251
    x253 = x252 * x4
    x254 = x126 * x136
    x255 = x144 * x9
    x256 = -x255 + x26
    x257 = x254 + x256
    x258 = x257 * x5
    x259 = x253 - x258
    x260 = x259 * x4
    x261 = -x132 * x9 + x40
    x262 = x126 * x151 + x261
    x263 = -x252 * x5 + x262 * x4
    x264 = x250 + x44
    x265 = x0 * (-x249 + x262 + x264)
    x266 = -x259 * x5 + x265
    x267 = x263 * x4 + x266
    x268 = x257 * x4
    x269 = x126 * x144
    x270 = x163 * x9
    x271 = -x270 + x49
    x272 = x269 + x271
    x273 = x272 * x5
    x274 = x268 - x273
    x275 = x274 * x5
    x276 = x255 + x61
    x277 = x0 * (x252 - x254 + x276)
    x278 = -x277
    x279 = x275 + x278
    x280 = x260 - x275 + x277
    x281 = x270 + x69
    x282 = x0 * (x257 - x269 + x281)
    x283 = -x175 * x9 + x67
    x284 = x126 * x163 + x283
    x285 = -x180 * x7 + 2.0 * x99
    x286 = x190 * x73 + x285
    x287 = x185 * x73
    x288 = x200 * x7
    x289 = 2.0 * x104
    x290 = -x288 + x289
    x291 = x287 + x290
    x292 = x291 * x5
    x293 = x180 * x73
    x294 = x185 * x7
    x295 = 2.0 * x80
    x296 = -x294 + x295
    x297 = x293 + x296
    x298 = -x297 * x5
    x299 = x297 * x4
    x300 = x286 * x4 + x298
    x301 = x294 - x295
    x302 = x0 * (x286 - x293 + x301)
    x303 = -x292 + x299
    x304 = x288 - x289
    x305 = x0 * (-x287 + x297 + x304)
    x306 = 2.0 * x120 - x212 * x7
    x307 = x200 * x73 + x306
    x308 = x152 - x218 * x7
    x309 = x228 * x73 + x308
    x310 = x223 * x73
    x311 = x237 * x7
    x312 = x157 - x311
    x313 = x310 + x312
    x314 = x313 * x5
    x315 = x218 * x73
    x316 = x223 * x7
    x317 = x133 - x316
    x318 = x315 + x317
    x319 = -x318 * x5
    x320 = x318 * x4
    x321 = x309 * x4 + x319
    x322 = x172 + x316
    x323 = x0 * (x309 - x315 + x322)
    x324 = -x314 + x320
    x325 = x176 + x311
    x326 = x0 * (-x310 + x318 + x325)
    x327 = x173 - x247 * x7
    x328 = x237 * x73 + x327
    x329 = -x252 * x7
    x330 = x262 * x73 + x329
    x331 = x257 * x73
    x332 = x272 * x7
    x333 = -x332
    x334 = x331 + x333
    x335 = x334 * x5
    x336 = x252 * x73
    x337 = x257 * x7
    x338 = -x337
    x339 = x336 + x338
    x340 = -x339 * x5
    x341 = x339 * x4
    x342 = x330 * x4 + x340
    x343 = x0 * (x330 - x336 + x337)
    x344 = -x335 + x341
    x345 = x0 * (-x331 + x332 + x339)
    x346 = -x284 * x7
    x347 = x272 * x73 + x346
    x348 = 2.0 * x152 - x252 * x9
    x349 = x126 * x262 + x348
    x350 = x126 * x257
    x351 = x272 * x9
    x352 = 2.0 * x157
    x353 = -x351 + x352
    x354 = x350 + x353
    x355 = x354 * x5
    x356 = x126 * x252
    x357 = x257 * x9
    x358 = 2.0 * x133
    x359 = -x357 + x358
    x360 = x356 + x359
    x361 = -x360 * x5
    x362 = x360 * x4
    x363 = x349 * x4 + x361
    x364 = x357 - x358
    x365 = x0 * (x349 - x356 + x364)
    x366 = -x355 + x362
    x367 = x351 - x352
    x368 = x0 * (-x350 + x360 + x367)
    x369 = 2.0 * x173 - x284 * x9
    x370 = x126 * x272 + x369
    x371 = x297 * x73
    x372 = 3.0 * x193 - x297 * x7
    x373 = x286 * x73 + x372
    x374 = x291 * x7
    x375 = 3.0 * x205
    x376 = x374 - x375
    x377 = x0 * (-x371 + x373 + x376)
    x378 = -x374 + x375
    x379 = x371 + x378
    x380 = 3.0 * x210 - x307 * x7
    x381 = x291 * x73 + x380
    x382 = x318 * x73
    x383 = 2.0 * x230 - x318 * x7
    x384 = x309 * x73 + x383
    x385 = x313 * x7
    x386 = 2.0 * x241
    x387 = x385 - x386
    x388 = x0 * (-x382 + x384 + x387)
    x389 = -x385 + x386
    x390 = x382 + x389
    x391 = 2.0 * x245 - x328 * x7
    x392 = x313 * x73 + x391
    x393 = x339 * x73
    x394 = x265 - x339 * x7
    x395 = x330 * x73 + x394
    x396 = x334 * x7
    x397 = x278 + x396
    x398 = x0 * (-x393 + x395 + x397)
    x399 = x277 - x396
    x400 = x393 + x399
    x401 = x282 - x347 * x7
    x402 = x334 * x73 + x401
    x403 = x354 * x7
    x404 = x360 * x73
    x405 = -x360 * x7
    x406 = x349 * x73 + x405
    x407 = x0 * (x403 - x404 + x406)
    x408 = -x403
    x409 = x404 + x408
    x410 = -x370 * x7
    x411 = x354 * x73 + x410
    x412 = x126 * x360
    x413 = 3.0 * x265 - x360 * x9
    x414 = x126 * x349 + x413
    x415 = x354 * x9
    x416 = 3.0 * x277
    x417 = x415 - x416
    x418 = x0 * (-x412 + x414 + x417)
    x419 = -x415 + x416
    x420 = x412 + x419
    x421 = 3.0 * x282 - x370 * x9
    x422 = x126 * x354 + x421
    x423 = -x6 - A[1]
    x424 = x13 * x423
    x425 = x39 * x423 + x97
    x426 = x0 * (-x424 + x425 + x76)
    x427 = x424 + x77
    x428 = x4 * x425 - x427 * x5
    x429 = x4 * x427
    x430 = x12 * x423
    x431 = x430 + x82
    x432 = x431 * x5
    x433 = x429 - x432
    x434 = x4 * x428 + x426 - x433 * x5
    x435 = x0 * (x427 - x430 + x75)
    x436 = x4 * x433
    x437 = x4 * x431
    x438 = x19 * x423
    x439 = x438 + x89
    x440 = x439 * x5
    x441 = x437 - x440
    x442 = x441 * x5
    x443 = x435 + x436 - x442
    x444 = x35 * (x428 - x429 + x432) + x4 * x434 - x443 * x5
    x445 = x4 * x443
    x446 = x0 * (x431 - x438 + x88)
    x447 = x4 * x441
    x448 = x4 * x439
    x449 = x28 * x423
    x450 = x108 + x449
    x451 = x450 * x5
    x452 = x448 - x451
    x453 = x452 * x5
    x454 = x446 + x447 - x453
    x455 = x454 * x5
    x456 = x35 * (x433 - x437 + x440)
    x457 = x445 - x455 + x456
    x458 = -x435
    x459 = x0 * (x107 + x439 - x449)
    x460 = x121 + x423 * x51
    x461 = -x446
    x462 = 10.2469507659596 * x71
    x463 = x423 * x79
    x464 = x189 + x423 * x98
    x465 = x0 * (x192 - x463 + x464)
    x466 = x179 + x463
    x467 = x4 * x464 - x466 * x5
    x468 = x4 * x466
    x469 = x423 * x83
    x470 = x184 + x469
    x471 = x470 * x5
    x472 = x468 - x471
    x473 = x4 * x467 + x465 - x472 * x5
    x474 = x0 * (x204 + x466 - x469)
    x475 = x4 * x472
    x476 = x4 * x470
    x477 = x423 * x91
    x478 = x199 + x477
    x479 = x478 * x5
    x480 = x476 - x479
    x481 = x480 * x5
    x482 = x474 + x475 - x481
    x483 = x0 * (x209 + x470 - x477)
    x484 = x110 * x423 + x211
    x485 = 3.872983346207417 * x124
    x486 = x132 * x423
    x487 = x151 * x423 + x227
    x488 = x0 * (x216 - x486 + x487)
    x489 = x217 + x486
    x490 = x4 * x487 - x489 * x5
    x491 = x4 * x489
    x492 = x136 * x423
    x493 = x222 + x492
    x494 = x493 * x5
    x495 = x491 - x494
    x496 = x4 * x490 + x488 - x495 * x5
    x497 = x0 * (x221 + x489 - x492)
    x498 = x4 * x495
    x499 = x4 * x493
    x500 = x144 * x423
    x501 = x236 + x500
    x502 = x5 * x501
    x503 = x499 - x502
    x504 = x5 * x503
    x505 = x497 + x498 - x504
    x506 = x0 * (x235 + x493 - x500)
    x507 = x163 * x423 + x246
    x508 = -x497
    x509 = x180 * x423
    x510 = x190 * x423 + x285
    x511 = x0 * (x301 - x509 + x510)
    x512 = x296 + x509
    x513 = x4 * x510 - x5 * x512
    x514 = x4 * x512
    x515 = x185 * x423
    x516 = x290 + x515
    x517 = x5 * x516
    x518 = x514 - x517
    x519 = x0 * (x304 + x512 - x515)
    x520 = x200 * x423 + x306
    x521 = x218 * x423
    x522 = x228 * x423 + x308
    x523 = x0 * (x322 - x521 + x522)
    x524 = x317 + x521
    x525 = x4 * x522 - x5 * x524
    x526 = x4 * x524
    x527 = x223 * x423
    x528 = x312 + x527
    x529 = x5 * x528
    x530 = x526 - x529
    x531 = x0 * (x325 + x524 - x527)
    x532 = x237 * x423 + x327
    x533 = x213 * x248
    x534 = x252 * x423
    x535 = x262 * x423 + x329
    x536 = x0 * (x337 - x534 + x535)
    x537 = x338 + x534
    x538 = x4 * x535 - x5 * x537
    x539 = x4 * x537
    x540 = x257 * x423
    x541 = x333 + x540
    x542 = x5 * x541
    x543 = x539 - x542
    x544 = x0 * (x332 + x537 - x540)
    x545 = x272 * x423 + x346
    x546 = x297 * x423
    x547 = x286 * x423 + x372
    x548 = x0 * (x376 - x546 + x547)
    x549 = x378 + x546
    x550 = x291 * x423 + x380
    x551 = x318 * x423
    x552 = x309 * x423 + x383
    x553 = x0 * (x387 - x551 + x552)
    x554 = x389 + x551
    x555 = x313 * x423 + x391
    x556 = x339 * x423
    x557 = x330 * x423 + x394
    x558 = x0 * (x397 - x556 + x557)
    x559 = x399 + x556
    x560 = x334 * x423 + x401
    x561 = x360 * x423
    x562 = x349 * x423 + x405
    x563 = x0 * (x403 - x561 + x562)
    x564 = x408 + x561
    x565 = x354 * x423 + x410
    x566 = 4.0 * x302 + x373 * x423 - x379 * x7
    x567 = 4.0 * x305 + x379 * x423 - x381 * x7
    x568 = 3.0 * x323 + x384 * x423 - x390 * x7
    x569 = 3.0 * x326 + x390 * x423 - x392 * x7
    x570 = 2.0 * x343 + x395 * x423 - x400 * x7
    x571 = 2.0 * x345 + x400 * x423 - x402 * x7
    x572 = x365 + x406 * x423 - x409 * x7
    x573 = x368 + x409 * x423 - x411 * x7
    x574 = x414 * x423 - x420 * x7
    x575 = x420 * x423 - x422 * x7
    x576 = -x8 - A[2]
    x577 = x13 * x576
    x578 = x150 + x39 * x576
    x579 = x0 * (x129 - x577 + x578)
    x580 = x130 + x577
    x581 = x4 * x578 - x5 * x580
    x582 = x4 * x580
    x583 = x12 * x576
    x584 = x135 + x583
    x585 = x5 * x584
    x586 = x582 - x585
    x587 = x4 * x581 - x5 * x586 + x579
    x588 = x0 * (x128 + x580 - x583)
    x589 = x4 * x586
    x590 = x4 * x584
    x591 = x19 * x576
    x592 = x142 + x591
    x593 = x5 * x592
    x594 = x590 - x593
    x595 = x5 * x594
    x596 = x588 + x589 - x595
    x597 = x35 * (x581 - x582 + x585) + x4 * x587 - x5 * x596
    x598 = x4 * x596
    x599 = x0 * (x141 + x584 - x591)
    x600 = x4 * x594
    x601 = x4 * x592
    x602 = x28 * x576
    x603 = x161 + x602
    x604 = x5 * x603
    x605 = x601 - x604
    x606 = x5 * x605
    x607 = x599 + x600 - x606
    x608 = x5 * x607
    x609 = x35 * (x586 - x590 + x593)
    x610 = x598 - x608 + x609
    x611 = -x588
    x612 = x0 * (x160 + x592 - x602)
    x613 = x174 + x51 * x576
    x614 = -x599
    x615 = x584 * x7
    x616 = x580 * x73
    x617 = -x580 * x7
    x618 = x578 * x73 + x617
    x619 = x0 * (x615 - x616 + x618)
    x620 = -x615
    x621 = x616 + x620
    x622 = x4 * x618 - x5 * x621
    x623 = x4 * x621
    x624 = x584 * x73
    x625 = x592 * x7
    x626 = -x625
    x627 = x624 + x626
    x628 = x5 * x627
    x629 = x623 - x628
    x630 = x4 * x622 - x5 * x629 + x619
    x631 = x0 * (x621 - x624 + x625)
    x632 = x4 * x629
    x633 = x4 * x627
    x634 = x592 * x73
    x635 = x603 * x7
    x636 = -x635
    x637 = x634 + x636
    x638 = x5 * x637
    x639 = x633 - x638
    x640 = x5 * x639
    x641 = x631 + x632 - x640
    x642 = x0 * (x627 - x634 + x635)
    x643 = -x613 * x7
    x644 = x603 * x73 + x643
    x645 = x132 * x576
    x646 = x151 * x576 + x261
    x647 = x0 * (x264 - x645 + x646)
    x648 = x251 + x645
    x649 = x4 * x646 - x5 * x648
    x650 = x4 * x648
    x651 = x136 * x576
    x652 = x256 + x651
    x653 = x5 * x652
    x654 = x650 - x653
    x655 = x4 * x649 - x5 * x654 + x647
    x656 = x0 * (x276 + x648 - x651)
    x657 = x4 * x654
    x658 = x4 * x652
    x659 = x144 * x576
    x660 = x271 + x659
    x661 = x5 * x660
    x662 = x658 - x661
    x663 = x5 * x662
    x664 = x656 + x657 - x663
    x665 = x0 * (x281 + x652 - x659)
    x666 = x163 * x576 + x283
    x667 = -x656
    x668 = x621 * x73
    x669 = x579 - x621 * x7
    x670 = x618 * x73 + x669
    x671 = x627 * x7
    x672 = x611 + x671
    x673 = x0 * (-x668 + x670 + x672)
    x674 = x588 - x671
    x675 = x668 + x674
    x676 = x4 * x670 - x5 * x675
    x677 = x4 * x675
    x678 = x627 * x73
    x679 = x637 * x7
    x680 = x599 - x679
    x681 = x678 + x680
    x682 = x5 * x681
    x683 = x677 - x682
    x684 = x614 + x679
    x685 = x0 * (x675 - x678 + x684)
    x686 = x612 - x644 * x7
    x687 = x637 * x73 + x686
    x688 = x652 * x7
    x689 = x648 * x73
    x690 = -x648 * x7
    x691 = x646 * x73 + x690
    x692 = x0 * (x688 - x689 + x691)
    x693 = -x688
    x694 = x689 + x693
    x695 = x4 * x691 - x5 * x694
    x696 = x4 * x694
    x697 = x652 * x73
    x698 = x660 * x7
    x699 = -x698
    x700 = x697 + x699
    x701 = x5 * x700
    x702 = x696 - x701
    x703 = x0 * (x694 - x697 + x698)
    x704 = -x666 * x7
    x705 = x660 * x73 + x704
    x706 = x252 * x576
    x707 = x262 * x576 + x348
    x708 = x0 * (x364 - x706 + x707)
    x709 = x359 + x706
    x710 = x4 * x707 - x5 * x709
    x711 = x4 * x709
    x712 = x257 * x576
    x713 = x353 + x712
    x714 = x5 * x713
    x715 = x711 - x714
    x716 = x0 * (x367 + x709 - x712)
    x717 = x272 * x576 + x369
    x718 = x675 * x73
    x719 = 2.0 * x619 - x675 * x7
    x720 = x670 * x73 + x719
    x721 = x681 * x7
    x722 = 2.0 * x631
    x723 = x721 - x722
    x724 = x0 * (-x718 + x720 + x723)
    x725 = -x721 + x722
    x726 = x718 + x725
    x727 = 2.0 * x642 - x687 * x7
    x728 = x681 * x73 + x727
    x729 = x694 * x73
    x730 = x647 - x694 * x7
    x731 = x691 * x73 + x730
    x732 = x7 * x700
    x733 = x667 + x732
    x734 = x0 * (-x729 + x731 + x733)
    x735 = x656 - x732
    x736 = x729 + x735
    x737 = x665 - x7 * x705
    x738 = x700 * x73 + x737
    x739 = x7 * x713
    x740 = x709 * x73
    x741 = -x7 * x709
    x742 = x707 * x73 + x741
    x743 = x0 * (x739 - x740 + x742)
    x744 = -x739
    x745 = x740 + x744
    x746 = -x7 * x717
    x747 = x713 * x73 + x746
    x748 = x360 * x576
    x749 = x349 * x576 + x413
    x750 = x0 * (x417 - x748 + x749)
    x751 = x419 + x748
    x752 = x354 * x576 + x421
    x753 = 3.0 * x673 - x7 * x726
    x754 = x720 * x73 + x753
    x755 = 3.0 * x685 - x7 * x728
    x756 = x726 * x73 + x755
    x757 = 2.0 * x692 - x7 * x736
    x758 = x73 * x731 + x757
    x759 = -x7 * x738 + 2.0 * x703
    x760 = x73 * x736 + x759
    x761 = -x7 * x745 + x708
    x762 = x73 * x742 + x761
    x763 = -x7 * x747 + x716
    x764 = x73 * x745 + x763
    x765 = -x7 * x751
    x766 = x73 * x749 + x765
    x767 = -x7 * x752
    x768 = x73 * x751 + x767
    x769 = 4.0 * x365 + x414 * x576 - x420 * x9
    x770 = 4.0 * x368 + x420 * x576 - x422 * x9
    x771 = x431 * x7
    x772 = x423 * x427
    x773 = x40 + x423 * x425 - x427 * x7
    x774 = x14 - x771 + x772
    x775 = x4 * x773 - x5 * x774
    x776 = x4 * x774
    x777 = x423 * x431
    x778 = x439 * x7
    x779 = x26 + x777 - x778
    x780 = x5 * x779
    x781 = x776 - x780
    x782 = x0 * (x44 + x771 - x772 + x773) + x4 * x775 - x5 * x781
    x783 = x0 * (x61 + x774 - x777 + x778)
    x784 = x4 * x781
    x785 = x4 * x779
    x786 = x423 * x439
    x787 = x450 * x7
    x788 = x49 + x786 - x787
    x789 = x5 * x788
    x790 = x785 - x789
    x791 = x5 * x790
    x792 = x783 + x784 - x791
    x793 = x470 * x7
    x794 = x423 * x466
    x795 = x423 * x464 + x426 - x466 * x7 + x99
    x796 = x435 - x793 + x794 + x80
    x797 = x4 * x795 - x5 * x796
    x798 = x4 * x796
    x799 = x423 * x470
    x800 = x478 * x7
    x801 = x104 + x446 + x799 - x800
    x802 = x5 * x801
    x803 = x798 - x802
    x804 = x493 * x7
    x805 = x423 * x489
    x806 = x152 + x423 * x487 - x489 * x7
    x807 = x133 - x804 + x805
    x808 = x4 * x806 - x5 * x807
    x809 = x4 * x807
    x810 = x423 * x493
    x811 = x501 * x7
    x812 = x157 + x810 - x811
    x813 = x5 * x812
    x814 = x809 - x813
    x815 = x516 * x7
    x816 = x423 * x512
    x817 = 2.0 * x474
    x818 = x193 + x423 * x510 + 2.0 * x465 - x512 * x7
    x819 = x205 - x815 + x816 + x817
    x820 = x528 * x7
    x821 = x423 * x524
    x822 = x230 + x423 * x522 + x488 - x524 * x7
    x823 = x241 + x497 - x820 + x821
    x824 = x541 * x7
    x825 = x423 * x537
    x826 = x265 + x423 * x535 - x537 * x7
    x827 = x277 - x824 + x825
    x828 = x423 * x580
    x829 = x423 * x578 + x617
    x830 = x620 + x828
    x831 = x4 * x829 - x5 * x830
    x832 = x4 * x830
    x833 = x423 * x584
    x834 = x626 + x833
    x835 = x5 * x834
    x836 = x832 - x835
    x837 = x0 * (x615 - x828 + x829) + x4 * x831 - x5 * x836
    x838 = x0 * (x625 + x830 - x833)
    x839 = x4 * x836
    x840 = x4 * x834
    x841 = x423 * x592
    x842 = x636 + x841
    x843 = x5 * x842
    x844 = x840 - x843
    x845 = x5 * x844
    x846 = x838 + x839 - x845
    x847 = x423 * x621
    x848 = x423 * x618 + x669
    x849 = x674 + x847
    x850 = x4 * x848 - x5 * x849
    x851 = x4 * x849
    x852 = x423 * x627
    x853 = x680 + x852
    x854 = x5 * x853
    x855 = x851 - x854
    x856 = x423 * x648
    x857 = x423 * x646 + x690
    x858 = x693 + x856
    x859 = x4 * x857 - x5 * x858
    x860 = x4 * x858
    x861 = x423 * x652
    x862 = x699 + x861
    x863 = x5 * x862
    x864 = x860 - x863
    x865 = x423 * x675
    x866 = x423 * x670 + x719
    x867 = x725 + x865
    x868 = x423 * x694
    x869 = x423 * x691 + x730
    x870 = x735 + x868
    x871 = x423 * x709
    x872 = x423 * x707 + x741
    x873 = x744 + x871
    x874 = x584 * x9
    x875 = x576 * x580
    x876 = x40 + x576 * x578 - x580 * x9
    x877 = x0 * (x44 + x874 - x875 + x876)
    x878 = x14 - x874 + x875
    x879 = x4 * x876 - x5 * x878
    x880 = x4 * x878
    x881 = x576 * x584
    x882 = x592 * x9
    x883 = x26 + x881 - x882
    x884 = x5 * x883
    x885 = x880 - x884
    x886 = x4 * x879 - x5 * x885 + x877
    x887 = x0 * (x61 + x878 - x881 + x882)
    x888 = x4 * x885
    x889 = x4 * x883
    x890 = x576 * x592
    x891 = x603 * x9
    x892 = x49 + x890 - x891
    x893 = x5 * x892
    x894 = x889 - x893
    x895 = x5 * x894
    x896 = x887 + x888 - x895
    x897 = x0 * (x69 + x883 - x890 + x891)
    x898 = x576 * x603 - x613 * x9 + x67
    x899 = -x887
    x900 = x7 * x883
    x901 = x73 * x878
    x902 = -x7 * x878 + x73 * x876
    x903 = x0 * (x900 - x901 + x902)
    x904 = -x900 + x901
    x905 = x4 * x902 - x5 * x904
    x906 = x4 * x904
    x907 = x73 * x883
    x908 = x7 * x892
    x909 = x907 - x908
    x910 = x5 * x909
    x911 = x906 - x910
    x912 = x0 * (x904 - x907 + x908)
    x913 = -x7 * x898 + x73 * x892
    x914 = x652 * x9
    x915 = x576 * x648
    x916 = x152 + x576 * x646 + x579 - x648 * x9
    x917 = x0 * (x172 + x611 + x914 - x915 + x916)
    x918 = x133 + x588 - x914 + x915
    x919 = x4 * x916 - x5 * x918
    x920 = x4 * x918
    x921 = x576 * x652
    x922 = x660 * x9
    x923 = x157 + x599 + x921 - x922
    x924 = x5 * x923
    x925 = x920 - x924
    x926 = x0 * (x176 + x614 + x918 - x921 + x922)
    x927 = x173 + x576 * x660 + x612 - x666 * x9
    x928 = x7 * x909
    x929 = x73 * x904
    x930 = -x7 * x904 + x73 * x902 + x877
    x931 = x0 * (x899 + x928 - x929 + x930)
    x932 = x887 - x928 + x929
    x933 = -x7 * x913 + x73 * x909 + x897
    x934 = x7 * x923
    x935 = x73 * x918
    x936 = -x7 * x918 + x73 * x916
    x937 = x0 * (x934 - x935 + x936)
    x938 = -x934 + x935
    x939 = -x7 * x927 + x73 * x923
    x940 = x713 * x9
    x941 = x576 * x709
    x942 = 2.0 * x656
    x943 = x265 + x576 * x707 + 2.0 * x647 - x709 * x9
    x944 = x0 * (x278 + x940 - x941 - x942 + x943)
    x945 = x277 - x940 + x941 + x942
    x946 = x282 + x576 * x713 + 2.0 * x665 - x717 * x9
    x947 = -x7 * x932 + x73 * x930 + 2.0 * x903
    x948 = -x7 * x933 + x73 * x932 + 2.0 * x912
    x949 = -x7 * x938 + x73 * x936 + x917
    x950 = -x7 * x939 + x73 * x938 + x926
    x951 = -x7 * x945 + x73 * x943
    x952 = -x7 * x946 + x73 * x945
    x953 = x365 + x576 * x749 + 3.0 * x708 - x751 * x9
    x954 = x368 + x576 * x751 + 3.0 * x716 - x752 * x9

    # 90 item(s)
    result[0, 0] = numpy.sum(
        x72
        * (
            x0 * (-x38 + x47 + x63)
            - x5
            * (
                -x5
                * (
                    x4 * x59
                    + x45 * (x33 - x50 + x55 + x69)
                    - x5
                    * (
                        x35 * (x31 + x52 - x53)
                        + x4 * x56
                        - x5 * (x4 * x54 - x5 * (x4 * x51 - x5 * x68) + x67)
                    )
                )
                + x64 * x65
                + x66 * (x37 - x48 + x57 - x58)
            )
            - x64 * (-x47 * x64 + x5 * x65 + x66 * (x25 - x34 + x36 - x43))
            + x66 * (-x37 * x64 + x43 * x64 + x46 + x63)
        )
    )
    result[0, 1] = numpy.sum(
        x125
        * (
            x0 * (x103 + x117 - x96)
            + x45 * (x101 * x64 + x102 + x117 - x64 * x95)
            - x5
            * (
                x118 * x64
                + x45 * (-x105 + x113 + x123 + x95)
                - x5
                * (
                    x114 * x4
                    + x35 * (-x106 + x111 + x93)
                    - x5 * (x112 * x4 + x120 - x5 * (x110 * x4 - x122 * x5))
                )
            )
            + x64 * (x103 * x64 - x118 * x5 + x45 * (x101 + x119 - x86 + x94))
        )
    )
    result[0, 2] = numpy.sum(
        x125
        * (
            x0 * (-x149 + x156 + x170)
            + x45 * (-x148 * x64 + x154 * x64 + x155 + x170)
            - x5
            * (
                x171 * x64
                + x45 * (x148 - x158 + x166 + x176)
                - x5
                * (
                    x167 * x4
                    + x35 * (x146 - x159 + x164)
                    - x5 * (x165 * x4 + x173 - x5 * (x163 * x4 - x175 * x5))
                )
            )
            + x64 * (x156 * x64 - x171 * x5 + x45 * (-x139 + x147 + x154 + x172))
        )
    )
    result[0, 3] = numpy.sum(
        x214
        * (
            x0 * (-x188 + x195 + x207)
            + x35 * (-x187 * x64 + x191 * x64 + x194 + x207)
            - x5
            * (
                x208 * x64
                + x35 * (x187 - x196 + x201)
                - x5 * (x202 * x4 + x210 - x5 * (x200 * x4 - x212 * x5))
            )
            + x64 * (x195 * x64 - x208 * x5 + x35 * (-x181 + x186 + x191))
        )
    )
    result[0, 4] = numpy.sum(
        x248
        * (
            x0 * (-x226 + x232 + x243)
            + x35 * (-x225 * x64 + x229 * x64 + x231 + x243)
            - x5
            * (
                x244 * x64
                + x35 * (x225 - x233 + x238)
                - x5 * (x239 * x4 + x245 - x5 * (x237 * x4 - x247 * x5))
            )
            + x64 * (x232 * x64 - x244 * x5 + x35 * (-x219 + x224 + x229))
        )
    )
    result[0, 5] = numpy.sum(
        x214
        * (
            x0 * (-x260 + x267 + x279)
            + x35 * (-x259 * x64 + x263 * x64 + x266 + x279)
            - x5
            * (
                x280 * x64
                + x35 * (x259 - x268 + x273)
                - x5 * (x274 * x4 + x282 - x5 * (x272 * x4 - x284 * x5))
            )
            + x64 * (x267 * x64 - x280 * x5 + x35 * (-x253 + x258 + x263))
        )
    )
    result[0, 6] = numpy.sum(
        x125
        * (
            x0 * (x292 - x299 + x300)
            + x0 * (x286 * x64 + x292 - x297 * x64 + x298)
            - x5 * (x303 * x64 + x305 - x5 * (x291 * x4 - x307 * x5))
            + x64 * (x300 * x64 + x302 - x303 * x5)
        )
    )
    result[0, 7] = numpy.sum(
        x248
        * (
            x0 * (x314 - x320 + x321)
            + x0 * (x309 * x64 + x314 - x318 * x64 + x319)
            - x5 * (x324 * x64 + x326 - x5 * (x313 * x4 - x328 * x5))
            + x64 * (x321 * x64 + x323 - x324 * x5)
        )
    )
    result[0, 8] = numpy.sum(
        x248
        * (
            x0 * (x335 - x341 + x342)
            + x0 * (x330 * x64 + x335 - x339 * x64 + x340)
            - x5 * (x344 * x64 + x345 - x5 * (x334 * x4 - x347 * x5))
            + x64 * (x342 * x64 + x343 - x344 * x5)
        )
    )
    result[0, 9] = numpy.sum(
        x125
        * (
            x0 * (x355 - x362 + x363)
            + x0 * (x349 * x64 + x355 - x360 * x64 + x361)
            - x5 * (x366 * x64 + x368 - x5 * (x354 * x4 - x370 * x5))
            + x64 * (x363 * x64 + x365 - x366 * x5)
        )
    )
    result[0, 10] = numpy.sum(
        x72 * (x377 - x5 * (x379 * x64 - x381 * x5) + x64 * (x373 * x64 - x379 * x5))
    )
    result[0, 11] = numpy.sum(
        x125 * (x388 - x5 * (x390 * x64 - x392 * x5) + x64 * (x384 * x64 - x390 * x5))
    )
    result[0, 12] = numpy.sum(
        x214 * (x398 - x5 * (x400 * x64 - x402 * x5) + x64 * (x395 * x64 - x400 * x5))
    )
    result[0, 13] = numpy.sum(
        x125 * (x407 - x5 * (x409 * x64 - x411 * x5) + x64 * (x406 * x64 - x409 * x5))
    )
    result[0, 14] = numpy.sum(
        x72 * (x418 - x5 * (x420 * x64 - x422 * x5) + x64 * (x414 * x64 - x420 * x5))
    )
    result[1, 0] = numpy.sum(
        x462
        * (
            -x5
            * (
                x4 * x457
                + x45 * (x443 - x447 + x453 + x461)
                - x5
                * (
                    x35 * (x441 - x448 + x451)
                    + x4 * x454
                    - x5 * (x4 * x452 + x459 - x5 * (x4 * x450 - x460 * x5))
                )
            )
            + x64 * (x4 * x444 + x45 * (x434 - x436 + x442 + x458) - x457 * x5)
            + x66 * (x444 - x445 + x455 - x456)
        )
    )
    result[1, 1] = numpy.sum(
        x485
        * (
            x45 * (x473 - x474 - x475 + x481)
            - x5
            * (
                x35 * (x472 - x476 + x479)
                + x4 * x482
                - x5 * (x4 * x480 + x483 - x5 * (x4 * x478 - x484 * x5))
            )
            + x64 * (x35 * (x467 - x468 + x471) + x4 * x473 - x482 * x5)
        )
    )
    result[1, 2] = numpy.sum(
        x485
        * (
            x45 * (x496 - x498 + x504 + x508)
            - x5
            * (
                x35 * (x495 - x499 + x502)
                + x4 * x505
                - x5 * (x4 * x503 - x5 * (x4 * x501 - x5 * x507) + x506)
            )
            + x64 * (x35 * (x490 - x491 + x494) + x4 * x496 - x5 * x505)
        )
    )
    result[1, 3] = numpy.sum(
        x248
        * (
            x35 * (x513 - x514 + x517)
            - x5 * (x4 * x518 - x5 * (x4 * x516 - x5 * x520) + x519)
            + x64 * (x4 * x513 - x5 * x518 + x511)
        )
    )
    result[1, 4] = numpy.sum(
        x533
        * (
            x35 * (x525 - x526 + x529)
            - x5 * (x4 * x530 - x5 * (x4 * x528 - x5 * x532) + x531)
            + x64 * (x4 * x525 - x5 * x530 + x523)
        )
    )
    result[1, 5] = numpy.sum(
        x248
        * (
            x35 * (x538 - x539 + x542)
            - x5 * (x4 * x543 - x5 * (x4 * x541 - x5 * x545) + x544)
            + x64 * (x4 * x538 - x5 * x543 + x536)
        )
    )
    result[1, 6] = numpy.sum(
        x485 * (-x5 * (x4 * x549 - x5 * x550) + x548 + x64 * (x4 * x547 - x5 * x549))
    )
    result[1, 7] = numpy.sum(
        x533 * (-x5 * (x4 * x554 - x5 * x555) + x553 + x64 * (x4 * x552 - x5 * x554))
    )
    result[1, 8] = numpy.sum(
        x533 * (-x5 * (x4 * x559 - x5 * x560) + x558 + x64 * (x4 * x557 - x5 * x559))
    )
    result[1, 9] = numpy.sum(
        x485 * (-x5 * (x4 * x564 - x5 * x565) + x563 + x64 * (x4 * x562 - x5 * x564))
    )
    result[1, 10] = numpy.sum(x462 * (-x5 * x567 + x566 * x64))
    result[1, 11] = numpy.sum(x485 * (-x5 * x569 + x568 * x64))
    result[1, 12] = numpy.sum(x248 * (-x5 * x571 + x570 * x64))
    result[1, 13] = numpy.sum(x485 * (-x5 * x573 + x572 * x64))
    result[1, 14] = numpy.sum(x462 * (-x5 * x575 + x574 * x64))
    result[2, 0] = numpy.sum(
        x462
        * (
            -x5
            * (
                x4 * x610
                + x45 * (x596 - x600 + x606 + x614)
                - x5
                * (
                    x35 * (x594 - x601 + x604)
                    + x4 * x607
                    - x5 * (x4 * x605 - x5 * (x4 * x603 - x5 * x613) + x612)
                )
            )
            + x64 * (x4 * x597 + x45 * (x587 - x589 + x595 + x611) - x5 * x610)
            + x66 * (x597 - x598 + x608 - x609)
        )
    )
    result[2, 1] = numpy.sum(
        x485
        * (
            x45 * (x630 - x631 - x632 + x640)
            - x5
            * (
                x35 * (x629 - x633 + x638)
                + x4 * x641
                - x5 * (x4 * x639 - x5 * (x4 * x637 - x5 * x644) + x642)
            )
            + x64 * (x35 * (x622 - x623 + x628) + x4 * x630 - x5 * x641)
        )
    )
    result[2, 2] = numpy.sum(
        x485
        * (
            x45 * (x655 - x657 + x663 + x667)
            - x5
            * (
                x35 * (x654 - x658 + x661)
                + x4 * x664
                - x5 * (x4 * x662 - x5 * (x4 * x660 - x5 * x666) + x665)
            )
            + x64 * (x35 * (x649 - x650 + x653) + x4 * x655 - x5 * x664)
        )
    )
    result[2, 3] = numpy.sum(
        x248
        * (
            x35 * (x676 - x677 + x682)
            - x5 * (x4 * x683 - x5 * (x4 * x681 - x5 * x687) + x685)
            + x64 * (x4 * x676 - x5 * x683 + x673)
        )
    )
    result[2, 4] = numpy.sum(
        x533
        * (
            x35 * (x695 - x696 + x701)
            - x5 * (x4 * x702 - x5 * (x4 * x700 - x5 * x705) + x703)
            + x64 * (x4 * x695 - x5 * x702 + x692)
        )
    )
    result[2, 5] = numpy.sum(
        x248
        * (
            x35 * (x710 - x711 + x714)
            - x5 * (x4 * x715 - x5 * (x4 * x713 - x5 * x717) + x716)
            + x64 * (x4 * x710 - x5 * x715 + x708)
        )
    )
    result[2, 6] = numpy.sum(
        x485 * (-x5 * (x4 * x726 - x5 * x728) + x64 * (x4 * x720 - x5 * x726) + x724)
    )
    result[2, 7] = numpy.sum(
        x533 * (-x5 * (x4 * x736 - x5 * x738) + x64 * (x4 * x731 - x5 * x736) + x734)
    )
    result[2, 8] = numpy.sum(
        x533 * (-x5 * (x4 * x745 - x5 * x747) + x64 * (x4 * x742 - x5 * x745) + x743)
    )
    result[2, 9] = numpy.sum(
        x485 * (-x5 * (x4 * x751 - x5 * x752) + x64 * (x4 * x749 - x5 * x751) + x750)
    )
    result[2, 10] = numpy.sum(x462 * (-x5 * x756 + x64 * x754))
    result[2, 11] = numpy.sum(x485 * (-x5 * x760 + x64 * x758))
    result[2, 12] = numpy.sum(x248 * (-x5 * x764 + x64 * x762))
    result[2, 13] = numpy.sum(x485 * (-x5 * x768 + x64 * x766))
    result[2, 14] = numpy.sum(x462 * (-x5 * x770 + x64 * x769))
    result[3, 0] = numpy.sum(
        x72
        * (
            x4 * (x35 * (x775 - x776 + x780) + x4 * x782 - x5 * x792)
            + x45 * (x782 - x783 - x784 + x791)
            - x5
            * (
                x35 * (x781 - x785 + x789)
                + x4 * x792
                - x5
                * (
                    x0 * (x69 + x779 - x786 + x787)
                    + x4 * x790
                    - x5 * (x4 * x788 - x5 * (x423 * x450 - x460 * x7 + x67))
                )
            )
        )
    )
    result[3, 1] = numpy.sum(
        x125
        * (
            x35 * (x797 - x798 + x802)
            + x4 * (x0 * (x119 + x458 + x793 - x794 + x795) + x4 * x797 - x5 * x803)
            - x5
            * (
                x0 * (x123 + x461 + x796 - x799 + x800)
                + x4 * x803
                - x5 * (x4 * x801 - x5 * (x120 + x423 * x478 + x459 - x484 * x7))
            )
        )
    )
    result[3, 2] = numpy.sum(
        x125
        * (
            x35 * (x808 - x809 + x813)
            + x4 * (x0 * (x172 + x804 - x805 + x806) + x4 * x808 - x5 * x814)
            - x5
            * (
                x0 * (x176 + x807 - x810 + x811)
                + x4 * x814
                - x5 * (x4 * x812 - x5 * (x173 + x423 * x501 - x507 * x7))
            )
        )
    )
    result[3, 3] = numpy.sum(
        x214
        * (
            x0 * (x206 + x815 - x816 - x817 + x818)
            + x4 * (x4 * x818 - x5 * x819)
            - x5 * (x4 * x819 - x5 * (x210 + x423 * x516 + 2.0 * x483 - x520 * x7))
        )
    )
    result[3, 4] = numpy.sum(
        x248
        * (
            x0 * (x242 + x508 + x820 - x821 + x822)
            + x4 * (x4 * x822 - x5 * x823)
            - x5 * (x4 * x823 - x5 * (x245 + x423 * x528 + x506 - x532 * x7))
        )
    )
    result[3, 5] = numpy.sum(
        x214
        * (
            x0 * (x278 + x824 - x825 + x826)
            + x4 * (x4 * x826 - x5 * x827)
            - x5 * (x4 * x827 - x5 * (x282 + x423 * x541 - x545 * x7))
        )
    )
    result[3, 6] = numpy.sum(
        x125
        * (
            x4 * (x302 + x423 * x547 + 3.0 * x511 - x549 * x7)
            - x5 * (x305 + x423 * x549 + 3.0 * x519 - x550 * x7)
        )
    )
    result[3, 7] = numpy.sum(
        x248
        * (
            x4 * (x323 + x423 * x552 + 2.0 * x523 - x554 * x7)
            - x5 * (x326 + x423 * x554 + 2.0 * x531 - x555 * x7)
        )
    )
    result[3, 8] = numpy.sum(
        x248
        * (
            x4 * (x343 + x423 * x557 + x536 - x559 * x7)
            - x5 * (x345 + x423 * x559 + x544 - x560 * x7)
        )
    )
    result[3, 9] = numpy.sum(
        x125
        * (x4 * (x365 + x423 * x562 - x564 * x7) - x5 * (x368 + x423 * x564 - x565 * x7))
    )
    result[3, 10] = numpy.sum(x72 * (x377 + x423 * x566 + 4.0 * x548 - x567 * x7))
    result[3, 11] = numpy.sum(x125 * (x388 + x423 * x568 + 3.0 * x553 - x569 * x7))
    result[3, 12] = numpy.sum(x214 * (x398 + x423 * x570 + 2.0 * x558 - x571 * x7))
    result[3, 13] = numpy.sum(x125 * (x407 + x423 * x572 + x563 - x573 * x7))
    result[3, 14] = numpy.sum(x72 * (x418 + x423 * x574 - x575 * x7))
    result[4, 0] = numpy.sum(
        x462
        * (
            x4 * (x35 * (x831 - x832 + x835) + x4 * x837 - x5 * x846)
            + x45 * (x837 - x838 - x839 + x845)
            - x5
            * (
                x35 * (x836 - x840 + x843)
                + x4 * x846
                - x5
                * (
                    x0 * (x635 + x834 - x841)
                    + x4 * x844
                    - x5 * (x4 * x842 - x5 * (x423 * x603 + x643))
                )
            )
        )
    )
    result[4, 1] = numpy.sum(
        x485
        * (
            x35 * (x850 - x851 + x854)
            + x4 * (x0 * (x672 - x847 + x848) + x4 * x850 - x5 * x855)
            - x5
            * (
                x0 * (x684 + x849 - x852)
                + x4 * x855
                - x5 * (x4 * x853 - x5 * (x423 * x637 + x686))
            )
        )
    )
    result[4, 2] = numpy.sum(
        x485
        * (
            x35 * (x859 - x860 + x863)
            + x4 * (x0 * (x688 - x856 + x857) + x4 * x859 - x5 * x864)
            - x5
            * (
                x0 * (x698 + x858 - x861)
                + x4 * x864
                - x5 * (x4 * x862 - x5 * (x423 * x660 + x704))
            )
        )
    )
    result[4, 3] = numpy.sum(
        x248
        * (
            x0 * (x723 - x865 + x866)
            + x4 * (x4 * x866 - x5 * x867)
            - x5 * (x4 * x867 - x5 * (x423 * x681 + x727))
        )
    )
    result[4, 4] = numpy.sum(
        x533
        * (
            x0 * (x733 - x868 + x869)
            + x4 * (x4 * x869 - x5 * x870)
            - x5 * (x4 * x870 - x5 * (x423 * x700 + x737))
        )
    )
    result[4, 5] = numpy.sum(
        x248
        * (
            x0 * (x739 - x871 + x872)
            + x4 * (x4 * x872 - x5 * x873)
            - x5 * (x4 * x873 - x5 * (x423 * x713 + x746))
        )
    )
    result[4, 6] = numpy.sum(
        x485 * (x4 * (x423 * x720 + x753) - x5 * (x423 * x726 + x755))
    )
    result[4, 7] = numpy.sum(
        x533 * (x4 * (x423 * x731 + x757) - x5 * (x423 * x736 + x759))
    )
    result[4, 8] = numpy.sum(
        x533 * (x4 * (x423 * x742 + x761) - x5 * (x423 * x745 + x763))
    )
    result[4, 9] = numpy.sum(
        x485 * (x4 * (x423 * x749 + x765) - x5 * (x423 * x751 + x767))
    )
    result[4, 10] = numpy.sum(x462 * (x423 * x754 - x7 * x756 + 4.0 * x724))
    result[4, 11] = numpy.sum(x485 * (x423 * x758 - x7 * x760 + 3.0 * x734))
    result[4, 12] = numpy.sum(x248 * (x423 * x762 - x7 * x764 + 2.0 * x743))
    result[4, 13] = numpy.sum(x485 * (x423 * x766 - x7 * x768 + x750))
    result[4, 14] = numpy.sum(x462 * (x423 * x769 - x7 * x770))
    result[5, 0] = numpy.sum(
        x72
        * (
            x4 * (x35 * (x879 - x880 + x884) + x4 * x886 - x5 * x896)
            + x45 * (x886 - x888 + x895 + x899)
            - x5
            * (
                x35 * (x885 - x889 + x893)
                + x4 * x896
                - x5 * (x4 * x894 - x5 * (x4 * x892 - x5 * x898) + x897)
            )
        )
    )
    result[5, 1] = numpy.sum(
        x125
        * (
            x35 * (x905 - x906 + x910)
            + x4 * (x4 * x905 - x5 * x911 + x903)
            - x5 * (x4 * x911 - x5 * (x4 * x909 - x5 * x913) + x912)
        )
    )
    result[5, 2] = numpy.sum(
        x125
        * (
            x35 * (x919 - x920 + x924)
            + x4 * (x4 * x919 - x5 * x925 + x917)
            - x5 * (x4 * x925 - x5 * (x4 * x923 - x5 * x927) + x926)
        )
    )
    result[5, 3] = numpy.sum(
        x214 * (x4 * (x4 * x930 - x5 * x932) - x5 * (x4 * x932 - x5 * x933) + x931)
    )
    result[5, 4] = numpy.sum(
        x248 * (x4 * (x4 * x936 - x5 * x938) - x5 * (x4 * x938 - x5 * x939) + x937)
    )
    result[5, 5] = numpy.sum(
        x214 * (x4 * (x4 * x943 - x5 * x945) - x5 * (x4 * x945 - x5 * x946) + x944)
    )
    result[5, 6] = numpy.sum(x125 * (x4 * x947 - x5 * x948))
    result[5, 7] = numpy.sum(x248 * (x4 * x949 - x5 * x950))
    result[5, 8] = numpy.sum(x248 * (x4 * x951 - x5 * x952))
    result[5, 9] = numpy.sum(x125 * (x4 * x953 - x5 * x954))
    result[5, 10] = numpy.sum(x72 * (-x7 * x948 + x73 * x947 + 3.0 * x931))
    result[5, 11] = numpy.sum(x125 * (-x7 * x950 + x73 * x949 + 2.0 * x937))
    result[5, 12] = numpy.sum(x214 * (-x7 * x952 + x73 * x951 + x944))
    result[5, 13] = numpy.sum(x125 * (-x7 * x954 + x73 * x953))
    result[5, 14] = numpy.sum(x72 * (x418 + x576 * x769 + 4.0 * x750 - x770 * x9))
    return result


def coulomb3d_30(ax, da, A, bx, db, B, R):
    """Cartesian (fs) 1-electron Coulomb integral.

    Generated code; DO NOT modify by hand!"""

    result = numpy.zeros((10, 1), dtype=float)

    x0 = ax + bx
    x1 = x0 ** (-1.0)
    x2 = -x1 * (ax * A[0] + bx * B[0])
    x3 = x2 + A[0]
    x4 = x2 + R[0]
    x5 = -x1 * (ax * A[1] + bx * B[1])
    x6 = x5 + R[1]
    x7 = -x1 * (ax * A[2] + bx * B[2])
    x8 = x7 + R[2]
    x9 = x0 * (x4**2 + x6**2 + x8**2)
    x10 = boys(1, x9)
    x11 = boys(0, x9)
    x12 = x1 * (-x10 + x11)
    x13 = x10 * x3
    x14 = boys(2, x9)
    x15 = x14 * x4
    x16 = x13 - x15
    x17 = 2.0 * x4
    x18 = -x10 * x4 + x11 * x3
    x19 = 2.0 * x3
    x20 = x1 * (x10 - x14)
    x21 = boys(3, x9)
    x22 = 2.0 * x1
    x23 = (
        3.141592653589793
        * da
        * db
        * numpy.exp(
            -ax * bx * x1 * ((A[0] - B[0]) ** 2 + (A[1] - B[1]) ** 2 + (A[2] - B[2]) ** 2)
        )
    )
    x24 = x1 * x23
    x25 = 0.2581988897471611 * x24
    x26 = x5 + A[1]
    x27 = x10 * x26
    x28 = -x10 * x6 + x11 * x26
    x29 = x1 * (x14 * x6 - x27 + x28)
    x30 = -x28
    x31 = -x14 * x6 + x27
    x32 = -x31
    x33 = x14 * x26 - x21 * x6
    x34 = -x33
    x35 = 0.5773502691896258 * x24
    x36 = x7 + A[2]
    x37 = x10 * x36
    x38 = -x10 * x8 + x11 * x36
    x39 = x1 * (x14 * x8 - x37 + x38)
    x40 = -x38
    x41 = -x14 * x8 + x37
    x42 = -x41
    x43 = x14 * x36 - x21 * x8
    x44 = -x43
    x45 = 2.0 * x26
    x46 = 2.0 * x6
    x47 = x26 * x40 - x42 * x6
    x48 = x26 * x42 - x44 * x6
    x49 = 2.0 * x36
    x50 = 2.0 * x8
    x51 = x12 - x40 * x49 + x42 * x50
    x52 = x20 - x42 * x49 + x44 * x50

    # 10 item(s)
    result[0, 0] = numpy.sum(
        -x25
        * (
            x22 * (-x13 + x15 + x18)
            + x3 * (x12 - x16 * x17 + x18 * x19)
            - x4 * (x16 * x19 - x17 * (x14 * x3 - x21 * x4) + x20)
        )
    )
    result[1, 0] = numpy.sum(
        -x35 * (x17 * (x3 * x32 - x34 * x4) + x29 - 2.0 * x3 * (x3 * x30 - x32 * x4))
    )
    result[2, 0] = numpy.sum(
        -x35 * (x17 * (x3 * x42 - x4 * x44) - 2.0 * x3 * (x3 * x40 - x4 * x42) + x39)
    )
    result[3, 0] = numpy.sum(
        -x35 * (x3 * (x12 - x30 * x45 + x32 * x46) - x4 * (x20 - x32 * x45 + x34 * x46))
    )
    result[4, 0] = numpy.sum(x22 * x23 * (x3 * x47 - x4 * x48))
    result[5, 0] = numpy.sum(x35 * (-x3 * x51 + x4 * x52))
    result[6, 0] = numpy.sum(
        -x25
        * (
            x26 * (x12 + x28 * x45 - x31 * x46)
            + 2.0 * x29
            - x6 * (x20 + x31 * x45 - x33 * x46)
        )
    )
    result[7, 0] = numpy.sum(x35 * (2.0 * x26 * x47 - x39 - x46 * x48))
    result[8, 0] = numpy.sum(x35 * (-x26 * x51 + x52 * x6))
    result[9, 0] = numpy.sum(
        -x25
        * (
            x36 * (x12 + x38 * x49 - x41 * x50)
            + 2.0 * x39
            - x8 * (x20 + x41 * x49 - x43 * x50)
        )
    )
    return result


def coulomb3d_31(ax, da, A, bx, db, B, R):
    """Cartesian (fp) 1-electron Coulomb integral.

    Generated code; DO NOT modify by hand!"""

    result = numpy.zeros((10, 3), dtype=float)

    x0 = ax + bx
    x1 = x0 ** (-1.0)
    x2 = -x1 * (ax * A[0] + bx * B[0])
    x3 = x2 + B[0]
    x4 = x2 + R[0]
    x5 = -x1 * (ax * A[1] + bx * B[1])
    x6 = x5 + R[1]
    x7 = -x1 * (ax * A[2] + bx * B[2])
    x8 = x7 + R[2]
    x9 = x0 * (x4**2 + x6**2 + x8**2)
    x10 = boys(1, x9)
    x11 = x10 * x3
    x12 = boys(2, x9)
    x13 = x12 * x4
    x14 = -x13
    x15 = x11 + x14
    x16 = -x15
    x17 = x2 + A[0]
    x18 = 2.0 * x17
    x19 = 2.0 * x4
    x20 = boys(0, x9)
    x21 = -x10 * x4
    x22 = x20 * x3 + x21
    x23 = x12 * x3
    x24 = boys(3, x9)
    x25 = x24 * x4
    x26 = -x25
    x27 = x23 + x26
    x28 = x1 * (x10 - x12)
    x29 = x1 * (-x10 + x20)
    x30 = -x29
    x31 = x28 + x30
    x32 = x10 * x17
    x33 = x17 * x20 + x21
    x34 = x15 * x18 - x19 * x27 + x28
    x35 = x14 + x32
    x36 = -x35
    x37 = x12 * x17
    x38 = 0.5 * x1
    x39 = x1 * (x12 - x24)
    x40 = boys(4, x9)
    x41 = (
        3.141592653589793
        * da
        * db
        * x1
        * numpy.exp(
            -ax * bx * x1 * ((A[0] - B[0]) ** 2 + (A[1] - B[1]) ** 2 + (A[2] - B[2]) ** 2)
        )
    )
    x42 = 0.2581988897471611 * x41
    x43 = x12 * x6
    x44 = x5 + B[1]
    x45 = x10 * x44
    x46 = -x10 * x6
    x47 = x20 * x44 + x46
    x48 = x43 - x45 + x47
    x49 = x1 * x48
    x50 = -x47
    x51 = -x43
    x52 = x45 + x51
    x53 = -x52
    x54 = x17 * x50 - x4 * x53
    x55 = x17 * x53
    x56 = x12 * x44
    x57 = x24 * x6
    x58 = -x57
    x59 = x56 + x58
    x60 = -x59
    x61 = x4 * x60
    x62 = x55 - x61
    x63 = x52 - x56 + x57
    x64 = x1 * x63
    x65 = -x40 * x6
    x66 = x24 * x44 + x65
    x67 = -x66
    x68 = 2.0 * x1
    x69 = x12 * x8
    x70 = x7 + B[2]
    x71 = x10 * x70
    x72 = -x10 * x8
    x73 = x20 * x70 + x72
    x74 = x69 - x71 + x73
    x75 = x1 * x74
    x76 = -x73
    x77 = -x69
    x78 = x71 + x77
    x79 = -x78
    x80 = x17 * x76 - x4 * x79
    x81 = x17 * x79
    x82 = x12 * x70
    x83 = x24 * x8
    x84 = -x83
    x85 = x82 + x84
    x86 = -x85
    x87 = x4 * x86
    x88 = x81 - x87
    x89 = x78 - x82 + x83
    x90 = x1 * x89
    x91 = -x40 * x8
    x92 = x24 * x70 + x91
    x93 = -x92
    x94 = x5 + A[1]
    x95 = x20 * x94 + x46
    x96 = -x95
    x97 = x12 * x94
    x98 = -x58 - x97
    x99 = x4 * x98
    x100 = x10 * x94
    x101 = x100 + x51
    x102 = -x101
    x103 = -x102 * x4
    x104 = x102 * x3
    x105 = x103 + x3 * x96
    x106 = -x100 + x43 + x95
    x107 = x1 * x106
    x108 = x104 - x99
    x109 = x101 + x57 - x97
    x110 = x1 * x109
    x111 = -x24 * x94 - x65
    x112 = 0.5773502691896258 * x41
    x113 = 2.0 * x94
    x114 = 2.0 * x6
    x115 = -x113 * x53 + x114 * x60 + x28
    x116 = -x113 * x60 + x114 * x67 + x39
    x117 = x114 * x53
    x118 = x113 * x50
    x119 = x1 * (x115 - x117 + x118 + x30)
    x120 = x117 - x118 + x29
    x121 = x79 * x94
    x122 = -x6 * x79 + x76 * x94
    x123 = x1 * (-x121 + x122 + x6 * x86)
    x124 = -x122
    x125 = x121 - x6 * x86
    x126 = -x125
    x127 = -x6 * x93 + x86 * x94
    x128 = -x127
    x129 = x7 + A[2]
    x130 = x129 * x20 + x72
    x131 = -x130
    x132 = x12 * x129
    x133 = -x132 - x84
    x134 = x133 * x4
    x135 = x10 * x129
    x136 = x135 + x77
    x137 = -x136
    x138 = -x137 * x4
    x139 = x137 * x3
    x140 = x131 * x3 + x138
    x141 = x130 - x135 + x69
    x142 = x1 * x141
    x143 = -x134 + x139
    x144 = -x132 + x136 + x83
    x145 = x1 * x144
    x146 = -x129 * x24 - x91
    x147 = x133 * x6
    x148 = x137 * x44
    x149 = -x137 * x6
    x150 = x131 * x44 + x149
    x151 = x1 * (x147 - x148 + x150)
    x152 = -x150
    x153 = -x133 * x6
    x154 = x148 + x153
    x155 = -x154
    x156 = -x146 * x6
    x157 = x133 * x44 + x156
    x158 = -x157
    x159 = 2.0 * x129
    x160 = 2.0 * x8
    x161 = -x159 * x79 + x160 * x86 + x28
    x162 = -x159 * x86 + x160 * x93 + x39
    x163 = x160 * x79
    x164 = x159 * x76
    x165 = x1 * (x161 - x163 + x164 + x30)
    x166 = 0.5 * x165
    x167 = x163 - x164 + x29
    x168 = -x102 * x113 + x114 * x98 + x28
    x169 = x111 * x114 - x113 * x98 + x39
    x170 = x102 * x114
    x171 = x113 * x96
    x172 = x38 * (x168 - x170 + x171 + x30)
    x173 = x170 - x171 + x29
    x174 = -x1 * x106
    x175 = -x1 * x109
    x176 = -x1 * x74
    x177 = -x1 * x89
    x178 = x137 * x94
    x179 = x131 * x94 + x149
    x180 = x1 * (x147 - x178 + x179)
    x181 = -x179
    x182 = -x153 - x178
    x183 = -x133 * x94 - x156
    x184 = -x1 * x141
    x185 = -x1 * x144
    x186 = -x161 * x6 + x167 * x94
    x187 = x161 * x94 - x162 * x6
    x188 = x133 * x160 - x137 * x159 + x28
    x189 = -x133 * x159 + x146 * x160 + x39
    x190 = x137 * x160
    x191 = x131 * x159
    x192 = x38 * (x188 - x190 + x191 + x30)
    x193 = x190 - x191 + x29
    x194 = -x188 * x6
    x195 = x193 * x44 + x194
    x196 = -x189 * x6
    x197 = x188 * x44 + x196
    x198 = -x129 * x167 + x161 * x8 + x176 + x184
    x199 = -x129 * x161 + x162 * x8 + x177 + x185
    x200 = x113 * x52 - x114 * x59 + x28
    x201 = -x129 * x193 + 2.0 * x184 + x188 * x8
    x202 = -x129 * x188 + 2.0 * x185 + x189 * x8
    x203 = x159 * x78 - x160 * x85 + x28

    # 30 item(s)
    result[0, 0] = numpy.sum(
        x42
        * (
            x1 * (x16 * x18 + x16 * x19 + x18 * x22 + x19 * x27 - x31)
            + x17
            * (
                x1 * (-x11 + x13 + x22)
                + x1 * (x13 - x32 + x33)
                + x17 * (-x15 * x19 + x18 * x22 + x29)
                - x34 * x4
            )
            + x38 * (x18 * x33 + x18 * x36 + x19 * x36 + x19 * (x26 + x37) - x31)
            - x4
            * (
                x1 * (x15 - x23 + x25)
                + x1 * (x25 + x35 - x37)
                + x17 * x34
                - x4 * (x18 * x27 - x19 * (x24 * x3 - x4 * x40) + x39)
            )
        )
    )
    result[0, 1] = numpy.sum(
        -x42
        * (
            -x17 * (-2.0 * x17 * x54 + x19 * x62 + x49)
            + x4 * (-2.0 * x17 * x62 + x19 * (x17 * x60 - x4 * x67) + x64)
            + x68 * (x54 - x55 + x61)
        )
    )
    result[0, 2] = numpy.sum(
        -x42
        * (
            -x17 * (-2.0 * x17 * x80 + x19 * x88 + x75)
            + x4 * (-2.0 * x17 * x88 + x19 * (x17 * x86 - x4 * x93) + x90)
            + x68 * (x80 - x81 + x87)
        )
    )
    result[1, 0] = numpy.sum(
        -x112
        * (
            x1 * (-x104 + x105 + x99)
            + x1 * (-x102 * x17 + x103 + x17 * x96 + x99)
            - x17 * (-2.0 * x105 * x17 + x107 + x108 * x19)
            - x4 * (2.0 * x108 * x17 - x110 + x19 * (x111 * x4 - x3 * x98))
        )
    )
    result[1, 1] = numpy.sum(
        0.5
        * x112
        * (-4.0 * x115 * x17 * x4 + 2.0 * x116 * x4**2 - x119 + 2.0 * x120 * x17**2)
    )
    result[1, 2] = numpy.sum(
        -x112
        * (x123 - 2.0 * x17 * (x124 * x17 - x126 * x4) + x19 * (x126 * x17 - x128 * x4))
    )
    result[2, 0] = numpy.sum(
        -x112
        * (
            x1 * (x134 - x139 + x140)
            + x1 * (x131 * x17 + x134 - x137 * x17 + x138)
            - x17 * (-2.0 * x140 * x17 + x142 + x143 * x19)
            + x4 * (-2.0 * x143 * x17 + x145 + x19 * (x133 * x3 - x146 * x4))
        )
    )
    result[2, 1] = numpy.sum(
        -x112
        * (x151 - 2.0 * x17 * (x152 * x17 - x155 * x4) + x19 * (x155 * x17 - x158 * x4))
    )
    result[2, 2] = numpy.sum(
        x112 * (-2.0 * x161 * x17 * x4 + x162 * x4**2 - x166 + x167 * x17**2)
    )
    result[3, 0] = numpy.sum(
        -x112 * (x17 * (x168 * x4 - x173 * x3) + x172 + x4 * (x168 * x3 - x169 * x4))
    )
    result[3, 1] = numpy.sum(
        x112
        * (
            x17 * (x1 * x48 - x115 * x6 + x120 * x94 - x174)
            - x4 * (x1 * x63 + x115 * x94 - x116 * x6 - x175)
        )
    )
    result[3, 2] = numpy.sum(
        -x112
        * (
            x17 * (-x113 * x124 + x114 * x126 + x176)
            - x4 * (-x113 * x126 + x114 * x128 + x177)
        )
    )
    result[4, 0] = numpy.sum(
        -x41
        * (-2.0 * x17 * (x181 * x3 - x182 * x4) + x180 + x19 * (x182 * x3 - x183 * x4))
    )
    result[4, 1] = numpy.sum(
        -x41
        * (
            x17 * (-x113 * x152 + x114 * x155 + x184)
            - x4 * (-x113 * x155 + x114 * x158 + x185)
        )
    )
    result[4, 2] = numpy.sum(x41 * (x17 * x186 - x187 * x4))
    result[5, 0] = numpy.sum(
        -x112 * (x17 * (x188 * x4 - x193 * x3) + x192 + x4 * (x188 * x3 - x189 * x4))
    )
    result[5, 1] = numpy.sum(x112 * (x17 * x195 - x197 * x4))
    result[5, 2] = numpy.sum(x112 * (-x17 * x198 + x199 * x4))
    result[6, 0] = numpy.sum(
        -x42
        * (
            x3 * (x168 * x6 - x173 * x94 + 2.0 * x174)
            - x4 * (-x168 * x94 + x169 * x6 + 2.0 * x175)
        )
    )
    result[6, 1] = numpy.sum(
        -x42
        * (
            x119
            + x172
            + x6 * (x110 + x200 * x94 - x6 * (x113 * x59 - x114 * x66 + x39) + x64)
            - x94 * (x107 - x200 * x6 + x49 + x94 * (x113 * x47 - x114 * x52 + x29))
        )
    )
    result[6, 2] = numpy.sum(
        -x42
        * (
            2.0 * x123
            + x6 * (x114 * x127 - 2.0 * x125 * x94 + x90)
            - x94 * (x114 * x125 - 2.0 * x122 * x94 + x75)
        )
    )
    result[7, 0] = numpy.sum(
        -x112
        * (
            x3 * (-x113 * x181 + x114 * x182 + x184)
            - x4 * (-x113 * x182 + x114 * x183 + x185)
        )
    )
    result[7, 1] = numpy.sum(
        -x112
        * (
            x151
            + x180
            + x6 * (x114 * x157 + x145 - 2.0 * x154 * x94)
            - x94 * (x114 * x154 + x142 - 2.0 * x150 * x94)
        )
    )
    result[7, 2] = numpy.sum(x112 * (-x166 + x186 * x94 - x187 * x6))
    result[8, 0] = numpy.sum(x112 * (x3 * (x193 * x94 + x194) - x4 * (x188 * x94 + x196)))
    result[8, 1] = numpy.sum(x112 * (-x192 + x195 * x94 - x197 * x6))
    result[8, 2] = numpy.sum(x112 * (-x198 * x94 + x199 * x6))
    result[9, 0] = numpy.sum(x42 * (-x201 * x3 + x202 * x4))
    result[9, 1] = numpy.sum(x42 * (-x201 * x44 + x202 * x6))
    result[9, 2] = numpy.sum(
        -x42
        * (
            -x129 * (x129 * (x159 * x73 - x160 * x78 + x29) + x142 - x203 * x8 + x75)
            + x165
            + x192
            + x8 * (x129 * x203 + x145 - x8 * (x159 * x85 - x160 * x92 + x39) + x90)
        )
    )
    return result


def coulomb3d_32(ax, da, A, bx, db, B, R):
    """Cartesian (fd) 1-electron Coulomb integral.

    Generated code; DO NOT modify by hand!"""

    result = numpy.zeros((10, 6), dtype=float)

    x0 = ax + bx
    x1 = x0 ** (-1.0)
    x2 = -x1 * (ax * A[0] + bx * B[0])
    x3 = x2 + A[0]
    x4 = x2 + B[0]
    x5 = x2 + R[0]
    x6 = -x1 * (ax * A[1] + bx * B[1])
    x7 = x6 + R[1]
    x8 = -x1 * (ax * A[2] + bx * B[2])
    x9 = x8 + R[2]
    x10 = x0 * (x5**2 + x7**2 + x9**2)
    x11 = boys(0, x10)
    x12 = boys(1, x10)
    x13 = -x12 * x5
    x14 = x11 * x4 + x13
    x15 = -x14
    x16 = 2.0 * x4
    x17 = x15 * x16
    x18 = x1 * (x11 - x12)
    x19 = x12 * x4
    x20 = boys(2, x10)
    x21 = x20 * x5
    x22 = -x21
    x23 = x19 + x22
    x24 = -2.0 * x23
    x25 = x24 * x5
    x26 = x18 + x25
    x27 = x20 * x4
    x28 = boys(3, x10)
    x29 = x28 * x5
    x30 = x27 - x29
    x31 = -2.0 * x30
    x32 = x1 * (x20 - x28)
    x33 = x28 * x4
    x34 = boys(4, x10)
    x35 = x33 - x34 * x5
    x36 = 2.0 * x5
    x37 = x32 - x35 * x36
    x38 = -x31 * x4 + x37
    x39 = x24 * x4
    x40 = x1 * (x12 - x20)
    x41 = x31 * x5
    x42 = x40 + x41
    x43 = -x39 + x42
    x44 = x14 - x19 + x21
    x45 = -x1 * x44
    x46 = x23 - x27 + x29
    x47 = -x1 * x46
    x48 = x12 * x3
    x49 = 2.0 * x3
    x50 = x15 * x49
    x51 = -x3 * x31 + x37
    x52 = x24 * x3
    x53 = x42 - x52
    x54 = -x18
    x55 = -x25 + x54
    x56 = x16 * x23 - x30 * x36 + x40
    x57 = x16 * x30 + x32 - x35 * x36
    x58 = 2.0 * x1
    x59 = -x3 * x56 - x46 * x58 + x5 * x57
    x60 = 0.5 * x3
    x61 = -x40
    x62 = -x41 + x61
    x63 = x1 * (x28 - x34)
    x64 = boys(5, x10)
    x65 = (
        3.141592653589793
        * da
        * db
        * numpy.exp(
            -ax * bx * x1 * ((A[0] - B[0]) ** 2 + (A[1] - B[1]) ** 2 + (A[2] - B[2]) ** 2)
        )
    )
    x66 = x1 * x65
    x67 = 0.06666666666666667 * x66
    x68 = 2.23606797749979 * x67
    x69 = x6 + B[1]
    x70 = x12 * x69
    x71 = x20 * x7
    x72 = -x71
    x73 = x70 + x72
    x74 = -x73
    x75 = x4 * x74
    x76 = x20 * x69
    x77 = x28 * x7
    x78 = -x77
    x79 = x76 + x78
    x80 = -x79
    x81 = x5 * x80
    x82 = -x81
    x83 = x75 + x82
    x84 = -x83
    x85 = -x12 * x7
    x86 = x11 * x69 + x85
    x87 = -x86
    x88 = -x5 * x74
    x89 = x4 * x87 + x88
    x90 = x4 * x80
    x91 = x28 * x69
    x92 = x34 * x7
    x93 = -x92
    x94 = x91 + x93
    x95 = -x94
    x96 = x5 * x95
    x97 = -x96
    x98 = x90 + x97
    x99 = x73 - x76 + x77
    x100 = -x1 * x99
    x101 = -x70 + x71 + x86
    x102 = -x1 * x101
    x103 = -x102
    x104 = x100 + x103
    x105 = x3 * x74
    x106 = x3 * x87 + x88
    x107 = x1 * x101
    x108 = x1 * x99
    x109 = -x108 + 2.0 * x3 * x83 - x36 * x98
    x110 = x105 + x82
    x111 = -x110
    x112 = x3 * x80
    x113 = 0.5 * x1
    x114 = x79 - x91 + x92
    x115 = x1 * x114
    x116 = -x64 * x7
    x117 = x116 + x34 * x69
    x118 = -x117
    x119 = 3.872983346207417
    x120 = x119 * x67
    x121 = x8 + B[2]
    x122 = x12 * x121
    x123 = x20 * x9
    x124 = -x123
    x125 = x122 + x124
    x126 = -x125
    x127 = x126 * x4
    x128 = x121 * x20
    x129 = x28 * x9
    x130 = -x129
    x131 = x128 + x130
    x132 = -x131
    x133 = x132 * x5
    x134 = -x133
    x135 = x127 + x134
    x136 = -x135
    x137 = -x12 * x9
    x138 = x11 * x121 + x137
    x139 = -x138
    x140 = -x126 * x5
    x141 = x139 * x4 + x140
    x142 = x132 * x4
    x143 = x121 * x28
    x144 = x34 * x9
    x145 = -x144
    x146 = x143 + x145
    x147 = -x146
    x148 = x147 * x5
    x149 = -x148
    x150 = x142 + x149
    x151 = x125 - x128 + x129
    x152 = -x1 * x151
    x153 = -x122 + x123 + x138
    x154 = -x1 * x153
    x155 = -x154
    x156 = x152 + x155
    x157 = x126 * x3
    x158 = x139 * x3 + x140
    x159 = x1 * x153
    x160 = x1 * x151
    x161 = 2.0 * x135 * x3 - x150 * x36 - x160
    x162 = x134 + x157
    x163 = -x162
    x164 = x132 * x3
    x165 = x131 - x143 + x144
    x166 = x1 * x165
    x167 = -x64 * x9
    x168 = x121 * x34 + x167
    x169 = -x168
    x170 = 2.0 * x80
    x171 = 2.0 * x7
    x172 = x171 * x95 + x32
    x173 = -x170 * x69 + x172
    x174 = x173 * x5
    x175 = 2.0 * x69
    x176 = x175 * x74
    x177 = x170 * x7
    x178 = x177 + x40
    x179 = -x176 + x178
    x180 = x179 * x3
    x181 = x175 * x87
    x182 = x171 * x74
    x183 = x18 + x182
    x184 = -x181 + x183
    x185 = -x179 * x5 + x184 * x3
    x186 = -x182 + x54
    x187 = x179 + x181 + x186
    x188 = x1 * x187
    x189 = -x174 + x180
    x190 = -x177 + x61
    x191 = x173 + x176 + x190
    x192 = x1 * x191
    x193 = x118 * x171 + x63
    x194 = -x175 * x95 + x193
    x195 = x132 * x7
    x196 = x126 * x69
    x197 = -x126 * x7
    x198 = x139 * x69 + x197
    x199 = x195 - x196 + x198
    x200 = x1 * x199
    x201 = -x198
    x202 = -x195
    x203 = x196 + x202
    x204 = -x203
    x205 = x201 * x3 - x204 * x5
    x206 = x204 * x3
    x207 = x132 * x69
    x208 = x147 * x7
    x209 = -x208
    x210 = x207 + x209
    x211 = -x210
    x212 = x211 * x5
    x213 = x206 - x212
    x214 = x203 - x207 + x208
    x215 = x1 * x214
    x216 = -x169 * x7
    x217 = x147 * x69 + x216
    x218 = -x217
    x219 = 2.0 * x132
    x220 = 2.0 * x9
    x221 = x147 * x220 + x32
    x222 = -x121 * x219 + x221
    x223 = x222 * x5
    x224 = 2.0 * x121
    x225 = x126 * x224
    x226 = x219 * x9
    x227 = x226 + x40
    x228 = -x225 + x227
    x229 = x228 * x3
    x230 = x139 * x224
    x231 = x126 * x220
    x232 = x18 + x231
    x233 = -x230 + x232
    x234 = -x228 * x5 + x233 * x3
    x235 = -x231 + x54
    x236 = x228 + x230 + x235
    x237 = x1 * x236
    x238 = -x223 + x229
    x239 = -x226 + x61
    x240 = x222 + x225 + x239
    x241 = x1 * x240
    x242 = x169 * x220 + x63
    x243 = -x147 * x224 + x242
    x244 = x6 + A[1]
    x245 = x12 * x244
    x246 = x245 + x72
    x247 = -x246
    x248 = x247 * x4
    x249 = x20 * x244
    x250 = x249 + x78
    x251 = -x250
    x252 = x251 * x5
    x253 = x248 - x252
    x254 = -x253
    x255 = x11 * x244 + x85
    x256 = -x255
    x257 = -x247 * x5 + x256 * x4
    x258 = -x257
    x259 = x246 - x249 + x77
    x260 = -x1 * x259
    x261 = -x245 + x255 + x71
    x262 = -x1 * x261
    x263 = -x262
    x264 = x251 * x4
    x265 = x244 * x28
    x266 = -x265 - x93
    x267 = x266 * x5
    x268 = x264 - x267
    x269 = -x254 * x36 + x260 + x263 - x268 * x36
    x270 = -x1 * x259 + 2.0 * x253 * x4 - x268 * x36
    x271 = x250 - x265 + x92
    x272 = -x116 - x244 * x34
    x273 = 0.3333333333333333 * x66
    x274 = 2.0 * x244
    x275 = x274 * x87
    x276 = x183 - x275
    x277 = -x170 * x244 + x172
    x278 = x277 * x5
    x279 = x274 * x74
    x280 = x178 - x279
    x281 = -x280 * x5
    x282 = x280 * x4
    x283 = x276 * x4 + x281
    x284 = x186 + x275 + x280
    x285 = x1 * x284
    x286 = -x278 + x282
    x287 = x190 + x277 + x279
    x288 = x1 * x287
    x289 = x193 - x274 * x95
    x290 = 1.732050807568877
    x291 = 0.1666666666666667 * x66
    x292 = x290 * x291
    x293 = x139 * x244 + x197
    x294 = -x293
    x295 = x132 * x244
    x296 = -x209 - x295
    x297 = x296 * x5
    x298 = x126 * x244
    x299 = x202 + x298
    x300 = -x299
    x301 = -x300 * x5
    x302 = x300 * x4
    x303 = x294 * x4 + x301
    x304 = x195 + x293 - x298
    x305 = x1 * x304
    x306 = -x297 + x302
    x307 = x208 - x295 + x299
    x308 = x1 * x307
    x309 = -x147 * x244 - x216
    x310 = x273 * x290
    x311 = 2.0 * x100 + x173 * x7 - x179 * x244
    x312 = -x1 * x114
    x313 = -x173 * x244 + x194 * x7 + 2.0 * x312
    x314 = x184 * x244
    x315 = x179 * x7
    x316 = 2.0 * x102
    x317 = x1 * (x311 + x314 - x315 - x316)
    x318 = -x314 + x315 + x316
    x319 = x152 + x171 * x211 - x204 * x274
    x320 = -x1 * x165
    x321 = x171 * x218 - x211 * x274 + x320
    x322 = x171 * x204
    x323 = x201 * x274
    x324 = x1 * (x155 + x319 - x322 + x323)
    x325 = x154 + x322 - x323
    x326 = x228 * x244
    x327 = -x222 * x7 + x326
    x328 = -x327
    x329 = x222 * x244 - x243 * x7
    x330 = -x329
    x331 = -x228 * x7 + x233 * x244
    x332 = x1 * (x222 * x7 - x326 + x331)
    x333 = -x331
    x334 = x8 + A[2]
    x335 = x12 * x334
    x336 = x124 + x335
    x337 = -x336
    x338 = x337 * x4
    x339 = x20 * x334
    x340 = x130 + x339
    x341 = -x340
    x342 = x341 * x5
    x343 = x338 - x342
    x344 = -x343
    x345 = x11 * x334 + x137
    x346 = -x345
    x347 = -x337 * x5 + x346 * x4
    x348 = -x347
    x349 = x129 + x336 - x339
    x350 = -x1 * x349
    x351 = x123 - x335 + x345
    x352 = -x1 * x351
    x353 = -x352
    x354 = x341 * x4
    x355 = x28 * x334
    x356 = -x145 - x355
    x357 = x356 * x5
    x358 = x354 - x357
    x359 = -x344 * x36 + x350 + x353 - x358 * x36
    x360 = x1 * x351
    x361 = x1 * x349
    x362 = 2.0 * x343 * x4 - x358 * x36 - x361
    x363 = x144 + x340 - x355
    x364 = x1 * x363
    x365 = -x167 - x334 * x34
    x366 = -x337 * x7
    x367 = x346 * x69 + x366
    x368 = -x367
    x369 = x341 * x69
    x370 = x356 * x7
    x371 = -x370
    x372 = x369 + x371
    x373 = -x372
    x374 = x373 * x5
    x375 = x337 * x69
    x376 = x341 * x7
    x377 = -x376
    x378 = x375 + x377
    x379 = -x378
    x380 = -x379 * x5
    x381 = x379 * x4
    x382 = x368 * x4 + x380
    x383 = x367 - x375 + x376
    x384 = x1 * x383
    x385 = -x374 + x381
    x386 = -x369 + x370 + x378
    x387 = x1 * x386
    x388 = -x365 * x7
    x389 = x356 * x69 + x388
    x390 = -x389
    x391 = 2.0 * x334
    x392 = x139 * x391
    x393 = x232 - x392
    x394 = -x219 * x334 + x221
    x395 = x394 * x5
    x396 = x126 * x391
    x397 = x227 - x396
    x398 = -x397 * x5
    x399 = x397 * x4
    x400 = x393 * x4 + x398
    x401 = x235 + x392 + x397
    x402 = x1 * x401
    x403 = -x395 + x399
    x404 = x239 + x394 + x396
    x405 = x1 * x404
    x406 = -x147 * x391 + x242
    x407 = x171 * x373 + x350
    x408 = -x175 * x379 + x407
    x409 = -x1 * x363
    x410 = x171 * x390 + x409
    x411 = -x175 * x373 + x410
    x412 = x175 * x368
    x413 = x171 * x379
    x414 = x353 - x413
    x415 = x113 * (x408 + x412 + x414)
    x416 = x352 + x413
    x417 = -x412 + x416
    x418 = x397 * x69
    x419 = -x394 * x7
    x420 = x418 + x419
    x421 = -x420
    x422 = -x406 * x7
    x423 = x394 * x69 + x422
    x424 = -x423
    x425 = x394 * x7
    x426 = -x397 * x7
    x427 = x393 * x69 + x426
    x428 = x1 * (-x418 + x425 + x427)
    x429 = -x427
    x430 = 2.0 * x152 + x222 * x9 - x228 * x334
    x431 = -x222 * x334 + x243 * x9 + 2.0 * x320
    x432 = x233 * x334
    x433 = x228 * x9
    x434 = 2.0 * x154
    x435 = x1 * (x430 + x432 - x433 - x434)
    x436 = 0.5 * x435
    x437 = -x432 + x433 + x434
    x438 = x171 * x266 - x251 * x274 + x32
    x439 = x438 * x5
    x440 = x247 * x274
    x441 = x171 * x251
    x442 = x40 - x440 + x441
    x443 = x4 * x442
    x444 = x256 * x274
    x445 = x171 * x247
    x446 = x18 - x444 + x445
    x447 = x4 * x446 - x442 * x5
    x448 = x442 + x444 - x445 + x54
    x449 = -x439 + x443
    x450 = x438 + x440 - x441 + x61
    x451 = x171 * x272 - x266 * x274 + x63
    x452 = x100 - x244 * x280 + x260 + x277 * x7
    x453 = -x1 * x271
    x454 = -x244 * x277 + x289 * x7 + x312 + x453
    x455 = x244 * x276
    x456 = x280 * x7
    x457 = x1 * (x103 + x263 + x452 + x455 - x456)
    x458 = x102 + x262 - x455 + x456
    x459 = x152 + x171 * x296 - x274 * x300
    x460 = x171 * x309 - x274 * x296 + x320
    x461 = x171 * x300
    x462 = x274 * x294
    x463 = x113 * (x155 + x459 - x461 + x462)
    x464 = x154 + x461 - x462
    x465 = -x284 * x58
    x466 = -x287 * x58
    x467 = -x1 * x304
    x468 = -x1 * x307
    x469 = -x1 * x236
    x470 = -x1 * x240
    x471 = x244 * x337
    x472 = x244 * x346 + x366
    x473 = x376 - x471 + x472
    x474 = -x472
    x475 = x377 + x471
    x476 = -x475
    x477 = x4 * x474 - x476 * x5
    x478 = x4 * x476
    x479 = x244 * x341
    x480 = -x371 - x479
    x481 = x480 * x5
    x482 = x478 - x481
    x483 = x370 + x475 - x479
    x484 = -x244 * x356 - x388
    x485 = -x274 * x379 + x407
    x486 = -x274 * x373 + x410
    x487 = x274 * x368
    x488 = x1 * (x414 + x485 + x487)
    x489 = x416 - x487
    x490 = x244 * x397
    x491 = -x419 - x490
    x492 = -x244 * x394 - x422
    x493 = x244 * x393 + x426
    x494 = x1 * (x425 - x490 + x493)
    x495 = -x493
    x496 = -x1 * x383
    x497 = -x1 * x386
    x498 = -x1 * x401
    x499 = -x1 * x404
    x500 = x244 * x437 - x430 * x7
    x501 = x244 * x430 - x431 * x7
    x502 = x220 * x356 + x32 - x341 * x391
    x503 = x5 * x502
    x504 = x337 * x391
    x505 = x220 * x341
    x506 = x40 - x504 + x505
    x507 = x4 * x506
    x508 = x346 * x391
    x509 = x220 * x337
    x510 = x18 - x508 + x509
    x511 = x4 * x510 - x5 * x506
    x512 = x506 + x508 - x509 + x54
    x513 = x1 * x512
    x514 = -x503 + x507
    x515 = x502 + x504 - x505 + x61
    x516 = x1 * x515
    x517 = x220 * x365 - x356 * x391 + x63
    x518 = x506 * x69
    x519 = -x502 * x7
    x520 = x518 + x519
    x521 = -x520
    x522 = -x517 * x7
    x523 = x502 * x69 + x522
    x524 = -x523
    x525 = x502 * x7
    x526 = -x506 * x7
    x527 = x510 * x69 + x526
    x528 = x1 * (-x518 + x525 + x527)
    x529 = -x527
    x530 = x152 - x334 * x397 + x350 + x394 * x9
    x531 = x320 - x334 * x394 + x406 * x9 + x409
    x532 = x334 * x393
    x533 = x397 * x9
    x534 = x1 * (x155 + x353 + x530 + x532 - x533)
    x535 = 0.5 * x534
    x536 = x154 + x352 - x532 + x533
    x537 = -x1 * x512
    x538 = x171 * x521 + x537
    x539 = -x1 * x515
    x540 = x171 * x524 + x539
    x541 = -x530 * x7
    x542 = x536 * x69 + x541
    x543 = -x531 * x7
    x544 = x530 * x69 + x543
    x545 = 2.0 * x498
    x546 = x220 * x430 - x391 * x437 + x469 + x545
    x547 = 2.0 * x499
    x548 = x220 * x431 - x391 * x430 + x470 + x547
    x549 = -x244 * x442 + 2.0 * x260 + x438 * x7
    x550 = x244 * x446
    x551 = x442 * x7
    x552 = 2.0 * x262
    x553 = 0.03333333333333333 * x119 * x66
    x554 = -x171 * x79 + x175 * x73 + x40
    x555 = -x171 * x94 + x175 * x79 + x32
    x556 = -2.0 * x108 - x244 * x554 + x555 * x7
    x557 = 0.5 * x244
    x558 = -x160 - x171 * x210 + 2.0 * x203 * x244
    x559 = x171 * x480 - x274 * x476 + x350
    x560 = x171 * x476
    x561 = x274 * x474
    x562 = -x171 * x372 - x361 + 2.0 * x378 * x69
    x563 = x244 * x506
    x564 = -x519 - x563
    x565 = x244 * x510 + x526
    x566 = -x334 * x506 + 2.0 * x350 + x502 * x9
    x567 = -x334 * x502 + 2.0 * x409 + x517 * x9
    x568 = x334 * x510
    x569 = x506 * x9
    x570 = 2.0 * x352
    x571 = x113 * (x566 + x568 - x569 - x570)
    x572 = -x568 + x569 + x570
    x573 = -x566 * x7 + x572 * x69
    x574 = x566 * x69 - x567 * x7
    x575 = x220 * x530 - x391 * x536 + x537 + x545
    x576 = x220 * x531 - x391 * x530 + x539 + x547
    x577 = x125 * x224 - x131 * x220 + x40
    x578 = x131 * x224 - x146 * x220 + x32
    x579 = -2.0 * x160 - x334 * x577 + x578 * x9

    # 60 item(s)
    result[0, 0] = numpy.sum(
        0.5
        * x68
        * (
            2.0
            * x1
            * (x3 * x43 + x3 * (x17 - x26) - x38 * x5 + x43 * x5 + 2.0 * x45 - 2.0 * x47)
            + 2.0
            * x1
            * (
                -x1 * (x11 * x3 + x13 + x21 - x48)
                + x1 * (-x20 * x3 + x22 + x29 + x48)
                + x3 * x53
                - x3 * (x26 - x50)
                + x45
                - x47
                - x5 * x51
                + x5 * x53
            )
            - x5
            * (
                x1 * (x38 + x39 + x62)
                + x49 * x59
                + 2.0
                * x5
                * (
                    x3 * x57
                    - x5 * (x16 * x35 - x36 * (x34 * x4 - x5 * x64) + x63)
                    + x58 * (x30 - x33 + x34 * x5)
                )
                + x58 * (x51 + x52 + x62)
            )
            + 2.0
            * x60
            * (
                x1 * (x17 + x43 + x55)
                - x49 * (x3 * (x14 * x16 + x18 - x23 * x36) + x44 * x58 - x5 * x56)
                - 2.0 * x5 * x59
                + x58 * (x50 + x53 + x55)
            )
        )
    )
    result[0, 1] = numpy.sum(
        x120
        * (
            x1 * (-x104 + x36 * x84 + x36 * x98 + x49 * x84 + x49 * x89)
            + x113 * (-x104 + x106 * x49 + x111 * x36 + x111 * x49 + x36 * (x112 + x97))
            + x3
            * (
                x1 * (-x105 + x106 + x81)
                + x1 * (-x75 + x81 + x89)
                - x109 * x5
                - x3 * (x107 - 2.0 * x3 * x89 + x36 * x83)
            )
            - x5
            * (
                x1 * (x110 - x112 + x96)
                + x1 * (x83 - x90 + x96)
                + x109 * x3
                + x5 * (x115 - 2.0 * x3 * x98 + x36 * (-x118 * x5 + x4 * x95))
            )
        )
    )
    result[0, 2] = numpy.sum(
        x120
        * (
            x1 * (x136 * x36 + x136 * x49 + x141 * x49 + x150 * x36 - x156)
            + x113 * (-x156 + x158 * x49 + x163 * x36 + x163 * x49 + x36 * (x149 + x164))
            + x3
            * (
                x1 * (-x127 + x133 + x141)
                + x1 * (x133 - x157 + x158)
                - x161 * x5
                - x3 * (x135 * x36 - 2.0 * x141 * x3 + x159)
            )
            - x5
            * (
                x1 * (x135 - x142 + x148)
                + x1 * (x148 + x162 - x164)
                + x161 * x3
                + x5 * (-2.0 * x150 * x3 + x166 + x36 * (x147 * x4 - x169 * x5))
            )
        )
    )
    result[0, 3] = numpy.sum(
        -0.5
        * x68
        * (
            2.0 * x1 * (x174 - x180 + x185)
            + x5 * (-2.0 * x189 * x3 + x192 + x36 * (x173 * x3 - x194 * x5))
            - 2.0 * x60 * (-2.0 * x185 * x3 + x188 + x189 * x36)
        )
    )
    result[0, 4] = numpy.sum(
        -x120
        * (
            -x3 * (x200 - 2.0 * x205 * x3 + x213 * x36)
            + x5 * (-2.0 * x213 * x3 + x215 + x36 * (x211 * x3 - x218 * x5))
            + x58 * (x205 - x206 + x212)
        )
    )
    result[0, 5] = numpy.sum(
        -0.5
        * x68
        * (
            2.0 * x1 * (x223 - x229 + x234)
            + x5 * (-2.0 * x238 * x3 + x241 + x36 * (x222 * x3 - x243 * x5))
            - 2.0 * x60 * (-2.0 * x234 * x3 + x237 + x238 * x36)
        )
    )
    result[1, 0] = numpy.sum(
        -x273
        * (
            x1 * (-x254 * x49 + x258 * x49 + x269)
            + x113 * (-x16 * x254 + x16 * x258 + x269)
            + x3
            * (
                x270 * x5
                + x3 * (x1 * x261 + x253 * x36 - 2.0 * x257 * x4)
                - x58 * (-x248 + x252 + x257)
            )
            + x5
            * (
                x270 * x3
                + x5 * (x1 * x271 - 2.0 * x268 * x4 + x36 * (x266 * x4 - x272 * x5))
                + x58 * (x253 - x264 + x267)
            )
        )
    )
    result[1, 1] = numpy.sum(
        -x292
        * (
            x1 * (x278 - x282 + x283)
            + x1 * (x276 * x3 + x278 - x280 * x3 + x281)
            - x3 * (-2.0 * x283 * x3 + x285 + x286 * x36)
            + x5 * (-2.0 * x286 * x3 + x288 + x36 * (x277 * x4 - x289 * x5))
        )
    )
    result[1, 2] = numpy.sum(
        -x310
        * (
            x1 * (x297 - x302 + x303)
            + x1 * (x294 * x3 + x297 - x3 * x300 + x301)
            - x3 * (-2.0 * x3 * x303 + x305 + x306 * x36)
            + x5 * (-2.0 * x3 * x306 + x308 + x36 * (x296 * x4 - x309 * x5))
        )
    )
    result[1, 3] = numpy.sum(
        0.5
        * x273
        * (2.0 * x3**2 * x318 - 4.0 * x3 * x311 * x5 + 2.0 * x313 * x5**2 - x317)
    )
    result[1, 4] = numpy.sum(
        0.5
        * x310
        * (2.0 * x3**2 * x325 - 4.0 * x3 * x319 * x5 + 2.0 * x321 * x5**2 - x324)
    )
    result[1, 5] = numpy.sum(
        0.5
        * x273
        * (2.0 * x3**2 * x333 - 4.0 * x3 * x328 * x5 + 2.0 * x330 * x5**2 - x332)
    )
    result[2, 0] = numpy.sum(
        -x273
        * (
            x1 * (-x344 * x49 + x348 * x49 + x359)
            + x113 * (-x16 * x344 + x16 * x348 + x359)
            + x3
            * (
                x3 * (x343 * x36 - 2.0 * x347 * x4 + x360)
                + x362 * x5
                - x58 * (-x338 + x342 + x347)
            )
            + x5
            * (
                x3 * x362
                + x5 * (-2.0 * x358 * x4 + x36 * (x356 * x4 - x365 * x5) + x364)
                + x58 * (x343 - x354 + x357)
            )
        )
    )
    result[2, 1] = numpy.sum(
        -x310
        * (
            x1 * (x374 - x381 + x382)
            + x1 * (x3 * x368 - x3 * x379 + x374 + x380)
            - x3 * (-2.0 * x3 * x382 + x36 * x385 + x384)
            + x5 * (-2.0 * x3 * x385 + x36 * (x373 * x4 - x390 * x5) + x387)
        )
    )
    result[2, 2] = numpy.sum(
        -x292
        * (
            x1 * (x395 - x399 + x400)
            + x1 * (x3 * x393 - x3 * x397 + x395 + x398)
            - x3 * (-2.0 * x3 * x400 + x36 * x403 + x402)
            + x5 * (-2.0 * x3 * x403 + x36 * (x394 * x4 - x406 * x5) + x405)
        )
    )
    result[2, 3] = numpy.sum(
        x273 * (x3**2 * x417 - 2.0 * x3 * x408 * x5 + x411 * x5**2 - x415)
    )
    result[2, 4] = numpy.sum(
        0.5
        * x310
        * (2.0 * x3**2 * x429 - 4.0 * x3 * x421 * x5 + 2.0 * x424 * x5**2 - x428)
    )
    result[2, 5] = numpy.sum(
        x273 * (x3**2 * x437 - 2.0 * x3 * x430 * x5 + x431 * x5**2 - x436)
    )
    result[3, 0] = numpy.sum(
        -0.5
        * x273
        * (
            2.0 * x1 * (x439 - x443 + x447)
            + x5 * (x1 * x450 + x36 * (x4 * x438 - x451 * x5) - 2.0 * x4 * x449)
            - 2.0 * x60 * (x1 * x448 + x36 * x449 - 2.0 * x4 * x447)
        )
    )
    result[3, 1] = numpy.sum(
        -0.5
        * x310
        * (
            -2.0 * x3 * (x4 * x458 - x452 * x5)
            + x457
            + 2.0 * x5 * (x4 * x452 - x454 * x5)
        )
    )
    result[3, 2] = numpy.sum(
        -x310 * (-x3 * (x4 * x464 - x459 * x5) + x463 + x5 * (x4 * x459 - x460 * x5))
    )
    result[3, 3] = numpy.sum(
        x291
        * (
            x3 * (x1 * x187 - x171 * x311 + x274 * x318 - x465)
            - x5 * (x1 * x191 - x171 * x313 + x274 * x311 - x466)
        )
    )
    result[3, 4] = numpy.sum(
        x310
        * (
            x3 * (x1 * x199 + x244 * x325 - x319 * x7 - x467)
            - x5 * (x1 * x214 + x244 * x319 - x321 * x7 - x468)
        )
    )
    result[3, 5] = numpy.sum(
        -x291
        * (
            x3 * (x171 * x328 - x274 * x333 + x469)
            - x5 * (x171 * x330 - x274 * x328 + x470)
        )
    )
    result[4, 0] = numpy.sum(
        -x310
        * (
            -x3 * (x1 * x473 + x36 * x482 - 2.0 * x4 * x477)
            + x5 * (x1 * x483 + x36 * (x4 * x480 - x484 * x5) - 2.0 * x4 * x482)
            + x58 * (x477 - x478 + x481)
        )
    )
    result[4, 1] = numpy.sum(
        -0.5
        * x66
        * (
            -2.0 * x3 * (x4 * x489 - x485 * x5)
            + x488
            + 2.0 * x5 * (x4 * x485 - x486 * x5)
        )
    )
    result[4, 2] = numpy.sum(
        -0.5
        * x66
        * (
            -2.0 * x3 * (x4 * x495 - x491 * x5)
            + x494
            + 2.0 * x5 * (x4 * x491 - x492 * x5)
        )
    )
    result[4, 3] = numpy.sum(
        -x310
        * (
            x3 * (-x244 * x417 + x408 * x7 + 2.0 * x496)
            - x5 * (-x244 * x408 + x411 * x7 + 2.0 * x497)
        )
    )
    result[4, 4] = numpy.sum(
        -x113
        * x65
        * (
            x3 * (x171 * x421 - x274 * x429 + x498)
            - x5 * (x171 * x424 - x274 * x421 + x499)
        )
    )
    result[4, 5] = numpy.sum(x310 * (x3 * x500 - x5 * x501))
    result[5, 0] = numpy.sum(
        -0.5
        * x273
        * (
            2.0 * x1 * (x503 - x507 + x511)
            + x5 * (x36 * (x4 * x502 - x5 * x517) - 2.0 * x4 * x514 + x516)
            - 2.0 * x60 * (x36 * x514 - 2.0 * x4 * x511 + x513)
        )
    )
    result[5, 1] = numpy.sum(
        -0.5
        * x310
        * (
            -2.0 * x3 * (x4 * x529 - x5 * x521)
            + 2.0 * x5 * (x4 * x521 - x5 * x524)
            + x528
        )
    )
    result[5, 2] = numpy.sum(
        -x310 * (-x3 * (x4 * x536 - x5 * x530) + x5 * (x4 * x530 - x5 * x531) + x535)
    )
    result[5, 3] = numpy.sum(
        x291 * (x3 * (x175 * x529 - x538) - x5 * (x175 * x521 - x540))
    )
    result[5, 4] = numpy.sum(x310 * (x3 * x542 - x5 * x544))
    result[5, 5] = numpy.sum(x291 * (-x3 * x546 + x5 * x548))
    result[6, 0] = numpy.sum(
        -x68
        * (
            x113 * (x549 + x550 - x551 - x552)
            - x4 * (x4 * (-x550 + x551 + x552) - x5 * x549)
            + x5 * (x4 * x549 - x5 * (-x244 * x438 + x451 * x7 + 2.0 * x453))
        )
    )
    result[6, 1] = numpy.sum(
        x553
        * (
            x4 * (x1 * x448 - x171 * x452 + x274 * x458 - x465)
            - x5 * (x1 * x450 - x171 * x454 + x274 * x452 - x466)
        )
    )
    result[6, 2] = numpy.sum(
        -x120
        * (
            x4 * (-x244 * x464 + x459 * x7 + 2.0 * x467)
            - x5 * (-x244 * x459 + x460 * x7 + 2.0 * x468)
        )
    )
    result[6, 3] = numpy.sum(
        -0.5
        * x68
        * (
            2.0 * x317
            + 2.0 * x457
            - 2.0
            * x557
            * (
                x188
                - x274
                * (2.0 * x107 + x244 * (-x171 * x73 + x175 * x86 + x18) - x554 * x7)
                + 2.0 * x285
                - 2.0 * x556 * x7
            )
            + x7
            * (
                x192
                + x274 * x556
                + 2.0 * x288
                + 2.0
                * x7
                * (2.0 * x115 + x244 * x555 - x7 * (-x117 * x171 + x175 * x94 + x63))
            )
        )
    )
    result[6, 4] = numpy.sum(
        -x120
        * (
            -x244
            * (x200 - x244 * (x159 + x171 * x203 - 2.0 * x198 * x244) + x305 - x558 * x7)
            + x324
            + x463
            + x7
            * (x215 + x244 * x558 + x308 + x7 * (x166 + x171 * x217 - 2.0 * x210 * x244))
        )
    )
    result[6, 5] = numpy.sum(
        -0.5
        * x68
        * (
            2.0 * x332
            - 2.0 * x557 * (x171 * x327 + x237 - 2.0 * x244 * x331)
            + x7 * (x171 * x329 + x241 - 2.0 * x244 * x327)
        )
    )
    result[7, 0] = numpy.sum(
        -x273
        * (
            x113 * (x353 + x559 - x560 + x561)
            - x4 * (x4 * (x352 + x560 - x561) - x5 * x559)
            + x5 * (x4 * x559 - x5 * (x171 * x484 - x274 * x480 + x409))
        )
    )
    result[7, 1] = numpy.sum(
        x310
        * (
            x4 * (x1 * x473 + x244 * x489 - x485 * x7 - x496)
            - x5 * (x1 * x483 + x244 * x485 - x486 * x7 - x497)
        )
    )
    result[7, 2] = numpy.sum(
        -x292
        * (
            x4 * (x171 * x491 - x274 * x495 + x498)
            - x5 * (x171 * x492 - x274 * x491 + x499)
        )
    )
    result[7, 3] = numpy.sum(
        -x273
        * (
            x244
            * (x244 * (x171 * x378 + x360 - 2.0 * x367 * x69) - 2.0 * x384 + x562 * x7)
            + x415
            + x488
            + x7
            * (x244 * x562 + 2.0 * x387 + x7 * (x171 * x389 + x364 - 2.0 * x372 * x69))
        )
    )
    result[7, 4] = numpy.sum(
        -x292
        * (
            -x244 * (x171 * x420 - 2.0 * x244 * x427 + x402)
            + x428
            + x494
            + x7 * (x171 * x423 - 2.0 * x244 * x420 + x405)
        )
    )
    result[7, 5] = numpy.sum(x273 * (x244 * x500 - x436 - x501 * x7))
    result[8, 0] = numpy.sum(
        -x273
        * (
            x113 * (x525 - x563 + x565)
            + x4 * (x4 * x565 + x5 * x564)
            + x5 * (x4 * x564 + x5 * (x244 * x502 + x522))
        )
    )
    result[8, 1] = numpy.sum(
        x292 * (x4 * (x274 * x529 - x538) - x5 * (x274 * x521 - x540))
    )
    result[8, 2] = numpy.sum(
        x310 * (x4 * (x244 * x536 + x541) - x5 * (x244 * x530 + x543))
    )
    result[8, 3] = numpy.sum(
        -0.5
        * x273
        * (
            2.0 * x528
            - 2.0 * x557 * (x171 * x520 + x513 - 2.0 * x527 * x69)
            + x7 * (x171 * x523 + x516 - 2.0 * x520 * x69)
        )
    )
    result[8, 4] = numpy.sum(x310 * (x244 * x542 - x535 - x544 * x7))
    result[8, 5] = numpy.sum(x291 * (-x244 * x546 + x548 * x7))
    result[9, 0] = numpy.sum(
        x68 * (x4**2 * x572 - 2.0 * x4 * x5 * x566 + x5**2 * x567 - x571)
    )
    result[9, 1] = numpy.sum(x120 * (x4 * x573 - x5 * x574))
    result[9, 2] = numpy.sum(x553 * (-x4 * x575 + x5 * x576))
    result[9, 3] = numpy.sum(x68 * (-x571 + x573 * x69 - x574 * x7))
    result[9, 4] = numpy.sum(x553 * (-x575 * x69 + x576 * x7))
    result[9, 5] = numpy.sum(
        -0.5
        * x68
        * (
            -x334
            * (
                x237
                - x391
                * (2.0 * x159 + x334 * (-x125 * x220 + x138 * x224 + x18) - x577 * x9)
                + 2.0 * x402
                - 2.0 * x579 * x9
            )
            + 2.0 * x435
            + 2.0 * x534
            + x9
            * (
                x241
                + x391 * x579
                + 2.0 * x405
                + 2.0
                * x9
                * (2.0 * x166 + x334 * x578 - x9 * (x146 * x224 - x168 * x220 + x63))
            )
        )
    )
    return result


def coulomb3d_33(ax, da, A, bx, db, B, R):
    """Cartesian (ff) 1-electron Coulomb integral.

    Generated code; DO NOT modify by hand!"""

    result = numpy.zeros((10, 10), dtype=float)

    x0 = ax + bx
    x1 = x0 ** (-1.0)
    x2 = -x1 * (ax * A[0] + bx * B[0])
    x3 = x2 + R[0]
    x4 = x2 + B[0]
    x5 = -x1 * (ax * A[1] + bx * B[1])
    x6 = x5 + R[1]
    x7 = -x1 * (ax * A[2] + bx * B[2])
    x8 = x7 + R[2]
    x9 = x0 * (x3**2 + x6**2 + x8**2)
    x10 = boys(1, x9)
    x11 = x10 * x4
    x12 = boys(2, x9)
    x13 = x12 * x3
    x14 = x11 - x13
    x15 = -x14
    x16 = 2.0 * x4
    x17 = x15 * x16
    x18 = x1 * (x10 - x12)
    x19 = x12 * x4
    x20 = boys(3, x9)
    x21 = x20 * x3
    x22 = x19 - x21
    x23 = -x22
    x24 = 2.0 * x3
    x25 = x23 * x24
    x26 = x18 + x25
    x27 = -x17 + x26
    x28 = x27 * x4
    x29 = x16 * x23
    x30 = x1 * (x12 - x20)
    x31 = x20 * x4
    x32 = boys(4, x9)
    x33 = x3 * x32
    x34 = x31 - x33
    x35 = -x34
    x36 = x24 * x35
    x37 = x30 + x36
    x38 = -x29 + x37
    x39 = x1 * (x20 - x32)
    x40 = x32 * x4
    x41 = boys(5, x9)
    x42 = -x3 * x41 + x40
    x43 = -x16 * x35 - x24 * x42 + x39
    x44 = x22 - x31 + x33
    x45 = 2.0 * x1
    x46 = x3 * x43 - x44 * x45
    x47 = -x38 * x4 + x46
    x48 = x3 * x38
    x49 = x14 - x19 + x21
    x50 = -x45 * x49
    x51 = -x48 - x50
    x52 = x2 + A[0]
    x53 = x16 * x22 - x24 * x34 + x30
    x54 = x16 * x34 - x24 * x42 + x39
    x55 = x3 * x54 - x4 * x53 - x44 * x45
    x56 = x14 * x16 + x18 - x22 * x24
    x57 = x3 * x53 - x4 * x56 - x45 * x49
    x58 = 2.0 * x52
    x59 = -x18
    x60 = -x25 + x59
    x61 = x17 + x38 + x60
    x62 = 3.0 * x1
    x63 = 2.0 * x3 * x55 - x57 * x58 - x61 * x62
    x64 = x1 * (x32 - x41)
    x65 = boys(6, x9)
    x66 = -x30
    x67 = x27 * x52
    x68 = -x38 * x52 + x46
    x69 = boys(0, x9)
    x70 = -x10 * x3 + x4 * x69
    x71 = -x70
    x72 = x16 * x71
    x73 = -x10 + x69
    x74 = -x1 * x73
    x75 = -2.0 * x15 * x3 + x74
    x76 = x27 + x72 + x75
    x77 = -x1 * x76
    x78 = x48 + x50
    x79 = -x28 + x78
    x80 = x1 * x73
    x81 = x15 * x24 - x72 + x80
    x82 = x4 * x81
    x83 = x27 * x3
    x84 = -x11 + x13 + x70
    x85 = -x45 * x84
    x86 = x83 + x85
    x87 = -x1 * x61
    x88 = -x83 - x85
    x89 = x52 * x81
    x90 = -x67 + x78
    x91 = x15 * x58
    x92 = (
        3.141592653589793
        * da
        * db
        * x1
        * numpy.exp(
            -ax * bx * x1 * ((A[0] - B[0]) ** 2 + (A[1] - B[1]) ** 2 + (A[2] - B[2]) ** 2)
        )
    )
    x93 = 0.01666666666666667 * x92
    x94 = x5 + B[1]
    x95 = -x10 * x6
    x96 = x69 * x94 + x95
    x97 = -x96
    x98 = x10 * x94
    x99 = x12 * x6
    x100 = -x99
    x101 = x100 + x98
    x102 = -x101
    x103 = -x102 * x3
    x104 = x103 + x4 * x97
    x105 = -x104
    x106 = x105 * x16
    x107 = x96 - x98 + x99
    x108 = -x1 * x107
    x109 = x102 * x4
    x110 = x12 * x94
    x111 = x20 * x6
    x112 = -x111
    x113 = x110 + x112
    x114 = -x113
    x115 = x114 * x3
    x116 = -x115
    x117 = x109 + x116
    x118 = -x117
    x119 = x118 * x24
    x120 = x108 + x119
    x121 = x114 * x4
    x122 = x20 * x94
    x123 = x32 * x6
    x124 = -x123
    x125 = x122 + x124
    x126 = -x125
    x127 = x126 * x3
    x128 = x121 - x127
    x129 = -x128
    x130 = x113 - x122 + x123
    x131 = -x1 * x130
    x132 = x126 * x4
    x133 = x32 * x94
    x134 = x41 * x6
    x135 = -x134
    x136 = x133 + x135
    x137 = -x136
    x138 = x132 - x137 * x3
    x139 = x131 - x138 * x24
    x140 = -x129 * x16 + x139
    x141 = x118 * x16
    x142 = x101 - x110 + x111
    x143 = -x1 * x142
    x144 = x129 * x24
    x145 = x143 + x144
    x146 = -x141 + x145
    x147 = x104 - x109 + x115
    x148 = -x1 * x147
    x149 = x117 - x121 + x127
    x150 = -x1 * x149
    x151 = x102 * x52
    x152 = x105 * x58
    x153 = -x129 * x58 + x139
    x154 = x118 * x58
    x155 = x145 - x154
    x156 = -x108
    x157 = -x119 + x156
    x158 = x1 * x142
    x159 = 2.0 * x117 * x4 - x128 * x24 - x158
    x160 = x1 * x130
    x161 = 2.0 * x128 * x4 - x138 * x24 - x160
    x162 = -x149 * x45 - x159 * x52 + x161 * x3
    x163 = x1 * x107
    x164 = 0.5 * x52
    x165 = -x143
    x166 = -x144 + x165
    x167 = x125 - x133 + x134
    x168 = x1 * x167
    x169 = -x6 * x65
    x170 = x169 + x41 * x94
    x171 = -x170
    x172 = 2.23606797749979
    x173 = 0.06666666666666667 * x92
    x174 = x172 * x173
    x175 = x7 + B[2]
    x176 = -x10 * x8
    x177 = x175 * x69 + x176
    x178 = -x177
    x179 = x10 * x175
    x180 = x12 * x8
    x181 = -x180
    x182 = x179 + x181
    x183 = -x182
    x184 = -x183 * x3
    x185 = x178 * x4 + x184
    x186 = -x185
    x187 = x16 * x186
    x188 = x177 - x179 + x180
    x189 = -x1 * x188
    x190 = x183 * x4
    x191 = x12 * x175
    x192 = x20 * x8
    x193 = -x192
    x194 = x191 + x193
    x195 = -x194
    x196 = x195 * x3
    x197 = -x196
    x198 = x190 + x197
    x199 = -x198
    x200 = x199 * x24
    x201 = x189 + x200
    x202 = x195 * x4
    x203 = x175 * x20
    x204 = x32 * x8
    x205 = -x204
    x206 = x203 + x205
    x207 = -x206
    x208 = x207 * x3
    x209 = x202 - x208
    x210 = -x209
    x211 = x194 - x203 + x204
    x212 = -x1 * x211
    x213 = x207 * x4
    x214 = x175 * x32
    x215 = x41 * x8
    x216 = -x215
    x217 = x214 + x216
    x218 = -x217
    x219 = x213 - x218 * x3
    x220 = x212 - x219 * x24
    x221 = -x16 * x210 + x220
    x222 = x16 * x199
    x223 = x182 - x191 + x192
    x224 = -x1 * x223
    x225 = x210 * x24
    x226 = x224 + x225
    x227 = -x222 + x226
    x228 = x185 - x190 + x196
    x229 = -x1 * x228
    x230 = x198 - x202 + x208
    x231 = -x1 * x230
    x232 = x183 * x52
    x233 = x186 * x58
    x234 = -x210 * x58 + x220
    x235 = x199 * x58
    x236 = x226 - x235
    x237 = -x189
    x238 = -x200 + x237
    x239 = x1 * x223
    x240 = 2.0 * x198 * x4 - x209 * x24 - x239
    x241 = x1 * x211
    x242 = 2.0 * x209 * x4 - x219 * x24 - x241
    x243 = -x230 * x45 - x240 * x52 + x242 * x3
    x244 = x1 * x188
    x245 = -x224
    x246 = -x225 + x245
    x247 = x206 - x214 + x215
    x248 = x1 * x247
    x249 = -x65 * x8
    x250 = x175 * x41 + x249
    x251 = -x250
    x252 = 2.0 * x94
    x253 = x102 * x252
    x254 = 2.0 * x6
    x255 = x114 * x254
    x256 = x18 + x255
    x257 = -x253 + x256
    x258 = x257 * x52
    x259 = x114 * x252
    x260 = x126 * x254
    x261 = x260 + x30
    x262 = -x259 + x261
    x263 = x262 * x3
    x264 = -x263
    x265 = x258 + x264
    x266 = -x265
    x267 = x252 * x97
    x268 = x102 * x254 + x80
    x269 = -x267 + x268
    x270 = -x257 * x3
    x271 = x269 * x52 + x270
    x272 = x262 * x52
    x273 = x137 * x254 + x39
    x274 = -x126 * x252 + x273
    x275 = -x274 * x3
    x276 = -x255 + x59
    x277 = x253 + x262 + x276
    x278 = -x1 * x277
    x279 = -2.0 * x102 * x6 + x74
    x280 = x257 + x267 + x279
    x281 = -x1 * x280
    x282 = -x281
    x283 = x278 + x282
    x284 = x274 * x3
    x285 = x262 * x4
    x286 = x257 * x4
    x287 = x264 + x286
    x288 = x1 * x277
    x289 = x275 + x285
    x290 = -x24 * x289 + 2.0 * x287 * x52 - x288
    x291 = -x260 + x66
    x292 = x259 + x274 + x291
    x293 = x1 * x292
    x294 = x171 * x254 + x64
    x295 = -x137 * x252 + x294
    x296 = -x287
    x297 = x269 * x4 + x270
    x298 = x1 * x280
    x299 = x172 * x93
    x300 = x183 * x94
    x301 = x195 * x6
    x302 = -x301
    x303 = x300 + x302
    x304 = -x303
    x305 = x304 * x4
    x306 = x195 * x94
    x307 = x207 * x6
    x308 = -x307
    x309 = x306 + x308
    x310 = -x309
    x311 = x3 * x310
    x312 = -x311
    x313 = x305 + x312
    x314 = -x313
    x315 = -x183 * x6
    x316 = x178 * x94 + x315
    x317 = -x316
    x318 = -x3 * x304
    x319 = x317 * x4 + x318
    x320 = x310 * x4
    x321 = x207 * x94
    x322 = x218 * x6
    x323 = -x322
    x324 = x321 + x323
    x325 = -x324
    x326 = x3 * x325
    x327 = -x326
    x328 = x320 + x327
    x329 = x303 - x306 + x307
    x330 = -x1 * x329
    x331 = -x300 + x301 + x316
    x332 = -x1 * x331
    x333 = -x332
    x334 = x330 + x333
    x335 = x304 * x52
    x336 = x317 * x52 + x318
    x337 = x1 * x331
    x338 = x1 * x329
    x339 = -x24 * x328 + 2.0 * x313 * x52 - x338
    x340 = x312 + x335
    x341 = -x340
    x342 = x310 * x52
    x343 = 0.5 * x1
    x344 = x309 - x321 + x322
    x345 = x1 * x344
    x346 = -x251 * x6
    x347 = x218 * x94 + x346
    x348 = -x347
    x349 = 3.872983346207417
    x350 = x173 * x349
    x351 = 2.0 * x175
    x352 = x183 * x351
    x353 = 2.0 * x8
    x354 = x195 * x353
    x355 = x18 + x354
    x356 = -x352 + x355
    x357 = x356 * x52
    x358 = x195 * x351
    x359 = x207 * x353
    x360 = x30 + x359
    x361 = -x358 + x360
    x362 = x3 * x361
    x363 = -x362
    x364 = x357 + x363
    x365 = -x364
    x366 = x178 * x351
    x367 = x183 * x353 + x80
    x368 = -x366 + x367
    x369 = -x3 * x356
    x370 = x368 * x52 + x369
    x371 = x361 * x52
    x372 = x218 * x353 + x39
    x373 = -x207 * x351 + x372
    x374 = -x3 * x373
    x375 = -x354 + x59
    x376 = x352 + x361 + x375
    x377 = -x1 * x376
    x378 = -2.0 * x183 * x8 + x74
    x379 = x356 + x366 + x378
    x380 = -x1 * x379
    x381 = -x380
    x382 = x377 + x381
    x383 = x3 * x373
    x384 = x361 * x4
    x385 = x356 * x4
    x386 = x363 + x385
    x387 = x1 * x376
    x388 = x374 + x384
    x389 = -x24 * x388 + 2.0 * x386 * x52 - x387
    x390 = -x359 + x66
    x391 = x358 + x373 + x390
    x392 = x1 * x391
    x393 = x251 * x353 + x64
    x394 = -x218 * x351 + x393
    x395 = -x386
    x396 = x368 * x4 + x369
    x397 = x1 * x379
    x398 = 2.0 * x131 + x274 * x6
    x399 = -x262 * x94 + x398
    x400 = x3 * x399
    x401 = x257 * x94
    x402 = x262 * x6
    x403 = 2.0 * x143
    x404 = x402 + x403
    x405 = -x401 + x404
    x406 = x405 * x52
    x407 = x269 * x94
    x408 = x257 * x6
    x409 = 2.0 * x108
    x410 = x408 + x409
    x411 = -x407 + x410
    x412 = -x3 * x405 + x411 * x52
    x413 = -x408 - x409
    x414 = x405 + x407 + x413
    x415 = x1 * x414
    x416 = -x400 + x406
    x417 = -x402 - x403
    x418 = x399 + x401 + x417
    x419 = x1 * x418
    x420 = -x1 * x167
    x421 = x295 * x6 + 2.0 * x420
    x422 = -x274 * x94 + x421
    x423 = x212 + x254 * x325
    x424 = -x252 * x310 + x423
    x425 = x3 * x424
    x426 = x252 * x304
    x427 = x254 * x310
    x428 = x224 + x427
    x429 = -x426 + x428
    x430 = x429 * x52
    x431 = x252 * x317
    x432 = x254 * x304
    x433 = x189 + x432
    x434 = -x431 + x433
    x435 = -x3 * x429 + x434 * x52
    x436 = x237 - x432
    x437 = x429 + x431 + x436
    x438 = x1 * x437
    x439 = -x425 + x430
    x440 = x245 - x427
    x441 = x424 + x426 + x440
    x442 = x1 * x441
    x443 = -x1 * x247
    x444 = x254 * x348 + x443
    x445 = -x252 * x325 + x444
    x446 = x361 * x94
    x447 = x373 * x6
    x448 = -x447
    x449 = x446 + x448
    x450 = -x449
    x451 = x3 * x450
    x452 = x356 * x94
    x453 = x361 * x6
    x454 = -x453
    x455 = x452 + x454
    x456 = -x455
    x457 = x456 * x52
    x458 = -x356 * x6
    x459 = x368 * x94 + x458
    x460 = -x459
    x461 = -x3 * x456 + x460 * x52
    x462 = -x452 + x453 + x459
    x463 = x1 * x462
    x464 = -x451 + x457
    x465 = -x446 + x447 + x455
    x466 = x1 * x465
    x467 = -x394 * x6
    x468 = x373 * x94 + x467
    x469 = -x468
    x470 = 2.0 * x212 + x373 * x8
    x471 = -x175 * x361 + x470
    x472 = x3 * x471
    x473 = x175 * x356
    x474 = x361 * x8
    x475 = 2.0 * x224
    x476 = x474 + x475
    x477 = -x473 + x476
    x478 = x477 * x52
    x479 = x175 * x368
    x480 = x356 * x8
    x481 = 2.0 * x189
    x482 = x480 + x481
    x483 = -x479 + x482
    x484 = -x3 * x477 + x483 * x52
    x485 = -x480 - x481
    x486 = x477 + x479 + x485
    x487 = x1 * x486
    x488 = -x472 + x478
    x489 = -x474 - x475
    x490 = x471 + x473 + x489
    x491 = x1 * x490
    x492 = x394 * x8 + 2.0 * x443
    x493 = -x175 * x373 + x492
    x494 = x5 + A[1]
    x495 = x10 * x494
    x496 = x494 * x69 + x95
    x497 = -x495 + x496 + x99
    x498 = -x1 * x497
    x499 = -x496
    x500 = x100 + x495
    x501 = -x500
    x502 = -x3 * x501 + x4 * x499
    x503 = -x16 * x502
    x504 = x4 * x501
    x505 = x12 * x494
    x506 = x112 + x505
    x507 = -x506
    x508 = x3 * x507
    x509 = x504 - x508
    x510 = -x509
    x511 = x24 * x510
    x512 = x498 - x503 + x511
    x513 = x111 + x500 - x505
    x514 = -x1 * x513
    x515 = x16 * x510
    x516 = x4 * x507
    x517 = x20 * x494
    x518 = x124 + x517
    x519 = -x518
    x520 = x3 * x519
    x521 = x516 - x520
    x522 = -x521
    x523 = x24 * x522
    x524 = x514 - x515 + x523
    x525 = x123 + x506 - x517
    x526 = -x1 * x525
    x527 = x4 * x519
    x528 = x32 * x494
    x529 = -x135 - x528
    x530 = -x3 * x529 + x527
    x531 = -x16 * x522 - x24 * x530 + x526
    x532 = x502 - x504 + x508
    x533 = x509 - x516 + x520
    x534 = -x3 * x524 + x3 * x531 + x45 * x532 - x45 * x533
    x535 = -x1 * x513 - x24 * x521 + 2.0 * x4 * x509
    x536 = -x1 * x525 - x24 * x530 + 2.0 * x4 * x521
    x537 = x3 * x536 - x4 * x535 - x45 * x533
    x538 = -x498
    x539 = x134 + x518 - x528
    x540 = -x169 - x41 * x494
    x541 = -x514
    x542 = 0.03333333333333333 * x92
    x543 = x172 * x542
    x544 = 2.0 * x494
    x545 = x102 * x544
    x546 = x256 - x545
    x547 = x4 * x546
    x548 = x114 * x544
    x549 = x261 - x548
    x550 = x3 * x549
    x551 = x547 - x550
    x552 = -x551
    x553 = x544 * x97
    x554 = x268 - x553
    x555 = -x3 * x546 + x4 * x554
    x556 = -x555
    x557 = x276 + x545 + x549
    x558 = -x1 * x557
    x559 = x279 + x546 + x553
    x560 = -x1 * x559
    x561 = x4 * x549
    x562 = -x126 * x544 + x273
    x563 = -x3 * x562 + x561
    x564 = -x24 * x552 - x24 * x563 + x558 - x560
    x565 = -x1 * x557 - x24 * x563 + 2.0 * x4 * x551
    x566 = x291 + x548 + x562
    x567 = -x137 * x544 + x294
    x568 = 0.08333333333333333 * x92
    x569 = x183 * x494
    x570 = x302 + x569
    x571 = -x570
    x572 = x4 * x571
    x573 = x195 * x494
    x574 = x308 + x573
    x575 = -x574
    x576 = x3 * x575
    x577 = x572 - x576
    x578 = -x577
    x579 = x178 * x494 + x315
    x580 = -x579
    x581 = -x3 * x571 + x4 * x580
    x582 = -x581
    x583 = x307 + x570 - x573
    x584 = -x1 * x583
    x585 = x301 - x569 + x579
    x586 = -x1 * x585
    x587 = -x586
    x588 = x4 * x575
    x589 = x207 * x494
    x590 = -x323 - x589
    x591 = x3 * x590
    x592 = x588 - x591
    x593 = -x24 * x578 - x24 * x592 + x584 + x587
    x594 = -x1 * x583 - x24 * x592 + 2.0 * x4 * x577
    x595 = x322 + x574 - x589
    x596 = -x218 * x494 - x346
    x597 = 0.3333333333333333 * x92
    x598 = x269 * x494
    x599 = x410 - x598
    x600 = -x262 * x494 + x398
    x601 = x3 * x600
    x602 = x257 * x494
    x603 = x404 - x602
    x604 = -x3 * x603
    x605 = x4 * x603
    x606 = x4 * x599 + x604
    x607 = x413 + x598 + x603
    x608 = x1 * x607
    x609 = -x601 + x605
    x610 = x417 + x600 + x602
    x611 = x1 * x610
    x612 = -x274 * x494 + x421
    x613 = 0.1666666666666667 * x92
    x614 = x317 * x544
    x615 = x433 - x614
    x616 = -x310 * x544 + x423
    x617 = x3 * x616
    x618 = x304 * x544
    x619 = x428 - x618
    x620 = -x3 * x619
    x621 = x4 * x619
    x622 = x4 * x615 + x620
    x623 = x436 + x614 + x619
    x624 = x1 * x623
    x625 = -x617 + x621
    x626 = x440 + x616 + x618
    x627 = x1 * x626
    x628 = -x325 * x544 + x444
    x629 = 1.732050807568877
    x630 = x613 * x629
    x631 = x368 * x494 + x458
    x632 = -x631
    x633 = x361 * x494
    x634 = -x448 - x633
    x635 = x3 * x634
    x636 = x356 * x494
    x637 = x454 + x636
    x638 = -x637
    x639 = -x3 * x638
    x640 = x4 * x638
    x641 = x4 * x632 + x639
    x642 = x453 + x631 - x636
    x643 = x1 * x642
    x644 = -x635 + x640
    x645 = x447 - x633 + x637
    x646 = x1 * x645
    x647 = -x373 * x494 - x467
    x648 = 3.0 * x281
    x649 = x254 * x405
    x650 = x411 * x544
    x651 = x254 * x399 + 3.0 * x278 - x405 * x544
    x652 = x1 * (-x648 - x649 + x650 + x651)
    x653 = x648 + x649 - x650
    x654 = -x1 * x292
    x655 = x254 * x422 - x399 * x544 + 3.0 * x654
    x656 = 2.0 * x330 + x424 * x6 - x429 * x494
    x657 = -x1 * x344
    x658 = -x424 * x494 + x445 * x6 + 2.0 * x657
    x659 = x434 * x494
    x660 = x429 * x6
    x661 = 2.0 * x332
    x662 = x1 * (x656 + x659 - x660 - x661)
    x663 = -x659 + x660 + x661
    x664 = x254 * x456
    x665 = x460 * x544
    x666 = x254 * x450 + x377 - x456 * x544
    x667 = x1 * (x381 - x664 + x665 + x666)
    x668 = x380 + x664 - x665
    x669 = -x1 * x391
    x670 = x254 * x469 - x450 * x544 + x669
    x671 = x477 * x494
    x672 = -x471 * x6 + x671
    x673 = -x672
    x674 = x471 * x494 - x493 * x6
    x675 = -x674
    x676 = -x477 * x6 + x483 * x494
    x677 = x1 * (x471 * x6 - x671 + x676)
    x678 = -x676
    x679 = x7 + A[2]
    x680 = x10 * x679
    x681 = x176 + x679 * x69
    x682 = x180 - x680 + x681
    x683 = -x1 * x682
    x684 = -x681
    x685 = x181 + x680
    x686 = -x685
    x687 = -x3 * x686 + x4 * x684
    x688 = -x16 * x687
    x689 = x4 * x686
    x690 = x12 * x679
    x691 = x193 + x690
    x692 = -x691
    x693 = x3 * x692
    x694 = x689 - x693
    x695 = -x694
    x696 = x24 * x695
    x697 = x683 - x688 + x696
    x698 = x192 + x685 - x690
    x699 = -x1 * x698
    x700 = x16 * x695
    x701 = x4 * x692
    x702 = x20 * x679
    x703 = x205 + x702
    x704 = -x703
    x705 = x3 * x704
    x706 = x701 - x705
    x707 = -x706
    x708 = x24 * x707
    x709 = x699 - x700 + x708
    x710 = x204 + x691 - x702
    x711 = -x1 * x710
    x712 = x4 * x704
    x713 = x32 * x679
    x714 = -x216 - x713
    x715 = -x3 * x714 + x712
    x716 = -x16 * x707 - x24 * x715 + x711
    x717 = x687 - x689 + x693
    x718 = x694 - x701 + x705
    x719 = -x3 * x709 + x3 * x716 + x45 * x717 - x45 * x718
    x720 = x1 * x698
    x721 = -x24 * x706 + 2.0 * x4 * x694 - x720
    x722 = x1 * x710
    x723 = -x24 * x715 + 2.0 * x4 * x706 - x722
    x724 = x3 * x723 - x4 * x721 - x45 * x718
    x725 = x1 * x682
    x726 = -x683
    x727 = x215 + x703 - x713
    x728 = x1 * x727
    x729 = -x249 - x41 * x679
    x730 = -x699
    x731 = x686 * x94
    x732 = x6 * x692
    x733 = -x732
    x734 = x731 + x733
    x735 = -x734
    x736 = x4 * x735
    x737 = x692 * x94
    x738 = x6 * x704
    x739 = -x738
    x740 = x737 + x739
    x741 = -x740
    x742 = x3 * x741
    x743 = x736 - x742
    x744 = -x743
    x745 = -x6 * x686
    x746 = x684 * x94 + x745
    x747 = -x746
    x748 = -x3 * x735 + x4 * x747
    x749 = -x748
    x750 = x734 - x737 + x738
    x751 = -x1 * x750
    x752 = -x731 + x732 + x746
    x753 = -x1 * x752
    x754 = -x753
    x755 = x4 * x741
    x756 = x704 * x94
    x757 = x6 * x714
    x758 = -x757
    x759 = x756 + x758
    x760 = -x759
    x761 = x3 * x760
    x762 = x755 - x761
    x763 = -x24 * x744 - x24 * x762 + x751 + x754
    x764 = x1 * x752
    x765 = x1 * x750
    x766 = -x24 * x762 + 2.0 * x4 * x743 - x765
    x767 = x740 - x756 + x757
    x768 = x1 * x767
    x769 = -x6 * x729
    x770 = x714 * x94 + x769
    x771 = -x770
    x772 = 2.0 * x679
    x773 = x183 * x772
    x774 = x355 - x773
    x775 = x4 * x774
    x776 = x195 * x772
    x777 = x360 - x776
    x778 = x3 * x777
    x779 = x775 - x778
    x780 = -x779
    x781 = x178 * x772
    x782 = x367 - x781
    x783 = -x3 * x774 + x4 * x782
    x784 = -x783
    x785 = x375 + x773 + x777
    x786 = -x1 * x785
    x787 = x378 + x774 + x781
    x788 = -x1 * x787
    x789 = -x788
    x790 = x4 * x777
    x791 = -x207 * x772 + x372
    x792 = -x3 * x791 + x790
    x793 = -x24 * x780 - x24 * x792 + x786 + x789
    x794 = x1 * x785
    x795 = -x24 * x792 + 2.0 * x4 * x779 - x794
    x796 = x390 + x776 + x791
    x797 = x1 * x796
    x798 = -x218 * x772 + x393
    x799 = x1 * x787
    x800 = x252 * x747
    x801 = x254 * x735
    x802 = x683 + x801
    x803 = -x800 + x802
    x804 = x254 * x760 + x711
    x805 = -x252 * x741 + x804
    x806 = x3 * x805
    x807 = x252 * x735
    x808 = x254 * x741
    x809 = x699 + x808
    x810 = -x807 + x809
    x811 = -x3 * x810
    x812 = x4 * x810
    x813 = x4 * x803 + x811
    x814 = x726 - x801
    x815 = x800 + x810 + x814
    x816 = x1 * x815
    x817 = -x806 + x812
    x818 = x730 - x808
    x819 = x805 + x807 + x818
    x820 = x1 * x819
    x821 = -x1 * x727
    x822 = x254 * x771 + x821
    x823 = -x252 * x760 + x822
    x824 = -x6 * x774
    x825 = x782 * x94 + x824
    x826 = -x825
    x827 = x777 * x94
    x828 = x6 * x791
    x829 = -x828
    x830 = x827 + x829
    x831 = -x830
    x832 = x3 * x831
    x833 = x774 * x94
    x834 = x6 * x777
    x835 = -x834
    x836 = x833 + x835
    x837 = -x836
    x838 = -x3 * x837
    x839 = x4 * x837
    x840 = x4 * x826 + x838
    x841 = x825 - x833 + x834
    x842 = x1 * x841
    x843 = -x832 + x839
    x844 = -x827 + x828 + x836
    x845 = x1 * x844
    x846 = -x6 * x798
    x847 = x791 * x94 + x846
    x848 = -x847
    x849 = x368 * x679
    x850 = x482 - x849
    x851 = -x361 * x679 + x470
    x852 = x3 * x851
    x853 = x356 * x679
    x854 = x476 - x853
    x855 = -x3 * x854
    x856 = x4 * x854
    x857 = x4 * x850 + x855
    x858 = x485 + x849 + x854
    x859 = x1 * x858
    x860 = -x852 + x856
    x861 = x489 + x851 + x853
    x862 = x1 * x861
    x863 = -x373 * x679 + x492
    x864 = x6 * x805 + 2.0 * x751
    x865 = -x810 * x94 + x864
    x866 = -x1 * x767
    x867 = x6 * x823 + 2.0 * x866
    x868 = -x805 * x94 + x867
    x869 = x803 * x94
    x870 = x6 * x810
    x871 = 2.0 * x753
    x872 = -x870 - x871
    x873 = x1 * (x865 + x869 + x872)
    x874 = x870 + x871
    x875 = -x869 + x874
    x876 = x252 * x826
    x877 = x254 * x831 + x786
    x878 = -x252 * x837 + x877
    x879 = x254 * x837
    x880 = x789 - x879
    x881 = x1 * (x876 + x878 + x880)
    x882 = x788 + x879
    x883 = -x876 + x882
    x884 = -x1 * x796
    x885 = x254 * x848 + x884
    x886 = -x252 * x831 + x885
    x887 = x854 * x94
    x888 = -x6 * x851
    x889 = x887 + x888
    x890 = -x889
    x891 = -x6 * x863
    x892 = x851 * x94 + x891
    x893 = -x892
    x894 = x6 * x851
    x895 = -x6 * x854
    x896 = x850 * x94 + x895
    x897 = x1 * (-x887 + x894 + x896)
    x898 = -x896
    x899 = 3.0 * x380
    x900 = x353 * x477
    x901 = x483 * x772
    x902 = x353 * x471 + 3.0 * x377 - x477 * x772
    x903 = x1 * (-x899 - x900 + x901 + x902)
    x904 = x899 + x900 - x901
    x905 = x353 * x493 - x471 * x772 + 3.0 * x669
    x906 = x254 * x507
    x907 = x501 * x544
    x908 = x507 * x544
    x909 = x254 * x519
    x910 = x30 - x908 + x909
    x911 = x59 - x906 + x907 + x910
    x912 = x18 + x906 - x907
    x913 = x4 * x912
    x914 = x3 * x910
    x915 = x913 - x914
    x916 = x4 * x910
    x917 = x254 * x529 + x39 - x519 * x544
    x918 = -x3 * x917 + x916
    x919 = -x1 * x911 - x24 * x918 + 2.0 * x4 * x915
    x920 = x66 + x908 - x909 + x917
    x921 = x254 * x540 - x529 * x544 + x64
    x922 = x499 * x544
    x923 = -2.0 * x501 * x6 + x74 + x912 + x922
    x924 = x254 * x501 + x80 - x922
    x925 = -x3 * x912 + x4 * x924
    x926 = -x1 * x911
    x927 = -x1 * x923
    x928 = -x927
    x929 = -x915
    x930 = x131 - x494 * x549 + x526 + x562 * x6
    x931 = x3 * x930
    x932 = x549 * x6
    x933 = x494 * x546
    x934 = x143 + x514 + x932 - x933
    x935 = x4 * x934
    x936 = x546 * x6
    x937 = x494 * x554
    x938 = x108 + x498 + x936 - x937
    x939 = -x3 * x934 + x4 * x938
    x940 = x156 + x538 + x934 - x936 + x937
    x941 = -x931 + x935
    x942 = x165 + x541 + x930 - x932 + x933
    x943 = -x1 * x539
    x944 = x420 - x494 * x562 + x567 * x6 + x943
    x945 = x212 + x254 * x590 - x544 * x575
    x946 = x3 * x945
    x947 = x544 * x571
    x948 = x254 * x575
    x949 = x224 - x947 + x948
    x950 = x4 * x949
    x951 = x544 * x580
    x952 = x254 * x571
    x953 = x189 - x951 + x952
    x954 = -x3 * x949 + x4 * x953
    x955 = x237 + x949 + x951 - x952
    x956 = -x946 + x950
    x957 = x245 + x945 + x947 - x948
    x958 = x254 * x596 + x443 - x544 * x590
    x959 = 2.0 * x560
    x960 = -x959
    x961 = x254 * x603
    x962 = x544 * x599
    x963 = 2.0 * x558
    x964 = x254 * x600 + x278 - x544 * x603 + x963
    x965 = x1 * (x282 + x960 - x961 + x962 + x964)
    x966 = x281 + x959 + x961 - x962
    x967 = -x45 * x566
    x968 = x254 * x612 - x544 * x600 + x654 + x967
    x969 = x330 - x494 * x619 + x584 + x6 * x616
    x970 = -x1 * x595
    x971 = -x494 * x616 + x6 * x628 + x657 + x970
    x972 = x494 * x615
    x973 = x6 * x619
    x974 = x1 * (x333 + x587 + x969 + x972 - x973)
    x975 = x332 + x586 - x972 + x973
    x976 = x597 * x629
    x977 = x254 * x638
    x978 = x544 * x632
    x979 = x254 * x634 + x377 - x544 * x638
    x980 = x1 * (x381 - x977 + x978 + x979)
    x981 = x380 + x977 - x978
    x982 = x254 * x647 - x544 * x634 + x669
    x983 = -x607
    x984 = -x610
    x985 = -x45 * x623
    x986 = -x45 * x626
    x987 = -x1 * x642
    x988 = -x1 * x645
    x989 = -x1 * x486
    x990 = -x1 * x490
    x991 = x494 * x686
    x992 = x494 * x684 + x745
    x993 = x732 - x991 + x992
    x994 = -x992
    x995 = x733 + x991
    x996 = -x995
    x997 = -x3 * x996 + x4 * x994
    x998 = x4 * x996
    x999 = x494 * x692
    x1000 = x739 + x999
    x1001 = -x1000
    x1002 = x1001 * x3
    x1003 = -x1002 + x998
    x1004 = x738 + x995 - x999
    x1005 = x1001 * x4
    x1006 = x494 * x704
    x1007 = -x1006 - x758
    x1008 = x1007 * x3
    x1009 = x1005 - x1008
    x1010 = -x1 * x1004 + 2.0 * x1003 * x4 - x1009 * x24
    x1011 = x1000 - x1006 + x757
    x1012 = -x494 * x714 - x769
    x1013 = -x1 * x1004
    x1014 = -x1 * x993
    x1015 = -x1014
    x1016 = -x1003
    x1017 = -x544 * x741 + x804
    x1018 = x1017 * x3
    x1019 = x544 * x735
    x1020 = -x1019 + x809
    x1021 = x1020 * x4
    x1022 = x544 * x747
    x1023 = -x1022 + x802
    x1024 = -x1020 * x3 + x1023 * x4
    x1025 = x1020 + x1022 + x814
    x1026 = -x1018 + x1021
    x1027 = x1017 + x1019 + x818
    x1028 = -x544 * x760 + x822
    x1029 = x494 * x777
    x1030 = -x1029 - x829
    x1031 = x1030 * x3
    x1032 = x494 * x774
    x1033 = x1032 + x835
    x1034 = -x1033
    x1035 = x1034 * x4
    x1036 = x494 * x782 + x824
    x1037 = -x1036
    x1038 = -x1034 * x3 + x1037 * x4
    x1039 = -x1032 + x1036 + x834
    x1040 = -x1031 + x1035
    x1041 = -x1029 + x1033 + x828
    x1042 = -x494 * x791 - x846
    x1043 = -x494 * x810 + x864
    x1044 = -x494 * x805 + x867
    x1045 = x494 * x803
    x1046 = x1043 + x1045 + x872
    x1047 = -x1045 + x874
    x1048 = x544 * x826
    x1049 = -x544 * x837 + x877
    x1050 = x1 * (x1048 + x1049 + x880)
    x1051 = -x1048 + x882
    x1052 = -x544 * x831 + x885
    x1053 = x494 * x854
    x1054 = -x1053 - x888
    x1055 = -x494 * x851 - x891
    x1056 = x494 * x850 + x895
    x1057 = x1 * (-x1053 + x1056 + x894)
    x1058 = -x1056
    x1059 = -x1 * x815
    x1060 = -x1 * x819
    x1061 = x349 * x542
    x1062 = -x1 * x841
    x1063 = -x1 * x844
    x1064 = -x1 * x858
    x1065 = -x1 * x861
    x1066 = x494 * x904 - x6 * x902
    x1067 = x494 * x902 - x6 * x905
    x1068 = x353 * x692
    x1069 = x686 * x772
    x1070 = x692 * x772
    x1071 = x353 * x704
    x1072 = -x1070 + x1071 + x30
    x1073 = -x1068 + x1069 + x1072 + x59
    x1074 = x1 * x1073
    x1075 = x1068 - x1069 + x18
    x1076 = x1075 * x4
    x1077 = x1072 * x3
    x1078 = x1076 - x1077
    x1079 = x1072 * x4
    x1080 = x353 * x714 + x39 - x704 * x772
    x1081 = x1079 - x1080 * x3
    x1082 = -x1074 + 2.0 * x1078 * x4 - x1081 * x24
    x1083 = x1070 - x1071 + x1080 + x66
    x1084 = x1 * x1083
    x1085 = x353 * x729 + x64 - x714 * x772
    x1086 = x684 * x772
    x1087 = x1075 + x1086 - 2.0 * x686 * x8 + x74
    x1088 = x1 * x1087
    x1089 = -x1086 + x353 * x686 + x80
    x1090 = -x1075 * x3 + x1089 * x4
    x1091 = -x1 * x1073
    x1092 = -x1 * x1087
    x1093 = -x1092
    x1094 = -x1078
    x1095 = x1072 * x94
    x1096 = x1080 * x6
    x1097 = -x1096
    x1098 = x1095 + x1097
    x1099 = -x1098
    x1100 = x1099 * x3
    x1101 = x1075 * x94
    x1102 = x1072 * x6
    x1103 = -x1102
    x1104 = x1101 + x1103
    x1105 = -x1104
    x1106 = x1105 * x4
    x1107 = -x1075 * x6
    x1108 = x1089 * x94 + x1107
    x1109 = -x1108
    x1110 = -x1105 * x3 + x1109 * x4
    x1111 = -x1101 + x1102 + x1108
    x1112 = x1 * x1111
    x1113 = -x1100 + x1106
    x1114 = -x1095 + x1096 + x1104
    x1115 = x1 * x1114
    x1116 = -x1085 * x6
    x1117 = x1080 * x94 + x1116
    x1118 = -x1117
    x1119 = x212 - x679 * x777 + x711 + x791 * x8
    x1120 = x1119 * x3
    x1121 = x777 * x8
    x1122 = x679 * x774
    x1123 = x1121 - x1122 + x224 + x699
    x1124 = x1123 * x4
    x1125 = x774 * x8
    x1126 = x679 * x782
    x1127 = x1125 - x1126 + x189 + x683
    x1128 = -x1123 * x3 + x1127 * x4
    x1129 = x1123 - x1125 + x1126 + x237 + x726
    x1130 = x1 * x1129
    x1131 = -x1120 + x1124
    x1132 = x1119 - x1121 + x1122 + x245 + x730
    x1133 = x1 * x1132
    x1134 = x443 - x679 * x791 + x798 * x8 + x821
    x1135 = x1109 * x252
    x1136 = x1091 + x1099 * x254
    x1137 = -x1105 * x252 + x1136
    x1138 = x1105 * x254
    x1139 = x1093 - x1138
    x1140 = x1 * (x1135 + x1137 + x1139)
    x1141 = x1092 + x1138
    x1142 = -x1135 + x1141
    x1143 = -x1 * x1083
    x1144 = x1118 * x254 + x1143
    x1145 = -x1099 * x252 + x1144
    x1146 = x1123 * x94
    x1147 = -x1119 * x6
    x1148 = x1146 + x1147
    x1149 = -x1148
    x1150 = -x1134 * x6
    x1151 = x1119 * x94 + x1150
    x1152 = -x1151
    x1153 = x1119 * x6
    x1154 = -x1123 * x6
    x1155 = x1127 * x94 + x1154
    x1156 = x1 * (-x1146 + x1153 + x1155)
    x1157 = -x1155
    x1158 = 2.0 * x788
    x1159 = -x1158
    x1160 = x353 * x854
    x1161 = x772 * x850
    x1162 = 2.0 * x786
    x1163 = x1162 + x353 * x851 + x377 - x772 * x854
    x1164 = x1 * (x1159 - x1160 + x1161 + x1163 + x381)
    x1165 = x1158 + x1160 - x1161 + x380
    x1166 = 2.0 * x884
    x1167 = x1166 + x353 * x863 + x669 - x772 * x851
    x1168 = -x1111 * x45 + x1137 * x6
    x1169 = -x1114 * x45 + x1145 * x6
    x1170 = -x1 * x1129
    x1171 = x1149 * x254 + x1170
    x1172 = -x1 * x1132
    x1173 = x1152 * x254 + x1172
    x1174 = -x1163 * x6
    x1175 = x1165 * x94 + x1174
    x1176 = -x1167 * x6
    x1177 = x1163 * x94 + x1176
    x1178 = 3.0 * x1064 - x679 * x904 + x8 * x902 + x989
    x1179 = 3.0 * x1065 - x679 * x902 + x8 * x905 + x990
    x1180 = -x494 * x910 + 2.0 * x526 + x6 * x917
    x1181 = x1180 * x3
    x1182 = x6 * x910
    x1183 = x494 * x912
    x1184 = 2.0 * x514
    x1185 = x1182 - x1183 + x1184
    x1186 = x1185 * x4
    x1187 = x6 * x912
    x1188 = x494 * x924
    x1189 = 2.0 * x498
    x1190 = -x1185 * x3 + x4 * (x1187 - x1188 + x1189)
    x1191 = -x1181 + x1186
    x1192 = 0.5 * x4
    x1193 = x254 * x934
    x1194 = x544 * x938
    x1195 = x254 * x930 - x544 * x934 + x926 + x963
    x1196 = -x494 * x949 + 2.0 * x584 + x6 * x945
    x1197 = x494 * x953
    x1198 = x6 * x949
    x1199 = 2.0 * x586
    x1200 = x113 * x252 - x125 * x254 + x30
    x1201 = x125 * x252 - x136 * x254 + x39
    x1202 = -x1200 * x94 + x1201 * x6 - 2.0 * x160
    x1203 = x101 * x252 - x113 * x254 + x18
    x1204 = x1200 * x6 - x1203 * x94 - 2.0 * x158
    x1205 = 2.0 * x1202 * x6 - x1204 * x544 - 3.0 * x288
    x1206 = -x239 - x254 * x309 + 2.0 * x303 * x94
    x1207 = -x241 - x254 * x324 + 2.0 * x309 * x94
    x1208 = -x1206 * x494 + x1207 * x6 - 2.0 * x338
    x1209 = 0.5 * x494
    x1210 = -x254 * x449 - x387 + 2.0 * x455 * x494
    x1211 = -x1001 * x544 + x1007 * x254 + x711
    x1212 = x1211 * x3
    x1213 = x544 * x996
    x1214 = x1001 * x254
    x1215 = -x1213 + x1214 + x699
    x1216 = x1215 * x4
    x1217 = x544 * x994
    x1218 = x254 * x996
    x1219 = -x1215 * x3 + x4 * (-x1217 + x1218 + x683)
    x1220 = -x1212 + x1216
    x1221 = x1013 + x1017 * x6 - x1020 * x494 + x751
    x1222 = x1023 * x494
    x1223 = x1020 * x6
    x1224 = x1034 * x254
    x1225 = x1037 * x544
    x1226 = x1030 * x254 - x1034 * x544 + x786
    x1227 = -x254 * x740 - x720 + 2.0 * x734 * x94
    x1228 = -x254 * x759 - x722 + 2.0 * x740 * x94
    x1229 = -x1227 * x94 + x1228 * x6 - 2.0 * x765
    x1230 = -x254 * x830 - x794 + 2.0 * x836 * x94
    x1231 = x1072 * x494
    x1232 = -x1097 - x1231
    x1233 = x1232 * x3
    x1234 = x1075 * x494
    x1235 = x1103 + x1234
    x1236 = -x1235
    x1237 = x1236 * x4
    x1238 = x1089 * x494 + x1107
    x1239 = -x1236 * x3 - x1238 * x4
    x1240 = -x1233 + x1237
    x1241 = x1109 * x544
    x1242 = -x1105 * x544 + x1136
    x1243 = x1123 * x494
    x1244 = -x1147 - x1243
    x1245 = x1127 * x494 + x1154
    x1246 = -x1074 - x1098 * x254 + 2.0 * x1104 * x94
    x1247 = -x1072 * x679 + x1080 * x8 + 2.0 * x711
    x1248 = x1247 * x3
    x1249 = x1072 * x8
    x1250 = x1075 * x679
    x1251 = 2.0 * x699
    x1252 = x1249 - x1250 + x1251
    x1253 = x1252 * x4
    x1254 = x1075 * x8
    x1255 = x1089 * x679
    x1256 = 2.0 * x683
    x1257 = x1254 - x1255 + x1256
    x1258 = -x1252 * x3 + x1257 * x4
    x1259 = x1252 - x1254 + x1255 - x1256
    x1260 = x1 * x1259
    x1261 = -x1248 + x1253
    x1262 = x1247 - x1249 + x1250 - x1251
    x1263 = x1 * x1262
    x1264 = -x1080 * x679 + x1085 * x8 + 2.0 * x821
    x1265 = x1252 * x94
    x1266 = -x1247 * x6 + x1265
    x1267 = -x1266
    x1268 = x1247 * x94 - x1264 * x6
    x1269 = -x1268
    x1270 = -x1252 * x6 + x1257 * x94
    x1271 = x1 * (x1247 * x6 - x1265 + x1270)
    x1272 = -x1270
    x1273 = x1123 * x353
    x1274 = x1127 * x772
    x1275 = x1091 + x1119 * x353 - x1123 * x772 + x1162
    x1276 = x1 * (x1093 + x1159 - x1273 + x1274 + x1275)
    x1277 = x1092 + x1158 + x1273 - x1274
    x1278 = -x1119 * x772 + x1134 * x353 + x1143 + x1166
    x1279 = -x1275 * x6 + x1277 * x94
    x1280 = x1275 * x94 - x1278 * x6
    x1281 = 2.0 * x1064 + x1163 * x8 - x1165 * x679 + 2.0 * x1170
    x1282 = 2.0 * x1065 - x1163 * x679 + x1167 * x8 + 2.0 * x1172
    x1283 = x194 * x351 - x206 * x353 + x30
    x1284 = x206 * x351 - x217 * x353 + x39
    x1285 = -x1283 * x175 + x1284 * x8 - 2.0 * x241
    x1286 = x18 + x182 * x351 - x194 * x353
    x1287 = x1283 * x8 - x1286 * x175 - 2.0 * x239
    x1288 = 2.0 * x1285 * x8 - x1287 * x772 - 3.0 * x387

    # 100 item(s)
    result[0, 0] = numpy.sum(
        -x93
        * (
            2.0
            * x3
            * (
                x1 * (x28 + x47 + x51)
                + x3
                * (
                    2.0
                    * x3
                    * (
                        -x3 * (x16 * x42 - x24 * (-x3 * x65 + x4 * x41) + x64)
                        + x4 * x54
                        + x45 * (x3 * x41 + x34 - x40)
                    )
                    + x55 * x58
                    + x62 * (x29 - x36 + x43 + x66)
                )
                + x52 * x63
                + x62 * (x51 + x67 + x68)
            )
            - x45
            * (
                -x24 * x47
                + x24 * x79
                + x58 * x79
                + x58 * (x82 - x86)
                + 3.0 * x77
                - 3.0 * x87
            )
            - x58
            * (
                x1 * (x79 + x82 + x88)
                - x3 * x63
                - x52
                * (
                    -2.0 * x3 * x57
                    - x58 * (-x3 * x56 + x4 * (-x14 * x24 + x16 * x70 + x80) + x45 * x84)
                    + x62 * x76
                )
                + x62 * (x88 + x89 + x90)
            )
            + x62
            * (
                x24 * x68
                - x24 * x90
                + x45 * (x26 + x58 * x71 + x75 - x91)
                - x45 * (-2.0 * x23 * x52 + x37 + x60 + x91)
                - x58 * x90
                + x58 * (x86 - x89)
                - x77
                + x87
            )
        )
    )
    result[0, 1] = numpy.sum(
        0.5
        * x174
        * (
            2.0
            * x1
            * (
                -x140 * x3
                + x146 * x3
                + x146 * x52
                + 2.0 * x148
                - 2.0 * x150
                + x52 * (x106 - x120)
            )
            + 2.0
            * x1
            * (
                -x1 * (x103 + x115 - x151 + x52 * x97)
                + x1 * (-x114 * x52 + x116 + x127 + x151)
                + x148
                - x150
                - x153 * x3
                + x155 * x3
                + x155 * x52
                - x52 * (x120 - x152)
            )
            + 2.0
            * x164
            * (
                x1 * (x106 + x146 + x157)
                - 2.0 * x162 * x3
                + x45 * (x152 + x155 + x157)
                - x58
                * (x147 * x45 - x159 * x3 + x52 * (2.0 * x104 * x4 - x117 * x24 - x163))
            )
            - x3
            * (
                x1 * (x140 + x141 + x166)
                + x162 * x58
                + 2.0
                * x3
                * (
                    x161 * x52
                    - x3 * (2.0 * x138 * x4 - x168 - x24 * (x137 * x4 - x171 * x3))
                    + x45 * (x128 - x132 + x137 * x3)
                )
                + x45 * (x153 + x154 + x166)
            )
        )
    )
    result[0, 2] = numpy.sum(
        0.5
        * x174
        * (
            2.0
            * x1
            * (
                -x221 * x3
                + x227 * x3
                + x227 * x52
                + 2.0 * x229
                - 2.0 * x231
                + x52 * (x187 - x201)
            )
            + 2.0
            * x1
            * (
                -x1 * (x178 * x52 + x184 + x196 - x232)
                + x1 * (-x195 * x52 + x197 + x208 + x232)
                + x229
                - x231
                - x234 * x3
                + x236 * x3
                + x236 * x52
                - x52 * (x201 - x233)
            )
            + 2.0
            * x164
            * (
                x1 * (x187 + x227 + x238)
                - 2.0 * x243 * x3
                + x45 * (x233 + x236 + x238)
                - x58
                * (x228 * x45 - x240 * x3 + x52 * (2.0 * x185 * x4 - x198 * x24 - x244))
            )
            - x3
            * (
                x1 * (x221 + x222 + x246)
                + x243 * x58
                + 2.0
                * x3
                * (
                    x242 * x52
                    - x3 * (2.0 * x219 * x4 - x24 * (x218 * x4 - x251 * x3) - x248)
                    + x45 * (x209 - x213 + x218 * x3)
                )
                + x45 * (x234 + x235 + x246)
            )
        )
    )
    result[0, 3] = numpy.sum(
        x299
        * (
            x1 * (x24 * x266 + x24 * (x272 + x275) + x266 * x58 + x271 * x58 - x283)
            - 2.0
            * x3
            * (
                x1 * (x265 - x272 + x284)
                + x1 * (x284 - x285 + x287)
                + x290 * x52
                + x3 * (x24 * (x274 * x4 - x295 * x3) - 2.0 * x289 * x52 + x293)
            )
            + x45 * (x24 * x289 + x24 * x296 - x283 + x296 * x58 + x297 * x58)
            + x58
            * (
                x1 * (-x258 + x263 + x271)
                + x1 * (x263 - x286 + x297)
                - x290 * x3
                - x52 * (x24 * x287 - 2.0 * x297 * x52 + x298)
            )
        )
    )
    result[0, 4] = numpy.sum(
        x350
        * (
            x1 * (x24 * x314 + x24 * x328 + x314 * x58 + x319 * x58 - x334)
            - x3
            * (
                x1 * (x313 - x320 + x326)
                + x1 * (x326 + x340 - x342)
                + x3 * (x24 * (-x3 * x348 + x325 * x4) - 2.0 * x328 * x52 + x345)
                + x339 * x52
            )
            + x343 * (x24 * x341 + x24 * (x327 + x342) - x334 + x336 * x58 + x341 * x58)
            + x52
            * (
                x1 * (-x305 + x311 + x319)
                + x1 * (x311 - x335 + x336)
                - x3 * x339
                - x52 * (x24 * x313 - 2.0 * x319 * x52 + x337)
            )
        )
    )
    result[0, 5] = numpy.sum(
        x299
        * (
            x1 * (x24 * x365 + x24 * (x371 + x374) + x365 * x58 + x370 * x58 - x382)
            - 2.0
            * x3
            * (
                x1 * (x364 - x371 + x383)
                + x1 * (x383 - x384 + x386)
                + x3 * (x24 * (-x3 * x394 + x373 * x4) - 2.0 * x388 * x52 + x392)
                + x389 * x52
            )
            + x45 * (x24 * x388 + x24 * x395 - x382 + x395 * x58 + x396 * x58)
            + x58
            * (
                x1 * (-x357 + x362 + x370)
                + x1 * (x362 - x385 + x396)
                - x3 * x389
                - x52 * (x24 * x386 - 2.0 * x396 * x52 + x397)
            )
        )
    )
    result[0, 6] = numpy.sum(
        -0.5
        * x173
        * (
            2.0 * x1 * (x400 - x406 + x412)
            - 2.0 * x164 * (x24 * x416 - 2.0 * x412 * x52 + x415)
            - x3 * (x24 * (x3 * x422 - x399 * x52) + 2.0 * x416 * x52 - x419)
        )
    )
    result[0, 7] = numpy.sum(
        -0.5
        * x174
        * (
            2.0 * x1 * (x425 - x430 + x435)
            - 2.0 * x164 * (x24 * x439 - 2.0 * x435 * x52 + x438)
            - x3 * (x24 * (x3 * x445 - x424 * x52) + 2.0 * x439 * x52 - x442)
        )
    )
    result[0, 8] = numpy.sum(
        -0.5
        * x174
        * (
            2.0 * x1 * (x451 - x457 + x461)
            - 2.0 * x164 * (x24 * x464 - 2.0 * x461 * x52 + x463)
            - x3 * (x24 * (x3 * x469 - x450 * x52) + 2.0 * x464 * x52 - x466)
        )
    )
    result[0, 9] = numpy.sum(
        -0.5
        * x173
        * (
            2.0 * x1 * (x472 - x478 + x484)
            - 2.0 * x164 * (x24 * x488 - 2.0 * x484 * x52 + x487)
            - x3 * (x24 * (x3 * x493 - x471 * x52) + 2.0 * x488 * x52 - x491)
        )
    )
    result[1, 0] = numpy.sum(
        -x543
        * (
            x1 * (x4 * x512 - x4 * x524 + x534)
            + x3
            * (
                2.0
                * x3
                * (
                    x3 * (x1 * x539 + x24 * (-x3 * x540 + x4 * x529) - 2.0 * x4 * x530)
                    + x4 * x536
                    + x45 * (x3 * x529 + x521 - x527)
                )
                + x537 * x58
                + x62 * (x515 - x523 + x531 + x541)
            )
            + x52
            * (
                2.0 * x3 * x537
                + x58
                * (
                    -x3 * x535
                    + x4 * (-x1 * x497 - x24 * x509 + 2.0 * x4 * x502)
                    + x45 * x532
                )
                - x62 * (x503 - x511 + x524 + x538)
            )
            + x62 * (x512 * x52 - x52 * x524 + x534)
        )
    )
    result[1, 1] = numpy.sum(
        -x568
        * (
            x1 * (-x16 * x552 + x16 * x556 + x564)
            + 2.0
            * x3
            * (
                x3 * (x1 * x566 - x24 * (x3 * x567 - x4 * x562) - 2.0 * x4 * x563)
                + x45 * (x3 * x562 + x551 - x561)
                + x52 * x565
            )
            + x45 * (-x552 * x58 + x556 * x58 + x564)
            + x58
            * (
                x3 * x565
                - x45 * (-x547 + x550 + x555)
                + x52 * (x1 * x559 + x24 * x551 - 2.0 * x4 * x555)
            )
        )
    )
    result[1, 2] = numpy.sum(
        -x597
        * (
            x1 * (-x578 * x58 + x58 * x582 + x593)
            + x3
            * (
                x3 * (x1 * x595 - x24 * (x3 * x596 - x4 * x590) - 2.0 * x4 * x592)
                + x45 * (x577 - x588 + x591)
                + x52 * x594
            )
            + x343 * (-x16 * x578 + x16 * x582 + x593)
            + x52
            * (
                x3 * x594
                - x45 * (-x572 + x576 + x581)
                + x52 * (x1 * x585 + x24 * x577 - 2.0 * x4 * x581)
            )
        )
    )
    result[1, 3] = numpy.sum(
        -x613
        * (
            x1 * (x601 - x605 + x606)
            + x1 * (x52 * x599 - x52 * x603 + x601 + x604)
            - x3 * (x24 * (x3 * x612 - x4 * x600) + 2.0 * x52 * x609 - x611)
            - x52 * (x24 * x609 - 2.0 * x52 * x606 + x608)
        )
    )
    result[1, 4] = numpy.sum(
        -x630
        * (
            x1 * (x617 - x621 + x622)
            + x1 * (x52 * x615 - x52 * x619 + x617 + x620)
            - x3 * (x24 * (x3 * x628 - x4 * x616) + 2.0 * x52 * x625 - x627)
            - x52 * (x24 * x625 - 2.0 * x52 * x622 + x624)
        )
    )
    result[1, 5] = numpy.sum(
        -x613
        * (
            x1 * (x635 - x640 + x641)
            + x1 * (x52 * x632 - x52 * x638 + x635 + x639)
            - x3 * (x24 * (x3 * x647 - x4 * x634) + 2.0 * x52 * x644 - x646)
            - x52 * (x24 * x644 - 2.0 * x52 * x641 + x643)
        )
    )
    result[1, 6] = numpy.sum(
        -x299
        * (-x24 * (x3 * x655 - x52 * x651) + 2.0 * x52 * (x3 * x651 - x52 * x653) + x652)
    )
    result[1, 7] = numpy.sum(
        0.5
        * x597
        * (2.0 * x3**2 * x658 - 4.0 * x3 * x52 * x656 + 2.0 * x52**2 * x663 - x662)
    )
    result[1, 8] = numpy.sum(
        -x568
        * (-x24 * (x3 * x670 - x52 * x666) + 2.0 * x52 * (x3 * x666 - x52 * x668) + x667)
    )
    result[1, 9] = numpy.sum(
        0.5
        * x174
        * (2.0 * x3**2 * x675 - 4.0 * x3 * x52 * x673 + 2.0 * x52**2 * x678 - x677)
    )
    result[2, 0] = numpy.sum(
        -x543
        * (
            x1 * (x4 * x697 - x4 * x709 + x719)
            + x3
            * (
                2.0
                * x3
                * (
                    x3 * (x24 * (-x3 * x729 + x4 * x714) - 2.0 * x4 * x715 + x728)
                    + x4 * x723
                    + x45 * (x3 * x714 + x706 - x712)
                )
                + x58 * x724
                + x62 * (x700 - x708 + x716 + x730)
            )
            + x52
            * (
                2.0 * x3 * x724
                + x58
                * (-x3 * x721 + x4 * (-x24 * x694 + 2.0 * x4 * x687 - x725) + x45 * x717)
                - x62 * (x688 - x696 + x709 + x726)
            )
            + x62 * (x52 * x697 - x52 * x709 + x719)
        )
    )
    result[2, 1] = numpy.sum(
        -x597
        * (
            x1 * (-x58 * x744 + x58 * x749 + x763)
            + x3
            * (
                x3 * (-x24 * (x3 * x771 - x4 * x760) - 2.0 * x4 * x762 + x768)
                + x45 * (x743 - x755 + x761)
                + x52 * x766
            )
            + x343 * (-x16 * x744 + x16 * x749 + x763)
            + x52
            * (
                x3 * x766
                - x45 * (-x736 + x742 + x748)
                + x52 * (x24 * x743 - 2.0 * x4 * x748 + x764)
            )
        )
    )
    result[2, 2] = numpy.sum(
        -x568
        * (
            x1 * (-x16 * x780 + x16 * x784 + x793)
            + 2.0
            * x3
            * (
                x3 * (-x24 * (x3 * x798 - x4 * x791) - 2.0 * x4 * x792 + x797)
                + x45 * (x3 * x791 + x779 - x790)
                + x52 * x795
            )
            + x45 * (-x58 * x780 + x58 * x784 + x793)
            + x58
            * (
                x3 * x795
                - x45 * (-x775 + x778 + x783)
                + x52 * (x24 * x779 - 2.0 * x4 * x783 + x799)
            )
        )
    )
    result[2, 3] = numpy.sum(
        -x613
        * (
            x1 * (x806 - x812 + x813)
            + x1 * (x52 * x803 - x52 * x810 + x806 + x811)
            - x3 * (x24 * (x3 * x823 - x4 * x805) + 2.0 * x52 * x817 - x820)
            - x52 * (x24 * x817 - 2.0 * x52 * x813 + x816)
        )
    )
    result[2, 4] = numpy.sum(
        -x630
        * (
            x1 * (x832 - x839 + x840)
            + x1 * (x52 * x826 - x52 * x837 + x832 + x838)
            - x3 * (x24 * (x3 * x848 - x4 * x831) + 2.0 * x52 * x843 - x845)
            - x52 * (x24 * x843 - 2.0 * x52 * x840 + x842)
        )
    )
    result[2, 5] = numpy.sum(
        -x613
        * (
            x1 * (x852 - x856 + x857)
            + x1 * (x52 * x850 - x52 * x854 + x852 + x855)
            - x3 * (x24 * (x3 * x863 - x4 * x851) + 2.0 * x52 * x860 - x862)
            - x52 * (x24 * x860 - 2.0 * x52 * x857 + x859)
        )
    )
    result[2, 6] = numpy.sum(
        0.5
        * x174
        * (2.0 * x3**2 * x868 - 4.0 * x3 * x52 * x865 + 2.0 * x52**2 * x875 - x873)
    )
    result[2, 7] = numpy.sum(
        -x568
        * (-x24 * (x3 * x886 - x52 * x878) + 2.0 * x52 * (x3 * x878 - x52 * x883) + x881)
    )
    result[2, 8] = numpy.sum(
        0.5
        * x597
        * (2.0 * x3**2 * x893 - 4.0 * x3 * x52 * x890 + 2.0 * x52**2 * x898 - x897)
    )
    result[2, 9] = numpy.sum(
        -x299
        * (-x24 * (x3 * x905 - x52 * x902) + 2.0 * x52 * (x3 * x902 - x52 * x904) + x903)
    )
    result[3, 0] = numpy.sum(
        x299
        * (
            -2.0
            * x3
            * (
                x3 * (x1 * x920 + x24 * (-x3 * x921 + x4 * x917) - 2.0 * x4 * x918)
                + x4 * x919
                + x45 * (x3 * x917 + x915 - x916)
            )
            + x58
            * (
                -x3 * x919
                - x4 * (x1 * x923 + x24 * x915 - 2.0 * x4 * x925)
                + x45 * (-x913 + x914 + x925)
            )
            + x62 * (x16 * x925 + x16 * x929 + x24 * x918 + x24 * x929 - x926 - x928)
        )
    )
    result[3, 1] = numpy.sum(
        -0.5
        * x597
        * (
            2.0 * x1 * (x931 - x935 + x939)
            - 2.0 * x164 * (x1 * x940 + x24 * x941 - 2.0 * x4 * x939)
            - x3 * (-x1 * x942 + x24 * (x3 * x944 - x4 * x930) + 2.0 * x4 * x941)
        )
    )
    result[3, 2] = numpy.sum(
        -0.5
        * x597
        * (
            2.0 * x1 * (x946 - x950 + x954)
            - 2.0 * x164 * (x1 * x955 + x24 * x956 - 2.0 * x4 * x954)
            - x3 * (-x1 * x957 + x24 * (x3 * x958 - x4 * x945) + 2.0 * x4 * x956)
        )
    )
    result[3, 3] = numpy.sum(
        -x568
        * (-x24 * (x3 * x968 - x4 * x964) + 2.0 * x52 * (x3 * x964 - x4 * x966) + x965)
    )
    result[3, 4] = numpy.sum(
        -0.5
        * x976
        * (
            -2.0 * x3 * (x3 * x971 - x4 * x969)
            + 2.0 * x52 * (x3 * x969 - x4 * x975)
            + x974
        )
    )
    result[3, 5] = numpy.sum(
        -x568
        * (-x24 * (x3 * x982 - x4 * x979) + 2.0 * x52 * (x3 * x979 - x4 * x981) + x980)
    )
    result[3, 6] = numpy.sum(
        x543
        * (
            -x3 * (x1 * x418 + x494 * x651 - x6 * x655 - x62 * x984)
            + x52 * (x1 * x414 + x494 * x653 - x6 * x651 - x62 * x983)
        )
    )
    result[3, 7] = numpy.sum(
        x613
        * (
            -x3 * (x1 * x441 - x254 * x658 + x544 * x656 - x986)
            + x52 * (x1 * x437 - x254 * x656 + x544 * x663 - x985)
        )
    )
    result[3, 8] = numpy.sum(
        x613
        * (
            -x3 * (x1 * x465 + x494 * x666 - x6 * x670 - x988)
            + x52 * (x1 * x462 + x494 * x668 - x6 * x666 - x987)
        )
    )
    result[3, 9] = numpy.sum(
        x543
        * (
            x3 * (x254 * x675 - x544 * x673 + x990)
            - x52 * (x254 * x673 - x544 * x678 + x989)
        )
    )
    result[4, 0] = numpy.sum(
        0.5
        * x350
        * (
            3.0
            * x1
            * (x1009 * x24 - x1013 - x1015 + x1016 * x16 + x1016 * x24 + x16 * x997)
            - 2.0
            * x3
            * (
                x1010 * x4
                + x3 * (x1 * x1011 - 2.0 * x1009 * x4 + x24 * (x1007 * x4 - x1012 * x3))
                + x45 * (x1003 - x1005 + x1008)
            )
            + 2.0
            * x52
            * (
                -x1010 * x3
                - x4 * (x1 * x993 + x1003 * x24 - 2.0 * x4 * x997)
                + x45 * (x1002 + x997 - x998)
            )
        )
    )
    result[4, 1] = numpy.sum(
        -0.5
        * x976
        * (
            2.0 * x1 * (x1018 - x1021 + x1024)
            - 2.0 * x164 * (x1 * x1025 - 2.0 * x1024 * x4 + x1026 * x24)
            + x3 * (x1 * x1027 - 2.0 * x1026 * x4 + x24 * (x1017 * x4 - x1028 * x3))
        )
    )
    result[4, 2] = numpy.sum(
        -0.5
        * x976
        * (
            2.0 * x1 * (x1031 - x1035 + x1038)
            - 2.0 * x164 * (x1 * x1039 - 2.0 * x1038 * x4 + x1040 * x24)
            + x3 * (x1 * x1041 - 2.0 * x1040 * x4 + x24 * (x1030 * x4 - x1042 * x3))
        )
    )
    result[4, 3] = numpy.sum(
        -x976
        * (
            x1046 * x343
            + x3 * (x1043 * x4 - x1044 * x3)
            + x52 * (x1043 * x3 - x1047 * x4)
        )
    )
    result[4, 4] = numpy.sum(
        -0.25
        * x92
        * (
            x1050
            + x24 * (x1049 * x4 - x1052 * x3)
            + 2.0 * x52 * (x1049 * x3 - x1051 * x4)
        )
    )
    result[4, 5] = numpy.sum(
        -0.5
        * x976
        * (
            x1057
            + 2.0 * x3 * (x1054 * x4 - x1055 * x3)
            + 2.0 * x52 * (x1054 * x3 - x1058 * x4)
        )
    )
    result[4, 6] = numpy.sum(
        x1061
        * (
            x3 * (3.0 * x1060 + x254 * x868 - x544 * x865)
            - x52 * (3.0 * x1059 + x254 * x865 - x544 * x875)
        )
    )
    result[4, 7] = numpy.sum(
        x630
        * (
            x3 * (2.0 * x1063 - x494 * x878 + x6 * x886)
            - x52 * (2.0 * x1062 - x494 * x883 + x6 * x878)
        )
    )
    result[4, 8] = numpy.sum(
        x630
        * (
            x3 * (x1065 + x254 * x893 - x544 * x890)
            - x52 * (x1064 + x254 * x890 - x544 * x898)
        )
    )
    result[4, 9] = numpy.sum(x1061 * (x1066 * x52 - x1067 * x3))
    result[5, 0] = numpy.sum(
        x299
        * (
            -2.0
            * x3
            * (
                x1082 * x4
                + x3 * (-2.0 * x1081 * x4 + x1084 + x24 * (x1080 * x4 - x1085 * x3))
                + x45 * (x1078 - x1079 + x1080 * x3)
            )
            + x58
            * (
                -x1082 * x3
                - x4 * (x1078 * x24 + x1088 - 2.0 * x1090 * x4)
                + x45 * (-x1076 + x1077 + x1090)
            )
            + x62
            * (x1081 * x24 + x1090 * x16 - x1091 - x1093 + x1094 * x16 + x1094 * x24)
        )
    )
    result[5, 1] = numpy.sum(
        -0.5
        * x597
        * (
            2.0 * x1 * (x1100 - x1106 + x1110)
            - 2.0 * x164 * (-2.0 * x1110 * x4 + x1112 + x1113 * x24)
            + x3 * (-2.0 * x1113 * x4 + x1115 + x24 * (x1099 * x4 - x1118 * x3))
        )
    )
    result[5, 2] = numpy.sum(
        -0.5
        * x597
        * (
            2.0 * x1 * (x1120 - x1124 + x1128)
            - 2.0 * x164 * (-2.0 * x1128 * x4 + x1130 + x1131 * x24)
            + x3 * (-2.0 * x1131 * x4 + x1133 + x24 * (x1119 * x4 - x1134 * x3))
        )
    )
    result[5, 3] = numpy.sum(
        -x568
        * (
            x1140
            + x24 * (x1137 * x4 - x1145 * x3)
            + 2.0 * x52 * (x1137 * x3 - x1142 * x4)
        )
    )
    result[5, 4] = numpy.sum(
        -0.5
        * x976
        * (
            x1156
            + 2.0 * x3 * (x1149 * x4 - x1152 * x3)
            + 2.0 * x52 * (x1149 * x3 - x1157 * x4)
        )
    )
    result[5, 5] = numpy.sum(
        -x568
        * (
            x1164
            + x24 * (x1163 * x4 - x1167 * x3)
            + 2.0 * x52 * (x1163 * x3 - x1165 * x4)
        )
    )
    result[5, 6] = numpy.sum(
        x543 * (-x3 * (x1137 * x94 - x1169) + x52 * (x1142 * x94 - x1168))
    )
    result[5, 7] = numpy.sum(
        x613 * (-x3 * (x1149 * x252 - x1173) + x52 * (x1157 * x252 - x1171))
    )
    result[5, 8] = numpy.sum(x613 * (x1175 * x52 - x1177 * x3))
    result[5, 9] = numpy.sum(x543 * (-x1178 * x52 + x1179 * x3))
    result[6, 0] = numpy.sum(
        -0.5
        * x173
        * (
            2.0 * x1 * (x1181 - x1186 + x1190)
            - 2.0
            * x1192
            * (x1 * (x1185 - x1187 + x1188 - x1189) - 2.0 * x1190 * x4 + x1191 * x24)
            + x3
            * (
                x1 * (x1180 - x1182 + x1183 - x1184)
                - 2.0 * x1191 * x4
                + x24 * (x1180 * x4 - x3 * (-x494 * x917 + x6 * x921 + 2.0 * x943))
            )
        )
    )
    result[6, 1] = numpy.sum(
        -x299
        * (
            x1 * (-x1193 + x1194 + x1195 + x928 + x960)
            + x24 * (x1195 * x4 + x3 * (x1 * x920 - x254 * x944 + x544 * x930 - x967))
            + 2.0 * x4 * (x1195 * x3 - x4 * (x1193 - x1194 + x927 + x959))
        )
    )
    result[6, 2] = numpy.sum(
        -x174
        * (
            x3 * (x1196 * x4 - x3 * (-x494 * x945 + x6 * x958 + 2.0 * x970))
            + x343 * (x1196 + x1197 - x1198 - x1199)
            + x4 * (x1196 * x3 - x4 * (-x1197 + x1198 + x1199))
        )
    )
    result[6, 3] = numpy.sum(
        x543
        * (
            -x3 * (x45 * x942 - x45 * x984 + x494 * x964 - x6 * x968)
            + x4 * (x45 * x940 - x45 * x983 + x494 * x966 - x6 * x964)
        )
    )
    result[6, 4] = numpy.sum(
        x1061
        * (
            -x3 * (x1 * x957 - x254 * x971 + x544 * x969 - x986)
            + x4 * (x1 * x955 - x254 * x969 + x544 * x975 - x985)
        )
    )
    result[6, 5] = numpy.sum(
        x543
        * (
            x3 * (-x494 * x979 + x6 * x982 + 2.0 * x988)
            - x4 * (-x494 * x981 + x6 * x979 + 2.0 * x987)
        )
    )
    result[6, 6] = numpy.sum(
        -x93
        * (
            x544
            * (
                x1205 * x6
                - x415
                + x494
                * (
                    -2.0 * x1204 * x6
                    + 3.0 * x298
                    + x544
                    * (x1203 * x6 - 2.0 * x163 - x94 * (-x101 * x254 + x252 * x96 + x80))
                )
                - 3.0 * x608
            )
            + 2.0
            * x6
            * (
                x1205 * x494
                + x419
                + x6
                * (
                    x1202 * x544
                    + 3.0 * x293
                    + 2.0
                    * x6
                    * (x1201 * x94 + 2.0 * x168 - x6 * (x136 * x252 - x170 * x254 + x64))
                )
                + 3.0 * x611
            )
            + 2.0 * x652
            + 3.0 * x965
        )
    )
    result[6, 7] = numpy.sum(
        -0.5
        * x174
        * (
            2.0
            * x1209
            * (
                2.0 * x1208 * x6
                - x438
                + x544
                * (
                    -x1206 * x6
                    + 2.0 * x337
                    + x494 * (-x244 - x254 * x303 + 2.0 * x316 * x94)
                )
                - 2.0 * x624
            )
            + x6
            * (
                x1208 * x544
                + x442
                + 2.0
                * x6
                * (
                    x1207 * x494
                    + 2.0 * x345
                    + x6 * (x248 + x254 * x347 - 2.0 * x324 * x94)
                )
                + 2.0 * x627
            )
            + 2.0 * x662
            + 2.0 * x974
        )
    )
    result[6, 8] = numpy.sum(
        -x299
        * (
            x544
            * (x1210 * x6 - x463 + x494 * (x254 * x455 + x397 - 2.0 * x459 * x494) - x643)
            + 2.0
            * x6
            * (x1210 * x494 + x466 + x6 * (x254 * x468 + x392 - 2.0 * x449 * x494) + x646)
            + 2.0 * x667
            + x980
        )
    )
    result[6, 9] = numpy.sum(
        -0.5
        * x173
        * (
            -2.0 * x1209 * (x254 * x672 + x487 - 2.0 * x494 * x676)
            + x6 * (x254 * x674 + x491 - 2.0 * x494 * x672)
            + 2.0 * x677
        )
    )
    result[7, 0] = numpy.sum(
        -0.5
        * x174
        * (
            2.0 * x1 * (x1212 - x1216 + x1219)
            - 2.0
            * x1192
            * (x1 * (x1215 + x1217 - x1218 + x726) - 2.0 * x1219 * x4 + x1220 * x24)
            + x3
            * (
                x1 * (x1211 + x1213 - x1214 + x730)
                - 2.0 * x1220 * x4
                + x24 * (x1211 * x4 - x3 * (-x1007 * x544 + x1012 * x254 + x821))
            )
        )
    )
    result[7, 1] = numpy.sum(
        -x597
        * (
            x3 * (x1221 * x4 + x3 * (x1 * x1011 + x1017 * x494 - x1028 * x6 - x866))
            + x343 * (x1015 + x1221 + x1222 - x1223 + x754)
            + x4 * (x1221 * x3 - x4 * (x1014 - x1222 + x1223 + x753))
        )
    )
    result[7, 2] = numpy.sum(
        -x568
        * (
            x1 * (-x1224 + x1225 + x1226 + x789)
            + x24 * (x1226 * x4 - x3 * (-x1030 * x544 + x1042 * x254 + x884))
            + 2.0 * x4 * (x1226 * x3 - x4 * (x1224 - x1225 + x788))
        )
    )
    result[7, 3] = numpy.sum(
        x613
        * (
            -x3 * (x1027 * x45 + x1043 * x544 - x1044 * x254 - x1060)
            + x4 * (x1025 * x45 - x1043 * x254 + x1047 * x544 - x1059)
        )
    )
    result[7, 4] = numpy.sum(
        x630
        * (
            -x3 * (x1 * x1041 + x1049 * x494 - x1052 * x6 - x1063)
            + x4 * (x1 * x1039 - x1049 * x6 + x1051 * x494 - x1062)
        )
    )
    result[7, 5] = numpy.sum(
        x613
        * (
            x3 * (-x1054 * x544 + x1055 * x254 + x1065)
            - x4 * (x1054 * x254 - x1058 * x544 + x1064)
        )
    )
    result[7, 6] = numpy.sum(
        -x543
        * (
            x1046 * x62
            + x494
            * (
                2.0 * x1229 * x6
                + x544
                * (
                    -x1227 * x6
                    + 2.0 * x764
                    + x94 * (-x254 * x734 - x725 + 2.0 * x746 * x94)
                )
                - 3.0 * x816
            )
            + x6
            * (
                x1229 * x544
                + 2.0
                * x6
                * (
                    x1228 * x94
                    + x6 * (x254 * x770 + x728 - 2.0 * x759 * x94)
                    + 2.0 * x768
                )
                + 3.0 * x820
            )
            + x873
        )
    )
    result[7, 7] = numpy.sum(
        -x568
        * (
            2.0 * x1050
            + x544
            * (x1230 * x6 + x494 * (x254 * x836 + x799 - 2.0 * x825 * x94) - 2.0 * x842)
            + 2.0
            * x6
            * (x1230 * x494 + x6 * (x254 * x847 + x797 - 2.0 * x830 * x94) + 2.0 * x845)
            + x881
        )
    )
    result[7, 8] = numpy.sum(
        -x613
        * (
            x1057
            - x494 * (x254 * x889 - 2.0 * x494 * x896 + x859)
            + x6 * (x254 * x892 - 2.0 * x494 * x889 + x862)
            + x897
        )
    )
    result[7, 9] = numpy.sum(x299 * (2.0 * x1066 * x494 - x1067 * x254 - x903))
    result[8, 0] = numpy.sum(
        -0.5
        * x174
        * (
            2.0 * x1 * (x1233 - x1237 + x1239)
            - 2.0
            * x1192
            * (x1 * (x1102 - x1234 + x1238) - 2.0 * x1239 * x4 + x1240 * x24)
            + x3
            * (
                x1 * (x1096 - x1231 + x1235)
                - 2.0 * x1240 * x4
                + x24 * (x1232 * x4 + x3 * (x1080 * x494 + x1116))
            )
        )
    )
    result[8, 1] = numpy.sum(
        -x568
        * (
            x1 * (x1139 + x1241 + x1242)
            + x24 * (x1242 * x4 + x3 * (x1099 * x544 - x1144))
            + 2.0 * x4 * (x1242 * x3 - x4 * (x1141 - x1241))
        )
    )
    result[8, 2] = numpy.sum(
        -x597
        * (
            x3 * (x1244 * x4 + x3 * (x1119 * x494 + x1150))
            + x343 * (x1153 - x1243 + x1245)
            + x4 * (x1244 * x3 + x1245 * x4)
        )
    )
    result[8, 3] = numpy.sum(
        x613 * (-x3 * (x1137 * x494 - x1169) + x4 * (x1142 * x494 - x1168))
    )
    result[8, 4] = numpy.sum(
        x630 * (-x3 * (x1149 * x544 - x1173) + x4 * (x1157 * x544 - x1171))
    )
    result[8, 5] = numpy.sum(
        x613 * (-x3 * (x1163 * x494 + x1176) + x4 * (x1165 * x494 + x1174))
    )
    result[8, 6] = numpy.sum(
        -x299
        * (
            3.0 * x1140
            + x544
            * (
                -2.0 * x1112
                + x1246 * x6
                + x94 * (x1088 + x1104 * x254 - 2.0 * x1108 * x94)
            )
            + 2.0
            * x6
            * (
                2.0 * x1115
                + x1246 * x94
                + x6 * (x1084 - 2.0 * x1098 * x94 + x1117 * x254)
            )
        )
    )
    result[8, 7] = numpy.sum(
        -0.5
        * x597
        * (
            2.0 * x1156
            - 2.0 * x1209 * (x1130 + x1148 * x254 - 2.0 * x1155 * x94)
            + x6 * (x1133 - 2.0 * x1148 * x94 + x1151 * x254)
        )
    )
    result[8, 8] = numpy.sum(x568 * (-x1164 + 2.0 * x1175 * x494 - x1177 * x254))
    result[8, 9] = numpy.sum(x543 * (-x1178 * x494 + x1179 * x6))
    result[9, 0] = numpy.sum(
        -0.5
        * x173
        * (
            2.0 * x1 * (x1248 - x1253 + x1258)
            - 2.0 * x1192 * (-2.0 * x1258 * x4 + x1260 + x1261 * x24)
            + x3 * (-2.0 * x1261 * x4 + x1263 + x24 * (x1247 * x4 - x1264 * x3))
        )
    )
    result[9, 1] = numpy.sum(
        0.5
        * x174
        * (-4.0 * x1267 * x3 * x4 + 2.0 * x1269 * x3**2 - x1271 + 2.0 * x1272 * x4**2)
    )
    result[9, 2] = numpy.sum(
        -x299
        * (x1276 + x24 * (x1275 * x4 - x1278 * x3) + 2.0 * x4 * (x1275 * x3 - x1277 * x4))
    )
    result[9, 3] = numpy.sum(
        x543
        * (
            -x3 * (x1 * x1262 + x1267 * x252 - x1269 * x254)
            + x4 * (x1 * x1259 - x1267 * x254 + x1272 * x252)
        )
    )
    result[9, 4] = numpy.sum(x1061 * (x1279 * x4 - x1280 * x3))
    result[9, 5] = numpy.sum(x543 * (-x1281 * x4 + x1282 * x3))
    result[9, 6] = numpy.sum(
        -0.5
        * x173
        * (
            2.0 * x1271
            + x6 * (x1263 - 2.0 * x1266 * x94 + x1268 * x254)
            - x94 * (x1260 + x1266 * x254 - 2.0 * x1270 * x94)
        )
    )
    result[9, 7] = numpy.sum(x299 * (-x1276 + 2.0 * x1279 * x94 - x1280 * x254))
    result[9, 8] = numpy.sum(x543 * (-x1281 * x94 + x1282 * x6))
    result[9, 9] = numpy.sum(
        -x93
        * (
            3.0 * x1164
            + x772
            * (
                x1288 * x8
                - x487
                + x679
                * (
                    -2.0 * x1287 * x8
                    + 3.0 * x397
                    + x772
                    * (x1286 * x8 - x175 * (x177 * x351 - x182 * x353 + x80) - 2.0 * x244)
                )
                - 3.0 * x859
            )
            + 2.0
            * x8
            * (
                x1288 * x679
                + x491
                + x8
                * (
                    x1285 * x772
                    + 3.0 * x392
                    + 2.0
                    * x8
                    * (x1284 * x175 + 2.0 * x248 - x8 * (x217 * x351 - x250 * x353 + x64))
                )
                + 3.0 * x862
            )
            + 2.0 * x903
        )
    )
    return result


def coulomb3d_34(ax, da, A, bx, db, B, R):
    """Cartesian (fg) 1-electron Coulomb integral.

    Generated code; DO NOT modify by hand!"""

    result = numpy.zeros((10, 15), dtype=float)

    x0 = ax + bx
    x1 = x0 ** (-1.0)
    x2 = -x1 * (ax * A[0] + bx * B[0])
    x3 = -x2 - A[0]
    x4 = 0.5 / (ax + bx)
    x5 = -x2 - B[0]
    x6 = -x2 - R[0]
    x7 = -x1 * (ax * A[1] + bx * B[1])
    x8 = -x7 - R[1]
    x9 = -x1 * (ax * A[2] + bx * B[2])
    x10 = -x9 - R[2]
    x11 = x0 * (x10**2 + x6**2 + x8**2)
    x12 = (
        6.283185307179586
        * x1
        * numpy.exp(
            -ax * bx * x1 * ((A[0] - B[0]) ** 2 + (A[1] - B[1]) ** 2 + (A[2] - B[2]) ** 2)
        )
    )
    x13 = x12 * boys(2, x11)
    x14 = x12 * boys(1, x11)
    x15 = x4 * (-x13 + x14)
    x16 = x13 * x6
    x17 = x14 * x5
    x18 = -x16 + x17
    x19 = x18 * x5
    x20 = x12 * boys(3, x11)
    x21 = x20 * x6
    x22 = x13 * x5
    x23 = -x21 + x22
    x24 = x23 * x6
    x25 = x15 + x19 - x24
    x26 = x25 * x5
    x27 = x4 * (x13 - x20)
    x28 = x23 * x5
    x29 = x12 * boys(4, x11)
    x30 = x29 * x6
    x31 = x20 * x5
    x32 = -x30 + x31
    x33 = x32 * x6
    x34 = x27 + x28 - x33
    x35 = x34 * x6
    x36 = 2.0 * x4
    x37 = x36 * (x18 + x21 - x22)
    x38 = -x35 + x37
    x39 = x26 + x38
    x40 = x39 * x5
    x41 = x12 * boys(0, x11)
    x42 = x4 * (-x14 + x41)
    x43 = -x14 * x6 + x41 * x5
    x44 = -x18 * x6 + x42 + x43 * x5
    x45 = -x25 * x6 + x36 * (x16 - x17 + x43)
    x46 = x44 * x5 + x45
    x47 = -x15
    x48 = 3.0 * x4
    x49 = -x39 * x6 + x48 * (-x19 + x24 + x44 + x47)
    x50 = x46 * x5 + x49
    x51 = x34 * x5
    x52 = x4 * (x20 - x29)
    x53 = x32 * x5
    x54 = x12 * boys(5, x11)
    x55 = x54 * x6
    x56 = x29 * x5
    x57 = -x55 + x56
    x58 = x57 * x6
    x59 = x52 + x53 - x58
    x60 = x59 * x6
    x61 = x36 * (x23 + x30 - x31)
    x62 = x51 - x60 + x61
    x63 = x6 * x62
    x64 = -x27
    x65 = x48 * (x25 - x28 + x33 + x64)
    x66 = x63 - x65
    x67 = -x63 + x65
    x68 = x40 + x67
    x69 = x35 - x37
    x70 = x4 * (-x26 + x46 + x69)
    x71 = x3 * x50 - x6 * x68 + 4.0 * x70
    x72 = x3 * x68
    x73 = x5 * x62
    x74 = x5 * x59
    x75 = x4 * (x29 - x54)
    x76 = x5 * x57
    x77 = x12 * boys(6, x11)
    x78 = x6 * x77
    x79 = x5 * x54
    x80 = -x78 + x79
    x81 = x6 * x80
    x82 = x75 + x76 - x81
    x83 = x6 * x82
    x84 = x36 * (x32 + x55 - x56)
    x85 = x74 - x83 + x84
    x86 = x6 * x85
    x87 = -x52
    x88 = x48 * (x34 - x53 + x58 + x87)
    x89 = -x86 + x88
    x90 = x73 + x89
    x91 = x6 * x90
    x92 = x60 - x61
    x93 = x4 * (x39 - x51 + x92)
    x94 = 4.0 * x93
    x95 = x72 - x91 + x94
    x96 = x3 * x39
    x97 = x3 * x46 + x49
    x98 = 4.0 * x4
    x99 = x86 - x88
    x100 = x4 * (x54 - x77)
    x101 = x12 * boys(7, x11)
    x102 = -x75
    x103 = x3 * x62
    x104 = x67 + x96
    x105 = x25 * x3
    x106 = da * db
    x107 = 0.009523809523809524 * x106
    x108 = 2.645751311064591 * x107
    x109 = x13 * x8
    x110 = -x109
    x111 = -x7 - B[1]
    x112 = x111 * x14
    x113 = x110 + x112
    x114 = x113 * x5
    x115 = x20 * x8
    x116 = -x115
    x117 = x111 * x13
    x118 = x116 + x117
    x119 = x118 * x6
    x120 = x114 - x119
    x121 = x120 * x5
    x122 = x4 * (x113 + x115 - x117)
    x123 = x118 * x5
    x124 = x29 * x8
    x125 = -x124
    x126 = x111 * x20
    x127 = x125 + x126
    x128 = x127 * x6
    x129 = x123 - x128
    x130 = x129 * x6
    x131 = x122 - x130
    x132 = x121 + x131
    x133 = x132 * x5
    x134 = -x14 * x8
    x135 = x111 * x41 + x134
    x136 = -x113 * x6 + x135 * x5
    x137 = x4 * (x109 - x112 + x135)
    x138 = -x120 * x6 + x137
    x139 = x136 * x5 + x138
    x140 = -x132 * x6 + x36 * (-x114 + x119 + x136)
    x141 = x139 * x5 + x140
    x142 = x4 * (x118 + x124 - x126)
    x143 = x129 * x5
    x144 = x127 * x5
    x145 = x54 * x8
    x146 = -x145
    x147 = x111 * x29
    x148 = x146 + x147
    x149 = x148 * x6
    x150 = x144 - x149
    x151 = x150 * x6
    x152 = x142 + x143 - x151
    x153 = x152 * x6
    x154 = x36 * (x120 - x123 + x128)
    x155 = x153 - x154
    x156 = -x153 + x154
    x157 = x133 + x156
    x158 = -x122
    x159 = x130 + x158
    x160 = x4 * (-x121 + x139 + x159)
    x161 = x141 * x3 - x157 * x6 + 3.0 * x160
    x162 = x157 * x3
    x163 = x152 * x5
    x164 = x4 * (x127 + x145 - x147)
    x165 = x150 * x5
    x166 = x148 * x5
    x167 = x77 * x8
    x168 = -x167
    x169 = x111 * x54
    x170 = x168 + x169
    x171 = x170 * x6
    x172 = x166 - x171
    x173 = x172 * x6
    x174 = x164 + x165 - x173
    x175 = x174 * x6
    x176 = x36 * (x129 - x144 + x149)
    x177 = -x175 + x176
    x178 = x163 + x177
    x179 = x178 * x6
    x180 = -x142
    x181 = x151 + x180
    x182 = x4 * (x132 - x143 + x181)
    x183 = 3.0 * x182
    x184 = x162 - x179 + x183
    x185 = x132 * x3
    x186 = x139 * x3 + x140
    x187 = x175 - x176
    x188 = x4 * (x148 + x167 - x169)
    x189 = -x101 * x8
    x190 = x111 * x77 + x189
    x191 = -x164
    x192 = x152 * x3
    x193 = x156 + x185
    x194 = x120 * x3
    x195 = 0.06666666666666667 * x106
    x196 = x10 * x13
    x197 = -x196
    x198 = -x9 - B[2]
    x199 = x14 * x198
    x200 = x197 + x199
    x201 = x200 * x5
    x202 = x10 * x20
    x203 = -x202
    x204 = x13 * x198
    x205 = x203 + x204
    x206 = x205 * x6
    x207 = x201 - x206
    x208 = x207 * x5
    x209 = x4 * (x200 + x202 - x204)
    x210 = x205 * x5
    x211 = x10 * x29
    x212 = -x211
    x213 = x198 * x20
    x214 = x212 + x213
    x215 = x214 * x6
    x216 = x210 - x215
    x217 = x216 * x6
    x218 = x209 - x217
    x219 = x208 + x218
    x220 = x219 * x5
    x221 = -x10 * x14
    x222 = x198 * x41 + x221
    x223 = -x200 * x6 + x222 * x5
    x224 = x4 * (x196 - x199 + x222)
    x225 = -x207 * x6 + x224
    x226 = x223 * x5 + x225
    x227 = -x219 * x6 + x36 * (-x201 + x206 + x223)
    x228 = x226 * x5 + x227
    x229 = x4 * (x205 + x211 - x213)
    x230 = x216 * x5
    x231 = x214 * x5
    x232 = x10 * x54
    x233 = -x232
    x234 = x198 * x29
    x235 = x233 + x234
    x236 = x235 * x6
    x237 = x231 - x236
    x238 = x237 * x6
    x239 = x229 + x230 - x238
    x240 = x239 * x6
    x241 = x36 * (x207 - x210 + x215)
    x242 = x240 - x241
    x243 = -x240 + x241
    x244 = x220 + x243
    x245 = -x209
    x246 = x217 + x245
    x247 = x4 * (-x208 + x226 + x246)
    x248 = x228 * x3 - x244 * x6 + 3.0 * x247
    x249 = x244 * x3
    x250 = x239 * x5
    x251 = x4 * (x214 + x232 - x234)
    x252 = x237 * x5
    x253 = x235 * x5
    x254 = x10 * x77
    x255 = -x254
    x256 = x198 * x54
    x257 = x255 + x256
    x258 = x257 * x6
    x259 = x253 - x258
    x260 = x259 * x6
    x261 = x251 + x252 - x260
    x262 = x261 * x6
    x263 = x36 * (x216 - x231 + x236)
    x264 = -x262 + x263
    x265 = x250 + x264
    x266 = x265 * x6
    x267 = -x229
    x268 = x238 + x267
    x269 = x4 * (x219 - x230 + x268)
    x270 = 3.0 * x269
    x271 = x249 - x266 + x270
    x272 = x219 * x3
    x273 = x226 * x3 + x227
    x274 = x262 - x263
    x275 = x4 * (x235 + x254 - x256)
    x276 = -x10 * x101
    x277 = x198 * x77 + x276
    x278 = -x251
    x279 = x239 * x3
    x280 = x243 + x272
    x281 = x207 * x3
    x282 = x111 * x113
    x283 = x118 * x8
    x284 = x15 - x283
    x285 = x282 + x284
    x286 = x285 * x5
    x287 = x111 * x118
    x288 = x127 * x8
    x289 = x27 - x288
    x290 = x287 + x289
    x291 = x290 * x6
    x292 = -x291
    x293 = x286 + x292
    x294 = x293 * x5
    x295 = -x113 * x8 + x42
    x296 = x111 * x135 + x295
    x297 = -x285 * x6
    x298 = x296 * x5 + x297
    x299 = x283 + x47
    x300 = x4 * (-x282 + x296 + x299)
    x301 = -x293 * x6 + x300
    x302 = x298 * x5 + x301
    x303 = x290 * x5
    x304 = x111 * x127
    x305 = x148 * x8
    x306 = -x305 + x52
    x307 = x304 + x306
    x308 = x307 * x6
    x309 = x303 - x308
    x310 = x309 * x6
    x311 = x288 + x64
    x312 = x4 * (x285 - x287 + x311)
    x313 = -x312
    x314 = x310 + x313
    x315 = -x310 + x312
    x316 = x294 + x315
    x317 = x4 * (-x286 + x291 + x298)
    x318 = x3 * x302 - x316 * x6 + 2.0 * x317
    x319 = x3 * x316
    x320 = x309 * x5
    x321 = x305 + x87
    x322 = x4 * (x290 - x304 + x321)
    x323 = x307 * x5
    x324 = x111 * x148
    x325 = x170 * x8
    x326 = -x325 + x75
    x327 = x324 + x326
    x328 = x327 * x6
    x329 = x323 - x328
    x330 = x329 * x6
    x331 = x322 - x330
    x332 = x320 + x331
    x333 = x332 * x6
    x334 = x4 * (x293 - x303 + x308)
    x335 = 2.0 * x334
    x336 = x319 - x333 + x335
    x337 = x293 * x3
    x338 = x298 * x3 + x301
    x339 = -x322
    x340 = x330 + x339
    x341 = x102 + x325
    x342 = x4 * (x307 - x324 + x341)
    x343 = x100 - x190 * x8
    x344 = x111 * x170 + x343
    x345 = x3 * x309
    x346 = x315 + x337
    x347 = x285 * x3
    x348 = 3.872983346207417
    x349 = 0.02222222222222222 * x106 * x348
    x350 = x111 * x200
    x351 = x205 * x8
    x352 = -x351
    x353 = x350 + x352
    x354 = x353 * x5
    x355 = x111 * x205
    x356 = x214 * x8
    x357 = -x356
    x358 = x355 + x357
    x359 = x358 * x6
    x360 = -x359
    x361 = x354 + x360
    x362 = x361 * x5
    x363 = -x200 * x8
    x364 = x111 * x222 + x363
    x365 = -x353 * x6
    x366 = x364 * x5 + x365
    x367 = x4 * (-x350 + x351 + x364)
    x368 = -x361 * x6 + x367
    x369 = x366 * x5 + x368
    x370 = x358 * x5
    x371 = x111 * x214
    x372 = x235 * x8
    x373 = -x372
    x374 = x371 + x373
    x375 = x374 * x6
    x376 = x370 - x375
    x377 = x376 * x6
    x378 = x4 * (x353 - x355 + x356)
    x379 = -x378
    x380 = x377 + x379
    x381 = -x377 + x378
    x382 = x362 + x381
    x383 = x4 * (-x354 + x359 + x366)
    x384 = x3 * x369 - x382 * x6 + 2.0 * x383
    x385 = x3 * x382
    x386 = x376 * x5
    x387 = x4 * (x358 - x371 + x372)
    x388 = x374 * x5
    x389 = x111 * x235
    x390 = x257 * x8
    x391 = -x390
    x392 = x389 + x391
    x393 = x392 * x6
    x394 = x388 - x393
    x395 = x394 * x6
    x396 = x387 - x395
    x397 = x386 + x396
    x398 = x397 * x6
    x399 = x4 * (x361 - x370 + x375)
    x400 = 2.0 * x399
    x401 = x385 - x398 + x400
    x402 = x3 * x361
    x403 = x3 * x366 + x368
    x404 = -x387
    x405 = x395 + x404
    x406 = x4 * (x374 - x389 + x390)
    x407 = -x277 * x8
    x408 = x111 * x257 + x407
    x409 = x3 * x376
    x410 = x381 + x402
    x411 = x3 * x353
    x412 = 2.23606797749979 * x195
    x413 = x198 * x200
    x414 = x10 * x205
    x415 = x15 - x414
    x416 = x413 + x415
    x417 = x416 * x5
    x418 = x198 * x205
    x419 = x10 * x214
    x420 = x27 - x419
    x421 = x418 + x420
    x422 = x421 * x6
    x423 = -x422
    x424 = x417 + x423
    x425 = x424 * x5
    x426 = -x10 * x200 + x42
    x427 = x198 * x222 + x426
    x428 = -x416 * x6
    x429 = x427 * x5 + x428
    x430 = x414 + x47
    x431 = x4 * (-x413 + x427 + x430)
    x432 = -x424 * x6 + x431
    x433 = x429 * x5 + x432
    x434 = x421 * x5
    x435 = x198 * x214
    x436 = x10 * x235
    x437 = -x436 + x52
    x438 = x435 + x437
    x439 = x438 * x6
    x440 = x434 - x439
    x441 = x440 * x6
    x442 = x419 + x64
    x443 = x4 * (x416 - x418 + x442)
    x444 = -x443
    x445 = x441 + x444
    x446 = -x441 + x443
    x447 = x425 + x446
    x448 = x4 * (-x417 + x422 + x429)
    x449 = x3 * x433 - x447 * x6 + 2.0 * x448
    x450 = x3 * x447
    x451 = x440 * x5
    x452 = x436 + x87
    x453 = x4 * (x421 - x435 + x452)
    x454 = x438 * x5
    x455 = x198 * x235
    x456 = x10 * x257
    x457 = -x456 + x75
    x458 = x455 + x457
    x459 = x458 * x6
    x460 = x454 - x459
    x461 = x460 * x6
    x462 = x453 - x461
    x463 = x451 + x462
    x464 = x463 * x6
    x465 = x4 * (x424 - x434 + x439)
    x466 = 2.0 * x465
    x467 = x450 - x464 + x466
    x468 = x3 * x424
    x469 = x3 * x429 + x432
    x470 = -x453
    x471 = x461 + x470
    x472 = x102 + x456
    x473 = x4 * (x438 - x455 + x472)
    x474 = -x10 * x277 + x100
    x475 = x198 * x257 + x474
    x476 = x3 * x440
    x477 = x446 + x468
    x478 = x3 * x416
    x479 = x111 * x285
    x480 = 2.0 * x137 - x285 * x8
    x481 = x111 * x296 + x480
    x482 = x290 * x8
    x483 = 2.0 * x122
    x484 = x482 - x483
    x485 = x4 * (-x479 + x481 + x484)
    x486 = -x482 + x483
    x487 = x479 + x486
    x488 = -x487 * x6
    x489 = x3 * x481 + x488
    x490 = x111 * x290
    x491 = x307 * x8
    x492 = 2.0 * x142
    x493 = -x491 + x492
    x494 = x490 + x493
    x495 = x3 * x494
    x496 = x111 * x307
    x497 = x327 * x8
    x498 = 2.0 * x164
    x499 = -x497 + x498
    x500 = x496 + x499
    x501 = x500 * x6
    x502 = -x501
    x503 = x491 - x492
    x504 = x4 * (x487 - x490 + x503)
    x505 = -x504
    x506 = x3 * x487
    x507 = x494 * x6
    x508 = -x507
    x509 = x506 + x508
    x510 = x487 * x5
    x511 = x481 * x5 + x488
    x512 = x508 + x510
    x513 = x3 * x511 + x485 - x512 * x6
    x514 = x3 * x512
    x515 = x494 * x5
    x516 = x502 + x515
    x517 = x516 * x6
    x518 = x504 + x514 - x517
    x519 = x497 - x498
    x520 = x4 * (x494 - x496 + x519)
    x521 = 2.0 * x188 - x344 * x8
    x522 = x111 * x327 + x521
    x523 = x111 * x353
    x524 = x224 - x353 * x8
    x525 = x111 * x364 + x524
    x526 = x358 * x8
    x527 = x245 + x526
    x528 = x4 * (-x523 + x525 + x527)
    x529 = x209 - x526
    x530 = x523 + x529
    x531 = -x530 * x6
    x532 = x3 * x525 + x531
    x533 = x111 * x358
    x534 = x374 * x8
    x535 = x229 - x534
    x536 = x533 + x535
    x537 = x3 * x536
    x538 = x111 * x374
    x539 = x392 * x8
    x540 = x251 - x539
    x541 = x538 + x540
    x542 = x541 * x6
    x543 = -x542
    x544 = x267 + x534
    x545 = x4 * (x530 - x533 + x544)
    x546 = -x545
    x547 = x3 * x530
    x548 = x536 * x6
    x549 = -x548
    x550 = x547 + x549
    x551 = x5 * x530
    x552 = x5 * x525 + x531
    x553 = x549 + x551
    x554 = x3 * x552 + x528 - x553 * x6
    x555 = x3 * x553
    x556 = x5 * x536
    x557 = x543 + x556
    x558 = x557 * x6
    x559 = x545 + x555 - x558
    x560 = x278 + x539
    x561 = x4 * (x536 - x538 + x560)
    x562 = x275 - x408 * x8
    x563 = x111 * x392 + x562
    x564 = x421 * x8
    x565 = x111 * x416
    x566 = -x416 * x8
    x567 = x111 * x427 + x566
    x568 = x4 * (x564 - x565 + x567)
    x569 = -x564
    x570 = x565 + x569
    x571 = -x570 * x6
    x572 = x3 * x567 + x571
    x573 = x111 * x421
    x574 = x438 * x8
    x575 = -x574
    x576 = x573 + x575
    x577 = x3 * x576
    x578 = x111 * x438
    x579 = x458 * x8
    x580 = -x579
    x581 = x578 + x580
    x582 = x581 * x6
    x583 = -x582
    x584 = x4 * (x570 - x573 + x574)
    x585 = -x584
    x586 = x3 * x570
    x587 = x576 * x6
    x588 = -x587
    x589 = x586 + x588
    x590 = x5 * x570
    x591 = x5 * x567 + x571
    x592 = x588 + x590
    x593 = x3 * x591 + x568 - x592 * x6
    x594 = x3 * x592
    x595 = x5 * x576
    x596 = x583 + x595
    x597 = x596 * x6
    x598 = x584 + x594 - x597
    x599 = x4 * (x576 - x578 + x579)
    x600 = -x475 * x8
    x601 = x111 * x458 + x600
    x602 = x198 * x416
    x603 = -x10 * x416 + 2.0 * x224
    x604 = x198 * x427 + x603
    x605 = x10 * x421
    x606 = 2.0 * x209
    x607 = x605 - x606
    x608 = x4 * (-x602 + x604 + x607)
    x609 = -x605 + x606
    x610 = x602 + x609
    x611 = -x6 * x610
    x612 = x3 * x604 + x611
    x613 = x198 * x421
    x614 = x10 * x438
    x615 = 2.0 * x229
    x616 = -x614 + x615
    x617 = x613 + x616
    x618 = x3 * x617
    x619 = x198 * x438
    x620 = x10 * x458
    x621 = 2.0 * x251
    x622 = -x620 + x621
    x623 = x619 + x622
    x624 = x6 * x623
    x625 = -x624
    x626 = x614 - x615
    x627 = x4 * (x610 - x613 + x626)
    x628 = -x627
    x629 = x3 * x610
    x630 = x6 * x617
    x631 = -x630
    x632 = x629 + x631
    x633 = x5 * x610
    x634 = x5 * x604 + x611
    x635 = x631 + x633
    x636 = x3 * x634 - x6 * x635 + x608
    x637 = x3 * x635
    x638 = x5 * x617
    x639 = x625 + x638
    x640 = x6 * x639
    x641 = x627 + x637 - x640
    x642 = x620 - x621
    x643 = x4 * (x617 - x619 + x642)
    x644 = -x10 * x475 + 2.0 * x275
    x645 = x198 * x458 + x644
    x646 = x111 * x487
    x647 = 3.0 * x300 - x487 * x8
    x648 = x111 * x481 + x647
    x649 = x494 * x8
    x650 = 3.0 * x312
    x651 = x649 - x650
    x652 = x4 * (-x646 + x648 + x651)
    x653 = -x649 + x650
    x654 = x646 + x653
    x655 = x3 * x648 - x6 * x654
    x656 = x3 * x654
    x657 = x111 * x494
    x658 = x500 * x8
    x659 = 3.0 * x322
    x660 = -x658 + x659
    x661 = x657 + x660
    x662 = x6 * x661
    x663 = x656 - x662
    x664 = x658 - x659
    x665 = x4 * (x654 - x657 + x664)
    x666 = 3.0 * x342 - x522 * x8
    x667 = x111 * x500 + x666
    x668 = x111 * x530
    x669 = 2.0 * x367 - x530 * x8
    x670 = x111 * x525 + x669
    x671 = x536 * x8
    x672 = 2.0 * x378
    x673 = x671 - x672
    x674 = x4 * (-x668 + x670 + x673)
    x675 = -x671 + x672
    x676 = x668 + x675
    x677 = x3 * x670 - x6 * x676
    x678 = x3 * x676
    x679 = x111 * x536
    x680 = x541 * x8
    x681 = 2.0 * x387
    x682 = -x680 + x681
    x683 = x679 + x682
    x684 = x6 * x683
    x685 = x678 - x684
    x686 = x680 - x681
    x687 = x4 * (x676 - x679 + x686)
    x688 = 2.0 * x406 - x563 * x8
    x689 = x111 * x541 + x688
    x690 = x111 * x570
    x691 = x431 - x570 * x8
    x692 = x111 * x567 + x691
    x693 = x576 * x8
    x694 = x444 + x693
    x695 = x4 * (-x690 + x692 + x694)
    x696 = x443 - x693
    x697 = x690 + x696
    x698 = x3 * x692 - x6 * x697
    x699 = x3 * x697
    x700 = x111 * x576
    x701 = x581 * x8
    x702 = x453 - x701
    x703 = x700 + x702
    x704 = x6 * x703
    x705 = x699 - x704
    x706 = x470 + x701
    x707 = x4 * (x697 - x700 + x706)
    x708 = x473 - x601 * x8
    x709 = x111 * x581 + x708
    x710 = x617 * x8
    x711 = x111 * x610
    x712 = -x610 * x8
    x713 = x111 * x604 + x712
    x714 = x4 * (x710 - x711 + x713)
    x715 = -x710
    x716 = x711 + x715
    x717 = x3 * x713 - x6 * x716
    x718 = x3 * x716
    x719 = x111 * x617
    x720 = x623 * x8
    x721 = -x720
    x722 = x719 + x721
    x723 = x6 * x722
    x724 = x718 - x723
    x725 = x4 * (x716 - x719 + x720)
    x726 = -x645 * x8
    x727 = x111 * x623 + x726
    x728 = x198 * x610
    x729 = -x10 * x610 + 3.0 * x431
    x730 = x198 * x604 + x729
    x731 = x10 * x617
    x732 = 3.0 * x443
    x733 = x731 - x732
    x734 = x4 * (-x728 + x730 + x733)
    x735 = -x731 + x732
    x736 = x728 + x735
    x737 = x3 * x730 - x6 * x736
    x738 = x3 * x736
    x739 = x198 * x617
    x740 = x10 * x623
    x741 = 3.0 * x453
    x742 = -x740 + x741
    x743 = x739 + x742
    x744 = x6 * x743
    x745 = x738 - x744
    x746 = x740 - x741
    x747 = x4 * (x736 - x739 + x746)
    x748 = -x10 * x645 + 3.0 * x473
    x749 = x198 * x623 + x748
    x750 = -x7 - A[1]
    x751 = x13 * x750
    x752 = x14 * x750
    x753 = x110 + x752
    x754 = x4 * (x115 - x751 + x753)
    x755 = x5 * x753
    x756 = x116 + x751
    x757 = x6 * x756
    x758 = x755 - x757
    x759 = x5 * x758
    x760 = x5 * x756
    x761 = x20 * x750
    x762 = x125 + x761
    x763 = x6 * x762
    x764 = x760 - x763
    x765 = x6 * x764
    x766 = x754 + x759 - x765
    x767 = x5 * x766
    x768 = x4 * (x124 + x756 - x761)
    x769 = x5 * x764
    x770 = x5 * x762
    x771 = x29 * x750
    x772 = x146 + x771
    x773 = x6 * x772
    x774 = x770 - x773
    x775 = x6 * x774
    x776 = x768 + x769 - x775
    x777 = x6 * x776
    x778 = x36 * (x758 - x760 + x763)
    x779 = x767 - x777 + x778
    x780 = x5 * x779
    x781 = x134 + x41 * x750
    x782 = x4 * (x109 - x752 + x781)
    x783 = x5 * x781 - x6 * x753
    x784 = x5 * x783 - x6 * x758 + x782
    x785 = x36 * (-x755 + x757 + x783) + x5 * x784 - x6 * x766
    x786 = -x754
    x787 = x48 * (-x759 + x765 + x784 + x786) - x6 * x779
    x788 = x5 * x785 + x787
    x789 = x5 * x776
    x790 = x4 * (x145 + x762 - x771)
    x791 = x5 * x774
    x792 = x5 * x772
    x793 = x54 * x750
    x794 = x168 + x793
    x795 = x6 * x794
    x796 = x792 - x795
    x797 = x6 * x796
    x798 = x790 + x791 - x797
    x799 = x6 * x798
    x800 = x36 * (x764 - x770 + x773)
    x801 = x789 - x799 + x800
    x802 = x6 * x801
    x803 = -x768
    x804 = x48 * (x766 - x769 + x775 + x803)
    x805 = x802 - x804
    x806 = x780 - x802 + x804
    x807 = x4 * (x167 + x772 - x793)
    x808 = x189 + x750 * x77
    x809 = -x790
    x810 = 5.916079783099616 * x107
    x811 = x118 * x750
    x812 = x113 * x750
    x813 = x284 + x812
    x814 = x4 * (x311 - x811 + x813)
    x815 = x5 * x813
    x816 = x289 + x811
    x817 = x6 * x816
    x818 = x815 - x817
    x819 = x5 * x818
    x820 = x5 * x816
    x821 = x127 * x750
    x822 = x306 + x821
    x823 = x6 * x822
    x824 = x820 - x823
    x825 = x6 * x824
    x826 = x814 + x819 - x825
    x827 = x5 * x826
    x828 = x135 * x750 + x295
    x829 = x4 * (x299 - x812 + x828)
    x830 = x5 * x828 - x6 * x813
    x831 = x5 * x830 - x6 * x818 + x829
    x832 = x36 * (-x815 + x817 + x830) - x6 * x826
    x833 = x5 * x831 + x832
    x834 = x4 * (x321 + x816 - x821)
    x835 = x5 * x824
    x836 = x5 * x822
    x837 = x148 * x750
    x838 = x326 + x837
    x839 = x6 * x838
    x840 = x836 - x839
    x841 = x6 * x840
    x842 = x834 + x835 - x841
    x843 = x6 * x842
    x844 = x36 * (x818 - x820 + x823)
    x845 = x843 - x844
    x846 = x827 - x843 + x844
    x847 = x4 * (x341 + x822 - x837)
    x848 = x170 * x750 + x343
    x849 = x205 * x750
    x850 = x200 * x750
    x851 = x352 + x850
    x852 = x4 * (x356 - x849 + x851)
    x853 = x5 * x851
    x854 = x357 + x849
    x855 = x6 * x854
    x856 = x853 - x855
    x857 = x5 * x856
    x858 = x5 * x854
    x859 = x214 * x750
    x860 = x373 + x859
    x861 = x6 * x860
    x862 = x858 - x861
    x863 = x6 * x862
    x864 = x852 + x857 - x863
    x865 = x5 * x864
    x866 = x222 * x750 + x363
    x867 = x4 * (x351 - x850 + x866)
    x868 = x5 * x866 - x6 * x851
    x869 = x5 * x868 - x6 * x856 + x867
    x870 = x36 * (-x853 + x855 + x868) - x6 * x864
    x871 = x5 * x869 + x870
    x872 = x4 * (x372 + x854 - x859)
    x873 = x5 * x862
    x874 = x5 * x860
    x875 = x235 * x750
    x876 = x391 + x875
    x877 = x6 * x876
    x878 = x874 - x877
    x879 = x6 * x878
    x880 = x872 + x873 - x879
    x881 = x6 * x880
    x882 = x36 * (x856 - x858 + x861)
    x883 = x881 - x882
    x884 = x865 - x881 + x882
    x885 = -x852
    x886 = x4 * (x390 + x860 - x875)
    x887 = x257 * x750 + x407
    x888 = -x872
    x889 = x285 * x750
    x890 = x486 + x889
    x891 = x5 * x890
    x892 = x290 * x750
    x893 = x493 + x892
    x894 = x6 * x893
    x895 = x891 - x894
    x896 = x5 * x895
    x897 = x296 * x750 + x480
    x898 = x5 * x897 - x6 * x890
    x899 = x4 * (x484 - x889 + x897)
    x900 = -x6 * x895 + x899
    x901 = x5 * x898 + x900
    x902 = x5 * x893
    x903 = x307 * x750
    x904 = x499 + x903
    x905 = x6 * x904
    x906 = x902 - x905
    x907 = x6 * x906
    x908 = x4 * (x503 + x890 - x892)
    x909 = x907 - x908
    x910 = x896 - x907 + x908
    x911 = x4 * (x519 + x893 - x903)
    x912 = x327 * x750 + x521
    x913 = 1.732050807568877
    x914 = 0.1111111111111111 * x106 * x913
    x915 = x353 * x750
    x916 = x529 + x915
    x917 = x5 * x916
    x918 = x358 * x750
    x919 = x535 + x918
    x920 = x6 * x919
    x921 = x917 - x920
    x922 = x5 * x921
    x923 = x364 * x750 + x524
    x924 = x5 * x923 - x6 * x916
    x925 = x4 * (x527 - x915 + x923)
    x926 = -x6 * x921 + x925
    x927 = x5 * x924 + x926
    x928 = x5 * x919
    x929 = x374 * x750
    x930 = x540 + x929
    x931 = x6 * x930
    x932 = x928 - x931
    x933 = x6 * x932
    x934 = x4 * (x544 + x916 - x918)
    x935 = x933 - x934
    x936 = x922 - x933 + x934
    x937 = x4 * (x560 + x919 - x929)
    x938 = x392 * x750 + x562
    x939 = 0.3333333333333333 * x106
    x940 = x416 * x750
    x941 = x569 + x940
    x942 = x5 * x941
    x943 = x421 * x750
    x944 = x575 + x943
    x945 = x6 * x944
    x946 = x942 - x945
    x947 = x5 * x946
    x948 = x427 * x750 + x566
    x949 = x5 * x948 - x6 * x941
    x950 = x4 * (x564 - x940 + x948)
    x951 = -x6 * x946 + x950
    x952 = x5 * x949 + x951
    x953 = x5 * x944
    x954 = x438 * x750
    x955 = x580 + x954
    x956 = x6 * x955
    x957 = x953 - x956
    x958 = x6 * x957
    x959 = x4 * (x574 + x941 - x943)
    x960 = -x959
    x961 = x958 + x960
    x962 = x947 - x958 + x959
    x963 = x4 * (x579 + x944 - x954)
    x964 = x458 * x750 + x600
    x965 = x481 * x750 + x647
    x966 = x494 * x750
    x967 = x660 + x966
    x968 = x6 * x967
    x969 = x487 * x750
    x970 = x653 + x969
    x971 = -x6 * x970
    x972 = x5 * x970
    x973 = x5 * x965 + x971
    x974 = x4 * (x651 + x965 - x969)
    x975 = -x968 + x972
    x976 = x4 * (x664 - x966 + x970)
    x977 = x500 * x750 + x666
    x978 = x525 * x750 + x669
    x979 = x536 * x750
    x980 = x682 + x979
    x981 = x6 * x980
    x982 = x530 * x750
    x983 = x675 + x982
    x984 = -x6 * x983
    x985 = x5 * x983
    x986 = x5 * x978 + x984
    x987 = x4 * (x673 + x978 - x982)
    x988 = -x981 + x985
    x989 = x4 * (x686 - x979 + x983)
    x990 = x541 * x750 + x688
    x991 = x567 * x750 + x691
    x992 = x576 * x750
    x993 = x702 + x992
    x994 = x6 * x993
    x995 = x570 * x750
    x996 = x696 + x995
    x997 = -x6 * x996
    x998 = x5 * x996
    x999 = x5 * x991 + x997
    x1000 = x4 * (x694 + x991 - x995)
    x1001 = -x994 + x998
    x1002 = x4 * (x706 - x992 + x996)
    x1003 = x581 * x750 + x708
    x1004 = x604 * x750 + x712
    x1005 = x617 * x750
    x1006 = x1005 + x721
    x1007 = x1006 * x6
    x1008 = x610 * x750
    x1009 = x1008 + x715
    x1010 = -x1009 * x6
    x1011 = x1009 * x5
    x1012 = x1004 * x5 + x1010
    x1013 = x4 * (x1004 - x1008 + x710)
    x1014 = -x1007 + x1011
    x1015 = x4 * (-x1005 + x1009 + x720)
    x1016 = x623 * x750 + x726
    x1017 = x661 * x8
    x1018 = x654 * x750
    x1019 = 4.0 * x504
    x1020 = 4.0 * x485 + x648 * x750 - x654 * x8
    x1021 = x4 * (x1017 - x1018 - x1019 + x1020)
    x1022 = -x1017 + x1018 + x1019
    x1023 = 4.0 * x520 + x661 * x750 - x667 * x8
    x1024 = x683 * x8
    x1025 = x676 * x750
    x1026 = 3.0 * x545
    x1027 = 3.0 * x528 + x670 * x750 - x676 * x8
    x1028 = x4 * (x1024 - x1025 - x1026 + x1027)
    x1029 = -x1024 + x1025 + x1026
    x1030 = 3.0 * x561 + x683 * x750 - x689 * x8
    x1031 = x703 * x8
    x1032 = x697 * x750
    x1033 = 2.0 * x584
    x1034 = 2.0 * x568 + x692 * x750 - x697 * x8
    x1035 = x4 * (x1031 - x1032 - x1033 + x1034)
    x1036 = -x1031 + x1032 + x1033
    x1037 = 2.0 * x599 + x703 * x750 - x709 * x8
    x1038 = x722 * x8
    x1039 = x716 * x750
    x1040 = x608 + x713 * x750 - x716 * x8
    x1041 = x4 * (x1038 - x1039 + x1040 + x628)
    x1042 = -x1038 + x1039 + x627
    x1043 = x643 + x722 * x750 - x727 * x8
    x1044 = x743 * x8
    x1045 = x736 * x750
    x1046 = x730 * x750 - x736 * x8
    x1047 = x4 * (x1044 - x1045 + x1046)
    x1048 = -x1044 + x1045
    x1049 = x743 * x750 - x749 * x8
    x1050 = -x9 - A[2]
    x1051 = x1050 * x13
    x1052 = x1050 * x14
    x1053 = x1052 + x197
    x1054 = x4 * (-x1051 + x1053 + x202)
    x1055 = x1053 * x5
    x1056 = x1051 + x203
    x1057 = x1056 * x6
    x1058 = x1055 - x1057
    x1059 = x1058 * x5
    x1060 = x1056 * x5
    x1061 = x1050 * x20
    x1062 = x1061 + x212
    x1063 = x1062 * x6
    x1064 = x1060 - x1063
    x1065 = x1064 * x6
    x1066 = x1054 + x1059 - x1065
    x1067 = x1066 * x5
    x1068 = x4 * (x1056 - x1061 + x211)
    x1069 = x1064 * x5
    x1070 = x1062 * x5
    x1071 = x1050 * x29
    x1072 = x1071 + x233
    x1073 = x1072 * x6
    x1074 = x1070 - x1073
    x1075 = x1074 * x6
    x1076 = x1068 + x1069 - x1075
    x1077 = x1076 * x6
    x1078 = x36 * (x1058 - x1060 + x1063)
    x1079 = x1067 - x1077 + x1078
    x1080 = x1079 * x5
    x1081 = x1050 * x41 + x221
    x1082 = x4 * (-x1052 + x1081 + x196)
    x1083 = -x1053 * x6 + x1081 * x5
    x1084 = -x1058 * x6 + x1082 + x1083 * x5
    x1085 = -x1066 * x6 + x1084 * x5 + x36 * (-x1055 + x1057 + x1083)
    x1086 = -x1054
    x1087 = -x1079 * x6 + x48 * (-x1059 + x1065 + x1084 + x1086)
    x1088 = x1085 * x5 + x1087
    x1089 = x1076 * x5
    x1090 = x4 * (x1062 - x1071 + x232)
    x1091 = x1074 * x5
    x1092 = x1072 * x5
    x1093 = x1050 * x54
    x1094 = x1093 + x255
    x1095 = x1094 * x6
    x1096 = x1092 - x1095
    x1097 = x1096 * x6
    x1098 = x1090 + x1091 - x1097
    x1099 = x1098 * x6
    x1100 = x36 * (x1064 - x1070 + x1073)
    x1101 = x1089 - x1099 + x1100
    x1102 = x1101 * x6
    x1103 = -x1068
    x1104 = x48 * (x1066 - x1069 + x1075 + x1103)
    x1105 = x1102 - x1104
    x1106 = x1080 - x1102 + x1104
    x1107 = x4 * (x1072 - x1093 + x254)
    x1108 = x1050 * x77 + x276
    x1109 = -x1090
    x1110 = x1062 * x8
    x1111 = x1056 * x111
    x1112 = x1053 * x111
    x1113 = x1056 * x8
    x1114 = -x1113
    x1115 = x1112 + x1114
    x1116 = x4 * (x1110 - x1111 + x1115)
    x1117 = x1115 * x5
    x1118 = -x1110
    x1119 = x1111 + x1118
    x1120 = x1119 * x6
    x1121 = x1117 - x1120
    x1122 = x1121 * x5
    x1123 = x1119 * x5
    x1124 = x1062 * x111
    x1125 = x1072 * x8
    x1126 = -x1125
    x1127 = x1124 + x1126
    x1128 = x1127 * x6
    x1129 = x1123 - x1128
    x1130 = x1129 * x6
    x1131 = x1116 + x1122 - x1130
    x1132 = x1131 * x5
    x1133 = -x1053 * x8
    x1134 = x1081 * x111 + x1133
    x1135 = x4 * (-x1112 + x1113 + x1134)
    x1136 = -x1115 * x6 + x1134 * x5
    x1137 = -x1121 * x6 + x1135 + x1136 * x5
    x1138 = -x1131 * x6 + x36 * (-x1117 + x1120 + x1136)
    x1139 = x1137 * x5 + x1138
    x1140 = x4 * (x1119 - x1124 + x1125)
    x1141 = x1129 * x5
    x1142 = x1127 * x5
    x1143 = x1072 * x111
    x1144 = x1094 * x8
    x1145 = -x1144
    x1146 = x1143 + x1145
    x1147 = x1146 * x6
    x1148 = x1142 - x1147
    x1149 = x1148 * x6
    x1150 = x1140 + x1141 - x1149
    x1151 = x1150 * x6
    x1152 = x36 * (x1121 - x1123 + x1128)
    x1153 = x1151 - x1152
    x1154 = x1132 - x1151 + x1152
    x1155 = -x1116
    x1156 = x4 * (x1127 - x1143 + x1144)
    x1157 = -x1108 * x8
    x1158 = x1094 * x111 + x1157
    x1159 = -x1140
    x1160 = x1050 * x205
    x1161 = x1050 * x200
    x1162 = x1161 + x415
    x1163 = x4 * (-x1160 + x1162 + x442)
    x1164 = x1162 * x5
    x1165 = x1160 + x420
    x1166 = x1165 * x6
    x1167 = x1164 - x1166
    x1168 = x1167 * x5
    x1169 = x1165 * x5
    x1170 = x1050 * x214
    x1171 = x1170 + x437
    x1172 = x1171 * x6
    x1173 = x1169 - x1172
    x1174 = x1173 * x6
    x1175 = x1163 + x1168 - x1174
    x1176 = x1175 * x5
    x1177 = x1050 * x222 + x426
    x1178 = x4 * (-x1161 + x1177 + x430)
    x1179 = -x1162 * x6 + x1177 * x5
    x1180 = -x1167 * x6 + x1178 + x1179 * x5
    x1181 = -x1175 * x6 + x36 * (-x1164 + x1166 + x1179)
    x1182 = x1180 * x5 + x1181
    x1183 = x4 * (x1165 - x1170 + x452)
    x1184 = x1173 * x5
    x1185 = x1171 * x5
    x1186 = x1050 * x235
    x1187 = x1186 + x457
    x1188 = x1187 * x6
    x1189 = x1185 - x1188
    x1190 = x1189 * x6
    x1191 = x1183 + x1184 - x1190
    x1192 = x1191 * x6
    x1193 = x36 * (x1167 - x1169 + x1172)
    x1194 = x1192 - x1193
    x1195 = x1176 - x1192 + x1193
    x1196 = -x1163
    x1197 = x4 * (x1171 - x1186 + x472)
    x1198 = x1050 * x257 + x474
    x1199 = -x1183
    x1200 = x111 * x1115
    x1201 = x1119 * x8
    x1202 = x1054 - x1201
    x1203 = x1200 + x1202
    x1204 = x1203 * x5
    x1205 = x111 * x1119
    x1206 = x1127 * x8
    x1207 = x1068 - x1206
    x1208 = x1205 + x1207
    x1209 = x1208 * x6
    x1210 = x1204 - x1209
    x1211 = x1210 * x5
    x1212 = x1082 - x1115 * x8
    x1213 = x111 * x1134 + x1212
    x1214 = -x1203 * x6 + x1213 * x5
    x1215 = x1086 + x1201
    x1216 = x4 * (-x1200 + x1213 + x1215)
    x1217 = -x1210 * x6 + x1216
    x1218 = x1214 * x5 + x1217
    x1219 = x1208 * x5
    x1220 = x111 * x1127
    x1221 = x1146 * x8
    x1222 = x1090 - x1221
    x1223 = x1220 + x1222
    x1224 = x1223 * x6
    x1225 = x1219 - x1224
    x1226 = x1225 * x6
    x1227 = x1103 + x1206
    x1228 = x4 * (x1203 - x1205 + x1227)
    x1229 = -x1228
    x1230 = x1226 + x1229
    x1231 = x1211 - x1226 + x1228
    x1232 = x1109 + x1221
    x1233 = x4 * (x1208 - x1220 + x1232)
    x1234 = x1107 - x1158 * x8
    x1235 = x111 * x1146 + x1234
    x1236 = x111 * x1162
    x1237 = x1165 * x8
    x1238 = -x1237
    x1239 = x1236 + x1238
    x1240 = x1239 * x5
    x1241 = x111 * x1165
    x1242 = x1171 * x8
    x1243 = -x1242
    x1244 = x1241 + x1243
    x1245 = x1244 * x6
    x1246 = x1240 - x1245
    x1247 = x1246 * x5
    x1248 = -x1162 * x8
    x1249 = x111 * x1177 + x1248
    x1250 = -x1239 * x6 + x1249 * x5
    x1251 = x4 * (-x1236 + x1237 + x1249)
    x1252 = -x1246 * x6 + x1251
    x1253 = x1250 * x5 + x1252
    x1254 = x1244 * x5
    x1255 = x111 * x1171
    x1256 = x1187 * x8
    x1257 = -x1256
    x1258 = x1255 + x1257
    x1259 = x1258 * x6
    x1260 = x1254 - x1259
    x1261 = x1260 * x6
    x1262 = x4 * (x1239 - x1241 + x1242)
    x1263 = -x1262
    x1264 = x1261 + x1263
    x1265 = x1247 - x1261 + x1262
    x1266 = x4 * (x1244 - x1255 + x1256)
    x1267 = -x1198 * x8
    x1268 = x111 * x1187 + x1267
    x1269 = x1050 * x416
    x1270 = x1269 + x609
    x1271 = x1270 * x5
    x1272 = x1050 * x421
    x1273 = x1272 + x616
    x1274 = x1273 * x6
    x1275 = x1271 - x1274
    x1276 = x1275 * x5
    x1277 = x1050 * x427 + x603
    x1278 = -x1270 * x6 + x1277 * x5
    x1279 = x4 * (-x1269 + x1277 + x607)
    x1280 = -x1275 * x6 + x1279
    x1281 = x1278 * x5 + x1280
    x1282 = x1273 * x5
    x1283 = x1050 * x438
    x1284 = x1283 + x622
    x1285 = x1284 * x6
    x1286 = x1282 - x1285
    x1287 = x1286 * x6
    x1288 = x4 * (x1270 - x1272 + x626)
    x1289 = -x1288
    x1290 = x1287 + x1289
    x1291 = x1276 - x1287 + x1288
    x1292 = x4 * (x1273 - x1283 + x642)
    x1293 = x1050 * x458 + x644
    x1294 = 2.0 * x1135 - x1203 * x8
    x1295 = x111 * x1213 + x1294
    x1296 = x111 * x1208
    x1297 = x1223 * x8
    x1298 = 2.0 * x1140
    x1299 = -x1297 + x1298
    x1300 = x1296 + x1299
    x1301 = x1300 * x6
    x1302 = x111 * x1203
    x1303 = x1208 * x8
    x1304 = 2.0 * x1116
    x1305 = -x1303 + x1304
    x1306 = x1302 + x1305
    x1307 = -x1306 * x6
    x1308 = x1306 * x5
    x1309 = x1295 * x5 + x1307
    x1310 = x1303 - x1304
    x1311 = x4 * (x1295 - x1302 + x1310)
    x1312 = -x1301 + x1308
    x1313 = x1297 - x1298
    x1314 = x4 * (-x1296 + x1306 + x1313)
    x1315 = 2.0 * x1156 - x1235 * x8
    x1316 = x111 * x1223 + x1315
    x1317 = x1178 - x1239 * x8
    x1318 = x111 * x1249 + x1317
    x1319 = x111 * x1244
    x1320 = x1258 * x8
    x1321 = x1183 - x1320
    x1322 = x1319 + x1321
    x1323 = x1322 * x6
    x1324 = x111 * x1239
    x1325 = x1244 * x8
    x1326 = x1163 - x1325
    x1327 = x1324 + x1326
    x1328 = -x1327 * x6
    x1329 = x1327 * x5
    x1330 = x1318 * x5 + x1328
    x1331 = x1196 + x1325
    x1332 = x4 * (x1318 - x1324 + x1331)
    x1333 = -x1323 + x1329
    x1334 = x1199 + x1320
    x1335 = x4 * (-x1319 + x1327 + x1334)
    x1336 = x1197 - x1268 * x8
    x1337 = x111 * x1258 + x1336
    x1338 = -x1270 * x8
    x1339 = x111 * x1277 + x1338
    x1340 = x111 * x1273
    x1341 = x1284 * x8
    x1342 = -x1341
    x1343 = x1340 + x1342
    x1344 = x1343 * x6
    x1345 = x111 * x1270
    x1346 = x1273 * x8
    x1347 = -x1346
    x1348 = x1345 + x1347
    x1349 = -x1348 * x6
    x1350 = x1348 * x5
    x1351 = x1339 * x5 + x1349
    x1352 = x4 * (x1339 - x1345 + x1346)
    x1353 = -x1344 + x1350
    x1354 = x4 * (-x1340 + x1341 + x1348)
    x1355 = -x1293 * x8
    x1356 = x111 * x1284 + x1355
    x1357 = x1050 * x604 + x729
    x1358 = x1050 * x617
    x1359 = x1358 + x742
    x1360 = x1359 * x6
    x1361 = x1050 * x610
    x1362 = x1361 + x735
    x1363 = -x1362 * x6
    x1364 = x1362 * x5
    x1365 = x1357 * x5 + x1363
    x1366 = x4 * (x1357 - x1361 + x733)
    x1367 = -x1360 + x1364
    x1368 = x4 * (-x1358 + x1362 + x746)
    x1369 = x1050 * x623 + x748
    x1370 = x111 * x1306
    x1371 = 3.0 * x1216 - x1306 * x8
    x1372 = x111 * x1295 + x1371
    x1373 = x1300 * x8
    x1374 = 3.0 * x1228
    x1375 = x1373 - x1374
    x1376 = x4 * (-x1370 + x1372 + x1375)
    x1377 = -x1373 + x1374
    x1378 = x1370 + x1377
    x1379 = 3.0 * x1233 - x1316 * x8
    x1380 = x111 * x1300 + x1379
    x1381 = x111 * x1327
    x1382 = 2.0 * x1251 - x1327 * x8
    x1383 = x111 * x1318 + x1382
    x1384 = x1322 * x8
    x1385 = 2.0 * x1262
    x1386 = x1384 - x1385
    x1387 = x4 * (-x1381 + x1383 + x1386)
    x1388 = -x1384 + x1385
    x1389 = x1381 + x1388
    x1390 = 2.0 * x1266 - x1337 * x8
    x1391 = x111 * x1322 + x1390
    x1392 = x111 * x1348
    x1393 = x1279 - x1348 * x8
    x1394 = x111 * x1339 + x1393
    x1395 = x1343 * x8
    x1396 = x1289 + x1395
    x1397 = x4 * (-x1392 + x1394 + x1396)
    x1398 = x1288 - x1395
    x1399 = x1392 + x1398
    x1400 = x1292 - x1356 * x8
    x1401 = x111 * x1343 + x1400
    x1402 = x1359 * x8
    x1403 = x111 * x1362
    x1404 = -x1362 * x8
    x1405 = x111 * x1357 + x1404
    x1406 = x4 * (x1402 - x1403 + x1405)
    x1407 = -x1402
    x1408 = x1403 + x1407
    x1409 = -x1369 * x8
    x1410 = x111 * x1359 + x1409
    x1411 = x10 * x743
    x1412 = x1050 * x736
    x1413 = 4.0 * x627
    x1414 = -x10 * x736 + x1050 * x730 + 4.0 * x608
    x1415 = x4 * (x1411 - x1412 - x1413 + x1414)
    x1416 = -x1411 + x1412 + x1413
    x1417 = -x10 * x749 + x1050 * x743 + 4.0 * x643
    x1418 = x756 * x8
    x1419 = x750 * x753
    x1420 = x42 + x750 * x781 - x753 * x8
    x1421 = x4 * (x1418 - x1419 + x1420 + x47)
    x1422 = -x1418 + x1419 + x15
    x1423 = x1420 * x5 - x1422 * x6
    x1424 = x1422 * x5
    x1425 = x750 * x756
    x1426 = x762 * x8
    x1427 = x1425 - x1426 + x27
    x1428 = x1427 * x6
    x1429 = x1424 - x1428
    x1430 = x1421 + x1423 * x5 - x1429 * x6
    x1431 = x4 * (x1422 - x1425 + x1426 + x64)
    x1432 = x1429 * x5
    x1433 = x1427 * x5
    x1434 = x750 * x762
    x1435 = x772 * x8
    x1436 = x1434 - x1435 + x52
    x1437 = x1436 * x6
    x1438 = x1433 - x1437
    x1439 = x1438 * x6
    x1440 = x1431 + x1432 - x1439
    x1441 = x1430 * x5 - x1440 * x6 + x36 * (x1423 - x1424 + x1428)
    x1442 = x1440 * x5
    x1443 = x4 * (x1427 - x1434 + x1435 + x87)
    x1444 = x1438 * x5
    x1445 = x1436 * x5
    x1446 = x750 * x772
    x1447 = x794 * x8
    x1448 = x1446 - x1447 + x75
    x1449 = x1448 * x6
    x1450 = x1445 - x1449
    x1451 = x1450 * x6
    x1452 = x1443 + x1444 - x1451
    x1453 = x1452 * x6
    x1454 = x36 * (x1429 - x1433 + x1437)
    x1455 = x1442 - x1453 + x1454
    x1456 = -x1431
    x1457 = x4 * (x102 + x1436 - x1446 + x1447)
    x1458 = x100 + x750 * x794 - x8 * x808
    x1459 = -x1443
    x1460 = x8 * x816
    x1461 = x750 * x813
    x1462 = x137 + x750 * x828 + x782 - x8 * x813
    x1463 = x4 * (x1460 - x1461 + x1462 + x158 + x786)
    x1464 = x122 - x1460 + x1461 + x754
    x1465 = x1462 * x5 - x1464 * x6
    x1466 = x1464 * x5
    x1467 = x750 * x816
    x1468 = x8 * x822
    x1469 = x142 + x1467 - x1468 + x768
    x1470 = x1469 * x6
    x1471 = x1466 - x1470
    x1472 = x1463 + x1465 * x5 - x1471 * x6
    x1473 = x4 * (x1464 - x1467 + x1468 + x180 + x803)
    x1474 = x1471 * x5
    x1475 = x1469 * x5
    x1476 = x750 * x822
    x1477 = x8 * x838
    x1478 = x1476 - x1477 + x164 + x790
    x1479 = x1478 * x6
    x1480 = x1475 - x1479
    x1481 = x1480 * x6
    x1482 = x1473 + x1474 - x1481
    x1483 = x4 * (x1469 - x1476 + x1477 + x191 + x809)
    x1484 = x188 + x750 * x838 - x8 * x848 + x807
    x1485 = x8 * x854
    x1486 = x750 * x851
    x1487 = x224 + x750 * x866 - x8 * x851
    x1488 = x4 * (x1485 - x1486 + x1487 + x245)
    x1489 = -x1485 + x1486 + x209
    x1490 = x1487 * x5 - x1489 * x6
    x1491 = x1489 * x5
    x1492 = x750 * x854
    x1493 = x8 * x860
    x1494 = x1492 - x1493 + x229
    x1495 = x1494 * x6
    x1496 = x1491 - x1495
    x1497 = x1488 + x1490 * x5 - x1496 * x6
    x1498 = x4 * (x1489 - x1492 + x1493 + x267)
    x1499 = x1496 * x5
    x1500 = x1494 * x5
    x1501 = x750 * x860
    x1502 = x8 * x876
    x1503 = x1501 - x1502 + x251
    x1504 = x1503 * x6
    x1505 = x1500 - x1504
    x1506 = x1505 * x6
    x1507 = x1498 + x1499 - x1506
    x1508 = x4 * (x1494 - x1501 + x1502 + x278)
    x1509 = x275 + x750 * x876 - x8 * x887
    x1510 = -x1498
    x1511 = x8 * x893
    x1512 = x750 * x890
    x1513 = 2.0 * x814
    x1514 = -x1513
    x1515 = 2.0 * x829
    x1516 = x1515 + x300 + x750 * x897 - x8 * x890
    x1517 = x4 * (x1511 - x1512 + x1514 + x1516 + x313)
    x1518 = -x1511 + x1512 + x1513 + x312
    x1519 = x1516 * x5 - x1518 * x6
    x1520 = x1518 * x5
    x1521 = x750 * x893
    x1522 = x8 * x904
    x1523 = 2.0 * x834
    x1524 = x1521 - x1522 + x1523 + x322
    x1525 = x1524 * x6
    x1526 = x1520 - x1525
    x1527 = -x1523
    x1528 = x4 * (x1518 - x1521 + x1522 + x1527 + x339)
    x1529 = 2.0 * x847
    x1530 = x1529 + x342 + x750 * x904 - x8 * x912
    x1531 = x8 * x919
    x1532 = x750 * x916
    x1533 = x367 + x750 * x923 - x8 * x916 + x867
    x1534 = x4 * (x1531 - x1532 + x1533 + x379 + x885)
    x1535 = -x1531 + x1532 + x378 + x852
    x1536 = x1533 * x5 - x1535 * x6
    x1537 = x1535 * x5
    x1538 = x750 * x919
    x1539 = x8 * x930
    x1540 = x1538 - x1539 + x387 + x872
    x1541 = x1540 * x6
    x1542 = x1537 - x1541
    x1543 = x4 * (x1535 - x1538 + x1539 + x404 + x888)
    x1544 = x406 + x750 * x930 - x8 * x938 + x886
    x1545 = x8 * x944
    x1546 = x750 * x941
    x1547 = x431 + x750 * x948 - x8 * x941
    x1548 = x4 * (x1545 - x1546 + x1547 + x444)
    x1549 = -x1545 + x1546 + x443
    x1550 = x1547 * x5 - x1549 * x6
    x1551 = x1549 * x5
    x1552 = x750 * x944
    x1553 = x8 * x955
    x1554 = x1552 - x1553 + x453
    x1555 = x1554 * x6
    x1556 = x1551 - x1555
    x1557 = x4 * (x1549 - x1552 + x1553 + x470)
    x1558 = x473 + x750 * x955 - x8 * x964
    x1559 = x8 * x967
    x1560 = x750 * x970
    x1561 = 3.0 * x908
    x1562 = x485 + x750 * x965 - x8 * x970 + 3.0 * x899
    x1563 = x4 * (x1559 - x1560 - x1561 + x1562 + x505)
    x1564 = -x1559 + x1560 + x1561 + x504
    x1565 = x520 + x750 * x967 - x8 * x977 + 3.0 * x911
    x1566 = x8 * x980
    x1567 = x750 * x983
    x1568 = 2.0 * x934
    x1569 = -x1568
    x1570 = 2.0 * x925
    x1571 = x1570 + x528 + x750 * x978 - x8 * x983
    x1572 = x4 * (x1566 - x1567 + x1569 + x1571 + x546)
    x1573 = -x1566 + x1567 + x1568 + x545
    x1574 = 2.0 * x937
    x1575 = x1574 + x561 + x750 * x980 - x8 * x990
    x1576 = x8 * x993
    x1577 = x750 * x996
    x1578 = x568 + x750 * x991 - x8 * x996 + x950
    x1579 = x4 * (x1576 - x1577 + x1578 + x585 + x960)
    x1580 = -x1576 + x1577 + x584 + x959
    x1581 = -x1003 * x8 + x599 + x750 * x993 + x963
    x1582 = x1006 * x8
    x1583 = x1009 * x750
    x1584 = x1004 * x750 - x1009 * x8 + x608
    x1585 = x4 * (x1582 - x1583 + x1584 + x628)
    x1586 = -x1582 + x1583 + x627
    x1587 = x1006 * x750 - x1016 * x8 + x643
    x1588 = x1020 * x750 - x1022 * x8 + x652 + 4.0 * x974
    x1589 = x1022 * x750 - x1023 * x8 + x665 + 4.0 * x976
    x1590 = x1027 * x750 - x1029 * x8 + x674 + 3.0 * x987
    x1591 = x1029 * x750 - x1030 * x8 + x687 + 3.0 * x989
    x1592 = 2.0 * x1000
    x1593 = x1034 * x750 - x1036 * x8 + x1592 + x695
    x1594 = 2.0 * x1002
    x1595 = x1036 * x750 - x1037 * x8 + x1594 + x707
    x1596 = x1013 + x1040 * x750 - x1042 * x8 + x714
    x1597 = x1015 + x1042 * x750 - x1043 * x8 + x725
    x1598 = x1046 * x750 - x1048 * x8 + x734
    x1599 = x1048 * x750 - x1049 * x8 + x747
    x1600 = x1053 * x750
    x1601 = x1081 * x750 + x1133
    x1602 = x4 * (x1113 - x1600 + x1601)
    x1603 = x1114 + x1600
    x1604 = x1601 * x5 - x1603 * x6
    x1605 = x1603 * x5
    x1606 = x1056 * x750
    x1607 = x1118 + x1606
    x1608 = x1607 * x6
    x1609 = x1605 - x1608
    x1610 = x1602 + x1604 * x5 - x1609 * x6
    x1611 = x4 * (x1110 + x1603 - x1606)
    x1612 = x1609 * x5
    x1613 = x1607 * x5
    x1614 = x1062 * x750
    x1615 = x1126 + x1614
    x1616 = x1615 * x6
    x1617 = x1613 - x1616
    x1618 = x1617 * x6
    x1619 = x1611 + x1612 - x1618
    x1620 = x1610 * x5 - x1619 * x6 + x36 * (x1604 - x1605 + x1608)
    x1621 = x1619 * x5
    x1622 = x4 * (x1125 + x1607 - x1614)
    x1623 = x1617 * x5
    x1624 = x1615 * x5
    x1625 = x1072 * x750
    x1626 = x1145 + x1625
    x1627 = x1626 * x6
    x1628 = x1624 - x1627
    x1629 = x1628 * x6
    x1630 = x1622 + x1623 - x1629
    x1631 = x1630 * x6
    x1632 = x36 * (x1609 - x1613 + x1616)
    x1633 = x1621 - x1631 + x1632
    x1634 = -x1611
    x1635 = x4 * (x1144 + x1615 - x1625)
    x1636 = x1094 * x750 + x1157
    x1637 = -x1622
    x1638 = 10.2469507659596 * x107
    x1639 = x1115 * x750
    x1640 = x1134 * x750 + x1212
    x1641 = x4 * (x1215 - x1639 + x1640)
    x1642 = x1202 + x1639
    x1643 = x1640 * x5 - x1642 * x6
    x1644 = x1642 * x5
    x1645 = x1119 * x750
    x1646 = x1207 + x1645
    x1647 = x1646 * x6
    x1648 = x1644 - x1647
    x1649 = x1641 + x1643 * x5 - x1648 * x6
    x1650 = x4 * (x1227 + x1642 - x1645)
    x1651 = x1648 * x5
    x1652 = x1646 * x5
    x1653 = x1127 * x750
    x1654 = x1222 + x1653
    x1655 = x1654 * x6
    x1656 = x1652 - x1655
    x1657 = x1656 * x6
    x1658 = x1650 + x1651 - x1657
    x1659 = x4 * (x1232 + x1646 - x1653)
    x1660 = x1146 * x750 + x1234
    x1661 = x195 * x348
    x1662 = x1162 * x750
    x1663 = x1177 * x750 + x1248
    x1664 = x4 * (x1237 - x1662 + x1663)
    x1665 = x1238 + x1662
    x1666 = x1663 * x5 - x1665 * x6
    x1667 = x1665 * x5
    x1668 = x1165 * x750
    x1669 = x1243 + x1668
    x1670 = x1669 * x6
    x1671 = x1667 - x1670
    x1672 = x1664 + x1666 * x5 - x1671 * x6
    x1673 = x4 * (x1242 + x1665 - x1668)
    x1674 = x1671 * x5
    x1675 = x1669 * x5
    x1676 = x1171 * x750
    x1677 = x1257 + x1676
    x1678 = x1677 * x6
    x1679 = x1675 - x1678
    x1680 = x1679 * x6
    x1681 = x1673 + x1674 - x1680
    x1682 = x4 * (x1256 + x1669 - x1676)
    x1683 = x1187 * x750 + x1267
    x1684 = -x1673
    x1685 = x1203 * x750
    x1686 = x1213 * x750 + x1294
    x1687 = x4 * (x1310 - x1685 + x1686)
    x1688 = x1305 + x1685
    x1689 = x1686 * x5 - x1688 * x6
    x1690 = x1688 * x5
    x1691 = x1208 * x750
    x1692 = x1299 + x1691
    x1693 = x1692 * x6
    x1694 = x1690 - x1693
    x1695 = x4 * (x1313 + x1688 - x1691)
    x1696 = x1223 * x750 + x1315
    x1697 = x1239 * x750
    x1698 = x1249 * x750 + x1317
    x1699 = x4 * (x1331 - x1697 + x1698)
    x1700 = x1326 + x1697
    x1701 = x1698 * x5 - x1700 * x6
    x1702 = x1700 * x5
    x1703 = x1244 * x750
    x1704 = x1321 + x1703
    x1705 = x1704 * x6
    x1706 = x1702 - x1705
    x1707 = x4 * (x1334 + x1700 - x1703)
    x1708 = x1258 * x750 + x1336
    x1709 = x913 * x939
    x1710 = x1270 * x750
    x1711 = x1277 * x750 + x1338
    x1712 = x4 * (x1346 - x1710 + x1711)
    x1713 = x1347 + x1710
    x1714 = x1711 * x5 - x1713 * x6
    x1715 = x1713 * x5
    x1716 = x1273 * x750
    x1717 = x1342 + x1716
    x1718 = x1717 * x6
    x1719 = x1715 - x1718
    x1720 = x4 * (x1341 + x1713 - x1716)
    x1721 = x1284 * x750 + x1355
    x1722 = x1306 * x750
    x1723 = x1295 * x750 + x1371
    x1724 = x4 * (x1375 - x1722 + x1723)
    x1725 = x1377 + x1722
    x1726 = x1300 * x750 + x1379
    x1727 = x1327 * x750
    x1728 = x1318 * x750 + x1382
    x1729 = x4 * (x1386 - x1727 + x1728)
    x1730 = x1388 + x1727
    x1731 = x1322 * x750 + x1390
    x1732 = x1348 * x750
    x1733 = x1339 * x750 + x1393
    x1734 = x4 * (x1396 - x1732 + x1733)
    x1735 = x1398 + x1732
    x1736 = x1343 * x750 + x1400
    x1737 = x1362 * x750
    x1738 = x1357 * x750 + x1404
    x1739 = x4 * (x1402 - x1737 + x1738)
    x1740 = x1407 + x1737
    x1741 = x1359 * x750 + x1409
    x1742 = 4.0 * x1311 + x1372 * x750 - x1378 * x8
    x1743 = 4.0 * x1314 + x1378 * x750 - x1380 * x8
    x1744 = 3.0 * x1332 + x1383 * x750 - x1389 * x8
    x1745 = 3.0 * x1335 + x1389 * x750 - x1391 * x8
    x1746 = 2.0 * x1352 + x1394 * x750 - x1399 * x8
    x1747 = 2.0 * x1354 + x1399 * x750 - x1401 * x8
    x1748 = x1366 + x1405 * x750 - x1408 * x8
    x1749 = x1368 + x1408 * x750 - x1410 * x8
    x1750 = x1414 * x750 - x1416 * x8
    x1751 = x1416 * x750 - x1417 * x8
    x1752 = x10 * x1056
    x1753 = x1050 * x1053
    x1754 = -x10 * x1053 + x1050 * x1081 + x42
    x1755 = x4 * (x1752 - x1753 + x1754 + x47)
    x1756 = x15 - x1752 + x1753
    x1757 = x1754 * x5 - x1756 * x6
    x1758 = x1756 * x5
    x1759 = x1050 * x1056
    x1760 = x10 * x1062
    x1761 = x1759 - x1760 + x27
    x1762 = x1761 * x6
    x1763 = x1758 - x1762
    x1764 = x1755 + x1757 * x5 - x1763 * x6
    x1765 = x4 * (x1756 - x1759 + x1760 + x64)
    x1766 = x1763 * x5
    x1767 = x1761 * x5
    x1768 = x1050 * x1062
    x1769 = x10 * x1072
    x1770 = x1768 - x1769 + x52
    x1771 = x1770 * x6
    x1772 = x1767 - x1771
    x1773 = x1772 * x6
    x1774 = x1765 + x1766 - x1773
    x1775 = x1764 * x5 - x1774 * x6 + x36 * (x1757 - x1758 + x1762)
    x1776 = x1774 * x5
    x1777 = x4 * (x1761 - x1768 + x1769 + x87)
    x1778 = x1772 * x5
    x1779 = x1770 * x5
    x1780 = x1050 * x1072
    x1781 = x10 * x1094
    x1782 = x1780 - x1781 + x75
    x1783 = x1782 * x6
    x1784 = x1779 - x1783
    x1785 = x1784 * x6
    x1786 = x1777 + x1778 - x1785
    x1787 = x1786 * x6
    x1788 = x36 * (x1763 - x1767 + x1771)
    x1789 = x1776 - x1787 + x1788
    x1790 = -x1765
    x1791 = x4 * (x102 + x1770 - x1780 + x1781)
    x1792 = -x10 * x1108 + x100 + x1050 * x1094
    x1793 = -x1777
    x1794 = x1761 * x8
    x1795 = x111 * x1756
    x1796 = -x1756 * x8
    x1797 = x111 * x1754 + x1796
    x1798 = x4 * (x1794 - x1795 + x1797)
    x1799 = -x1794
    x1800 = x1795 + x1799
    x1801 = x1797 * x5 - x1800 * x6
    x1802 = x1800 * x5
    x1803 = x111 * x1761
    x1804 = x1770 * x8
    x1805 = -x1804
    x1806 = x1803 + x1805
    x1807 = x1806 * x6
    x1808 = x1802 - x1807
    x1809 = x1798 + x1801 * x5 - x1808 * x6
    x1810 = x4 * (x1800 - x1803 + x1804)
    x1811 = x1808 * x5
    x1812 = x1806 * x5
    x1813 = x111 * x1770
    x1814 = x1782 * x8
    x1815 = -x1814
    x1816 = x1813 + x1815
    x1817 = x1816 * x6
    x1818 = x1812 - x1817
    x1819 = x1818 * x6
    x1820 = x1810 + x1811 - x1819
    x1821 = x4 * (x1806 - x1813 + x1814)
    x1822 = -x1792 * x8
    x1823 = x111 * x1782 + x1822
    x1824 = x10 * x1165
    x1825 = x1050 * x1162
    x1826 = -x10 * x1162 + x1050 * x1177 + x1082 + x224
    x1827 = x4 * (x1086 + x1824 - x1825 + x1826 + x245)
    x1828 = x1054 - x1824 + x1825 + x209
    x1829 = x1826 * x5 - x1828 * x6
    x1830 = x1828 * x5
    x1831 = x1050 * x1165
    x1832 = x10 * x1171
    x1833 = x1068 + x1831 - x1832 + x229
    x1834 = x1833 * x6
    x1835 = x1830 - x1834
    x1836 = x1827 + x1829 * x5 - x1835 * x6
    x1837 = x4 * (x1103 + x1828 - x1831 + x1832 + x267)
    x1838 = x1835 * x5
    x1839 = x1833 * x5
    x1840 = x1050 * x1171
    x1841 = x10 * x1187
    x1842 = x1090 + x1840 - x1841 + x251
    x1843 = x1842 * x6
    x1844 = x1839 - x1843
    x1845 = x1844 * x6
    x1846 = x1837 + x1838 - x1845
    x1847 = x4 * (x1109 + x1833 - x1840 + x1841 + x278)
    x1848 = -x10 * x1198 + x1050 * x1187 + x1107 + x275
    x1849 = -x1837
    x1850 = x111 * x1800
    x1851 = x1755 - x1800 * x8
    x1852 = x111 * x1797 + x1851
    x1853 = x1806 * x8
    x1854 = x1790 + x1853
    x1855 = x4 * (-x1850 + x1852 + x1854)
    x1856 = x1765 - x1853
    x1857 = x1850 + x1856
    x1858 = x1852 * x5 - x1857 * x6
    x1859 = x1857 * x5
    x1860 = x111 * x1806
    x1861 = x1816 * x8
    x1862 = x1777 - x1861
    x1863 = x1860 + x1862
    x1864 = x1863 * x6
    x1865 = x1859 - x1864
    x1866 = x1793 + x1861
    x1867 = x4 * (x1857 - x1860 + x1866)
    x1868 = x1791 - x1823 * x8
    x1869 = x111 * x1816 + x1868
    x1870 = x1833 * x8
    x1871 = x111 * x1828
    x1872 = -x1828 * x8
    x1873 = x111 * x1826 + x1872
    x1874 = x4 * (x1870 - x1871 + x1873)
    x1875 = -x1870
    x1876 = x1871 + x1875
    x1877 = x1873 * x5 - x1876 * x6
    x1878 = x1876 * x5
    x1879 = x111 * x1833
    x1880 = x1842 * x8
    x1881 = -x1880
    x1882 = x1879 + x1881
    x1883 = x1882 * x6
    x1884 = x1878 - x1883
    x1885 = x4 * (x1876 - x1879 + x1880)
    x1886 = -x1848 * x8
    x1887 = x111 * x1842 + x1886
    x1888 = x10 * x1273
    x1889 = x1050 * x1270
    x1890 = 2.0 * x1163
    x1891 = -x1890
    x1892 = 2.0 * x1178
    x1893 = -x10 * x1270 + x1050 * x1277 + x1892 + x431
    x1894 = x4 * (x1888 - x1889 + x1891 + x1893 + x444)
    x1895 = -x1888 + x1889 + x1890 + x443
    x1896 = x1893 * x5 - x1895 * x6
    x1897 = x1895 * x5
    x1898 = x1050 * x1273
    x1899 = x10 * x1284
    x1900 = 2.0 * x1183
    x1901 = x1898 - x1899 + x1900 + x453
    x1902 = x1901 * x6
    x1903 = x1897 - x1902
    x1904 = -x1900
    x1905 = x4 * (x1895 - x1898 + x1899 + x1904 + x470)
    x1906 = 2.0 * x1197
    x1907 = -x10 * x1293 + x1050 * x1284 + x1906 + x473
    x1908 = x111 * x1857
    x1909 = 2.0 * x1798 - x1857 * x8
    x1910 = x111 * x1852 + x1909
    x1911 = x1863 * x8
    x1912 = 2.0 * x1810
    x1913 = x1911 - x1912
    x1914 = x4 * (-x1908 + x1910 + x1913)
    x1915 = -x1911 + x1912
    x1916 = x1908 + x1915
    x1917 = 2.0 * x1821 - x1869 * x8
    x1918 = x111 * x1863 + x1917
    x1919 = x111 * x1876
    x1920 = x1827 - x1876 * x8
    x1921 = x111 * x1873 + x1920
    x1922 = x1882 * x8
    x1923 = x1849 + x1922
    x1924 = x4 * (-x1919 + x1921 + x1923)
    x1925 = x1837 - x1922
    x1926 = x1919 + x1925
    x1927 = x1847 - x1887 * x8
    x1928 = x111 * x1882 + x1927
    x1929 = x1901 * x8
    x1930 = x111 * x1895
    x1931 = -x1895 * x8
    x1932 = x111 * x1893 + x1931
    x1933 = x4 * (x1929 - x1930 + x1932)
    x1934 = -x1929
    x1935 = x1930 + x1934
    x1936 = -x1907 * x8
    x1937 = x111 * x1901 + x1936
    x1938 = x10 * x1359
    x1939 = x1050 * x1362
    x1940 = 3.0 * x1288
    x1941 = -x10 * x1362 + x1050 * x1357 + 3.0 * x1279 + x608
    x1942 = x4 * (x1938 - x1939 - x1940 + x1941 + x628)
    x1943 = -x1938 + x1939 + x1940 + x627
    x1944 = -x10 * x1369 + x1050 * x1359 + 3.0 * x1292 + x643
    x1945 = 3.0 * x1855 - x1916 * x8
    x1946 = x111 * x1910 + x1945
    x1947 = 3.0 * x1867 - x1918 * x8
    x1948 = x111 * x1916 + x1947
    x1949 = 2.0 * x1874 - x1926 * x8
    x1950 = x111 * x1921 + x1949
    x1951 = 2.0 * x1885 - x1928 * x8
    x1952 = x111 * x1926 + x1951
    x1953 = x1894 - x1935 * x8
    x1954 = x111 * x1932 + x1953
    x1955 = x1905 - x1937 * x8
    x1956 = x111 * x1935 + x1955
    x1957 = -x1943 * x8
    x1958 = x111 * x1941 + x1957
    x1959 = -x1944 * x8
    x1960 = x111 * x1943 + x1959
    x1961 = -x10 * x1416 + x1050 * x1414 + 4.0 * x1366 + x734
    x1962 = -x10 * x1417 + x1050 * x1416 + 4.0 * x1368 + x747
    x1963 = x1427 * x8
    x1964 = x1422 * x750
    x1965 = 2.0 * x754
    x1966 = x1420 * x750 - x1422 * x8 + 2.0 * x782
    x1967 = -x1963 + x1964 + x1965
    x1968 = x1966 * x5 - x1967 * x6
    x1969 = x1967 * x5
    x1970 = x1427 * x750
    x1971 = x1436 * x8
    x1972 = 2.0 * x768
    x1973 = x1970 - x1971 + x1972
    x1974 = x1973 * x6
    x1975 = x1969 - x1974
    x1976 = x1968 * x5 - x1975 * x6 + x4 * (x1963 - x1964 - x1965 + x1966)
    x1977 = x4 * (x1967 - x1970 + x1971 - x1972)
    x1978 = x1975 * x5
    x1979 = x1973 * x5
    x1980 = x1436 * x750
    x1981 = x1448 * x8
    x1982 = 2.0 * x790
    x1983 = x1980 - x1981 + x1982
    x1984 = x1983 * x6
    x1985 = x1979 - x1984
    x1986 = x1985 * x6
    x1987 = x1977 + x1978 - x1986
    x1988 = x1469 * x8
    x1989 = x1464 * x750
    x1990 = x1421 + x1462 * x750 - x1464 * x8 + x1515
    x1991 = x1431 + x1513 - x1988 + x1989
    x1992 = x1990 * x5 - x1991 * x6
    x1993 = x1991 * x5
    x1994 = x1469 * x750
    x1995 = x1478 * x8
    x1996 = x1443 + x1523 + x1994 - x1995
    x1997 = x1996 * x6
    x1998 = x1993 - x1997
    x1999 = x1494 * x8
    x2000 = x1489 * x750
    x2001 = 2.0 * x852
    x2002 = x1487 * x750 - x1489 * x8 + 2.0 * x867
    x2003 = -x1999 + x2000 + x2001
    x2004 = x2002 * x5 - x2003 * x6
    x2005 = x2003 * x5
    x2006 = x1494 * x750
    x2007 = x1503 * x8
    x2008 = 2.0 * x872
    x2009 = x2006 - x2007 + x2008
    x2010 = x2009 * x6
    x2011 = x2005 - x2010
    x2012 = x1524 * x8
    x2013 = x1518 * x750
    x2014 = 2.0 * x908
    x2015 = 2.0 * x1473
    x2016 = 2.0 * x1463 + x1516 * x750 - x1518 * x8 + 2.0 * x899
    x2017 = -x2012 + x2013 + x2014 + x2015
    x2018 = x1540 * x8
    x2019 = x1535 * x750
    x2020 = x1488 + x1533 * x750 - x1535 * x8 + x1570
    x2021 = x1498 + x1568 - x2018 + x2019
    x2022 = x1554 * x8
    x2023 = x1549 * x750
    x2024 = 2.0 * x959
    x2025 = x1547 * x750 - x1549 * x8 + 2.0 * x950
    x2026 = -x2022 + x2023 + x2024
    x2027 = x1607 * x8
    x2028 = x1603 * x750
    x2029 = x1082 + x1601 * x750 - x1603 * x8
    x2030 = x1054 - x2027 + x2028
    x2031 = x2029 * x5 - x2030 * x6
    x2032 = x2030 * x5
    x2033 = x1607 * x750
    x2034 = x1615 * x8
    x2035 = x1068 + x2033 - x2034
    x2036 = x2035 * x6
    x2037 = x2032 - x2036
    x2038 = x2031 * x5 - x2037 * x6 + x4 * (x1086 + x2027 - x2028 + x2029)
    x2039 = x4 * (x1103 + x2030 - x2033 + x2034)
    x2040 = x2037 * x5
    x2041 = x2035 * x5
    x2042 = x1615 * x750
    x2043 = x1626 * x8
    x2044 = x1090 + x2042 - x2043
    x2045 = x2044 * x6
    x2046 = x2041 - x2045
    x2047 = x2046 * x6
    x2048 = x2039 + x2040 - x2047
    x2049 = x1646 * x8
    x2050 = x1642 * x750
    x2051 = x1135 + x1602 + x1640 * x750 - x1642 * x8
    x2052 = x1116 + x1611 - x2049 + x2050
    x2053 = x2051 * x5 - x2052 * x6
    x2054 = x2052 * x5
    x2055 = x1646 * x750
    x2056 = x1654 * x8
    x2057 = x1140 + x1622 + x2055 - x2056
    x2058 = x2057 * x6
    x2059 = x2054 - x2058
    x2060 = x1669 * x8
    x2061 = x1665 * x750
    x2062 = x1178 + x1663 * x750 - x1665 * x8
    x2063 = x1163 - x2060 + x2061
    x2064 = x2062 * x5 - x2063 * x6
    x2065 = x2063 * x5
    x2066 = x1669 * x750
    x2067 = x1677 * x8
    x2068 = x1183 + x2066 - x2067
    x2069 = x2068 * x6
    x2070 = x2065 - x2069
    x2071 = x1692 * x8
    x2072 = x1688 * x750
    x2073 = 2.0 * x1650
    x2074 = x1216 + 2.0 * x1641 + x1686 * x750 - x1688 * x8
    x2075 = x1228 - x2071 + x2072 + x2073
    x2076 = x1704 * x8
    x2077 = x1700 * x750
    x2078 = x1251 + x1664 + x1698 * x750 - x1700 * x8
    x2079 = x1262 + x1673 - x2076 + x2077
    x2080 = x1717 * x8
    x2081 = x1713 * x750
    x2082 = x1279 + x1711 * x750 - x1713 * x8
    x2083 = x1288 - x2080 + x2081
    x2084 = x1756 * x750
    x2085 = x1754 * x750 + x1796
    x2086 = x1799 + x2084
    x2087 = x2085 * x5 - x2086 * x6
    x2088 = x2086 * x5
    x2089 = x1761 * x750
    x2090 = x1805 + x2089
    x2091 = x2090 * x6
    x2092 = x2088 - x2091
    x2093 = x2087 * x5 - x2092 * x6 + x4 * (x1794 - x2084 + x2085)
    x2094 = x4 * (x1804 + x2086 - x2089)
    x2095 = x2092 * x5
    x2096 = x2090 * x5
    x2097 = x1770 * x750
    x2098 = x1815 + x2097
    x2099 = x2098 * x6
    x2100 = x2096 - x2099
    x2101 = x2100 * x6
    x2102 = x2094 + x2095 - x2101
    x2103 = x1800 * x750
    x2104 = x1797 * x750 + x1851
    x2105 = x1856 + x2103
    x2106 = x2104 * x5 - x2105 * x6
    x2107 = x2105 * x5
    x2108 = x1806 * x750
    x2109 = x1862 + x2108
    x2110 = x2109 * x6
    x2111 = x2107 - x2110
    x2112 = x1828 * x750
    x2113 = x1826 * x750 + x1872
    x2114 = x1875 + x2112
    x2115 = x2113 * x5 - x2114 * x6
    x2116 = x2114 * x5
    x2117 = x1833 * x750
    x2118 = x1881 + x2117
    x2119 = x2118 * x6
    x2120 = x2116 - x2119
    x2121 = x1857 * x750
    x2122 = x1852 * x750 + x1909
    x2123 = x1915 + x2121
    x2124 = x1876 * x750
    x2125 = x1873 * x750 + x1920
    x2126 = x1925 + x2124
    x2127 = x1895 * x750
    x2128 = x1893 * x750 + x1931
    x2129 = x1934 + x2127
    x2130 = x10 * x1761
    x2131 = x1050 * x1756
    x2132 = 2.0 * x1054
    x2133 = -x10 * x1756 + x1050 * x1754 + 2.0 * x1082
    x2134 = x4 * (x2130 - x2131 - x2132 + x2133)
    x2135 = -x2130 + x2131 + x2132
    x2136 = x2133 * x5 - x2135 * x6
    x2137 = x2135 * x5
    x2138 = x1050 * x1761
    x2139 = x10 * x1770
    x2140 = 2.0 * x1068
    x2141 = x2138 - x2139 + x2140
    x2142 = x2141 * x6
    x2143 = x2137 - x2142
    x2144 = x2134 + x2136 * x5 - x2143 * x6
    x2145 = x4 * (x2135 - x2138 + x2139 - x2140)
    x2146 = x2143 * x5
    x2147 = x2141 * x5
    x2148 = x1050 * x1770
    x2149 = x10 * x1782
    x2150 = 2.0 * x1090
    x2151 = x2148 - x2149 + x2150
    x2152 = x2151 * x6
    x2153 = x2147 - x2152
    x2154 = x2153 * x6
    x2155 = x2145 + x2146 - x2154
    x2156 = x4 * (x2141 - x2148 + x2149 - x2150)
    x2157 = -x10 * x1792 + x1050 * x1782 + 2.0 * x1107
    x2158 = -x2145
    x2159 = x2141 * x8
    x2160 = x111 * x2135
    x2161 = x111 * x2133 - x2135 * x8
    x2162 = x4 * (x2159 - x2160 + x2161)
    x2163 = -x2159 + x2160
    x2164 = x2161 * x5 - x2163 * x6
    x2165 = x2163 * x5
    x2166 = x111 * x2141
    x2167 = x2151 * x8
    x2168 = x2166 - x2167
    x2169 = x2168 * x6
    x2170 = x2165 - x2169
    x2171 = x4 * (x2163 - x2166 + x2167)
    x2172 = x111 * x2151 - x2157 * x8
    x2173 = x10 * x1833
    x2174 = x1050 * x1828
    x2175 = -x10 * x1828 + x1050 * x1826 + x1755 + x1892
    x2176 = x4 * (x1790 + x1891 + x2173 - x2174 + x2175)
    x2177 = x1765 + x1890 - x2173 + x2174
    x2178 = x2175 * x5 - x2177 * x6
    x2179 = x2177 * x5
    x2180 = x1050 * x1833
    x2181 = x10 * x1842
    x2182 = x1777 + x1900 + x2180 - x2181
    x2183 = x2182 * x6
    x2184 = x2179 - x2183
    x2185 = x4 * (x1793 + x1904 + x2177 - x2180 + x2181)
    x2186 = -x10 * x1848 + x1050 * x1842 + x1791 + x1906
    x2187 = x2168 * x8
    x2188 = x111 * x2163
    x2189 = x111 * x2161 + x2134 - x2163 * x8
    x2190 = x4 * (x2158 + x2187 - x2188 + x2189)
    x2191 = x2145 - x2187 + x2188
    x2192 = x111 * x2168 + x2156 - x2172 * x8
    x2193 = x2182 * x8
    x2194 = x111 * x2177
    x2195 = x111 * x2175 - x2177 * x8
    x2196 = x4 * (x2193 - x2194 + x2195)
    x2197 = -x2193 + x2194
    x2198 = x111 * x2182 - x2186 * x8
    x2199 = x10 * x1901
    x2200 = x1050 * x1895
    x2201 = 2.0 * x1288
    x2202 = 2.0 * x1837
    x2203 = -x10 * x1895 + x1050 * x1893 + 2.0 * x1279 + 2.0 * x1827
    x2204 = x4 * (x2199 - x2200 - x2201 - x2202 + x2203)
    x2205 = -x2199 + x2200 + x2201 + x2202
    x2206 = -x10 * x1907 + x1050 * x1901 + 2.0 * x1292 + 2.0 * x1847
    x2207 = x111 * x2189 + 2.0 * x2162 - x2191 * x8
    x2208 = x111 * x2191 + 2.0 * x2171 - x2192 * x8
    x2209 = x111 * x2195 + x2176 - x2197 * x8
    x2210 = x111 * x2197 + x2185 - x2198 * x8
    x2211 = x111 * x2203 - x2205 * x8
    x2212 = x111 * x2205 - x2206 * x8
    x2213 = -x10 * x1943 + x1050 * x1941 + 2.0 * x1366 + 3.0 * x1894
    x2214 = -x10 * x1944 + x1050 * x1943 + 2.0 * x1368 + 3.0 * x1905

    # 150 item(s)
    result[0, 0] = numpy.sum(
        x108
        * (
            x3 * (x3 * x71 + x4 * (-x40 + x50 + x66) - x6 * x95 + x98 * (x66 - x96 + x97))
            + x36 * (x71 - x72 + x91 - x94)
            - x6
            * (
                x3 * x95
                + x4 * (x68 - x73 + x99)
                - x6
                * (
                    x3 * x90
                    - x6
                    * (
                        x48 * (x102 + x59 - x76 + x81)
                        + x5 * x85
                        - x6
                        * (
                            x36 * (x57 + x78 - x79)
                            + x5 * x82
                            - x6 * (x100 + x5 * x80 + x6 * (x101 * x6 - x5 * x77))
                        )
                    )
                    + x98 * (x62 - x74 + x83 - x84)
                )
                + x98 * (-x103 + x104 + x99)
            )
            - x98
            * (
                x104 * x3
                + x104 * x6
                - x3 * x97
                - x48 * (-x105 + x3 * x44 + x45 + x69)
                + x48 * (x105 - x3 * x34 + x38 + x92)
                - x6 * (x103 + x89)
                - x70
                + x93
            )
        )
    )
    result[0, 1] = numpy.sum(
        x195
        * (
            x3
            * (
                x161 * x3
                - x184 * x6
                + x4 * (-x133 + x141 + x155)
                + x48 * (x155 - x185 + x186)
            )
            + x36 * (x161 - x162 + x179 - x183)
            + x48
            * (
                x160
                - x182
                + x186 * x3
                - x193 * x3
                - x193 * x6
                - x36 * (-x129 * x3 + x131 + x181 + x194)
                + x36 * (x136 * x3 + x138 + x159 - x194)
                + x6 * (x177 + x192)
            )
            - x6
            * (
                x184 * x3
                + x4 * (x157 - x163 + x187)
                + x48 * (x187 - x192 + x193)
                - x6
                * (
                    x178 * x3
                    + x48 * (x152 - x165 + x173 + x191)
                    - x6
                    * (
                        x174 * x5
                        + x36 * (x150 - x166 + x171)
                        - x6 * (x172 * x5 + x188 - x6 * (x170 * x5 - x190 * x6))
                    )
                )
            )
        )
    )
    result[0, 2] = numpy.sum(
        x195
        * (
            x3
            * (
                x248 * x3
                - x271 * x6
                + x4 * (-x220 + x228 + x242)
                + x48 * (x242 - x272 + x273)
            )
            + x36 * (x248 - x249 + x266 - x270)
            + x48
            * (
                x247
                - x269
                + x273 * x3
                - x280 * x3
                - x280 * x6
                - x36 * (-x216 * x3 + x218 + x268 + x281)
                + x36 * (x223 * x3 + x225 + x246 - x281)
                + x6 * (x264 + x279)
            )
            - x6
            * (
                x271 * x3
                + x4 * (x244 - x250 + x274)
                + x48 * (x274 - x279 + x280)
                - x6
                * (
                    x265 * x3
                    + x48 * (x239 - x252 + x260 + x278)
                    - x6
                    * (
                        x261 * x5
                        + x36 * (x237 - x253 + x258)
                        - x6 * (x259 * x5 + x275 - x6 * (x257 * x5 - x277 * x6))
                    )
                )
            )
        )
    )
    result[0, 3] = numpy.sum(
        x349
        * (
            x3
            * (
                x3 * x318
                - x336 * x6
                + x36 * (x314 - x337 + x338)
                + x4 * (-x294 + x302 + x314)
            )
            + x36 * (x318 - x319 + x333 - x335)
            + x36
            * (
                x3 * x338
                - x3 * x346
                + x317
                - x334
                - x346 * x6
                + x4 * (x291 + x296 * x3 + x297 - x347)
                - x4 * (-x290 * x3 + x292 + x308 + x347)
                + x6 * (x331 + x345)
            )
            - x6
            * (
                x3 * x336
                + x36 * (x340 - x345 + x346)
                + x4 * (x316 - x320 + x340)
                - x6
                * (
                    x3 * x332
                    + x36 * (x309 - x323 + x328)
                    - x6 * (x329 * x5 + x342 - x6 * (x327 * x5 - x344 * x6))
                )
            )
        )
    )
    result[0, 4] = numpy.sum(
        x412
        * (
            x3
            * (
                x3 * x384
                + x36 * (x380 - x402 + x403)
                + x4 * (-x362 + x369 + x380)
                - x401 * x6
            )
            + x36 * (x384 - x385 + x398 - x400)
            + x36
            * (
                x3 * x403
                - x3 * x410
                + x383
                - x399
                - x4 * (-x3 * x358 + x360 + x375 + x411)
                + x4 * (x3 * x364 + x359 + x365 - x411)
                - x410 * x6
                + x6 * (x396 + x409)
            )
            - x6
            * (
                x3 * x401
                + x36 * (x405 - x409 + x410)
                + x4 * (x382 - x386 + x405)
                - x6
                * (
                    x3 * x397
                    + x36 * (x376 - x388 + x393)
                    - x6 * (x394 * x5 + x406 - x6 * (x392 * x5 - x408 * x6))
                )
            )
        )
    )
    result[0, 5] = numpy.sum(
        x349
        * (
            x3
            * (
                x3 * x449
                + x36 * (x445 - x468 + x469)
                + x4 * (-x425 + x433 + x445)
                - x467 * x6
            )
            + x36 * (x449 - x450 + x464 - x466)
            + x36
            * (
                x3 * x469
                - x3 * x477
                - x4 * (-x3 * x421 + x423 + x439 + x478)
                + x4 * (x3 * x427 + x422 + x428 - x478)
                + x448
                - x465
                - x477 * x6
                + x6 * (x462 + x476)
            )
            - x6
            * (
                x3 * x467
                + x36 * (x471 - x476 + x477)
                + x4 * (x447 - x451 + x471)
                - x6
                * (
                    x3 * x463
                    + x36 * (x440 - x454 + x459)
                    - x6 * (x460 * x5 + x473 - x6 * (x458 * x5 - x475 * x6))
                )
            )
        )
    )
    result[0, 6] = numpy.sum(
        x195
        * (
            x3
            * (
                x3 * x513
                + x4 * (x489 - x506 + x507)
                + x4 * (x507 - x510 + x511)
                - x518 * x6
            )
            + x36 * (x505 + x513 - x514 + x517)
            + x4 * (x3 * x489 - x3 * x509 + x485 + x505 - x509 * x6 + x6 * (x495 + x502))
            - x6
            * (
                x3 * x518
                + x4 * (-x495 + x501 + x509)
                + x4 * (x501 + x512 - x515)
                - x6 * (x3 * x516 + x520 - x6 * (x5 * x500 - x522 * x6))
            )
        )
    )
    result[0, 7] = numpy.sum(
        x412
        * (
            x3
            * (
                x3 * x554
                + x4 * (x532 - x547 + x548)
                + x4 * (x548 - x551 + x552)
                - x559 * x6
            )
            + x36 * (x546 + x554 - x555 + x558)
            + x4 * (x3 * x532 - x3 * x550 + x528 + x546 - x550 * x6 + x6 * (x537 + x543))
            - x6
            * (
                x3 * x559
                + x4 * (-x537 + x542 + x550)
                + x4 * (x542 + x553 - x556)
                - x6 * (x3 * x557 + x561 - x6 * (x5 * x541 - x563 * x6))
            )
        )
    )
    result[0, 8] = numpy.sum(
        x412
        * (
            x3
            * (
                x3 * x593
                + x4 * (x572 - x586 + x587)
                + x4 * (x587 - x590 + x591)
                - x598 * x6
            )
            + x36 * (x585 + x593 - x594 + x597)
            + x4 * (x3 * x572 - x3 * x589 + x568 + x585 - x589 * x6 + x6 * (x577 + x583))
            - x6
            * (
                x3 * x598
                + x4 * (-x577 + x582 + x589)
                + x4 * (x582 + x592 - x595)
                - x6 * (x3 * x596 + x599 - x6 * (x5 * x581 - x6 * x601))
            )
        )
    )
    result[0, 9] = numpy.sum(
        x195
        * (
            x3
            * (
                x3 * x636
                + x4 * (x612 - x629 + x630)
                + x4 * (x630 - x633 + x634)
                - x6 * x641
            )
            + x36 * (x628 + x636 - x637 + x640)
            + x4 * (x3 * x612 - x3 * x632 - x6 * x632 + x6 * (x618 + x625) + x608 + x628)
            - x6
            * (
                x3 * x641
                + x4 * (-x618 + x624 + x632)
                + x4 * (x624 + x635 - x638)
                - x6 * (x3 * x639 - x6 * (x5 * x623 - x6 * x645) + x643)
            )
        )
    )
    result[0, 10] = numpy.sum(
        x108
        * (
            x3 * (x3 * x655 - x6 * x663 + x652)
            + x36 * (x655 - x656 + x662)
            - x6 * (x3 * x663 - x6 * (x3 * x661 - x6 * x667) + x665)
        )
    )
    result[0, 11] = numpy.sum(
        x195
        * (
            x3 * (x3 * x677 - x6 * x685 + x674)
            + x36 * (x677 - x678 + x684)
            - x6 * (x3 * x685 - x6 * (x3 * x683 - x6 * x689) + x687)
        )
    )
    result[0, 12] = numpy.sum(
        x349
        * (
            x3 * (x3 * x698 - x6 * x705 + x695)
            + x36 * (x698 - x699 + x704)
            - x6 * (x3 * x705 - x6 * (x3 * x703 - x6 * x709) + x707)
        )
    )
    result[0, 13] = numpy.sum(
        x195
        * (
            x3 * (x3 * x717 - x6 * x724 + x714)
            + x36 * (x717 - x718 + x723)
            - x6 * (x3 * x724 - x6 * (x3 * x722 - x6 * x727) + x725)
        )
    )
    result[0, 14] = numpy.sum(
        x108
        * (
            x3 * (x3 * x737 - x6 * x745 + x734)
            + x36 * (x737 - x738 + x744)
            - x6 * (x3 * x745 - x6 * (x3 * x743 - x6 * x749) + x747)
        )
    )
    result[1, 0] = numpy.sum(
        x810
        * (
            -x3 * (-x3 * x788 + x6 * x806 + x98 * (x767 - x777 + x778 - x785))
            + x4 * (-x780 + x788 + x805)
            - x6
            * (
                x3 * x806
                - x6
                * (
                    x48 * (x776 - x791 + x797 + x809)
                    + x5 * x801
                    - x6
                    * (
                        x36 * (x774 - x792 + x795)
                        + x5 * x798
                        - x6 * (x5 * x796 - x6 * (x5 * x794 - x6 * x808) + x807)
                    )
                )
                + x98 * (x779 - x789 + x799 - x800)
            )
            + x98 * (-x3 * x779 + x3 * x785 + x787 + x805)
        )
    )
    result[1, 1] = numpy.sum(
        x412
        * (
            -x3 * (-x3 * x833 + x48 * (x814 + x819 - x825 - x831) + x6 * x846)
            + x4 * (-x827 + x833 + x845)
            + x48 * (-x3 * x826 + x3 * x831 + x832 + x845)
            - x6
            * (
                x3 * x846
                + x48 * (x826 - x834 - x835 + x841)
                - x6
                * (
                    x36 * (x824 - x836 + x839)
                    + x5 * x842
                    - x6 * (x5 * x840 - x6 * (x5 * x838 - x6 * x848) + x847)
                )
            )
        )
    )
    result[1, 2] = numpy.sum(
        x412
        * (
            x3 * (x3 * x871 + x48 * (-x857 + x863 + x869 + x885) - x6 * x884)
            + x4 * (-x865 + x871 + x883)
            + x48 * (-x3 * x864 + x3 * x869 + x870 + x883)
            - x6
            * (
                x3 * x884
                + x48 * (x864 - x873 + x879 + x888)
                - x6
                * (
                    x36 * (x862 - x874 + x877)
                    + x5 * x880
                    - x6 * (x5 * x878 - x6 * (x5 * x876 - x6 * x887) + x886)
                )
            )
        )
    )
    result[1, 3] = numpy.sum(
        x914
        * (
            x3 * (x3 * x901 + x36 * (-x891 + x894 + x898) - x6 * x910)
            + x36 * (-x3 * x895 + x3 * x898 + x900 + x909)
            + x4 * (-x896 + x901 + x909)
            - x6
            * (
                x3 * x910
                + x36 * (x895 - x902 + x905)
                - x6 * (x5 * x906 - x6 * (x5 * x904 - x6 * x912) + x911)
            )
        )
    )
    result[1, 4] = numpy.sum(
        x939
        * (
            x3 * (x3 * x927 + x36 * (-x917 + x920 + x924) - x6 * x936)
            + x36 * (-x3 * x921 + x3 * x924 + x926 + x935)
            + x4 * (-x922 + x927 + x935)
            - x6
            * (
                x3 * x936
                + x36 * (x921 - x928 + x931)
                - x6 * (x5 * x932 - x6 * (x5 * x930 - x6 * x938) + x937)
            )
        )
    )
    result[1, 5] = numpy.sum(
        x914
        * (
            x3 * (x3 * x952 + x36 * (-x942 + x945 + x949) - x6 * x962)
            + x36 * (-x3 * x946 + x3 * x949 + x951 + x961)
            + x4 * (-x947 + x952 + x961)
            - x6
            * (
                x3 * x962
                + x36 * (x946 - x953 + x956)
                - x6 * (x5 * x957 - x6 * (x5 * x955 - x6 * x964) + x963)
            )
        )
    )
    result[1, 6] = numpy.sum(
        x412
        * (
            x3 * (x3 * x973 - x6 * x975 + x974)
            + x4 * (x968 - x972 + x973)
            + x4 * (x3 * x965 - x3 * x970 + x968 + x971)
            - x6 * (x3 * x975 - x6 * (x5 * x967 - x6 * x977) + x976)
        )
    )
    result[1, 7] = numpy.sum(
        x939
        * (
            x3 * (x3 * x986 - x6 * x988 + x987)
            + x4 * (x981 - x985 + x986)
            + x4 * (x3 * x978 - x3 * x983 + x981 + x984)
            - x6 * (x3 * x988 - x6 * (x5 * x980 - x6 * x990) + x989)
        )
    )
    result[1, 8] = numpy.sum(
        x939
        * (
            x3 * (x1000 - x1001 * x6 + x3 * x999)
            + x4 * (x994 - x998 + x999)
            + x4 * (x3 * x991 - x3 * x996 + x994 + x997)
            - x6 * (x1001 * x3 + x1002 + x6 * (x1003 * x6 - x5 * x993))
        )
    )
    result[1, 9] = numpy.sum(
        x412
        * (
            x3 * (x1012 * x3 + x1013 - x1014 * x6)
            + x4 * (x1007 - x1011 + x1012)
            + x4 * (x1004 * x3 + x1007 - x1009 * x3 + x1010)
            - x6 * (x1014 * x3 + x1015 - x6 * (x1006 * x5 - x1016 * x6))
        )
    )
    result[1, 10] = numpy.sum(
        x810 * (x1021 + x3 * (x1020 * x3 - x1022 * x6) - x6 * (x1022 * x3 - x1023 * x6))
    )
    result[1, 11] = numpy.sum(
        x412 * (x1028 + x3 * (x1027 * x3 - x1029 * x6) - x6 * (x1029 * x3 - x1030 * x6))
    )
    result[1, 12] = numpy.sum(
        x914 * (x1035 + x3 * (x1034 * x3 - x1036 * x6) - x6 * (x1036 * x3 - x1037 * x6))
    )
    result[1, 13] = numpy.sum(
        x412 * (x1041 + x3 * (x1040 * x3 - x1042 * x6) - x6 * (x1042 * x3 - x1043 * x6))
    )
    result[1, 14] = numpy.sum(
        x810 * (x1047 + x3 * (x1046 * x3 - x1048 * x6) - x6 * (x1048 * x3 - x1049 * x6))
    )
    result[2, 0] = numpy.sum(
        x810
        * (
            -x3 * (-x1088 * x3 + x1106 * x6 + x98 * (x1067 - x1077 + x1078 - x1085))
            + x4 * (-x1080 + x1088 + x1105)
            - x6
            * (
                x1106 * x3
                - x6
                * (
                    x1101 * x5
                    + x48 * (x1076 - x1091 + x1097 + x1109)
                    - x6
                    * (
                        x1098 * x5
                        + x36 * (x1074 - x1092 + x1095)
                        - x6 * (x1096 * x5 + x1107 - x6 * (x1094 * x5 - x1108 * x6))
                    )
                )
                + x98 * (x1079 - x1089 + x1099 - x1100)
            )
            + x98 * (-x1079 * x3 + x1085 * x3 + x1087 + x1105)
        )
    )
    result[2, 1] = numpy.sum(
        x412
        * (
            x3 * (x1139 * x3 - x1154 * x6 + x48 * (-x1122 + x1130 + x1137 + x1155))
            + x4 * (-x1132 + x1139 + x1153)
            + x48 * (-x1131 * x3 + x1137 * x3 + x1138 + x1153)
            - x6
            * (
                x1154 * x3
                + x48 * (x1131 - x1141 + x1149 + x1159)
                - x6
                * (
                    x1150 * x5
                    + x36 * (x1129 - x1142 + x1147)
                    - x6 * (x1148 * x5 + x1156 - x6 * (x1146 * x5 - x1158 * x6))
                )
            )
        )
    )
    result[2, 2] = numpy.sum(
        x412
        * (
            x3 * (x1182 * x3 - x1195 * x6 + x48 * (-x1168 + x1174 + x1180 + x1196))
            + x4 * (-x1176 + x1182 + x1194)
            + x48 * (-x1175 * x3 + x1180 * x3 + x1181 + x1194)
            - x6
            * (
                x1195 * x3
                + x48 * (x1175 - x1184 + x1190 + x1199)
                - x6
                * (
                    x1191 * x5
                    + x36 * (x1173 - x1185 + x1188)
                    - x6 * (x1189 * x5 + x1197 - x6 * (x1187 * x5 - x1198 * x6))
                )
            )
        )
    )
    result[2, 3] = numpy.sum(
        x914
        * (
            x3 * (x1218 * x3 - x1231 * x6 + x36 * (-x1204 + x1209 + x1214))
            + x36 * (-x1210 * x3 + x1214 * x3 + x1217 + x1230)
            + x4 * (-x1211 + x1218 + x1230)
            - x6
            * (
                x1231 * x3
                + x36 * (x1210 - x1219 + x1224)
                - x6 * (x1225 * x5 + x1233 - x6 * (x1223 * x5 - x1235 * x6))
            )
        )
    )
    result[2, 4] = numpy.sum(
        x939
        * (
            x3 * (x1253 * x3 - x1265 * x6 + x36 * (-x1240 + x1245 + x1250))
            + x36 * (-x1246 * x3 + x1250 * x3 + x1252 + x1264)
            + x4 * (-x1247 + x1253 + x1264)
            - x6
            * (
                x1265 * x3
                + x36 * (x1246 - x1254 + x1259)
                - x6 * (x1260 * x5 + x1266 - x6 * (x1258 * x5 - x1268 * x6))
            )
        )
    )
    result[2, 5] = numpy.sum(
        x914
        * (
            x3 * (x1281 * x3 - x1291 * x6 + x36 * (-x1271 + x1274 + x1278))
            + x36 * (-x1275 * x3 + x1278 * x3 + x1280 + x1290)
            + x4 * (-x1276 + x1281 + x1290)
            - x6
            * (
                x1291 * x3
                + x36 * (x1275 - x1282 + x1285)
                - x6 * (x1286 * x5 + x1292 - x6 * (x1284 * x5 - x1293 * x6))
            )
        )
    )
    result[2, 6] = numpy.sum(
        x412
        * (
            x3 * (x1309 * x3 + x1311 - x1312 * x6)
            + x4 * (x1301 - x1308 + x1309)
            + x4 * (x1295 * x3 + x1301 - x1306 * x3 + x1307)
            - x6 * (x1312 * x3 + x1314 - x6 * (x1300 * x5 - x1316 * x6))
        )
    )
    result[2, 7] = numpy.sum(
        x939
        * (
            x3 * (x1330 * x3 + x1332 - x1333 * x6)
            + x4 * (x1323 - x1329 + x1330)
            + x4 * (x1318 * x3 + x1323 - x1327 * x3 + x1328)
            - x6 * (x1333 * x3 + x1335 - x6 * (x1322 * x5 - x1337 * x6))
        )
    )
    result[2, 8] = numpy.sum(
        x939
        * (
            x3 * (x1351 * x3 + x1352 - x1353 * x6)
            + x4 * (x1344 - x1350 + x1351)
            + x4 * (x1339 * x3 + x1344 - x1348 * x3 + x1349)
            - x6 * (x1353 * x3 + x1354 - x6 * (x1343 * x5 - x1356 * x6))
        )
    )
    result[2, 9] = numpy.sum(
        x412
        * (
            x3 * (x1365 * x3 + x1366 - x1367 * x6)
            + x4 * (x1360 - x1364 + x1365)
            + x4 * (x1357 * x3 + x1360 - x1362 * x3 + x1363)
            - x6 * (x1367 * x3 + x1368 - x6 * (x1359 * x5 - x1369 * x6))
        )
    )
    result[2, 10] = numpy.sum(
        x810 * (x1376 + x3 * (x1372 * x3 - x1378 * x6) - x6 * (x1378 * x3 - x1380 * x6))
    )
    result[2, 11] = numpy.sum(
        x412 * (x1387 + x3 * (x1383 * x3 - x1389 * x6) - x6 * (x1389 * x3 - x1391 * x6))
    )
    result[2, 12] = numpy.sum(
        x914 * (x1397 + x3 * (x1394 * x3 - x1399 * x6) - x6 * (x1399 * x3 - x1401 * x6))
    )
    result[2, 13] = numpy.sum(
        x412 * (x1406 + x3 * (x1405 * x3 - x1408 * x6) - x6 * (x1408 * x3 - x1410 * x6))
    )
    result[2, 14] = numpy.sum(
        x810 * (x1415 + x3 * (x1414 * x3 - x1416 * x6) - x6 * (x1416 * x3 - x1417 * x6))
    )
    result[3, 0] = numpy.sum(
        x810
        * (
            x3 * (x1441 * x5 - x1455 * x6 + x48 * (x1430 - x1432 + x1439 + x1456))
            - x6
            * (
                x1455 * x5
                + x48 * (x1440 - x1444 + x1451 + x1459)
                - x6
                * (
                    x1452 * x5
                    + x36 * (x1438 - x1445 + x1449)
                    - x6 * (x1450 * x5 + x1457 - x6 * (x1448 * x5 - x1458 * x6))
                )
            )
            + x98 * (x1441 - x1442 + x1453 - x1454)
        )
    )
    result[3, 1] = numpy.sum(
        x412
        * (
            x3 * (x1472 * x5 - x1482 * x6 + x36 * (x1465 - x1466 + x1470))
            + x48 * (x1472 - x1473 - x1474 + x1481)
            - x6
            * (
                x1482 * x5
                + x36 * (x1471 - x1475 + x1479)
                - x6 * (x1480 * x5 + x1483 - x6 * (x1478 * x5 - x1484 * x6))
            )
        )
    )
    result[3, 2] = numpy.sum(
        x412
        * (
            x3 * (x1497 * x5 - x1507 * x6 + x36 * (x1490 - x1491 + x1495))
            + x48 * (x1497 - x1499 + x1506 + x1510)
            - x6
            * (
                x1507 * x5
                + x36 * (x1496 - x1500 + x1504)
                - x6 * (x1505 * x5 + x1508 - x6 * (x1503 * x5 - x1509 * x6))
            )
        )
    )
    result[3, 3] = numpy.sum(
        x914
        * (
            x3 * (x1517 + x1519 * x5 - x1526 * x6)
            + x36 * (x1519 - x1520 + x1525)
            - x6 * (x1526 * x5 + x1528 - x6 * (x1524 * x5 - x1530 * x6))
        )
    )
    result[3, 4] = numpy.sum(
        x939
        * (
            x3 * (x1534 + x1536 * x5 - x1542 * x6)
            + x36 * (x1536 - x1537 + x1541)
            - x6 * (x1542 * x5 + x1543 - x6 * (x1540 * x5 - x1544 * x6))
        )
    )
    result[3, 5] = numpy.sum(
        x914
        * (
            x3 * (x1548 + x1550 * x5 - x1556 * x6)
            + x36 * (x1550 - x1551 + x1555)
            - x6 * (x1556 * x5 + x1557 - x6 * (x1554 * x5 - x1558 * x6))
        )
    )
    result[3, 6] = numpy.sum(
        x412 * (x1563 + x3 * (x1562 * x5 - x1564 * x6) - x6 * (x1564 * x5 - x1565 * x6))
    )
    result[3, 7] = numpy.sum(
        x939 * (x1572 + x3 * (x1571 * x5 - x1573 * x6) - x6 * (x1573 * x5 - x1575 * x6))
    )
    result[3, 8] = numpy.sum(
        x939 * (x1579 + x3 * (x1578 * x5 - x1580 * x6) - x6 * (x1580 * x5 - x1581 * x6))
    )
    result[3, 9] = numpy.sum(
        x412 * (x1585 + x3 * (x1584 * x5 - x1586 * x6) - x6 * (x1586 * x5 - x1587 * x6))
    )
    result[3, 10] = numpy.sum(x810 * (x1588 * x3 - x1589 * x6))
    result[3, 11] = numpy.sum(x412 * (x1590 * x3 - x1591 * x6))
    result[3, 12] = numpy.sum(x914 * (x1593 * x3 - x1595 * x6))
    result[3, 13] = numpy.sum(x412 * (x1596 * x3 - x1597 * x6))
    result[3, 14] = numpy.sum(x810 * (x1598 * x3 - x1599 * x6))
    result[4, 0] = numpy.sum(
        x1638
        * (
            x3 * (x1620 * x5 - x1633 * x6 + x48 * (x1610 - x1612 + x1618 + x1634))
            - x6
            * (
                x1633 * x5
                + x48 * (x1619 - x1623 + x1629 + x1637)
                - x6
                * (
                    x1630 * x5
                    + x36 * (x1617 - x1624 + x1627)
                    - x6 * (x1628 * x5 + x1635 - x6 * (x1626 * x5 - x1636 * x6))
                )
            )
            + x98 * (x1620 - x1621 + x1631 - x1632)
        )
    )
    result[4, 1] = numpy.sum(
        x1661
        * (
            x3 * (x1649 * x5 - x1658 * x6 + x36 * (x1643 - x1644 + x1647))
            + x48 * (x1649 - x1650 - x1651 + x1657)
            - x6
            * (
                x1658 * x5
                + x36 * (x1648 - x1652 + x1655)
                - x6 * (x1656 * x5 + x1659 - x6 * (x1654 * x5 - x1660 * x6))
            )
        )
    )
    result[4, 2] = numpy.sum(
        x1661
        * (
            x3 * (x1672 * x5 - x1681 * x6 + x36 * (x1666 - x1667 + x1670))
            + x48 * (x1672 - x1674 + x1680 + x1684)
            - x6
            * (
                x1681 * x5
                + x36 * (x1671 - x1675 + x1678)
                - x6 * (x1679 * x5 + x1682 - x6 * (x1677 * x5 - x1683 * x6))
            )
        )
    )
    result[4, 3] = numpy.sum(
        x939
        * (
            x3 * (x1687 + x1689 * x5 - x1694 * x6)
            + x36 * (x1689 - x1690 + x1693)
            - x6 * (x1694 * x5 + x1695 - x6 * (x1692 * x5 - x1696 * x6))
        )
    )
    result[4, 4] = numpy.sum(
        x1709
        * (
            x3 * (x1699 + x1701 * x5 - x1706 * x6)
            + x36 * (x1701 - x1702 + x1705)
            - x6 * (x1706 * x5 + x1707 - x6 * (x1704 * x5 - x1708 * x6))
        )
    )
    result[4, 5] = numpy.sum(
        x939
        * (
            x3 * (x1712 + x1714 * x5 - x1719 * x6)
            + x36 * (x1714 - x1715 + x1718)
            - x6 * (x1719 * x5 + x1720 - x6 * (x1717 * x5 - x1721 * x6))
        )
    )
    result[4, 6] = numpy.sum(
        x1661 * (x1724 + x3 * (x1723 * x5 - x1725 * x6) - x6 * (x1725 * x5 - x1726 * x6))
    )
    result[4, 7] = numpy.sum(
        x1709 * (x1729 + x3 * (x1728 * x5 - x1730 * x6) - x6 * (x1730 * x5 - x1731 * x6))
    )
    result[4, 8] = numpy.sum(
        x1709 * (x1734 + x3 * (x1733 * x5 - x1735 * x6) - x6 * (x1735 * x5 - x1736 * x6))
    )
    result[4, 9] = numpy.sum(
        x1661 * (x1739 + x3 * (x1738 * x5 - x1740 * x6) - x6 * (x1740 * x5 - x1741 * x6))
    )
    result[4, 10] = numpy.sum(x1638 * (x1742 * x3 - x1743 * x6))
    result[4, 11] = numpy.sum(x1661 * (x1744 * x3 - x1745 * x6))
    result[4, 12] = numpy.sum(x939 * (x1746 * x3 - x1747 * x6))
    result[4, 13] = numpy.sum(x1661 * (x1748 * x3 - x1749 * x6))
    result[4, 14] = numpy.sum(x1638 * (x1750 * x3 - x1751 * x6))
    result[5, 0] = numpy.sum(
        x810
        * (
            x3 * (x1775 * x5 - x1789 * x6 + x48 * (x1764 - x1766 + x1773 + x1790))
            - x6
            * (
                x1789 * x5
                + x48 * (x1774 - x1778 + x1785 + x1793)
                - x6
                * (
                    x1786 * x5
                    + x36 * (x1772 - x1779 + x1783)
                    - x6 * (x1784 * x5 + x1791 - x6 * (x1782 * x5 - x1792 * x6))
                )
            )
            + x98 * (x1775 - x1776 + x1787 - x1788)
        )
    )
    result[5, 1] = numpy.sum(
        x412
        * (
            x3 * (x1809 * x5 - x1820 * x6 + x36 * (x1801 - x1802 + x1807))
            + x48 * (x1809 - x1810 - x1811 + x1819)
            - x6
            * (
                x1820 * x5
                + x36 * (x1808 - x1812 + x1817)
                - x6 * (x1818 * x5 + x1821 - x6 * (x1816 * x5 - x1823 * x6))
            )
        )
    )
    result[5, 2] = numpy.sum(
        x412
        * (
            x3 * (x1836 * x5 - x1846 * x6 + x36 * (x1829 - x1830 + x1834))
            + x48 * (x1836 - x1838 + x1845 + x1849)
            - x6
            * (
                x1846 * x5
                + x36 * (x1835 - x1839 + x1843)
                - x6 * (x1844 * x5 + x1847 - x6 * (x1842 * x5 - x1848 * x6))
            )
        )
    )
    result[5, 3] = numpy.sum(
        x914
        * (
            x3 * (x1855 + x1858 * x5 - x1865 * x6)
            + x36 * (x1858 - x1859 + x1864)
            - x6 * (x1865 * x5 + x1867 - x6 * (x1863 * x5 - x1869 * x6))
        )
    )
    result[5, 4] = numpy.sum(
        x939
        * (
            x3 * (x1874 + x1877 * x5 - x1884 * x6)
            + x36 * (x1877 - x1878 + x1883)
            - x6 * (x1884 * x5 + x1885 - x6 * (x1882 * x5 - x1887 * x6))
        )
    )
    result[5, 5] = numpy.sum(
        x914
        * (
            x3 * (x1894 + x1896 * x5 - x1903 * x6)
            + x36 * (x1896 - x1897 + x1902)
            - x6 * (x1903 * x5 + x1905 - x6 * (x1901 * x5 - x1907 * x6))
        )
    )
    result[5, 6] = numpy.sum(
        x412 * (x1914 + x3 * (x1910 * x5 - x1916 * x6) - x6 * (x1916 * x5 - x1918 * x6))
    )
    result[5, 7] = numpy.sum(
        x939 * (x1924 + x3 * (x1921 * x5 - x1926 * x6) - x6 * (x1926 * x5 - x1928 * x6))
    )
    result[5, 8] = numpy.sum(
        x939 * (x1933 + x3 * (x1932 * x5 - x1935 * x6) - x6 * (x1935 * x5 - x1937 * x6))
    )
    result[5, 9] = numpy.sum(
        x412 * (x1942 + x3 * (x1941 * x5 - x1943 * x6) - x6 * (x1943 * x5 - x1944 * x6))
    )
    result[5, 10] = numpy.sum(x810 * (x1946 * x3 - x1948 * x6))
    result[5, 11] = numpy.sum(x412 * (x1950 * x3 - x1952 * x6))
    result[5, 12] = numpy.sum(x914 * (x1954 * x3 - x1956 * x6))
    result[5, 13] = numpy.sum(x412 * (x1958 * x3 - x1960 * x6))
    result[5, 14] = numpy.sum(x810 * (x1961 * x3 - x1962 * x6))
    result[6, 0] = numpy.sum(
        x108
        * (
            x48 * (x1976 - x1977 - x1978 + x1986)
            + x5 * (x1976 * x5 - x1987 * x6 + x36 * (x1968 - x1969 + x1974))
            - x6
            * (
                x1987 * x5
                + x36 * (x1975 - x1979 + x1984)
                - x6
                * (
                    x1985 * x5
                    + x4 * (x1973 - x1980 + x1981 - x1982)
                    - x6 * (x1983 * x5 - x6 * (x1448 * x750 - x1458 * x8 + 2.0 * x807))
                )
            )
        )
    )
    result[6, 1] = numpy.sum(
        x195
        * (
            x36 * (x1992 - x1993 + x1997)
            + x5
            * (x1992 * x5 - x1998 * x6 + x4 * (x1456 + x1514 + x1988 - x1989 + x1990))
            - x6
            * (
                x1998 * x5
                + x4 * (x1459 + x1527 + x1991 - x1994 + x1995)
                - x6 * (x1996 * x5 - x6 * (x1457 + x1478 * x750 - x1484 * x8 + x1529))
            )
        )
    )
    result[6, 2] = numpy.sum(
        x195
        * (
            x36 * (x2004 - x2005 + x2010)
            + x5 * (x2004 * x5 - x2011 * x6 + x4 * (x1999 - x2000 - x2001 + x2002))
            - x6
            * (
                x2011 * x5
                + x4 * (x2003 - x2006 + x2007 - x2008)
                - x6 * (x2009 * x5 - x6 * (x1503 * x750 - x1509 * x8 + 2.0 * x886))
            )
        )
    )
    result[6, 3] = numpy.sum(
        -x349
        * (
            x4 * (-x2012 + x2013 + x2014 + x2015 - x2016)
            - x5 * (x2016 * x5 - x2017 * x6)
            + x6
            * (x2017 * x5 - x6 * (2.0 * x1483 + x1524 * x750 - x1530 * x8 + 2.0 * x911))
        )
    )
    result[6, 4] = numpy.sum(
        x412
        * (
            x4 * (x1510 + x1569 + x2018 - x2019 + x2020)
            + x5 * (x2020 * x5 - x2021 * x6)
            - x6 * (x2021 * x5 - x6 * (x1508 + x1540 * x750 - x1544 * x8 + x1574))
        )
    )
    result[6, 5] = numpy.sum(
        x349
        * (
            x4 * (x2022 - x2023 - x2024 + x2025)
            + x5 * (x2025 * x5 - x2026 * x6)
            - x6 * (x2026 * x5 - x6 * (x1554 * x750 - x1558 * x8 + 2.0 * x963))
        )
    )
    result[6, 6] = numpy.sum(
        x195
        * (
            x5 * (3.0 * x1517 + x1562 * x750 - x1564 * x8 + 2.0 * x974)
            - x6 * (3.0 * x1528 + x1564 * x750 - x1565 * x8 + 2.0 * x976)
        )
    )
    result[6, 7] = numpy.sum(
        x412
        * (
            x5 * (2.0 * x1534 + x1571 * x750 - x1573 * x8 + 2.0 * x987)
            - x6 * (2.0 * x1543 + x1573 * x750 - x1575 * x8 + 2.0 * x989)
        )
    )
    result[6, 8] = numpy.sum(
        x412
        * (
            x5 * (x1548 + x1578 * x750 - x1580 * x8 + x1592)
            - x6 * (x1557 + x1580 * x750 - x1581 * x8 + x1594)
        )
    )
    result[6, 9] = numpy.sum(
        x195
        * (
            x5 * (2.0 * x1013 + x1584 * x750 - x1586 * x8)
            - x6 * (2.0 * x1015 + x1586 * x750 - x1587 * x8)
        )
    )
    result[6, 10] = numpy.sum(
        x108 * (2.0 * x1021 + 4.0 * x1563 + x1588 * x750 - x1589 * x8)
    )
    result[6, 11] = numpy.sum(
        x195 * (2.0 * x1028 + 3.0 * x1572 + x1590 * x750 - x1591 * x8)
    )
    result[6, 12] = numpy.sum(
        x349 * (2.0 * x1035 + 2.0 * x1579 + x1593 * x750 - x1595 * x8)
    )
    result[6, 13] = numpy.sum(x195 * (2.0 * x1041 + x1585 + x1596 * x750 - x1597 * x8))
    result[6, 14] = numpy.sum(x108 * (2.0 * x1047 + x1598 * x750 - x1599 * x8))
    result[7, 0] = numpy.sum(
        x810
        * (
            x48 * (x2038 - x2039 - x2040 + x2047)
            + x5 * (x2038 * x5 - x2048 * x6 + x36 * (x2031 - x2032 + x2036))
            - x6
            * (
                x2048 * x5
                + x36 * (x2037 - x2041 + x2045)
                - x6
                * (
                    x2046 * x5
                    + x4 * (x1109 + x2035 - x2042 + x2043)
                    - x6 * (x2044 * x5 - x6 * (x1107 + x1626 * x750 - x1636 * x8))
                )
            )
        )
    )
    result[7, 1] = numpy.sum(
        x412
        * (
            x36 * (x2053 - x2054 + x2058)
            + x5
            * (x2053 * x5 - x2059 * x6 + x4 * (x1155 + x1634 + x2049 - x2050 + x2051))
            - x6
            * (
                x2059 * x5
                + x4 * (x1159 + x1637 + x2052 - x2055 + x2056)
                - x6 * (x2057 * x5 - x6 * (x1156 + x1635 + x1654 * x750 - x1660 * x8))
            )
        )
    )
    result[7, 2] = numpy.sum(
        x412
        * (
            x36 * (x2064 - x2065 + x2069)
            + x5 * (x2064 * x5 - x2070 * x6 + x4 * (x1196 + x2060 - x2061 + x2062))
            - x6
            * (
                x2070 * x5
                + x4 * (x1199 + x2063 - x2066 + x2067)
                - x6 * (x2068 * x5 - x6 * (x1197 + x1677 * x750 - x1683 * x8))
            )
        )
    )
    result[7, 3] = numpy.sum(
        x914
        * (
            x4 * (x1229 + x2071 - x2072 - x2073 + x2074)
            + x5 * (x2074 * x5 - x2075 * x6)
            - x6 * (x2075 * x5 - x6 * (x1233 + 2.0 * x1659 + x1692 * x750 - x1696 * x8))
        )
    )
    result[7, 4] = numpy.sum(
        x939
        * (
            x4 * (x1263 + x1684 + x2076 - x2077 + x2078)
            + x5 * (x2078 * x5 - x2079 * x6)
            - x6 * (x2079 * x5 - x6 * (x1266 + x1682 + x1704 * x750 - x1708 * x8))
        )
    )
    result[7, 5] = numpy.sum(
        x914
        * (
            x4 * (x1289 + x2080 - x2081 + x2082)
            + x5 * (x2082 * x5 - x2083 * x6)
            - x6 * (x2083 * x5 - x6 * (x1292 + x1717 * x750 - x1721 * x8))
        )
    )
    result[7, 6] = numpy.sum(
        x412
        * (
            x5 * (x1311 + 3.0 * x1687 + x1723 * x750 - x1725 * x8)
            - x6 * (x1314 + 3.0 * x1695 + x1725 * x750 - x1726 * x8)
        )
    )
    result[7, 7] = numpy.sum(
        x939
        * (
            x5 * (x1332 + 2.0 * x1699 + x1728 * x750 - x1730 * x8)
            - x6 * (x1335 + 2.0 * x1707 + x1730 * x750 - x1731 * x8)
        )
    )
    result[7, 8] = numpy.sum(
        x939
        * (
            x5 * (x1352 + x1712 + x1733 * x750 - x1735 * x8)
            - x6 * (x1354 + x1720 + x1735 * x750 - x1736 * x8)
        )
    )
    result[7, 9] = numpy.sum(
        x412
        * (
            x5 * (x1366 + x1738 * x750 - x1740 * x8)
            - x6 * (x1368 + x1740 * x750 - x1741 * x8)
        )
    )
    result[7, 10] = numpy.sum(x810 * (x1376 + 4.0 * x1724 + x1742 * x750 - x1743 * x8))
    result[7, 11] = numpy.sum(x412 * (x1387 + 3.0 * x1729 + x1744 * x750 - x1745 * x8))
    result[7, 12] = numpy.sum(x914 * (x1397 + 2.0 * x1734 + x1746 * x750 - x1747 * x8))
    result[7, 13] = numpy.sum(x412 * (x1406 + x1739 + x1748 * x750 - x1749 * x8))
    result[7, 14] = numpy.sum(x810 * (x1415 + x1750 * x750 - x1751 * x8))
    result[8, 0] = numpy.sum(
        x810
        * (
            x48 * (x2093 - x2094 - x2095 + x2101)
            + x5 * (x2093 * x5 - x2102 * x6 + x36 * (x2087 - x2088 + x2091))
            - x6
            * (
                x2102 * x5
                + x36 * (x2092 - x2096 + x2099)
                - x6
                * (
                    x2100 * x5
                    + x4 * (x1814 + x2090 - x2097)
                    - x6 * (x2098 * x5 - x6 * (x1782 * x750 + x1822))
                )
            )
        )
    )
    result[8, 1] = numpy.sum(
        x412
        * (
            x36 * (x2106 - x2107 + x2110)
            + x5 * (x2106 * x5 - x2111 * x6 + x4 * (x1854 - x2103 + x2104))
            - x6
            * (
                x2111 * x5
                + x4 * (x1866 + x2105 - x2108)
                - x6 * (x2109 * x5 - x6 * (x1816 * x750 + x1868))
            )
        )
    )
    result[8, 2] = numpy.sum(
        x412
        * (
            x36 * (x2115 - x2116 + x2119)
            + x5 * (x2115 * x5 - x2120 * x6 + x4 * (x1870 - x2112 + x2113))
            - x6
            * (
                x2120 * x5
                + x4 * (x1880 + x2114 - x2117)
                - x6 * (x2118 * x5 - x6 * (x1842 * x750 + x1886))
            )
        )
    )
    result[8, 3] = numpy.sum(
        x914
        * (
            x4 * (x1913 - x2121 + x2122)
            + x5 * (x2122 * x5 - x2123 * x6)
            - x6 * (x2123 * x5 - x6 * (x1863 * x750 + x1917))
        )
    )
    result[8, 4] = numpy.sum(
        x939
        * (
            x4 * (x1923 - x2124 + x2125)
            + x5 * (x2125 * x5 - x2126 * x6)
            - x6 * (x2126 * x5 - x6 * (x1882 * x750 + x1927))
        )
    )
    result[8, 5] = numpy.sum(
        x914
        * (
            x4 * (x1929 - x2127 + x2128)
            + x5 * (x2128 * x5 - x2129 * x6)
            - x6 * (x2129 * x5 - x6 * (x1901 * x750 + x1936))
        )
    )
    result[8, 6] = numpy.sum(
        x412 * (x5 * (x1910 * x750 + x1945) - x6 * (x1916 * x750 + x1947))
    )
    result[8, 7] = numpy.sum(
        x939 * (x5 * (x1921 * x750 + x1949) - x6 * (x1926 * x750 + x1951))
    )
    result[8, 8] = numpy.sum(
        x939 * (x5 * (x1932 * x750 + x1953) - x6 * (x1935 * x750 + x1955))
    )
    result[8, 9] = numpy.sum(
        x412 * (x5 * (x1941 * x750 + x1957) - x6 * (x1943 * x750 + x1959))
    )
    result[8, 10] = numpy.sum(x810 * (4.0 * x1914 + x1946 * x750 - x1948 * x8))
    result[8, 11] = numpy.sum(x412 * (3.0 * x1924 + x1950 * x750 - x1952 * x8))
    result[8, 12] = numpy.sum(x914 * (2.0 * x1933 + x1954 * x750 - x1956 * x8))
    result[8, 13] = numpy.sum(x412 * (x1942 + x1958 * x750 - x1960 * x8))
    result[8, 14] = numpy.sum(x810 * (x1961 * x750 - x1962 * x8))
    result[9, 0] = numpy.sum(
        x108
        * (
            x48 * (x2144 - x2146 + x2154 + x2158)
            + x5 * (x2144 * x5 - x2155 * x6 + x36 * (x2136 - x2137 + x2142))
            - x6
            * (
                x2155 * x5
                + x36 * (x2143 - x2147 + x2152)
                - x6 * (x2153 * x5 + x2156 - x6 * (x2151 * x5 - x2157 * x6))
            )
        )
    )
    result[9, 1] = numpy.sum(
        x195
        * (
            x36 * (x2164 - x2165 + x2169)
            + x5 * (x2162 + x2164 * x5 - x2170 * x6)
            - x6 * (x2170 * x5 + x2171 - x6 * (x2168 * x5 - x2172 * x6))
        )
    )
    result[9, 2] = numpy.sum(
        x195
        * (
            x36 * (x2178 - x2179 + x2183)
            + x5 * (x2176 + x2178 * x5 - x2184 * x6)
            - x6 * (x2184 * x5 + x2185 - x6 * (x2182 * x5 - x2186 * x6))
        )
    )
    result[9, 3] = numpy.sum(
        x349 * (x2190 + x5 * (x2189 * x5 - x2191 * x6) - x6 * (x2191 * x5 - x2192 * x6))
    )
    result[9, 4] = numpy.sum(
        x412 * (x2196 + x5 * (x2195 * x5 - x2197 * x6) - x6 * (x2197 * x5 - x2198 * x6))
    )
    result[9, 5] = numpy.sum(
        x349 * (x2204 + x5 * (x2203 * x5 - x2205 * x6) - x6 * (x2205 * x5 - x2206 * x6))
    )
    result[9, 6] = numpy.sum(x195 * (x2207 * x5 - x2208 * x6))
    result[9, 7] = numpy.sum(x412 * (x2209 * x5 - x2210 * x6))
    result[9, 8] = numpy.sum(x412 * (x2211 * x5 - x2212 * x6))
    result[9, 9] = numpy.sum(x195 * (x2213 * x5 - x2214 * x6))
    result[9, 10] = numpy.sum(x108 * (x111 * x2207 + 3.0 * x2190 - x2208 * x8))
    result[9, 11] = numpy.sum(x195 * (x111 * x2209 + 2.0 * x2196 - x2210 * x8))
    result[9, 12] = numpy.sum(x349 * (x111 * x2211 + x2204 - x2212 * x8))
    result[9, 13] = numpy.sum(x195 * (x111 * x2213 - x2214 * x8))
    result[9, 14] = numpy.sum(
        x108 * (-x10 * x1962 + x1050 * x1961 + 2.0 * x1415 + 4.0 * x1942)
    )
    return result


def coulomb3d_40(ax, da, A, bx, db, B, R):
    """Cartesian (gs) 1-electron Coulomb integral.

    Generated code; DO NOT modify by hand!"""

    result = numpy.zeros((15, 1), dtype=float)

    x0 = ax + bx
    x1 = x0 ** (-1.0)
    x2 = -x1 * (ax * A[0] + bx * B[0])
    x3 = -x2 - A[0]
    x4 = 0.5 / (ax + bx)
    x5 = -x2 - R[0]
    x6 = -x1 * (ax * A[1] + bx * B[1])
    x7 = -x6 - R[1]
    x8 = -x1 * (ax * A[2] + bx * B[2])
    x9 = -x8 - R[2]
    x10 = x0 * (x5**2 + x7**2 + x9**2)
    x11 = (
        6.283185307179586
        * x1
        * numpy.exp(
            -ax * bx * x1 * ((A[0] - B[0]) ** 2 + (A[1] - B[1]) ** 2 + (A[2] - B[2]) ** 2)
        )
    )
    x12 = x11 * boys(1, x10)
    x13 = x11 * boys(0, x10)
    x14 = x4 * (-x12 + x13)
    x15 = -x12 * x5 + x13 * x3
    x16 = x11 * boys(2, x10)
    x17 = x16 * x5
    x18 = x12 * x3
    x19 = -x17 + x18
    x20 = x14 + x15 * x3 - x19 * x5
    x21 = x4 * (x12 - x16)
    x22 = x19 * x3
    x23 = x11 * boys(3, x10)
    x24 = x23 * x5
    x25 = x16 * x3
    x26 = -x24 + x25
    x27 = x26 * x5
    x28 = x21 + x22 - x27
    x29 = 2.0 * x4
    x30 = x4 * (x16 - x23)
    x31 = x11 * boys(4, x10)
    x32 = -x21
    x33 = da * db
    x34 = 0.09759000729485332 * x33
    x35 = -x6 - A[1]
    x36 = x12 * x35
    x37 = x16 * x7
    x38 = -x12 * x7 + x13 * x35
    x39 = x4 * (-x36 + x37 + x38)
    x40 = x36 - x37
    x41 = x3 * x38 - x40 * x5
    x42 = x3 * x40
    x43 = x23 * x7
    x44 = x16 * x35
    x45 = -x43 + x44
    x46 = x45 * x5
    x47 = x42 - x46
    x48 = x4 * (x40 + x43 - x44)
    x49 = x23 * x35 - x31 * x7
    x50 = 0.2581988897471611 * x33
    x51 = -x8 - A[2]
    x52 = x12 * x51
    x53 = x16 * x9
    x54 = -x12 * x9 + x13 * x51
    x55 = x4 * (-x52 + x53 + x54)
    x56 = x52 - x53
    x57 = x3 * x54 - x5 * x56
    x58 = x3 * x56
    x59 = x23 * x9
    x60 = x16 * x51
    x61 = -x59 + x60
    x62 = x5 * x61
    x63 = x58 - x62
    x64 = x4 * (x56 + x59 - x60)
    x65 = x23 * x51 - x31 * x9
    x66 = x45 * x7
    x67 = x35 * x40
    x68 = x14 + x35 * x38 - x40 * x7
    x69 = x4 * (x32 + x66 - x67 + x68)
    x70 = x21 - x66 + x67
    x71 = x30 + x35 * x45 - x49 * x7
    x72 = 0.3333333333333333 * x33
    x73 = x61 * x7
    x74 = x35 * x56
    x75 = x35 * x54 - x56 * x7
    x76 = x4 * (x73 - x74 + x75)
    x77 = -x73 + x74
    x78 = x35 * x61 - x65 * x7
    x79 = 1.732050807568877 * x72
    x80 = x61 * x9
    x81 = x51 * x56
    x82 = x14 + x51 * x54 - x56 * x9
    x83 = x4 * (x32 + x80 - x81 + x82)
    x84 = x21 - x80 + x81
    x85 = x30 + x51 * x61 - x65 * x9
    x86 = x35 * x68 + 2.0 * x39 - x7 * x70
    x87 = x35 * x70 + 2.0 * x48 - x7 * x71
    x88 = x35 * x75 + x55 - x7 * x77
    x89 = x35 * x77 + x64 - x7 * x78
    x90 = x35 * x82 - x7 * x84
    x91 = x35 * x84 - x7 * x85
    x92 = x51 * x82 + 2.0 * x55 - x84 * x9
    x93 = x51 * x84 + 2.0 * x64 - x85 * x9

    # 15 item(s)
    result[0, 0] = numpy.sum(
        x34
        * (
            x3 * (x20 * x3 - x28 * x5 + x29 * (x15 + x17 - x18))
            + 3.0 * x4 * (x20 - x22 + x27 + x32)
            - x5
            * (
                x28 * x3
                + x29 * (x19 + x24 - x25)
                - x5 * (x26 * x3 + x30 - x5 * (x23 * x3 - x31 * x5))
            )
        )
    )
    result[1, 0] = numpy.sum(
        x50
        * (
            x29 * (x41 - x42 + x46)
            + x3 * (x3 * x41 + x39 - x47 * x5)
            - x5 * (x3 * x47 + x48 - x5 * (x3 * x45 - x49 * x5))
        )
    )
    result[2, 0] = numpy.sum(
        x50
        * (
            x29 * (x57 - x58 + x62)
            + x3 * (x3 * x57 - x5 * x63 + x55)
            - x5 * (x3 * x63 - x5 * (x3 * x61 - x5 * x65) + x64)
        )
    )
    result[3, 0] = numpy.sum(
        x72 * (x3 * (x3 * x68 - x5 * x70) - x5 * (x3 * x70 - x5 * x71) + x69)
    )
    result[4, 0] = numpy.sum(
        x79 * (x3 * (x3 * x75 - x5 * x77) - x5 * (x3 * x77 - x5 * x78) + x76)
    )
    result[5, 0] = numpy.sum(
        x72 * (x3 * (x3 * x82 - x5 * x84) - x5 * (x3 * x84 - x5 * x85) + x83)
    )
    result[6, 0] = numpy.sum(x50 * (x3 * x86 - x5 * x87))
    result[7, 0] = numpy.sum(x79 * (x3 * x88 - x5 * x89))
    result[8, 0] = numpy.sum(x79 * (x3 * x90 - x5 * x91))
    result[9, 0] = numpy.sum(x50 * (x3 * x92 - x5 * x93))
    result[10, 0] = numpy.sum(x34 * (x35 * x86 + 3.0 * x69 - x7 * x87))
    result[11, 0] = numpy.sum(x50 * (x35 * x88 - x7 * x89 + 2.0 * x76))
    result[12, 0] = numpy.sum(x72 * (x35 * x90 - x7 * x91 + x83))
    result[13, 0] = numpy.sum(x50 * (x35 * x92 - x7 * x93))
    result[14, 0] = numpy.sum(x34 * (x51 * x92 + 3.0 * x83 - x9 * x93))
    return result


def coulomb3d_41(ax, da, A, bx, db, B, R):
    """Cartesian (gp) 1-electron Coulomb integral.

    Generated code; DO NOT modify by hand!"""

    result = numpy.zeros((15, 3), dtype=float)

    x0 = 0.5 / (ax + bx)
    x1 = ax + bx
    x2 = x1 ** (-1.0)
    x3 = -x2 * (ax * A[0] + bx * B[0])
    x4 = -x3 - A[0]
    x5 = -x3 - R[0]
    x6 = -x2 * (ax * A[1] + bx * B[1])
    x7 = -x6 - R[1]
    x8 = -x2 * (ax * A[2] + bx * B[2])
    x9 = -x8 - R[2]
    x10 = x1 * (x5**2 + x7**2 + x9**2)
    x11 = (
        6.283185307179586
        * x2
        * numpy.exp(
            -ax * bx * x2 * ((A[0] - B[0]) ** 2 + (A[1] - B[1]) ** 2 + (A[2] - B[2]) ** 2)
        )
    )
    x12 = x11 * boys(1, x10)
    x13 = x11 * boys(0, x10)
    x14 = x0 * (-x12 + x13)
    x15 = -x12 * x5
    x16 = x13 * x4 + x15
    x17 = x11 * boys(2, x10)
    x18 = x17 * x5
    x19 = -x18
    x20 = x12 * x4
    x21 = x19 + x20
    x22 = x14 + x16 * x4 - x21 * x5
    x23 = x11 * boys(3, x10)
    x24 = x0 * (x17 - x23)
    x25 = x23 * x5
    x26 = -x25
    x27 = x17 * x4
    x28 = x26 + x27
    x29 = x28 * x4
    x30 = x11 * boys(4, x10)
    x31 = x30 * x5
    x32 = -x31
    x33 = x23 * x4
    x34 = x5 * (x32 + x33)
    x35 = x0 * (x12 - x17)
    x36 = x21 * x4
    x37 = x28 * x5
    x38 = x35 + x36 - x37
    x39 = x0 * (x21 + x25 - x27)
    x40 = x0 * (x16 + x18 - x20)
    x41 = -x35
    x42 = -x3 - B[0]
    x43 = x12 * x42
    x44 = x13 * x42 + x15
    x45 = x19 + x43
    x46 = x14 + x4 * x44 - x45 * x5
    x47 = x4 * x45
    x48 = x17 * x42
    x49 = x26 + x48
    x50 = x49 * x5
    x51 = x35 + x47 - x50
    x52 = x0 * (x18 - x43 + x44) + x4 * x46 + x40 - x5 * x51
    x53 = x0 * (x25 + x45 - x48)
    x54 = x4 * x51
    x55 = x4 * x49
    x56 = x23 * x42
    x57 = x32 + x56
    x58 = x5 * x57
    x59 = x24 + x55 - x58
    x60 = x5 * x59
    x61 = x39 + x53 + x54 - x60
    x62 = 2.0 * x0
    x63 = -x24
    x64 = x0 * (x23 - x30)
    x65 = x11 * boys(5, x10)
    x66 = 3.0 * x0
    x67 = da * db
    x68 = 0.09759000729485332 * x67
    x69 = -x6 - B[1]
    x70 = x12 * x69
    x71 = x17 * x7
    x72 = -x12 * x7
    x73 = x13 * x69 + x72
    x74 = x0 * (-x70 + x71 + x73)
    x75 = -x71
    x76 = x70 + x75
    x77 = x4 * x73 - x5 * x76
    x78 = x4 * x76
    x79 = x23 * x7
    x80 = -x79
    x81 = x17 * x69
    x82 = x80 + x81
    x83 = x5 * x82
    x84 = x78 - x83
    x85 = x4 * x77 - x5 * x84 + x74
    x86 = x0 * (x76 + x79 - x81)
    x87 = x4 * x84
    x88 = x4 * x82
    x89 = x30 * x7
    x90 = -x89
    x91 = x23 * x69
    x92 = x90 + x91
    x93 = x5 * x92
    x94 = x88 - x93
    x95 = x5 * x94
    x96 = x86 + x87 - x95
    x97 = x0 * (x82 + x89 - x91)
    x98 = -x65 * x7
    x99 = x30 * x69 + x98
    x100 = -x86
    x101 = -x8 - B[2]
    x102 = x101 * x12
    x103 = x17 * x9
    x104 = -x12 * x9
    x105 = x101 * x13 + x104
    x106 = x0 * (-x102 + x103 + x105)
    x107 = -x103
    x108 = x102 + x107
    x109 = x105 * x4 - x108 * x5
    x110 = x108 * x4
    x111 = x23 * x9
    x112 = -x111
    x113 = x101 * x17
    x114 = x112 + x113
    x115 = x114 * x5
    x116 = x110 - x115
    x117 = x106 + x109 * x4 - x116 * x5
    x118 = x0 * (x108 + x111 - x113)
    x119 = x116 * x4
    x120 = x114 * x4
    x121 = x30 * x9
    x122 = -x121
    x123 = x101 * x23
    x124 = x122 + x123
    x125 = x124 * x5
    x126 = x120 - x125
    x127 = x126 * x5
    x128 = x118 + x119 - x127
    x129 = x0 * (x114 + x121 - x123)
    x130 = -x65 * x9
    x131 = x101 * x30 + x130
    x132 = -x118
    x133 = -x6 - A[1]
    x134 = x12 * x133
    x135 = x13 * x133 + x72
    x136 = x0 * (-x134 + x135 + x71)
    x137 = x134 + x75
    x138 = -x137 * x5
    x139 = x135 * x4 + x138
    x140 = x133 * x17
    x141 = x140 + x80
    x142 = x141 * x4
    x143 = x133 * x23
    x144 = x143 + x90
    x145 = x144 * x5
    x146 = -x145
    x147 = x0 * (x137 - x140 + x79)
    x148 = -x147
    x149 = x137 * x4
    x150 = x141 * x5
    x151 = -x150
    x152 = x149 + x151
    x153 = x137 * x42
    x154 = x135 * x42 + x138
    x155 = x151 + x153
    x156 = x136 + x154 * x4 - x155 * x5
    x157 = x155 * x4
    x158 = x141 * x42
    x159 = x146 + x158
    x160 = x159 * x5
    x161 = x147 + x157 - x160
    x162 = x0 * (x141 - x143 + x89)
    x163 = x133 * x30 + x98
    x164 = 0.2581988897471611 * x67
    x165 = x7 * x82
    x166 = x133 * x76
    x167 = x133 * x73 + x14 - x7 * x76
    x168 = x0 * (x165 - x166 + x167 + x41)
    x169 = -x165 + x166 + x35
    x170 = x167 * x4 - x169 * x5
    x171 = x169 * x4
    x172 = x133 * x82
    x173 = x7 * x92
    x174 = x172 - x173 + x24
    x175 = x174 * x5
    x176 = x171 - x175
    x177 = x0 * (x169 - x172 + x173 + x63)
    x178 = x133 * x92 + x64 - x7 * x99
    x179 = x114 * x7
    x180 = x108 * x133
    x181 = x105 * x133 - x108 * x7
    x182 = x0 * (x179 - x180 + x181)
    x183 = -x179 + x180
    x184 = x181 * x4 - x183 * x5
    x185 = x183 * x4
    x186 = x114 * x133
    x187 = x124 * x7
    x188 = x186 - x187
    x189 = x188 * x5
    x190 = x185 - x189
    x191 = x0 * (x183 - x186 + x187)
    x192 = x124 * x133 - x131 * x7
    x193 = -x8 - A[2]
    x194 = x12 * x193
    x195 = x104 + x13 * x193
    x196 = x0 * (x103 - x194 + x195)
    x197 = x107 + x194
    x198 = -x197 * x5
    x199 = x195 * x4 + x198
    x200 = x17 * x193
    x201 = x112 + x200
    x202 = x201 * x4
    x203 = x193 * x23
    x204 = x122 + x203
    x205 = x204 * x5
    x206 = -x205
    x207 = x0 * (x111 + x197 - x200)
    x208 = -x207
    x209 = x197 * x4
    x210 = x201 * x5
    x211 = -x210
    x212 = x209 + x211
    x213 = x197 * x42
    x214 = x195 * x42 + x198
    x215 = x211 + x213
    x216 = x196 + x214 * x4 - x215 * x5
    x217 = x215 * x4
    x218 = x201 * x42
    x219 = x206 + x218
    x220 = x219 * x5
    x221 = x207 + x217 - x220
    x222 = x0 * (x121 + x201 - x203)
    x223 = x130 + x193 * x30
    x224 = x201 * x7
    x225 = x197 * x69
    x226 = -x197 * x7
    x227 = x195 * x69 + x226
    x228 = x0 * (x224 - x225 + x227)
    x229 = -x224
    x230 = x225 + x229
    x231 = x227 * x4 - x230 * x5
    x232 = x230 * x4
    x233 = x201 * x69
    x234 = x204 * x7
    x235 = -x234
    x236 = x233 + x235
    x237 = x236 * x5
    x238 = x232 - x237
    x239 = x0 * (x230 - x233 + x234)
    x240 = -x223 * x7
    x241 = x204 * x69 + x240
    x242 = x114 * x9
    x243 = x108 * x193
    x244 = x105 * x193 - x108 * x9 + x14
    x245 = x0 * (x242 - x243 + x244 + x41)
    x246 = -x242 + x243 + x35
    x247 = x244 * x4 - x246 * x5
    x248 = x246 * x4
    x249 = x114 * x193
    x250 = x124 * x9
    x251 = x24 + x249 - x250
    x252 = x251 * x5
    x253 = x248 - x252
    x254 = x0 * (x246 - x249 + x250 + x63)
    x255 = x124 * x193 - x131 * x9 + x64
    x256 = x133 * x135 - x137 * x7 + x14
    x257 = x133 * x141
    x258 = x144 * x7
    x259 = x24 + x257 - x258
    x260 = x259 * x5
    x261 = x133 * x137
    x262 = x141 * x7
    x263 = x261 - x262 + x35
    x264 = -x263 * x5
    x265 = x263 * x42
    x266 = x256 * x42 + x264
    x267 = x0 * (x256 - x261 + x262 + x41)
    x268 = -x260 + x265
    x269 = x0 * (-x257 + x258 + x263 + x63)
    x270 = x133 * x144 - x163 * x7 + x64
    x271 = 0.3333333333333333 * x67
    x272 = x174 * x7
    x273 = x133 * x169
    x274 = x133 * x167 + x136 - x169 * x7 + x74
    x275 = x0 * (x100 + x148 + x272 - x273 + x274)
    x276 = x147 - x272 + x273 + x86
    x277 = x133 * x174 + x162 - x178 * x7 + x97
    x278 = x188 * x7
    x279 = x133 * x183
    x280 = x106 + x133 * x181 - x183 * x7
    x281 = x0 * (x132 + x278 - x279 + x280)
    x282 = x118 - x278 + x279
    x283 = x129 + x133 * x188 - x192 * x7
    x284 = x133 * x195 + x226
    x285 = x133 * x201
    x286 = x235 + x285
    x287 = x286 * x5
    x288 = x133 * x197
    x289 = x229 + x288
    x290 = -x289 * x5
    x291 = x289 * x42
    x292 = x284 * x42 + x290
    x293 = x0 * (x224 + x284 - x288)
    x294 = -x287 + x291
    x295 = x0 * (x234 - x285 + x289)
    x296 = x133 * x204 + x240
    x297 = 1.732050807568877 * x271
    x298 = x236 * x7
    x299 = x133 * x230
    x300 = x133 * x227 + x196 - x230 * x7
    x301 = x0 * (x208 + x298 - x299 + x300)
    x302 = x207 - x298 + x299
    x303 = x133 * x236 + x222 - x241 * x7
    x304 = x251 * x7
    x305 = x133 * x246
    x306 = x133 * x244 - x246 * x7
    x307 = x0 * (x304 - x305 + x306)
    x308 = -x304 + x305
    x309 = x133 * x251 - x255 * x7
    x310 = x14 + x193 * x195 - x197 * x9
    x311 = x193 * x201
    x312 = x204 * x9
    x313 = x24 + x311 - x312
    x314 = x313 * x5
    x315 = x193 * x197
    x316 = x201 * x9
    x317 = x315 - x316 + x35
    x318 = -x317 * x5
    x319 = x317 * x42
    x320 = x310 * x42 + x318
    x321 = x0 * (x310 - x315 + x316 + x41)
    x322 = -x314 + x319
    x323 = x0 * (-x311 + x312 + x317 + x63)
    x324 = x193 * x204 - x223 * x9 + x64
    x325 = x313 * x7
    x326 = x317 * x69
    x327 = -x317 * x7
    x328 = x310 * x69 + x327
    x329 = x0 * (x325 - x326 + x328)
    x330 = -x325
    x331 = x326 + x330
    x332 = -x324 * x7
    x333 = x313 * x69 + x332
    x334 = x251 * x9
    x335 = x193 * x246
    x336 = x106 + x193 * x244 + x196 - x246 * x9
    x337 = x0 * (x132 + x208 + x334 - x335 + x336)
    x338 = x118 + x207 - x334 + x335
    x339 = x129 + x193 * x251 + x222 - x255 * x9
    x340 = x259 * x7
    x341 = x133 * x263
    x342 = 2.0 * x147
    x343 = x133 * x256 + 2.0 * x136 - x263 * x7
    x344 = x0 * (x340 - x341 - x342 + x343)
    x345 = -x340 + x341 + x342
    x346 = x133 * x259 + 2.0 * x162 - x270 * x7
    x347 = x133 * x274 + 2.0 * x168 + x267 - x276 * x7
    x348 = x133 * x276 + 2.0 * x177 + x269 - x277 * x7
    x349 = x133 * x280 + 2.0 * x182 - x282 * x7
    x350 = x133 * x282 + 2.0 * x191 - x283 * x7
    x351 = x286 * x7
    x352 = x133 * x289
    x353 = x133 * x284 + x196 - x289 * x7
    x354 = x0 * (x208 + x351 - x352 + x353)
    x355 = x207 - x351 + x352
    x356 = x133 * x286 + x222 - x296 * x7
    x357 = x133 * x300 + x228 + x293 - x302 * x7
    x358 = x133 * x302 + x239 + x295 - x303 * x7
    x359 = x133 * x306 + x245 - x308 * x7
    x360 = x133 * x308 + x254 - x309 * x7
    x361 = x133 * x317
    x362 = x133 * x310 + x327
    x363 = x0 * (x325 - x361 + x362)
    x364 = x330 + x361
    x365 = x133 * x313 + x332
    x366 = x133 * x328 + x321 - x331 * x7
    x367 = x133 * x331 + x323 - x333 * x7
    x368 = x133 * x336 - x338 * x7
    x369 = x133 * x338 - x339 * x7
    x370 = x313 * x9
    x371 = x193 * x317
    x372 = 2.0 * x207
    x373 = x193 * x310 + 2.0 * x196 - x317 * x9
    x374 = x0 * (x370 - x371 - x372 + x373)
    x375 = -x370 + x371 + x372
    x376 = x193 * x313 + 2.0 * x222 - x324 * x9
    x377 = -x375 * x7
    x378 = x373 * x69 + x377
    x379 = -x376 * x7
    x380 = x375 * x69 + x379
    x381 = x193 * x336 + 2.0 * x245 + x321 - x338 * x9
    x382 = x193 * x338 + 2.0 * x254 + x323 - x339 * x9
    x383 = x193 * x373 + 3.0 * x321 - x375 * x9
    x384 = x193 * x375 + 3.0 * x323 - x376 * x9

    # 45 item(s)
    result[0, 0] = numpy.sum(
        x68
        * (
            x0
            * (
                x22 * x4
                - x38 * x4
                - x38 * x5
                - 2.0 * x39
                + 2.0 * x40
                + x5 * (x24 + x29 - x34)
            )
            + x4
            * (
                x0 * (x22 - x36 + x37 + x41)
                + x4 * x52
                - x5 * x61
                + x62 * (x41 + x46 - x47 + x50)
            )
            - x5
            * (
                x0 * (-x29 + x34 + x38 + x63)
                + x4 * x61
                - x5
                * (
                    x0 * (x28 + x31 - x33)
                    + x0 * (x31 + x49 - x56)
                    + x4 * x59
                    - x5 * (x4 * x57 - x5 * (x30 * x42 - x5 * x65) + x64)
                )
                + x62 * (x51 - x55 + x58 + x63)
            )
            - x66 * (x39 - x52 + x53 + x54 - x60)
        )
    )
    result[0, 1] = numpy.sum(
        x68
        * (
            x4 * (x4 * x85 - x5 * x96 + x62 * (x77 - x78 + x83))
            - x5
            * (
                x4 * x96
                - x5 * (x4 * x94 - x5 * (x4 * x92 - x5 * x99) + x97)
                + x62 * (x84 - x88 + x93)
            )
            + x66 * (x100 + x85 - x87 + x95)
        )
    )
    result[0, 2] = numpy.sum(
        x68
        * (
            x4 * (x117 * x4 - x128 * x5 + x62 * (x109 - x110 + x115))
            - x5
            * (
                x128 * x4
                - x5 * (x126 * x4 + x129 - x5 * (x124 * x4 - x131 * x5))
                + x62 * (x116 - x120 + x125)
            )
            + x66 * (x117 - x119 + x127 + x132)
        )
    )
    result[1, 0] = numpy.sum(
        x164
        * (
            x0 * (x136 + x139 * x4 + x148 - x152 * x4 - x152 * x5 + x5 * (x142 + x146))
            + x4
            * (
                x0 * (x139 - x149 + x150)
                + x0 * (x150 - x153 + x154)
                + x156 * x4
                - x161 * x5
            )
            - x5
            * (
                x0 * (-x142 + x145 + x152)
                + x0 * (x145 + x155 - x158)
                + x161 * x4
                - x5 * (x159 * x4 + x162 - x5 * (x144 * x42 - x163 * x5))
            )
            + x62 * (x148 + x156 - x157 + x160)
        )
    )
    result[1, 1] = numpy.sum(
        x164
        * (
            x4 * (x168 + x170 * x4 - x176 * x5)
            - x5 * (x176 * x4 + x177 - x5 * (x174 * x4 - x178 * x5))
            + x62 * (x170 - x171 + x175)
        )
    )
    result[1, 2] = numpy.sum(
        x164
        * (
            x4 * (x182 + x184 * x4 - x190 * x5)
            - x5 * (x190 * x4 + x191 - x5 * (x188 * x4 - x192 * x5))
            + x62 * (x184 - x185 + x189)
        )
    )
    result[2, 0] = numpy.sum(
        x164
        * (
            x0 * (x196 + x199 * x4 + x208 - x212 * x4 - x212 * x5 + x5 * (x202 + x206))
            + x4
            * (
                x0 * (x199 - x209 + x210)
                + x0 * (x210 - x213 + x214)
                + x216 * x4
                - x221 * x5
            )
            - x5
            * (
                x0 * (-x202 + x205 + x212)
                + x0 * (x205 + x215 - x218)
                + x221 * x4
                - x5 * (x219 * x4 + x222 - x5 * (x204 * x42 - x223 * x5))
            )
            + x62 * (x208 + x216 - x217 + x220)
        )
    )
    result[2, 1] = numpy.sum(
        x164
        * (
            x4 * (x228 + x231 * x4 - x238 * x5)
            - x5 * (x238 * x4 + x239 - x5 * (x236 * x4 - x241 * x5))
            + x62 * (x231 - x232 + x237)
        )
    )
    result[2, 2] = numpy.sum(
        x164
        * (
            x4 * (x245 + x247 * x4 - x253 * x5)
            - x5 * (x253 * x4 + x254 - x5 * (x251 * x4 - x255 * x5))
            + x62 * (x247 - x248 + x252)
        )
    )
    result[3, 0] = numpy.sum(
        x271
        * (
            x0 * (x260 - x265 + x266)
            + x0 * (x256 * x4 + x260 - x263 * x4 + x264)
            + x4 * (x266 * x4 + x267 - x268 * x5)
            - x5 * (x268 * x4 + x269 - x5 * (x259 * x42 - x270 * x5))
        )
    )
    result[3, 1] = numpy.sum(
        x271 * (x275 + x4 * (x274 * x4 - x276 * x5) - x5 * (x276 * x4 - x277 * x5))
    )
    result[3, 2] = numpy.sum(
        x271 * (x281 + x4 * (x280 * x4 - x282 * x5) - x5 * (x282 * x4 - x283 * x5))
    )
    result[4, 0] = numpy.sum(
        x297
        * (
            x0 * (x287 - x291 + x292)
            + x0 * (x284 * x4 + x287 - x289 * x4 + x290)
            + x4 * (x292 * x4 + x293 - x294 * x5)
            - x5 * (x294 * x4 + x295 - x5 * (x286 * x42 - x296 * x5))
        )
    )
    result[4, 1] = numpy.sum(
        x297 * (x301 + x4 * (x300 * x4 - x302 * x5) - x5 * (x302 * x4 - x303 * x5))
    )
    result[4, 2] = numpy.sum(
        x297 * (x307 + x4 * (x306 * x4 - x308 * x5) - x5 * (x308 * x4 - x309 * x5))
    )
    result[5, 0] = numpy.sum(
        x271
        * (
            x0 * (x314 - x319 + x320)
            + x0 * (x310 * x4 + x314 - x317 * x4 + x318)
            + x4 * (x320 * x4 + x321 - x322 * x5)
            - x5 * (x322 * x4 + x323 - x5 * (x313 * x42 - x324 * x5))
        )
    )
    result[5, 1] = numpy.sum(
        x271 * (x329 + x4 * (x328 * x4 - x331 * x5) - x5 * (x331 * x4 - x333 * x5))
    )
    result[5, 2] = numpy.sum(
        x271 * (x337 + x4 * (x336 * x4 - x338 * x5) - x5 * (x338 * x4 - x339 * x5))
    )
    result[6, 0] = numpy.sum(
        x164 * (x344 + x4 * (x343 * x42 - x345 * x5) - x5 * (x345 * x42 - x346 * x5))
    )
    result[6, 1] = numpy.sum(x164 * (x347 * x4 - x348 * x5))
    result[6, 2] = numpy.sum(x164 * (x349 * x4 - x350 * x5))
    result[7, 0] = numpy.sum(
        x297 * (x354 + x4 * (x353 * x42 - x355 * x5) - x5 * (x355 * x42 - x356 * x5))
    )
    result[7, 1] = numpy.sum(x297 * (x357 * x4 - x358 * x5))
    result[7, 2] = numpy.sum(x297 * (x359 * x4 - x360 * x5))
    result[8, 0] = numpy.sum(
        x297 * (x363 + x4 * (x362 * x42 - x364 * x5) - x5 * (x364 * x42 - x365 * x5))
    )
    result[8, 1] = numpy.sum(x297 * (x366 * x4 - x367 * x5))
    result[8, 2] = numpy.sum(x297 * (x368 * x4 - x369 * x5))
    result[9, 0] = numpy.sum(
        x164 * (x374 + x4 * (x373 * x42 - x375 * x5) - x5 * (x375 * x42 - x376 * x5))
    )
    result[9, 1] = numpy.sum(x164 * (x378 * x4 - x380 * x5))
    result[9, 2] = numpy.sum(x164 * (x381 * x4 - x382 * x5))
    result[10, 0] = numpy.sum(
        x68
        * (
            x42 * (x133 * x343 + 3.0 * x267 - x345 * x7)
            - x5 * (x133 * x345 + 3.0 * x269 - x346 * x7)
        )
    )
    result[10, 1] = numpy.sum(x68 * (x133 * x347 + 3.0 * x275 + x344 - x348 * x7))
    result[10, 2] = numpy.sum(x68 * (x133 * x349 + 3.0 * x281 - x350 * x7))
    result[11, 0] = numpy.sum(
        x164
        * (
            x42 * (x133 * x353 + 2.0 * x293 - x355 * x7)
            - x5 * (x133 * x355 + 2.0 * x295 - x356 * x7)
        )
    )
    result[11, 1] = numpy.sum(x164 * (x133 * x357 + 2.0 * x301 + x354 - x358 * x7))
    result[11, 2] = numpy.sum(x164 * (x133 * x359 + 2.0 * x307 - x360 * x7))
    result[12, 0] = numpy.sum(
        x271
        * (x42 * (x133 * x362 + x321 - x364 * x7) - x5 * (x133 * x364 + x323 - x365 * x7))
    )
    result[12, 1] = numpy.sum(x271 * (x133 * x366 + x329 + x363 - x367 * x7))
    result[12, 2] = numpy.sum(x271 * (x133 * x368 + x337 - x369 * x7))
    result[13, 0] = numpy.sum(
        x164 * (x42 * (x133 * x373 + x377) - x5 * (x133 * x375 + x379))
    )
    result[13, 1] = numpy.sum(x164 * (x133 * x378 + x374 - x380 * x7))
    result[13, 2] = numpy.sum(x164 * (x133 * x381 - x382 * x7))
    result[14, 0] = numpy.sum(x68 * (x383 * x42 - x384 * x5))
    result[14, 1] = numpy.sum(x68 * (x383 * x69 - x384 * x7))
    result[14, 2] = numpy.sum(x68 * (x193 * x381 + 3.0 * x337 + x374 - x382 * x9))
    return result


def coulomb3d_42(ax, da, A, bx, db, B, R):
    """Cartesian (gd) 1-electron Coulomb integral.

    Generated code; DO NOT modify by hand!"""

    result = numpy.zeros((15, 6), dtype=float)

    x0 = ax + bx
    x1 = x0 ** (-1.0)
    x2 = -x1 * (ax * A[0] + bx * B[0])
    x3 = -x2 - A[0]
    x4 = 0.5 / (ax + bx)
    x5 = -x2 - B[0]
    x6 = -x2 - R[0]
    x7 = -x1 * (ax * A[1] + bx * B[1])
    x8 = -x7 - R[1]
    x9 = -x1 * (ax * A[2] + bx * B[2])
    x10 = -x9 - R[2]
    x11 = x0 * (x10**2 + x6**2 + x8**2)
    x12 = (
        6.283185307179586
        * x1
        * numpy.exp(
            -ax * bx * x1 * ((A[0] - B[0]) ** 2 + (A[1] - B[1]) ** 2 + (A[2] - B[2]) ** 2)
        )
    )
    x13 = x12 * boys(2, x11)
    x14 = x13 * x6
    x15 = -x14
    x16 = x12 * boys(1, x11)
    x17 = x16 * x5
    x18 = x15 + x17
    x19 = x18 * x5
    x20 = -x16 * x6
    x21 = x12 * boys(0, x11)
    x22 = x20 + x21 * x5
    x23 = x4 * (-x16 + x21)
    x24 = -x18 * x6 + x23
    x25 = x22 * x5 + x24
    x26 = x12 * boys(3, x11)
    x27 = x26 * x6
    x28 = -x27
    x29 = x13 * x5
    x30 = x28 + x29
    x31 = x30 * x6
    x32 = x4 * (-x13 + x16)
    x33 = -x32
    x34 = x31 + x33
    x35 = -x31 + x32
    x36 = x19 + x35
    x37 = x4 * (x14 - x17 + x22)
    x38 = x25 * x3 - x36 * x6 + 2.0 * x37
    x39 = x3 * x36
    x40 = x30 * x5
    x41 = x4 * (x13 - x26)
    x42 = x12 * boys(4, x11)
    x43 = x42 * x6
    x44 = -x43
    x45 = x26 * x5
    x46 = x44 + x45
    x47 = x46 * x6
    x48 = x41 - x47
    x49 = x40 + x48
    x50 = x49 * x6
    x51 = x4 * (x18 + x27 - x29)
    x52 = 2.0 * x51
    x53 = x39 - x50 + x52
    x54 = x18 * x3
    x55 = x22 * x3 + x24
    x56 = 2.0 * x4
    x57 = x56 * (x34 - x54 + x55)
    x58 = x3 * x38 + x4 * (-x19 + x25 + x34) - x53 * x6 + x57
    x59 = -x41
    x60 = x47 + x59
    x61 = x4 * (x36 - x40 + x60)
    x62 = x3 * x53
    x63 = x3 * x49
    x64 = x46 * x5
    x65 = x4 * (x26 - x42)
    x66 = x12 * boys(5, x11)
    x67 = x6 * x66
    x68 = x42 * x5
    x69 = -x67 + x68
    x70 = x6 * x69
    x71 = x65 - x70
    x72 = x64 + x71
    x73 = x6 * x72
    x74 = x4 * (x30 + x43 - x45)
    x75 = 2.0 * x74
    x76 = x63 - x73 + x75
    x77 = x6 * x76
    x78 = x3 * x30
    x79 = x35 + x54
    x80 = x56 * (x60 - x78 + x79)
    x81 = x61 + x62 - x77 + x80
    x82 = x48 + x78
    x83 = x6 * x82
    x84 = x13 * x3
    x85 = x16 * x3
    x86 = x15 + x85
    x87 = x4 * (x27 - x84 + x86)
    x88 = x3 * x79
    x89 = x20 + x21 * x3
    x90 = x3 * x55 + x37 + x4 * (x14 - x85 + x89) - x6 * x79
    x91 = -x65
    x92 = x70 + x91
    x93 = x4 * (x42 - x66)
    x94 = x12 * boys(6, x11)
    x95 = x3 * x46
    x96 = x6 * (x71 + x95)
    x97 = x26 * x3
    x98 = x28 + x84
    x99 = x4 * (x43 - x97 + x98)
    x100 = x3 * x82
    x101 = x51 - x83 + x87 + x88
    x102 = x6 * x98
    x103 = x3 * x86
    x104 = -x80
    x105 = 3.0 * x4
    x106 = da * db
    x107 = 0.009523809523809524 * x106
    x108 = 5.916079783099616 * x107
    x109 = -x7 - B[1]
    x110 = x109 * x16
    x111 = x13 * x8
    x112 = -x16 * x8
    x113 = x109 * x21 + x112
    x114 = x4 * (-x110 + x111 + x113)
    x115 = -x111
    x116 = x110 + x115
    x117 = -x116 * x6
    x118 = x113 * x3 + x117
    x119 = x116 * x3
    x120 = x26 * x8
    x121 = -x120
    x122 = x109 * x13
    x123 = x121 + x122
    x124 = x123 * x6
    x125 = -x124
    x126 = x119 + x125
    x127 = x114 + x118 * x3 - x126 * x6
    x128 = x109 * x26
    x129 = x42 * x8
    x130 = x4 * (x123 - x128 + x129)
    x131 = x123 * x3
    x132 = -x129
    x133 = x128 + x132
    x134 = x133 * x6
    x135 = -x134
    x136 = x131 + x135
    x137 = x136 * x3
    x138 = x133 * x3
    x139 = x66 * x8
    x140 = -x139
    x141 = x109 * x42
    x142 = x140 + x141
    x143 = x142 * x6
    x144 = -x143
    x145 = x6 * (x138 + x144)
    x146 = x4 * (x116 + x120 - x122)
    x147 = x126 * x3
    x148 = x136 * x6
    x149 = x146 + x147 - x148
    x150 = x4 * (x126 - x131 + x134)
    x151 = x4 * (x118 - x119 + x124)
    x152 = -x146
    x153 = x116 * x5
    x154 = x113 * x5 + x117
    x155 = x125 + x153
    x156 = x114 + x154 * x3 - x155 * x6
    x157 = x155 * x3
    x158 = x123 * x5
    x159 = x135 + x158
    x160 = x159 * x6
    x161 = x146 + x157 - x160
    x162 = x151 + x156 * x3 - x161 * x6 + x4 * (x124 - x153 + x154)
    x163 = x4 * (x134 + x155 - x158)
    x164 = x161 * x3
    x165 = x159 * x3
    x166 = x133 * x5
    x167 = x144 + x166
    x168 = x167 * x6
    x169 = x130 + x165 - x168
    x170 = x169 * x6
    x171 = x150 + x163 + x164 - x170
    x172 = -x130
    x173 = x4 * (x133 + x139 - x141)
    x174 = -x8 * x94
    x175 = x109 * x66 + x174
    x176 = 10.2469507659596 * x107
    x177 = -x9 - B[2]
    x178 = x16 * x177
    x179 = x10 * x13
    x180 = -x10 * x16
    x181 = x177 * x21 + x180
    x182 = x4 * (-x178 + x179 + x181)
    x183 = -x179
    x184 = x178 + x183
    x185 = -x184 * x6
    x186 = x181 * x3 + x185
    x187 = x184 * x3
    x188 = x10 * x26
    x189 = -x188
    x190 = x13 * x177
    x191 = x189 + x190
    x192 = x191 * x6
    x193 = -x192
    x194 = x187 + x193
    x195 = x182 + x186 * x3 - x194 * x6
    x196 = x177 * x26
    x197 = x10 * x42
    x198 = x4 * (x191 - x196 + x197)
    x199 = x191 * x3
    x200 = -x197
    x201 = x196 + x200
    x202 = x201 * x6
    x203 = -x202
    x204 = x199 + x203
    x205 = x204 * x3
    x206 = x201 * x3
    x207 = x10 * x66
    x208 = -x207
    x209 = x177 * x42
    x210 = x208 + x209
    x211 = x210 * x6
    x212 = -x211
    x213 = x6 * (x206 + x212)
    x214 = x4 * (x184 + x188 - x190)
    x215 = x194 * x3
    x216 = x204 * x6
    x217 = x214 + x215 - x216
    x218 = x4 * (x194 - x199 + x202)
    x219 = x4 * (x186 - x187 + x192)
    x220 = -x214
    x221 = x184 * x5
    x222 = x181 * x5 + x185
    x223 = x193 + x221
    x224 = x182 + x222 * x3 - x223 * x6
    x225 = x223 * x3
    x226 = x191 * x5
    x227 = x203 + x226
    x228 = x227 * x6
    x229 = x214 + x225 - x228
    x230 = x219 + x224 * x3 - x229 * x6 + x4 * (x192 - x221 + x222)
    x231 = x4 * (x202 + x223 - x226)
    x232 = x229 * x3
    x233 = x227 * x3
    x234 = x201 * x5
    x235 = x212 + x234
    x236 = x235 * x6
    x237 = x198 + x233 - x236
    x238 = x237 * x6
    x239 = x218 + x231 + x232 - x238
    x240 = -x198
    x241 = x4 * (x201 + x207 - x209)
    x242 = -x10 * x94
    x243 = x177 * x66 + x242
    x244 = x109 * x116
    x245 = -x116 * x8 + x23
    x246 = x109 * x113 + x245
    x247 = x123 * x8
    x248 = x247 + x33
    x249 = x4 * (-x244 + x246 + x248)
    x250 = -x247 + x32
    x251 = x244 + x250
    x252 = x246 * x3 - x251 * x6
    x253 = x251 * x3
    x254 = x109 * x123
    x255 = x133 * x8
    x256 = -x255 + x41
    x257 = x254 + x256
    x258 = x257 * x6
    x259 = x253 - x258
    x260 = x249 + x252 * x3 - x259 * x6
    x261 = x255 + x59
    x262 = x4 * (x251 - x254 + x261)
    x263 = x259 * x3
    x264 = x257 * x3
    x265 = x109 * x133
    x266 = x142 * x8
    x267 = -x266 + x65
    x268 = x265 + x267
    x269 = x268 * x6
    x270 = x264 - x269
    x271 = x270 * x6
    x272 = x262 + x263 - x271
    x273 = x266 + x91
    x274 = x4 * (x257 - x265 + x273)
    x275 = -x175 * x8 + x93
    x276 = x109 * x142 + x275
    x277 = -x262
    x278 = x191 * x8
    x279 = x109 * x184
    x280 = -x184 * x8
    x281 = x109 * x181 + x280
    x282 = x4 * (x278 - x279 + x281)
    x283 = -x278
    x284 = x279 + x283
    x285 = x281 * x3 - x284 * x6
    x286 = x284 * x3
    x287 = x109 * x191
    x288 = x201 * x8
    x289 = -x288
    x290 = x287 + x289
    x291 = x290 * x6
    x292 = x286 - x291
    x293 = x282 + x285 * x3 - x292 * x6
    x294 = x4 * (x284 - x287 + x288)
    x295 = x292 * x3
    x296 = x290 * x3
    x297 = x109 * x201
    x298 = x210 * x8
    x299 = -x298
    x300 = x297 + x299
    x301 = x300 * x6
    x302 = x296 - x301
    x303 = x302 * x6
    x304 = x294 + x295 - x303
    x305 = x4 * (x290 - x297 + x298)
    x306 = -x243 * x8
    x307 = x109 * x210 + x306
    x308 = -x294
    x309 = x177 * x184
    x310 = -x10 * x184 + x23
    x311 = x177 * x181 + x310
    x312 = x10 * x191
    x313 = x312 + x33
    x314 = x4 * (-x309 + x311 + x313)
    x315 = -x312 + x32
    x316 = x309 + x315
    x317 = x3 * x311 - x316 * x6
    x318 = x3 * x316
    x319 = x177 * x191
    x320 = x10 * x201
    x321 = -x320 + x41
    x322 = x319 + x321
    x323 = x322 * x6
    x324 = x318 - x323
    x325 = x3 * x317 + x314 - x324 * x6
    x326 = x320 + x59
    x327 = x4 * (x316 - x319 + x326)
    x328 = x3 * x324
    x329 = x3 * x322
    x330 = x177 * x201
    x331 = x10 * x210
    x332 = -x331 + x65
    x333 = x330 + x332
    x334 = x333 * x6
    x335 = x329 - x334
    x336 = x335 * x6
    x337 = x327 + x328 - x336
    x338 = x331 + x91
    x339 = x4 * (x322 - x330 + x338)
    x340 = -x10 * x243 + x93
    x341 = x177 * x210 + x340
    x342 = -x327
    x343 = -x7 - A[1]
    x344 = x16 * x343
    x345 = x115 + x344
    x346 = x345 * x5
    x347 = x13 * x343
    x348 = x121 + x347
    x349 = x348 * x6
    x350 = -x349
    x351 = x346 + x350
    x352 = x351 * x5
    x353 = x112 + x21 * x343
    x354 = -x345 * x6
    x355 = x353 * x5 + x354
    x356 = x4 * (x111 - x344 + x353)
    x357 = -x351 * x6 + x356
    x358 = x355 * x5 + x357
    x359 = x348 * x5
    x360 = x26 * x343
    x361 = x132 + x360
    x362 = x361 * x6
    x363 = x359 - x362
    x364 = x363 * x6
    x365 = x4 * (x120 + x345 - x347)
    x366 = -x365
    x367 = x364 + x366
    x368 = -x364 + x365
    x369 = x352 + x368
    x370 = x4 * (-x346 + x349 + x355)
    x371 = x3 * x358 - x369 * x6 + 2.0 * x370
    x372 = x3 * x369
    x373 = x363 * x5
    x374 = x4 * (x129 + x348 - x360)
    x375 = x361 * x5
    x376 = x343 * x42
    x377 = x140 + x376
    x378 = x377 * x6
    x379 = x375 - x378
    x380 = x379 * x6
    x381 = x374 - x380
    x382 = x373 + x381
    x383 = x382 * x6
    x384 = x4 * (x351 - x359 + x362)
    x385 = 2.0 * x384
    x386 = x372 - x383 + x385
    x387 = x3 * x351
    x388 = x3 * x355 + x357
    x389 = -x374
    x390 = x380 + x389
    x391 = x4 * (x139 + x361 - x376)
    x392 = x174 + x343 * x66
    x393 = x3 * x363
    x394 = x368 + x387
    x395 = x3 * x345
    x396 = 0.06666666666666667 * x106
    x397 = 2.23606797749979 * x396
    x398 = x116 * x343
    x399 = x113 * x343 + x245
    x400 = x4 * (x248 - x398 + x399)
    x401 = x250 + x398
    x402 = -x401 * x6
    x403 = x3 * x399 + x402
    x404 = x123 * x343
    x405 = x256 + x404
    x406 = x3 * x405
    x407 = x133 * x343
    x408 = x267 + x407
    x409 = x408 * x6
    x410 = -x409
    x411 = x4 * (x261 + x401 - x404)
    x412 = -x411
    x413 = x3 * x401
    x414 = x405 * x6
    x415 = -x414
    x416 = x413 + x415
    x417 = x401 * x5
    x418 = x399 * x5 + x402
    x419 = x415 + x417
    x420 = x3 * x418 + x400 - x419 * x6
    x421 = x3 * x419
    x422 = x405 * x5
    x423 = x410 + x422
    x424 = x423 * x6
    x425 = x411 + x421 - x424
    x426 = x4 * (x273 + x405 - x407)
    x427 = x142 * x343 + x275
    x428 = 3.872983346207417 * x396
    x429 = x184 * x343
    x430 = x181 * x343 + x280
    x431 = x4 * (x278 - x429 + x430)
    x432 = x283 + x429
    x433 = -x432 * x6
    x434 = x3 * x430 + x433
    x435 = x191 * x343
    x436 = x289 + x435
    x437 = x3 * x436
    x438 = x201 * x343
    x439 = x299 + x438
    x440 = x439 * x6
    x441 = -x440
    x442 = x4 * (x288 + x432 - x435)
    x443 = -x442
    x444 = x3 * x432
    x445 = x436 * x6
    x446 = -x445
    x447 = x444 + x446
    x448 = x432 * x5
    x449 = x430 * x5 + x433
    x450 = x446 + x448
    x451 = x3 * x449 + x431 - x450 * x6
    x452 = x3 * x450
    x453 = x436 * x5
    x454 = x441 + x453
    x455 = x454 * x6
    x456 = x442 + x452 - x455
    x457 = x4 * (x298 + x436 - x438)
    x458 = x210 * x343 + x306
    x459 = x257 * x8
    x460 = x251 * x343
    x461 = 2.0 * x146
    x462 = 2.0 * x114 + x246 * x343 - x251 * x8
    x463 = x4 * (x459 - x460 - x461 + x462)
    x464 = -x459 + x460 + x461
    x465 = x3 * x462 - x464 * x6
    x466 = x3 * x464
    x467 = x257 * x343
    x468 = x268 * x8
    x469 = 2.0 * x130
    x470 = x467 - x468 + x469
    x471 = x470 * x6
    x472 = x466 - x471
    x473 = x4 * (x464 - x467 + x468 - x469)
    x474 = 2.0 * x173 + x268 * x343 - x276 * x8
    x475 = x290 * x8
    x476 = x284 * x343
    x477 = x182 + x281 * x343 - x284 * x8
    x478 = x4 * (x220 + x475 - x476 + x477)
    x479 = x214 - x475 + x476
    x480 = x3 * x477 - x479 * x6
    x481 = x3 * x479
    x482 = x290 * x343
    x483 = x300 * x8
    x484 = x198 + x482 - x483
    x485 = x484 * x6
    x486 = x481 - x485
    x487 = x4 * (x240 + x479 - x482 + x483)
    x488 = x241 + x300 * x343 - x307 * x8
    x489 = x322 * x8
    x490 = x316 * x343
    x491 = x311 * x343 - x316 * x8
    x492 = x4 * (x489 - x490 + x491)
    x493 = -x489 + x490
    x494 = x3 * x491 - x493 * x6
    x495 = x3 * x493
    x496 = x322 * x343
    x497 = x333 * x8
    x498 = x496 - x497
    x499 = x498 * x6
    x500 = x495 - x499
    x501 = x4 * (x493 - x496 + x497)
    x502 = x333 * x343 - x341 * x8
    x503 = -x9 - A[2]
    x504 = x16 * x503
    x505 = x183 + x504
    x506 = x5 * x505
    x507 = x13 * x503
    x508 = x189 + x507
    x509 = x508 * x6
    x510 = -x509
    x511 = x506 + x510
    x512 = x5 * x511
    x513 = x180 + x21 * x503
    x514 = -x505 * x6
    x515 = x5 * x513 + x514
    x516 = x4 * (x179 - x504 + x513)
    x517 = -x511 * x6 + x516
    x518 = x5 * x515 + x517
    x519 = x5 * x508
    x520 = x26 * x503
    x521 = x200 + x520
    x522 = x521 * x6
    x523 = x519 - x522
    x524 = x523 * x6
    x525 = x4 * (x188 + x505 - x507)
    x526 = -x525
    x527 = x524 + x526
    x528 = -x524 + x525
    x529 = x512 + x528
    x530 = x4 * (-x506 + x509 + x515)
    x531 = x3 * x518 - x529 * x6 + 2.0 * x530
    x532 = x3 * x529
    x533 = x5 * x523
    x534 = x4 * (x197 + x508 - x520)
    x535 = x5 * x521
    x536 = x42 * x503
    x537 = x208 + x536
    x538 = x537 * x6
    x539 = x535 - x538
    x540 = x539 * x6
    x541 = x534 - x540
    x542 = x533 + x541
    x543 = x542 * x6
    x544 = x4 * (x511 - x519 + x522)
    x545 = 2.0 * x544
    x546 = x532 - x543 + x545
    x547 = x3 * x511
    x548 = x3 * x515 + x517
    x549 = -x534
    x550 = x540 + x549
    x551 = x4 * (x207 + x521 - x536)
    x552 = x242 + x503 * x66
    x553 = x3 * x523
    x554 = x528 + x547
    x555 = x3 * x505
    x556 = x508 * x8
    x557 = x109 * x505
    x558 = -x505 * x8
    x559 = x109 * x513 + x558
    x560 = x4 * (x556 - x557 + x559)
    x561 = -x556
    x562 = x557 + x561
    x563 = -x562 * x6
    x564 = x3 * x559 + x563
    x565 = x109 * x508
    x566 = x521 * x8
    x567 = -x566
    x568 = x565 + x567
    x569 = x3 * x568
    x570 = x109 * x521
    x571 = x537 * x8
    x572 = -x571
    x573 = x570 + x572
    x574 = x573 * x6
    x575 = -x574
    x576 = x4 * (x562 - x565 + x566)
    x577 = -x576
    x578 = x3 * x562
    x579 = x568 * x6
    x580 = -x579
    x581 = x578 + x580
    x582 = x5 * x562
    x583 = x5 * x559 + x563
    x584 = x580 + x582
    x585 = x3 * x583 + x560 - x584 * x6
    x586 = x3 * x584
    x587 = x5 * x568
    x588 = x575 + x587
    x589 = x588 * x6
    x590 = x576 + x586 - x589
    x591 = x4 * (x568 - x570 + x571)
    x592 = -x552 * x8
    x593 = x109 * x537 + x592
    x594 = x184 * x503
    x595 = x181 * x503 + x310
    x596 = x4 * (x313 - x594 + x595)
    x597 = x315 + x594
    x598 = -x597 * x6
    x599 = x3 * x595 + x598
    x600 = x191 * x503
    x601 = x321 + x600
    x602 = x3 * x601
    x603 = x201 * x503
    x604 = x332 + x603
    x605 = x6 * x604
    x606 = -x605
    x607 = x4 * (x326 + x597 - x600)
    x608 = -x607
    x609 = x3 * x597
    x610 = x6 * x601
    x611 = -x610
    x612 = x609 + x611
    x613 = x5 * x597
    x614 = x5 * x595 + x598
    x615 = x611 + x613
    x616 = x3 * x614 + x596 - x6 * x615
    x617 = x3 * x615
    x618 = x5 * x601
    x619 = x606 + x618
    x620 = x6 * x619
    x621 = x607 + x617 - x620
    x622 = x4 * (x338 + x601 - x603)
    x623 = x210 * x503 + x340
    x624 = x109 * x562
    x625 = x516 - x562 * x8
    x626 = x109 * x559 + x625
    x627 = x568 * x8
    x628 = x526 + x627
    x629 = x4 * (-x624 + x626 + x628)
    x630 = x525 - x627
    x631 = x624 + x630
    x632 = x3 * x626 - x6 * x631
    x633 = x3 * x631
    x634 = x109 * x568
    x635 = x573 * x8
    x636 = x534 - x635
    x637 = x634 + x636
    x638 = x6 * x637
    x639 = x633 - x638
    x640 = x549 + x635
    x641 = x4 * (x631 - x634 + x640)
    x642 = x551 - x593 * x8
    x643 = x109 * x573 + x642
    x644 = x601 * x8
    x645 = x109 * x597
    x646 = -x597 * x8
    x647 = x109 * x595 + x646
    x648 = x4 * (x644 - x645 + x647)
    x649 = -x644
    x650 = x645 + x649
    x651 = x3 * x647 - x6 * x650
    x652 = x3 * x650
    x653 = x109 * x601
    x654 = x604 * x8
    x655 = -x654
    x656 = x653 + x655
    x657 = x6 * x656
    x658 = x652 - x657
    x659 = x4 * (x650 - x653 + x654)
    x660 = -x623 * x8
    x661 = x109 * x604 + x660
    x662 = x10 * x322
    x663 = x316 * x503
    x664 = 2.0 * x214
    x665 = -x10 * x316 + 2.0 * x182 + x311 * x503
    x666 = x4 * (x662 - x663 - x664 + x665)
    x667 = -x662 + x663 + x664
    x668 = x3 * x665 - x6 * x667
    x669 = x3 * x667
    x670 = x322 * x503
    x671 = x10 * x333
    x672 = 2.0 * x198
    x673 = x670 - x671 + x672
    x674 = x6 * x673
    x675 = x669 - x674
    x676 = x4 * (x667 - x670 + x671 - x672)
    x677 = -x10 * x341 + 2.0 * x241 + x333 * x503
    x678 = x343 * x345
    x679 = x348 * x8
    x680 = x32 + x678 - x679
    x681 = x5 * x680
    x682 = x343 * x348
    x683 = x361 * x8
    x684 = x41 + x682 - x683
    x685 = x6 * x684
    x686 = x681 - x685
    x687 = x5 * x686
    x688 = x23 + x343 * x353 - x345 * x8
    x689 = x5 * x688 - x6 * x680
    x690 = x4 * (x33 - x678 + x679 + x688)
    x691 = -x6 * x686 + x690
    x692 = x5 * x689 + x691
    x693 = x5 * x684
    x694 = x343 * x361
    x695 = x377 * x8
    x696 = x65 + x694 - x695
    x697 = x6 * x696
    x698 = x693 - x697
    x699 = x6 * x698
    x700 = x4 * (x59 + x680 - x682 + x683)
    x701 = -x700
    x702 = x699 + x701
    x703 = x687 - x699 + x700
    x704 = x4 * (x684 - x694 + x695 + x91)
    x705 = x343 * x377 - x392 * x8 + x93
    x706 = 1.732050807568877
    x707 = 0.1111111111111111 * x106 * x706
    x708 = x114 + x343 * x399 + x356 - x401 * x8
    x709 = x343 * x405
    x710 = x408 * x8
    x711 = x130 + x374 + x709 - x710
    x712 = x6 * x711
    x713 = x343 * x401
    x714 = x405 * x8
    x715 = x146 + x365 + x713 - x714
    x716 = -x6 * x715
    x717 = x5 * x715
    x718 = x5 * x708 + x716
    x719 = x4 * (x152 + x366 + x708 - x713 + x714)
    x720 = -x712 + x717
    x721 = x4 * (x172 + x389 - x709 + x710 + x715)
    x722 = x173 + x343 * x408 + x391 - x427 * x8
    x723 = 0.3333333333333333 * x106
    x724 = x182 + x343 * x430 - x432 * x8
    x725 = x343 * x436
    x726 = x439 * x8
    x727 = x198 + x725 - x726
    x728 = x6 * x727
    x729 = x343 * x432
    x730 = x436 * x8
    x731 = x214 + x729 - x730
    x732 = -x6 * x731
    x733 = x5 * x731
    x734 = x5 * x724 + x732
    x735 = x4 * (x220 + x724 - x729 + x730)
    x736 = -x728 + x733
    x737 = x4 * (x240 - x725 + x726 + x731)
    x738 = x241 + x343 * x439 - x458 * x8
    x739 = x470 * x8
    x740 = x343 * x464
    x741 = 2.0 * x411
    x742 = -x741
    x743 = 2.0 * x400
    x744 = x249 + x343 * x462 - x464 * x8 + x743
    x745 = x4 * (x277 + x739 - x740 + x742 + x744)
    x746 = x262 - x739 + x740 + x741
    x747 = 2.0 * x426
    x748 = x274 + x343 * x470 - x474 * x8 + x747
    x749 = x484 * x8
    x750 = x343 * x479
    x751 = x282 + x343 * x477 + x431 - x479 * x8
    x752 = x4 * (x308 + x443 + x749 - x750 + x751)
    x753 = x294 + x442 - x749 + x750
    x754 = x305 + x343 * x484 + x457 - x488 * x8
    x755 = x498 * x8
    x756 = x343 * x493
    x757 = x314 + x343 * x491 - x493 * x8
    x758 = x4 * (x342 + x755 - x756 + x757)
    x759 = x327 - x755 + x756
    x760 = x339 + x343 * x498 - x502 * x8
    x761 = x343 * x505
    x762 = x561 + x761
    x763 = x5 * x762
    x764 = x343 * x508
    x765 = x567 + x764
    x766 = x6 * x765
    x767 = x763 - x766
    x768 = x5 * x767
    x769 = x343 * x513 + x558
    x770 = x5 * x769 - x6 * x762
    x771 = x4 * (x556 - x761 + x769)
    x772 = -x6 * x767 + x771
    x773 = x5 * x770 + x772
    x774 = x5 * x765
    x775 = x343 * x521
    x776 = x572 + x775
    x777 = x6 * x776
    x778 = x774 - x777
    x779 = x6 * x778
    x780 = x4 * (x566 + x762 - x764)
    x781 = -x780
    x782 = x779 + x781
    x783 = x768 - x779 + x780
    x784 = x4 * (x571 + x765 - x775)
    x785 = x343 * x537 + x592
    x786 = x343 * x559 + x625
    x787 = x343 * x568
    x788 = x636 + x787
    x789 = x6 * x788
    x790 = x343 * x562
    x791 = x630 + x790
    x792 = -x6 * x791
    x793 = x5 * x791
    x794 = x5 * x786 + x792
    x795 = x4 * (x628 + x786 - x790)
    x796 = -x789 + x793
    x797 = x4 * (x640 - x787 + x791)
    x798 = x343 * x573 + x642
    x799 = x706 * x723
    x800 = x343 * x595 + x646
    x801 = x343 * x601
    x802 = x655 + x801
    x803 = x6 * x802
    x804 = x343 * x597
    x805 = x649 + x804
    x806 = -x6 * x805
    x807 = x5 * x805
    x808 = x5 * x800 + x806
    x809 = x4 * (x644 + x800 - x804)
    x810 = -x803 + x807
    x811 = x4 * (x654 - x801 + x805)
    x812 = x343 * x604 + x660
    x813 = x637 * x8
    x814 = x343 * x631
    x815 = 2.0 * x576
    x816 = x343 * x626 + 2.0 * x560 - x631 * x8
    x817 = x4 * (x813 - x814 - x815 + x816)
    x818 = -x813 + x814 + x815
    x819 = x343 * x637 + 2.0 * x591 - x643 * x8
    x820 = x656 * x8
    x821 = x343 * x650
    x822 = x343 * x647 + x596 - x650 * x8
    x823 = x4 * (x608 + x820 - x821 + x822)
    x824 = x607 - x820 + x821
    x825 = x343 * x656 + x622 - x661 * x8
    x826 = x673 * x8
    x827 = x343 * x667
    x828 = x343 * x665 - x667 * x8
    x829 = x4 * (x826 - x827 + x828)
    x830 = -x826 + x827
    x831 = x343 * x673 - x677 * x8
    x832 = x503 * x505
    x833 = x10 * x508
    x834 = x32 + x832 - x833
    x835 = x5 * x834
    x836 = x503 * x508
    x837 = x10 * x521
    x838 = x41 + x836 - x837
    x839 = x6 * x838
    x840 = x835 - x839
    x841 = x5 * x840
    x842 = -x10 * x505 + x23 + x503 * x513
    x843 = x5 * x842 - x6 * x834
    x844 = x4 * (x33 - x832 + x833 + x842)
    x845 = -x6 * x840 + x844
    x846 = x5 * x843 + x845
    x847 = x5 * x838
    x848 = x503 * x521
    x849 = x10 * x537
    x850 = x65 + x848 - x849
    x851 = x6 * x850
    x852 = x847 - x851
    x853 = x6 * x852
    x854 = x4 * (x59 + x834 - x836 + x837)
    x855 = -x854
    x856 = x853 + x855
    x857 = x841 - x853 + x854
    x858 = x4 * (x838 - x848 + x849 + x91)
    x859 = -x10 * x552 + x503 * x537 + x93
    x860 = -x8 * x834
    x861 = x109 * x842 + x860
    x862 = x109 * x838
    x863 = x8 * x850
    x864 = -x863
    x865 = x862 + x864
    x866 = x6 * x865
    x867 = x109 * x834
    x868 = x8 * x838
    x869 = -x868
    x870 = x867 + x869
    x871 = -x6 * x870
    x872 = x5 * x870
    x873 = x5 * x861 + x871
    x874 = x4 * (x861 - x867 + x868)
    x875 = -x866 + x872
    x876 = x4 * (-x862 + x863 + x870)
    x877 = -x8 * x859
    x878 = x109 * x850 + x877
    x879 = -x10 * x597 + x182 + x503 * x595 + x516
    x880 = x503 * x601
    x881 = x10 * x604
    x882 = x198 + x534 + x880 - x881
    x883 = x6 * x882
    x884 = x503 * x597
    x885 = x10 * x601
    x886 = x214 + x525 + x884 - x885
    x887 = -x6 * x886
    x888 = x5 * x886
    x889 = x5 * x879 + x887
    x890 = x4 * (x220 + x526 + x879 - x884 + x885)
    x891 = -x883 + x888
    x892 = x4 * (x240 + x549 - x880 + x881 + x886)
    x893 = -x10 * x623 + x241 + x503 * x604 + x551
    x894 = x109 * x870
    x895 = -x8 * x870 + x844
    x896 = x109 * x861 + x895
    x897 = x8 * x865
    x898 = x855 + x897
    x899 = x4 * (-x894 + x896 + x898)
    x900 = x854 - x897
    x901 = x894 + x900
    x902 = -x8 * x878 + x858
    x903 = x109 * x865 + x902
    x904 = x8 * x882
    x905 = x109 * x886
    x906 = -x8 * x886
    x907 = x109 * x879 + x906
    x908 = x4 * (x904 - x905 + x907)
    x909 = -x904
    x910 = x905 + x909
    x911 = -x8 * x893
    x912 = x109 * x882 + x911
    x913 = x10 * x673
    x914 = x503 * x667
    x915 = 2.0 * x607
    x916 = -x915
    x917 = 2.0 * x596
    x918 = -x10 * x667 + x314 + x503 * x665 + x917
    x919 = x4 * (x342 + x913 - x914 + x916 + x918)
    x920 = x327 - x913 + x914 + x915
    x921 = 2.0 * x622
    x922 = -x10 * x677 + x339 + x503 * x673 + x921
    x923 = x684 * x8
    x924 = x343 * x680
    x925 = 2.0 * x365
    x926 = x343 * x688 + 2.0 * x356 - x680 * x8
    x927 = x4 * (x923 - x924 - x925 + x926)
    x928 = -x923 + x924 + x925
    x929 = x5 * x926 - x6 * x928
    x930 = x5 * x928
    x931 = x343 * x684
    x932 = x696 * x8
    x933 = 2.0 * x374
    x934 = x931 - x932 + x933
    x935 = x6 * x934
    x936 = x930 - x935
    x937 = x4 * (x928 - x931 + x932 - x933)
    x938 = x343 * x696 + 2.0 * x391 - x705 * x8
    x939 = x711 * x8
    x940 = x343 * x715
    x941 = x343 * x708 + x690 - x715 * x8 + x743
    x942 = x4 * (x701 + x742 + x939 - x940 + x941)
    x943 = x700 + x741 - x939 + x940
    x944 = x343 * x711 + x704 - x722 * x8 + x747
    x945 = x727 * x8
    x946 = x343 * x731
    x947 = 2.0 * x442
    x948 = x343 * x724 + 2.0 * x431 - x731 * x8
    x949 = x4 * (x945 - x946 - x947 + x948)
    x950 = -x945 + x946 + x947
    x951 = x343 * x727 + 2.0 * x457 - x738 * x8
    x952 = x343 * x744 + 2.0 * x463 + 2.0 * x719 - x746 * x8
    x953 = x343 * x746 + 2.0 * x473 + 2.0 * x721 - x748 * x8
    x954 = x343 * x751 + 2.0 * x478 + x735 - x753 * x8
    x955 = x343 * x753 + 2.0 * x487 + x737 - x754 * x8
    x956 = x343 * x757 + 2.0 * x492 - x759 * x8
    x957 = x343 * x759 + 2.0 * x501 - x760 * x8
    x958 = x765 * x8
    x959 = x343 * x762
    x960 = x343 * x769 + x516 - x762 * x8
    x961 = x4 * (x526 + x958 - x959 + x960)
    x962 = x525 - x958 + x959
    x963 = x5 * x960 - x6 * x962
    x964 = x5 * x962
    x965 = x343 * x765
    x966 = x776 * x8
    x967 = x534 + x965 - x966
    x968 = x6 * x967
    x969 = x964 - x968
    x970 = x4 * (x549 + x962 - x965 + x966)
    x971 = x343 * x776 + x551 - x785 * x8
    x972 = x788 * x8
    x973 = x343 * x791
    x974 = x343 * x786 + x560 + x771 - x791 * x8
    x975 = x4 * (x577 + x781 + x972 - x973 + x974)
    x976 = x576 + x780 - x972 + x973
    x977 = x343 * x788 + x591 + x784 - x798 * x8
    x978 = x8 * x802
    x979 = x343 * x805
    x980 = x343 * x800 + x596 - x8 * x805
    x981 = x4 * (x608 + x978 - x979 + x980)
    x982 = x607 - x978 + x979
    x983 = x343 * x802 + x622 - x8 * x812
    x984 = 2.0 * x795
    x985 = x343 * x816 + x629 - x8 * x818 + x984
    x986 = 2.0 * x797
    x987 = x343 * x818 + x641 - x8 * x819 + x986
    x988 = x343 * x822 + x648 - x8 * x824 + x809
    x989 = x343 * x824 + x659 - x8 * x825 + x811
    x990 = x343 * x828 + x666 - x8 * x830
    x991 = x343 * x830 + x676 - x8 * x831
    x992 = x343 * x834
    x993 = x343 * x842 + x860
    x994 = x4 * (x868 - x992 + x993)
    x995 = x869 + x992
    x996 = x5 * x993 - x6 * x995
    x997 = x5 * x995
    x998 = x343 * x838
    x999 = x864 + x998
    x1000 = x6 * x999
    x1001 = -x1000 + x997
    x1002 = x4 * (x863 + x995 - x998)
    x1003 = x343 * x850 + x877
    x1004 = x343 * x870
    x1005 = x343 * x861 + x895
    x1006 = x4 * (-x1004 + x1005 + x898)
    x1007 = x1004 + x900
    x1008 = x343 * x865 + x902
    x1009 = x343 * x886
    x1010 = x343 * x879 + x906
    x1011 = x4 * (-x1009 + x1010 + x904)
    x1012 = x1009 + x909
    x1013 = x343 * x882 + x911
    x1014 = x343 * x896 - x8 * x901 + 2.0 * x874
    x1015 = x343 * x901 - x8 * x903 + 2.0 * x876
    x1016 = x343 * x907 - x8 * x910 + x890
    x1017 = x343 * x910 - x8 * x912 + x892
    x1018 = x343 * x918 - x8 * x920
    x1019 = x343 * x920 - x8 * x922
    x1020 = x10 * x838
    x1021 = x503 * x834
    x1022 = 2.0 * x525
    x1023 = -x10 * x834 + x503 * x842 + 2.0 * x516
    x1024 = x4 * (x1020 - x1021 - x1022 + x1023)
    x1025 = -x1020 + x1021 + x1022
    x1026 = x1023 * x5 - x1025 * x6
    x1027 = x1025 * x5
    x1028 = x503 * x838
    x1029 = x10 * x850
    x1030 = 2.0 * x534
    x1031 = x1028 - x1029 + x1030
    x1032 = x1031 * x6
    x1033 = x1027 - x1032
    x1034 = x4 * (x1025 - x1028 + x1029 - x1030)
    x1035 = -x10 * x859 + x503 * x850 + 2.0 * x551
    x1036 = x1031 * x8
    x1037 = x1025 * x109
    x1038 = -x1025 * x8
    x1039 = x1023 * x109 + x1038
    x1040 = x4 * (x1036 - x1037 + x1039)
    x1041 = -x1036
    x1042 = x1037 + x1041
    x1043 = -x1035 * x8
    x1044 = x1031 * x109 + x1043
    x1045 = x10 * x882
    x1046 = x503 * x886
    x1047 = -x10 * x886 + x503 * x879 + x844 + x917
    x1048 = x4 * (x1045 - x1046 + x1047 + x855 + x916)
    x1049 = -x1045 + x1046 + x854 + x915
    x1050 = -x10 * x893 + x503 * x882 + x858 + x921
    x1051 = x1024 - x1042 * x8
    x1052 = x1039 * x109 + x1051
    x1053 = x1034 - x1044 * x8
    x1054 = x1042 * x109 + x1053
    x1055 = -x1049 * x8
    x1056 = x1047 * x109 + x1055
    x1057 = -x1050 * x8
    x1058 = x1049 * x109 + x1057
    x1059 = -x10 * x920 + x503 * x918 + 2.0 * x666 + 2.0 * x890
    x1060 = -x10 * x922 + x503 * x920 + 2.0 * x676 + 2.0 * x892
    x1061 = x8 * x934
    x1062 = x343 * x928
    x1063 = 3.0 * x700
    x1064 = x343 * x926 + 3.0 * x690 - x8 * x928
    x1065 = -x1061 + x1062 + x1063
    x1066 = x8 * x967
    x1067 = x343 * x962
    x1068 = 2.0 * x780
    x1069 = x343 * x960 + 2.0 * x771 - x8 * x962
    x1070 = -x1066 + x1067 + x1068
    x1071 = x8 * x999
    x1072 = x343 * x995
    x1073 = x343 * x993 - x8 * x995 + x844
    x1074 = -x1071 + x1072 + x854
    x1075 = x1025 * x343
    x1076 = x1023 * x343 + x1038
    x1077 = x1041 + x1075
    x1078 = x10 * x1031
    x1079 = x1025 * x503
    x1080 = 3.0 * x854
    x1081 = -x10 * x1025 + x1023 * x503 + 3.0 * x844
    x1082 = x4 * (x1078 - x1079 - x1080 + x1081)
    x1083 = -x1078 + x1079 + x1080
    x1084 = -x10 * x1035 + x1031 * x503 + 3.0 * x858
    x1085 = x1081 * x109 - x1083 * x8
    x1086 = x1083 * x109 - x1084 * x8
    x1087 = -x10 * x1049 + x1024 + x1047 * x503 + 3.0 * x890
    x1088 = -x10 * x1050 + x1034 + x1049 * x503 + 3.0 * x892

    # 90 item(s)
    result[0, 0] = numpy.sum(
        x108
        * (
            x105 * (x104 + x58 - x61 - x62 + x77)
            + x3
            * (
                x3 * x58
                + x56 * (x38 - x39 + x50 - x52)
                - x56 * (x51 - x83 + x87 + x88 - x90)
                - x6 * x81
            )
            + x56
            * (
                -x101 * x3
                - x101 * x6
                + x104
                + x3 * x90
                - x4 * (-x102 + x103 - x3 * x98 + x32 + x59 + x6 * (x44 + x97))
                + x4 * (x102 - x103 + x23 + x3 * x89 + x33 - x6 * x86)
                + x57
                + x6 * (x100 + x74 - x96 + x99)
            )
            - x6
            * (
                x3 * x81
                + x56 * (x53 - x63 + x73 - x75)
                - x56 * (x100 - x101 + x74 - x96 + x99)
                - x6
                * (
                    x3 * x76
                    + x4 * (x49 - x64 + x92)
                    + x56 * (x82 + x92 - x95)
                    - x6
                    * (
                        x3 * x72
                        + x56 * (x46 + x67 - x68)
                        - x6 * (x5 * x69 - x6 * (x5 * x66 - x6 * x94) + x93)
                    )
                )
            )
        )
    )
    result[0, 1] = numpy.sum(
        -x176
        * (
            x105 * (x150 - x162 + x163 + x164 - x170)
            - x3
            * (
                x162 * x3
                - x171 * x6
                + x4 * (x127 - x147 + x148 + x152)
                + x56 * (x152 + x156 - x157 + x160)
            )
            - x4
            * (
                x127 * x3
                - x149 * x3
                - x149 * x6
                - 2.0 * x150
                + 2.0 * x151
                + x6 * (x130 + x137 - x145)
            )
            + x6
            * (
                x171 * x3
                + x4 * (-x137 + x145 + x149 + x172)
                + x56 * (x161 - x165 + x168 + x172)
                - x6
                * (
                    x169 * x3
                    + x4 * (x136 - x138 + x143)
                    + x4 * (x143 + x159 - x166)
                    - x6 * (x167 * x3 + x173 - x6 * (x142 * x5 - x175 * x6))
                )
            )
        )
    )
    result[0, 2] = numpy.sum(
        -x176
        * (
            x105 * (x218 - x230 + x231 + x232 - x238)
            - x3
            * (
                x230 * x3
                - x239 * x6
                + x4 * (x195 - x215 + x216 + x220)
                + x56 * (x220 + x224 - x225 + x228)
            )
            - x4
            * (
                x195 * x3
                - x217 * x3
                - x217 * x6
                - 2.0 * x218
                + 2.0 * x219
                + x6 * (x198 + x205 - x213)
            )
            + x6
            * (
                x239 * x3
                + x4 * (-x205 + x213 + x217 + x240)
                + x56 * (x229 - x233 + x236 + x240)
                - x6
                * (
                    x237 * x3
                    + x4 * (x204 - x206 + x211)
                    + x4 * (x211 + x227 - x234)
                    - x6 * (x235 * x3 + x241 - x6 * (x210 * x5 - x243 * x6))
                )
            )
        )
    )
    result[0, 3] = numpy.sum(
        x108
        * (
            x105 * (x260 - x263 + x271 + x277)
            + x3 * (x260 * x3 - x272 * x6 + x56 * (x252 - x253 + x258))
            - x6
            * (
                x272 * x3
                + x56 * (x259 - x264 + x269)
                - x6 * (x270 * x3 + x274 - x6 * (x268 * x3 - x276 * x6))
            )
        )
    )
    result[0, 4] = numpy.sum(
        x176
        * (
            x105 * (x293 - x295 + x303 + x308)
            + x3 * (x293 * x3 - x304 * x6 + x56 * (x285 - x286 + x291))
            - x6
            * (
                x3 * x304
                + x56 * (x292 - x296 + x301)
                - x6 * (x3 * x302 + x305 - x6 * (x3 * x300 - x307 * x6))
            )
        )
    )
    result[0, 5] = numpy.sum(
        x108
        * (
            x105 * (x325 - x328 + x336 + x342)
            + x3 * (x3 * x325 - x337 * x6 + x56 * (x317 - x318 + x323))
            - x6
            * (
                x3 * x337
                + x56 * (x324 - x329 + x334)
                - x6 * (x3 * x335 + x339 - x6 * (x3 * x333 - x341 * x6))
            )
        )
    )
    result[1, 0] = numpy.sum(
        x397
        * (
            x3
            * (
                x3 * x371
                - x386 * x6
                + x4 * (-x352 + x358 + x367)
                + x56 * (x367 - x387 + x388)
            )
            + x56 * (x371 - x372 + x383 - x385)
            + x56
            * (
                x3 * x388
                - x3 * x394
                + x370
                - x384
                - x394 * x6
                - x4 * (-x3 * x348 + x350 + x362 + x395)
                + x4 * (x3 * x353 + x349 + x354 - x395)
                + x6 * (x381 + x393)
            )
            - x6
            * (
                x3 * x386
                + x4 * (x369 - x373 + x390)
                + x56 * (x390 - x393 + x394)
                - x6
                * (
                    x3 * x382
                    + x56 * (x363 - x375 + x378)
                    - x6 * (x379 * x5 + x391 - x6 * (x377 * x5 - x392 * x6))
                )
            )
        )
    )
    result[1, 1] = numpy.sum(
        x428
        * (
            x3
            * (
                x3 * x420
                + x4 * (x403 - x413 + x414)
                + x4 * (x414 - x417 + x418)
                - x425 * x6
            )
            + x4 * (x3 * x403 - x3 * x416 + x400 + x412 - x416 * x6 + x6 * (x406 + x410))
            + x56 * (x412 + x420 - x421 + x424)
            - x6
            * (
                x3 * x425
                + x4 * (-x406 + x409 + x416)
                + x4 * (x409 + x419 - x422)
                - x6 * (x3 * x423 + x426 - x6 * (x408 * x5 - x427 * x6))
            )
        )
    )
    result[1, 2] = numpy.sum(
        x428
        * (
            x3
            * (
                x3 * x451
                + x4 * (x434 - x444 + x445)
                + x4 * (x445 - x448 + x449)
                - x456 * x6
            )
            + x4 * (x3 * x434 - x3 * x447 + x431 + x443 - x447 * x6 + x6 * (x437 + x441))
            + x56 * (x443 + x451 - x452 + x455)
            - x6
            * (
                x3 * x456
                + x4 * (-x437 + x440 + x447)
                + x4 * (x440 + x450 - x453)
                - x6 * (x3 * x454 + x457 - x6 * (x439 * x5 - x458 * x6))
            )
        )
    )
    result[1, 3] = numpy.sum(
        x397
        * (
            x3 * (x3 * x465 + x463 - x472 * x6)
            + x56 * (x465 - x466 + x471)
            - x6 * (x3 * x472 + x473 - x6 * (x3 * x470 - x474 * x6))
        )
    )
    result[1, 4] = numpy.sum(
        x428
        * (
            x3 * (x3 * x480 + x478 - x486 * x6)
            + x56 * (x480 - x481 + x485)
            - x6 * (x3 * x486 + x487 - x6 * (x3 * x484 - x488 * x6))
        )
    )
    result[1, 5] = numpy.sum(
        x397
        * (
            x3 * (x3 * x494 + x492 - x500 * x6)
            + x56 * (x494 - x495 + x499)
            - x6 * (x3 * x500 + x501 - x6 * (x3 * x498 - x502 * x6))
        )
    )
    result[2, 0] = numpy.sum(
        x397
        * (
            x3
            * (
                x3 * x531
                + x4 * (-x512 + x518 + x527)
                - x546 * x6
                + x56 * (x527 - x547 + x548)
            )
            + x56 * (x531 - x532 + x543 - x545)
            + x56
            * (
                x3 * x548
                - x3 * x554
                - x4 * (-x3 * x508 + x510 + x522 + x555)
                + x4 * (x3 * x513 + x509 + x514 - x555)
                + x530
                - x544
                - x554 * x6
                + x6 * (x541 + x553)
            )
            - x6
            * (
                x3 * x546
                + x4 * (x529 - x533 + x550)
                + x56 * (x550 - x553 + x554)
                - x6
                * (
                    x3 * x542
                    + x56 * (x523 - x535 + x538)
                    - x6 * (x5 * x539 + x551 - x6 * (x5 * x537 - x552 * x6))
                )
            )
        )
    )
    result[2, 1] = numpy.sum(
        x428
        * (
            x3
            * (
                x3 * x585
                + x4 * (x564 - x578 + x579)
                + x4 * (x579 - x582 + x583)
                - x590 * x6
            )
            + x4 * (x3 * x564 - x3 * x581 + x560 + x577 - x581 * x6 + x6 * (x569 + x575))
            + x56 * (x577 + x585 - x586 + x589)
            - x6
            * (
                x3 * x590
                + x4 * (-x569 + x574 + x581)
                + x4 * (x574 + x584 - x587)
                - x6 * (x3 * x588 + x591 - x6 * (x5 * x573 - x593 * x6))
            )
        )
    )
    result[2, 2] = numpy.sum(
        x428
        * (
            x3
            * (
                x3 * x616
                + x4 * (x599 - x609 + x610)
                + x4 * (x610 - x613 + x614)
                - x6 * x621
            )
            + x4 * (x3 * x599 - x3 * x612 + x596 - x6 * x612 + x6 * (x602 + x606) + x608)
            + x56 * (x608 + x616 - x617 + x620)
            - x6
            * (
                x3 * x621
                + x4 * (-x602 + x605 + x612)
                + x4 * (x605 + x615 - x618)
                - x6 * (x3 * x619 - x6 * (x5 * x604 - x6 * x623) + x622)
            )
        )
    )
    result[2, 3] = numpy.sum(
        x397
        * (
            x3 * (x3 * x632 - x6 * x639 + x629)
            + x56 * (x632 - x633 + x638)
            - x6 * (x3 * x639 - x6 * (x3 * x637 - x6 * x643) + x641)
        )
    )
    result[2, 4] = numpy.sum(
        x428
        * (
            x3 * (x3 * x651 - x6 * x658 + x648)
            + x56 * (x651 - x652 + x657)
            - x6 * (x3 * x658 - x6 * (x3 * x656 - x6 * x661) + x659)
        )
    )
    result[2, 5] = numpy.sum(
        x397
        * (
            x3 * (x3 * x668 - x6 * x675 + x666)
            + x56 * (x668 - x669 + x674)
            - x6 * (x3 * x675 - x6 * (x3 * x673 - x6 * x677) + x676)
        )
    )
    result[3, 0] = numpy.sum(
        x707
        * (
            x3 * (x3 * x692 + x56 * (-x681 + x685 + x689) - x6 * x703)
            + x4 * (-x687 + x692 + x702)
            + x56 * (-x3 * x686 + x3 * x689 + x691 + x702)
            - x6
            * (
                x3 * x703
                + x56 * (x686 - x693 + x697)
                - x6 * (x5 * x698 - x6 * (x5 * x696 - x6 * x705) + x704)
            )
        )
    )
    result[3, 1] = numpy.sum(
        x723
        * (
            x3 * (x3 * x718 - x6 * x720 + x719)
            + x4 * (x712 - x717 + x718)
            + x4 * (x3 * x708 - x3 * x715 + x712 + x716)
            - x6 * (x3 * x720 - x6 * (x5 * x711 - x6 * x722) + x721)
        )
    )
    result[3, 2] = numpy.sum(
        x723
        * (
            x3 * (x3 * x734 - x6 * x736 + x735)
            + x4 * (x728 - x733 + x734)
            + x4 * (x3 * x724 - x3 * x731 + x728 + x732)
            - x6 * (x3 * x736 - x6 * (x5 * x727 - x6 * x738) + x737)
        )
    )
    result[3, 3] = numpy.sum(
        x707 * (x3 * (x3 * x744 - x6 * x746) - x6 * (x3 * x746 - x6 * x748) + x745)
    )
    result[3, 4] = numpy.sum(
        x723 * (x3 * (x3 * x751 - x6 * x753) - x6 * (x3 * x753 - x6 * x754) + x752)
    )
    result[3, 5] = numpy.sum(
        x707 * (x3 * (x3 * x757 - x6 * x759) - x6 * (x3 * x759 - x6 * x760) + x758)
    )
    result[4, 0] = numpy.sum(
        x723
        * (
            x3 * (x3 * x773 + x56 * (-x763 + x766 + x770) - x6 * x783)
            + x4 * (-x768 + x773 + x782)
            + x56 * (-x3 * x767 + x3 * x770 + x772 + x782)
            - x6
            * (
                x3 * x783
                + x56 * (x767 - x774 + x777)
                - x6 * (x5 * x778 - x6 * (x5 * x776 - x6 * x785) + x784)
            )
        )
    )
    result[4, 1] = numpy.sum(
        x799
        * (
            x3 * (x3 * x794 - x6 * x796 + x795)
            + x4 * (x789 - x793 + x794)
            + x4 * (x3 * x786 - x3 * x791 + x789 + x792)
            - x6 * (x3 * x796 - x6 * (x5 * x788 - x6 * x798) + x797)
        )
    )
    result[4, 2] = numpy.sum(
        x799
        * (
            x3 * (x3 * x808 - x6 * x810 + x809)
            + x4 * (x803 - x807 + x808)
            + x4 * (x3 * x800 - x3 * x805 + x803 + x806)
            - x6 * (x3 * x810 - x6 * (x5 * x802 - x6 * x812) + x811)
        )
    )
    result[4, 3] = numpy.sum(
        x723 * (x3 * (x3 * x816 - x6 * x818) - x6 * (x3 * x818 - x6 * x819) + x817)
    )
    result[4, 4] = numpy.sum(
        x799 * (x3 * (x3 * x822 - x6 * x824) - x6 * (x3 * x824 - x6 * x825) + x823)
    )
    result[4, 5] = numpy.sum(
        x723 * (x3 * (x3 * x828 - x6 * x830) - x6 * (x3 * x830 - x6 * x831) + x829)
    )
    result[5, 0] = numpy.sum(
        x707
        * (
            x3 * (x3 * x846 + x56 * (-x835 + x839 + x843) - x6 * x857)
            + x4 * (-x841 + x846 + x856)
            + x56 * (-x3 * x840 + x3 * x843 + x845 + x856)
            - x6
            * (
                x3 * x857
                + x56 * (x840 - x847 + x851)
                - x6 * (x5 * x852 - x6 * (x5 * x850 - x6 * x859) + x858)
            )
        )
    )
    result[5, 1] = numpy.sum(
        x723
        * (
            x3 * (x3 * x873 - x6 * x875 + x874)
            + x4 * (x866 - x872 + x873)
            + x4 * (x3 * x861 - x3 * x870 + x866 + x871)
            - x6 * (x3 * x875 - x6 * (x5 * x865 - x6 * x878) + x876)
        )
    )
    result[5, 2] = numpy.sum(
        x723
        * (
            x3 * (x3 * x889 - x6 * x891 + x890)
            + x4 * (x883 - x888 + x889)
            + x4 * (x3 * x879 - x3 * x886 + x883 + x887)
            - x6 * (x3 * x891 - x6 * (x5 * x882 - x6 * x893) + x892)
        )
    )
    result[5, 3] = numpy.sum(
        x707 * (x3 * (x3 * x896 - x6 * x901) - x6 * (x3 * x901 - x6 * x903) + x899)
    )
    result[5, 4] = numpy.sum(
        x723 * (x3 * (x3 * x907 - x6 * x910) - x6 * (x3 * x910 - x6 * x912) + x908)
    )
    result[5, 5] = numpy.sum(
        x707 * (x3 * (x3 * x918 - x6 * x920) - x6 * (x3 * x920 - x6 * x922) + x919)
    )
    result[6, 0] = numpy.sum(
        x397
        * (
            x3 * (x5 * x929 - x6 * x936 + x927)
            + x56 * (x929 - x930 + x935)
            - x6 * (x5 * x936 - x6 * (x5 * x934 - x6 * x938) + x937)
        )
    )
    result[6, 1] = numpy.sum(
        x428 * (x3 * (x5 * x941 - x6 * x943) - x6 * (x5 * x943 - x6 * x944) + x942)
    )
    result[6, 2] = numpy.sum(
        x428 * (x3 * (x5 * x948 - x6 * x950) - x6 * (x5 * x950 - x6 * x951) + x949)
    )
    result[6, 3] = numpy.sum(x397 * (x3 * x952 - x6 * x953))
    result[6, 4] = numpy.sum(x428 * (x3 * x954 - x6 * x955))
    result[6, 5] = numpy.sum(x397 * (x3 * x956 - x6 * x957))
    result[7, 0] = numpy.sum(
        x723
        * (
            x3 * (x5 * x963 - x6 * x969 + x961)
            + x56 * (x963 - x964 + x968)
            - x6 * (x5 * x969 - x6 * (x5 * x967 - x6 * x971) + x970)
        )
    )
    result[7, 1] = numpy.sum(
        x799 * (x3 * (x5 * x974 - x6 * x976) - x6 * (x5 * x976 - x6 * x977) + x975)
    )
    result[7, 2] = numpy.sum(
        x799 * (x3 * (x5 * x980 - x6 * x982) - x6 * (x5 * x982 - x6 * x983) + x981)
    )
    result[7, 3] = numpy.sum(x723 * (x3 * x985 - x6 * x987))
    result[7, 4] = numpy.sum(x799 * (x3 * x988 - x6 * x989))
    result[7, 5] = numpy.sum(x723 * (x3 * x990 - x6 * x991))
    result[8, 0] = numpy.sum(
        x723
        * (
            x3 * (-x1001 * x6 + x5 * x996 + x994)
            + x56 * (x1000 + x996 - x997)
            - x6 * (x1001 * x5 + x1002 + x6 * (x1003 * x6 - x5 * x999))
        )
    )
    result[8, 1] = numpy.sum(
        x799 * (x1006 + x3 * (x1005 * x5 - x1007 * x6) - x6 * (x1007 * x5 - x1008 * x6))
    )
    result[8, 2] = numpy.sum(
        x799 * (x1011 + x3 * (x1010 * x5 - x1012 * x6) - x6 * (x1012 * x5 - x1013 * x6))
    )
    result[8, 3] = numpy.sum(x723 * (x1014 * x3 - x1015 * x6))
    result[8, 4] = numpy.sum(x799 * (x1016 * x3 - x1017 * x6))
    result[8, 5] = numpy.sum(x723 * (x1018 * x3 - x1019 * x6))
    result[9, 0] = numpy.sum(
        x397
        * (
            x3 * (x1024 + x1026 * x5 - x1033 * x6)
            + x56 * (x1026 - x1027 + x1032)
            - x6 * (x1033 * x5 + x1034 - x6 * (x1031 * x5 - x1035 * x6))
        )
    )
    result[9, 1] = numpy.sum(
        x428 * (x1040 + x3 * (x1039 * x5 - x1042 * x6) - x6 * (x1042 * x5 - x1044 * x6))
    )
    result[9, 2] = numpy.sum(
        x428 * (x1048 + x3 * (x1047 * x5 - x1049 * x6) - x6 * (x1049 * x5 - x1050 * x6))
    )
    result[9, 3] = numpy.sum(x397 * (x1052 * x3 - x1054 * x6))
    result[9, 4] = numpy.sum(x428 * (x1056 * x3 - x1058 * x6))
    result[9, 5] = numpy.sum(x397 * (x1059 * x3 - x1060 * x6))
    result[10, 0] = numpy.sum(
        x108
        * (
            x4 * (x1061 - x1062 - x1063 + x1064)
            + x5 * (x1064 * x5 - x1065 * x6)
            - x6 * (x1065 * x5 - x6 * (x343 * x934 + 3.0 * x704 - x8 * x938))
        )
    )
    result[10, 1] = numpy.sum(
        x176
        * (
            x5 * (x343 * x941 + 3.0 * x719 - x8 * x943 + x927)
            - x6 * (x343 * x943 + 3.0 * x721 - x8 * x944 + x937)
        )
    )
    result[10, 2] = numpy.sum(
        x176
        * (
            x5 * (x343 * x948 + 3.0 * x735 - x8 * x950)
            - x6 * (x343 * x950 + 3.0 * x737 - x8 * x951)
        )
    )
    result[10, 3] = numpy.sum(x108 * (x343 * x952 + 3.0 * x745 - x8 * x953 + 2.0 * x942))
    result[10, 4] = numpy.sum(x176 * (x343 * x954 + 3.0 * x752 - x8 * x955 + x949))
    result[10, 5] = numpy.sum(x108 * (x343 * x956 + 3.0 * x758 - x8 * x957))
    result[11, 0] = numpy.sum(
        x397
        * (
            x4 * (x1066 - x1067 - x1068 + x1069)
            + x5 * (x1069 * x5 - x1070 * x6)
            - x6 * (x1070 * x5 - x6 * (x343 * x967 + 2.0 * x784 - x8 * x971))
        )
    )
    result[11, 1] = numpy.sum(
        x428
        * (
            x5 * (x343 * x974 - x8 * x976 + x961 + x984)
            - x6 * (x343 * x976 - x8 * x977 + x970 + x986)
        )
    )
    result[11, 2] = numpy.sum(
        x428
        * (
            x5 * (x343 * x980 - x8 * x982 + 2.0 * x809)
            - x6 * (x343 * x982 - x8 * x983 + 2.0 * x811)
        )
    )
    result[11, 3] = numpy.sum(x397 * (x343 * x985 - x8 * x987 + 2.0 * x817 + 2.0 * x975))
    result[11, 4] = numpy.sum(x428 * (x343 * x988 - x8 * x989 + 2.0 * x823 + x981))
    result[11, 5] = numpy.sum(x397 * (x343 * x990 - x8 * x991 + 2.0 * x829))
    result[12, 0] = numpy.sum(
        x707
        * (
            x4 * (x1071 - x1072 + x1073 + x855)
            + x5 * (x1073 * x5 - x1074 * x6)
            - x6 * (x1074 * x5 - x6 * (-x1003 * x8 + x343 * x999 + x858))
        )
    )
    result[12, 1] = numpy.sum(
        x723
        * (
            x5 * (x1005 * x343 - x1007 * x8 + x874 + x994)
            - x6 * (x1002 + x1007 * x343 - x1008 * x8 + x876)
        )
    )
    result[12, 2] = numpy.sum(
        x723
        * (
            x5 * (x1010 * x343 - x1012 * x8 + x890)
            - x6 * (x1012 * x343 - x1013 * x8 + x892)
        )
    )
    result[12, 3] = numpy.sum(x707 * (2.0 * x1006 + x1014 * x343 - x1015 * x8 + x899))
    result[12, 4] = numpy.sum(x723 * (x1011 + x1016 * x343 - x1017 * x8 + x908))
    result[12, 5] = numpy.sum(x707 * (x1018 * x343 - x1019 * x8 + x919))
    result[13, 0] = numpy.sum(
        x397
        * (
            x4 * (x1036 - x1075 + x1076)
            + x5 * (x1076 * x5 - x1077 * x6)
            - x6 * (x1077 * x5 - x6 * (x1031 * x343 + x1043))
        )
    )
    result[13, 1] = numpy.sum(
        x428 * (x5 * (x1039 * x343 + x1051) - x6 * (x1042 * x343 + x1053))
    )
    result[13, 2] = numpy.sum(
        x428 * (x5 * (x1047 * x343 + x1055) - x6 * (x1049 * x343 + x1057))
    )
    result[13, 3] = numpy.sum(x397 * (2.0 * x1040 + x1052 * x343 - x1054 * x8))
    result[13, 4] = numpy.sum(x428 * (x1048 + x1056 * x343 - x1058 * x8))
    result[13, 5] = numpy.sum(x397 * (x1059 * x343 - x1060 * x8))
    result[14, 0] = numpy.sum(
        x108 * (x1082 + x5 * (x1081 * x5 - x1083 * x6) - x6 * (x1083 * x5 - x1084 * x6))
    )
    result[14, 1] = numpy.sum(x176 * (x1085 * x5 - x1086 * x6))
    result[14, 2] = numpy.sum(x176 * (x1087 * x5 - x1088 * x6))
    result[14, 3] = numpy.sum(x108 * (x1082 + x1085 * x109 - x1086 * x8))
    result[14, 4] = numpy.sum(x176 * (x1087 * x109 - x1088 * x8))
    result[14, 5] = numpy.sum(
        x108 * (-x10 * x1060 + 2.0 * x1048 + x1059 * x503 + 3.0 * x919)
    )
    return result


def coulomb3d_43(ax, da, A, bx, db, B, R):
    """Cartesian (gf) 1-electron Coulomb integral.

    Generated code; DO NOT modify by hand!"""

    result = numpy.zeros((15, 10), dtype=float)

    x0 = ax + bx
    x1 = x0 ** (-1.0)
    x2 = -x1 * (ax * A[0] + bx * B[0])
    x3 = -x2 - A[0]
    x4 = 0.5 / (ax + bx)
    x5 = -x2 - B[0]
    x6 = -x2 - R[0]
    x7 = -x1 * (ax * A[1] + bx * B[1])
    x8 = -x7 - R[1]
    x9 = -x1 * (ax * A[2] + bx * B[2])
    x10 = -x9 - R[2]
    x11 = x0 * (x10**2 + x6**2 + x8**2)
    x12 = (
        6.283185307179586
        * x1
        * numpy.exp(
            -ax * bx * x1 * ((A[0] - B[0]) ** 2 + (A[1] - B[1]) ** 2 + (A[2] - B[2]) ** 2)
        )
    )
    x13 = x12 * boys(2, x11)
    x14 = x13 * x6
    x15 = -x14
    x16 = x12 * boys(1, x11)
    x17 = x16 * x5
    x18 = x15 + x17
    x19 = x18 * x5
    x20 = x4 * (-x13 + x16)
    x21 = x12 * boys(3, x11)
    x22 = x21 * x6
    x23 = -x22
    x24 = x13 * x5
    x25 = x23 + x24
    x26 = x25 * x6
    x27 = x20 - x26
    x28 = x19 + x27
    x29 = x28 * x5
    x30 = -x16 * x6
    x31 = x12 * boys(0, x11)
    x32 = x30 + x31 * x5
    x33 = x4 * (-x16 + x31)
    x34 = -x18 * x6 + x33
    x35 = x32 * x5 + x34
    x36 = x4 * (x14 - x17 + x32)
    x37 = -x28 * x6 + 2.0 * x36
    x38 = x35 * x5 + x37
    x39 = x25 * x5
    x40 = x4 * (x13 - x21)
    x41 = x12 * boys(4, x11)
    x42 = x41 * x6
    x43 = x21 * x5
    x44 = -x42 + x43
    x45 = x44 * x6
    x46 = x40 - x45
    x47 = x39 + x46
    x48 = x47 * x6
    x49 = x4 * (x18 + x22 - x24)
    x50 = 2.0 * x49
    x51 = x48 - x50
    x52 = -x48 + x50
    x53 = x29 + x52
    x54 = -x20
    x55 = x26 + x54
    x56 = x4 * (-x19 + x35 + x55)
    x57 = x3 * x38 - x53 * x6 + 3.0 * x56
    x58 = x3 * x53
    x59 = x47 * x5
    x60 = x44 * x5
    x61 = x4 * (x21 - x41)
    x62 = x12 * boys(5, x11)
    x63 = x6 * x62
    x64 = x41 * x5
    x65 = -x63 + x64
    x66 = x6 * x65
    x67 = x61 - x66
    x68 = x60 + x67
    x69 = x6 * x68
    x70 = x4 * (x25 + x42 - x43)
    x71 = 2.0 * x70
    x72 = -x69 + x71
    x73 = x59 + x72
    x74 = x6 * x73
    x75 = -x40
    x76 = x45 + x75
    x77 = x4 * (x28 - x39 + x76)
    x78 = 3.0 * x77
    x79 = x58 - x74 + x78
    x80 = x28 * x3
    x81 = x3 * x35 + x37
    x82 = x51 - x80 + x81
    x83 = 3.0 * x4
    x84 = x3 * x57 + x4 * (-x29 + x38 + x51) - x6 * x79 + x82 * x83
    x85 = x69 - x71
    x86 = x4 * (x53 - x59 + x85)
    x87 = x3 * x79
    x88 = x3 * x73
    x89 = x5 * x68
    x90 = x4 * (x41 - x62)
    x91 = x5 * x65
    x92 = x12 * boys(6, x11)
    x93 = x6 * x92
    x94 = x5 * x62
    x95 = -x93 + x94
    x96 = x6 * x95
    x97 = x90 + x91 - x96
    x98 = x6 * x97
    x99 = 2.0 * x4
    x100 = x99 * (x44 + x63 - x64)
    x101 = x100 - x98
    x102 = x101 + x89
    x103 = x102 * x6
    x104 = -x61
    x105 = x104 + x66
    x106 = x4 * (x105 + x47 - x60)
    x107 = 3.0 * x106
    x108 = -x103 + x107 + x88
    x109 = x108 * x6
    x110 = x3 * x47
    x111 = x52 + x80
    x112 = -x110 + x111 + x85
    x113 = x112 * x83
    x114 = -x109 + x113 + x86 + x87
    x115 = x110 + x72
    x116 = x115 * x6
    x117 = x111 * x3
    x118 = x25 * x3
    x119 = x18 * x3
    x120 = x119 + x27
    x121 = x99 * (-x118 + x120 + x76)
    x122 = x3 * x32 + x34
    x123 = -x111 * x6 + x3 * x81 + x56 + x99 * (-x119 + x122 + x55)
    x124 = -x100 + x98
    x125 = x4 * (x62 - x92)
    x126 = x12 * boys(7, x11)
    x127 = -x90
    x128 = x3 * x68
    x129 = x6 * (x101 + x128)
    x130 = x115 * x3
    x131 = x3 * x44
    x132 = x118 + x46
    x133 = x99 * (x105 - x131 + x132)
    x134 = -x116 + x117 + x121 + x77
    x135 = x13 * x3
    x136 = x16 * x3
    x137 = x4 * (-x135 + x136 + x15 + x22)
    x138 = x120 * x3
    x139 = x132 * x6
    x140 = da * db
    x141 = 0.009523809523809524 * x140
    x142 = 2.645751311064591 * x141
    x143 = x13 * x8
    x144 = -x143
    x145 = -x7 - B[1]
    x146 = x145 * x16
    x147 = x144 + x146
    x148 = x147 * x5
    x149 = x21 * x8
    x150 = -x149
    x151 = x13 * x145
    x152 = x150 + x151
    x153 = x152 * x6
    x154 = -x153
    x155 = x148 + x154
    x156 = x155 * x5
    x157 = -x16 * x8
    x158 = x145 * x31 + x157
    x159 = -x147 * x6
    x160 = x158 * x5 + x159
    x161 = x4 * (x143 - x146 + x158)
    x162 = -x155 * x6 + x161
    x163 = x160 * x5 + x162
    x164 = x152 * x5
    x165 = x41 * x8
    x166 = -x165
    x167 = x145 * x21
    x168 = x166 + x167
    x169 = x168 * x6
    x170 = -x169
    x171 = x164 + x170
    x172 = x171 * x6
    x173 = x4 * (x147 + x149 - x151)
    x174 = -x173
    x175 = x172 + x174
    x176 = -x172 + x173
    x177 = x156 + x176
    x178 = x4 * (-x148 + x153 + x160)
    x179 = x163 * x3 - x177 * x6 + 2.0 * x178
    x180 = x177 * x3
    x181 = x171 * x5
    x182 = x4 * (x152 + x165 - x167)
    x183 = x168 * x5
    x184 = x62 * x8
    x185 = -x184
    x186 = x145 * x41
    x187 = x185 + x186
    x188 = x187 * x6
    x189 = -x188
    x190 = x183 + x189
    x191 = x190 * x6
    x192 = x182 - x191
    x193 = x181 + x192
    x194 = x193 * x6
    x195 = x4 * (x155 - x164 + x169)
    x196 = 2.0 * x195
    x197 = x180 - x194 + x196
    x198 = x155 * x3
    x199 = x160 * x3 + x162
    x200 = x99 * (x175 - x198 + x199)
    x201 = x179 * x3 - x197 * x6 + x200 + x4 * (-x156 + x163 + x175)
    x202 = -x182
    x203 = x191 + x202
    x204 = x4 * (x177 - x181 + x203)
    x205 = x197 * x3
    x206 = x193 * x3
    x207 = x190 * x5
    x208 = x4 * (x168 + x184 - x186)
    x209 = x187 * x5
    x210 = x8 * x92
    x211 = -x210
    x212 = x145 * x62
    x213 = x211 + x212
    x214 = x213 * x6
    x215 = x209 - x214
    x216 = x215 * x6
    x217 = x208 - x216
    x218 = x207 + x217
    x219 = x218 * x6
    x220 = x4 * (x171 - x183 + x188)
    x221 = 2.0 * x220
    x222 = x206 - x219 + x221
    x223 = x222 * x6
    x224 = x171 * x3
    x225 = x176 + x198
    x226 = x99 * (x203 - x224 + x225)
    x227 = x204 + x205 - x223 + x226
    x228 = x192 + x224
    x229 = x228 * x6
    x230 = x152 * x3
    x231 = x147 * x3
    x232 = x154 + x231
    x233 = x4 * (x169 - x230 + x232)
    x234 = x225 * x3
    x235 = x158 * x3 + x159
    x236 = x178 + x199 * x3 - x225 * x6 + x4 * (x153 - x231 + x235)
    x237 = -x208
    x238 = x216 + x237
    x239 = x4 * (x187 + x210 - x212)
    x240 = -x126 * x8
    x241 = x145 * x92 + x240
    x242 = x190 * x3
    x243 = x6 * (x217 + x242)
    x244 = x168 * x3
    x245 = x170 + x230
    x246 = x4 * (x188 - x244 + x245)
    x247 = x228 * x3
    x248 = x195 - x229 + x233 + x234
    x249 = x245 * x6
    x250 = x232 * x3
    x251 = -x226
    x252 = 5.916079783099616 * x141
    x253 = x10 * x13
    x254 = -x253
    x255 = -x9 - B[2]
    x256 = x16 * x255
    x257 = x254 + x256
    x258 = x257 * x5
    x259 = x10 * x21
    x260 = -x259
    x261 = x13 * x255
    x262 = x260 + x261
    x263 = x262 * x6
    x264 = -x263
    x265 = x258 + x264
    x266 = x265 * x5
    x267 = -x10 * x16
    x268 = x255 * x31 + x267
    x269 = -x257 * x6
    x270 = x268 * x5 + x269
    x271 = x4 * (x253 - x256 + x268)
    x272 = -x265 * x6 + x271
    x273 = x270 * x5 + x272
    x274 = x262 * x5
    x275 = x10 * x41
    x276 = -x275
    x277 = x21 * x255
    x278 = x276 + x277
    x279 = x278 * x6
    x280 = -x279
    x281 = x274 + x280
    x282 = x281 * x6
    x283 = x4 * (x257 + x259 - x261)
    x284 = -x283
    x285 = x282 + x284
    x286 = -x282 + x283
    x287 = x266 + x286
    x288 = x4 * (-x258 + x263 + x270)
    x289 = x273 * x3 - x287 * x6 + 2.0 * x288
    x290 = x287 * x3
    x291 = x281 * x5
    x292 = x4 * (x262 + x275 - x277)
    x293 = x278 * x5
    x294 = x10 * x62
    x295 = -x294
    x296 = x255 * x41
    x297 = x295 + x296
    x298 = x297 * x6
    x299 = -x298
    x300 = x293 + x299
    x301 = x300 * x6
    x302 = x292 - x301
    x303 = x291 + x302
    x304 = x303 * x6
    x305 = x4 * (x265 - x274 + x279)
    x306 = 2.0 * x305
    x307 = x290 - x304 + x306
    x308 = x265 * x3
    x309 = x270 * x3 + x272
    x310 = x99 * (x285 - x308 + x309)
    x311 = x289 * x3 - x307 * x6 + x310 + x4 * (-x266 + x273 + x285)
    x312 = -x292
    x313 = x301 + x312
    x314 = x4 * (x287 - x291 + x313)
    x315 = x3 * x307
    x316 = x3 * x303
    x317 = x300 * x5
    x318 = x4 * (x278 + x294 - x296)
    x319 = x297 * x5
    x320 = x10 * x92
    x321 = -x320
    x322 = x255 * x62
    x323 = x321 + x322
    x324 = x323 * x6
    x325 = x319 - x324
    x326 = x325 * x6
    x327 = x318 - x326
    x328 = x317 + x327
    x329 = x328 * x6
    x330 = x4 * (x281 - x293 + x298)
    x331 = 2.0 * x330
    x332 = x316 - x329 + x331
    x333 = x332 * x6
    x334 = x281 * x3
    x335 = x286 + x308
    x336 = x99 * (x313 - x334 + x335)
    x337 = x314 + x315 - x333 + x336
    x338 = x302 + x334
    x339 = x338 * x6
    x340 = x262 * x3
    x341 = x257 * x3
    x342 = x264 + x341
    x343 = x4 * (x279 - x340 + x342)
    x344 = x3 * x335
    x345 = x268 * x3 + x269
    x346 = x288 + x3 * x309 - x335 * x6 + x4 * (x263 - x341 + x345)
    x347 = -x318
    x348 = x326 + x347
    x349 = x4 * (x297 + x320 - x322)
    x350 = -x10 * x126
    x351 = x255 * x92 + x350
    x352 = x3 * x300
    x353 = x6 * (x327 + x352)
    x354 = x278 * x3
    x355 = x280 + x340
    x356 = x4 * (x298 - x354 + x355)
    x357 = x3 * x338
    x358 = x305 - x339 + x343 + x344
    x359 = x355 * x6
    x360 = x3 * x342
    x361 = -x336
    x362 = x145 * x147
    x363 = -x147 * x8 + x33
    x364 = x145 * x158 + x363
    x365 = x152 * x8
    x366 = x365 + x54
    x367 = x4 * (-x362 + x364 + x366)
    x368 = x20 - x365
    x369 = x362 + x368
    x370 = -x369 * x6
    x371 = x3 * x364 + x370
    x372 = x3 * x369
    x373 = x145 * x152
    x374 = x168 * x8
    x375 = -x374 + x40
    x376 = x373 + x375
    x377 = x376 * x6
    x378 = -x377
    x379 = x372 + x378
    x380 = x3 * x371 + x367 - x379 * x6
    x381 = x145 * x168
    x382 = x187 * x8
    x383 = x104 + x382
    x384 = x4 * (x376 - x381 + x383)
    x385 = x3 * x376
    x386 = -x382 + x61
    x387 = x381 + x386
    x388 = x387 * x6
    x389 = -x388
    x390 = x385 + x389
    x391 = x3 * x390
    x392 = x3 * x387
    x393 = x145 * x187
    x394 = x213 * x8
    x395 = -x394 + x90
    x396 = x393 + x395
    x397 = x396 * x6
    x398 = -x397
    x399 = x6 * (x392 + x398)
    x400 = x374 + x75
    x401 = x4 * (x369 - x373 + x400)
    x402 = x3 * x379
    x403 = x390 * x6
    x404 = x401 + x402 - x403
    x405 = x4 * (x379 - x385 + x388)
    x406 = x4 * (x371 - x372 + x377)
    x407 = -x401
    x408 = x369 * x5
    x409 = x364 * x5 + x370
    x410 = x378 + x408
    x411 = x3 * x409 + x367 - x410 * x6
    x412 = x3 * x410
    x413 = x376 * x5
    x414 = x389 + x413
    x415 = x414 * x6
    x416 = x401 + x412 - x415
    x417 = x3 * x411 + x4 * (x377 - x408 + x409) + x406 - x416 * x6
    x418 = x4 * (x388 + x410 - x413)
    x419 = x3 * x416
    x420 = x3 * x414
    x421 = x387 * x5
    x422 = x398 + x421
    x423 = x422 * x6
    x424 = x384 + x420 - x423
    x425 = x424 * x6
    x426 = x405 + x418 + x419 - x425
    x427 = -x384
    x428 = x127 + x394
    x429 = x4 * (x387 - x393 + x428)
    x430 = x125 - x241 * x8
    x431 = x145 * x213 + x430
    x432 = x262 * x8
    x433 = x145 * x257
    x434 = -x257 * x8
    x435 = x145 * x268 + x434
    x436 = x4 * (x432 - x433 + x435)
    x437 = -x432
    x438 = x433 + x437
    x439 = -x438 * x6
    x440 = x3 * x435 + x439
    x441 = x3 * x438
    x442 = x145 * x262
    x443 = x278 * x8
    x444 = -x443
    x445 = x442 + x444
    x446 = x445 * x6
    x447 = -x446
    x448 = x441 + x447
    x449 = x3 * x440 + x436 - x448 * x6
    x450 = x297 * x8
    x451 = x145 * x278
    x452 = x4 * (x445 + x450 - x451)
    x453 = x3 * x445
    x454 = -x450
    x455 = x451 + x454
    x456 = x455 * x6
    x457 = -x456
    x458 = x453 + x457
    x459 = x3 * x458
    x460 = x3 * x455
    x461 = x145 * x297
    x462 = x323 * x8
    x463 = -x462
    x464 = x461 + x463
    x465 = x464 * x6
    x466 = -x465
    x467 = x6 * (x460 + x466)
    x468 = x4 * (x438 - x442 + x443)
    x469 = x3 * x448
    x470 = x458 * x6
    x471 = x468 + x469 - x470
    x472 = x4 * (x448 - x453 + x456)
    x473 = x4 * (x440 - x441 + x446)
    x474 = -x468
    x475 = x438 * x5
    x476 = x435 * x5 + x439
    x477 = x447 + x475
    x478 = x3 * x476 + x436 - x477 * x6
    x479 = x3 * x477
    x480 = x445 * x5
    x481 = x457 + x480
    x482 = x481 * x6
    x483 = x468 + x479 - x482
    x484 = x3 * x478 + x4 * (x446 - x475 + x476) + x473 - x483 * x6
    x485 = x4 * (x456 + x477 - x480)
    x486 = x3 * x483
    x487 = x3 * x481
    x488 = x455 * x5
    x489 = x466 + x488
    x490 = x489 * x6
    x491 = x452 + x487 - x490
    x492 = x491 * x6
    x493 = x472 + x485 + x486 - x492
    x494 = -x452
    x495 = x4 * (x455 - x461 + x462)
    x496 = -x351 * x8
    x497 = x145 * x323 + x496
    x498 = 10.2469507659596 * x141
    x499 = x255 * x257
    x500 = -x10 * x257 + x33
    x501 = x255 * x268 + x500
    x502 = x10 * x262
    x503 = x502 + x54
    x504 = x4 * (-x499 + x501 + x503)
    x505 = x20 - x502
    x506 = x499 + x505
    x507 = -x506 * x6
    x508 = x3 * x501 + x507
    x509 = x3 * x506
    x510 = x255 * x262
    x511 = x10 * x278
    x512 = x40 - x511
    x513 = x510 + x512
    x514 = x513 * x6
    x515 = -x514
    x516 = x509 + x515
    x517 = x3 * x508 + x504 - x516 * x6
    x518 = x255 * x278
    x519 = x10 * x297
    x520 = x104 + x519
    x521 = x4 * (x513 - x518 + x520)
    x522 = x3 * x513
    x523 = -x519 + x61
    x524 = x518 + x523
    x525 = x524 * x6
    x526 = -x525
    x527 = x522 + x526
    x528 = x3 * x527
    x529 = x3 * x524
    x530 = x255 * x297
    x531 = x10 * x323
    x532 = -x531 + x90
    x533 = x530 + x532
    x534 = x533 * x6
    x535 = -x534
    x536 = x6 * (x529 + x535)
    x537 = x511 + x75
    x538 = x4 * (x506 - x510 + x537)
    x539 = x3 * x516
    x540 = x527 * x6
    x541 = x538 + x539 - x540
    x542 = x4 * (x516 - x522 + x525)
    x543 = x4 * (x508 - x509 + x514)
    x544 = -x538
    x545 = x5 * x506
    x546 = x5 * x501 + x507
    x547 = x515 + x545
    x548 = x3 * x546 + x504 - x547 * x6
    x549 = x3 * x547
    x550 = x5 * x513
    x551 = x526 + x550
    x552 = x551 * x6
    x553 = x538 + x549 - x552
    x554 = x3 * x548 + x4 * (x514 - x545 + x546) + x543 - x553 * x6
    x555 = x4 * (x525 + x547 - x550)
    x556 = x3 * x553
    x557 = x3 * x551
    x558 = x5 * x524
    x559 = x535 + x558
    x560 = x559 * x6
    x561 = x521 + x557 - x560
    x562 = x561 * x6
    x563 = x542 + x555 + x556 - x562
    x564 = -x521
    x565 = x127 + x531
    x566 = x4 * (x524 - x530 + x565)
    x567 = -x10 * x351 + x125
    x568 = x255 * x323 + x567
    x569 = x145 * x369
    x570 = 2.0 * x161 - x369 * x8
    x571 = x145 * x364 + x570
    x572 = x376 * x8
    x573 = 2.0 * x173
    x574 = x572 - x573
    x575 = x4 * (-x569 + x571 + x574)
    x576 = -x572 + x573
    x577 = x569 + x576
    x578 = x3 * x571 - x577 * x6
    x579 = x3 * x577
    x580 = x145 * x376
    x581 = x387 * x8
    x582 = 2.0 * x182
    x583 = -x581 + x582
    x584 = x580 + x583
    x585 = x584 * x6
    x586 = x579 - x585
    x587 = x3 * x578 + x575 - x586 * x6
    x588 = x581 - x582
    x589 = x4 * (x577 - x580 + x588)
    x590 = x3 * x586
    x591 = x3 * x584
    x592 = x145 * x387
    x593 = x396 * x8
    x594 = 2.0 * x208
    x595 = -x593 + x594
    x596 = x592 + x595
    x597 = x596 * x6
    x598 = x591 - x597
    x599 = x598 * x6
    x600 = x589 + x590 - x599
    x601 = x593 - x594
    x602 = x4 * (x584 - x592 + x601)
    x603 = 2.0 * x239 - x431 * x8
    x604 = x145 * x396 + x603
    x605 = -x589
    x606 = x145 * x438
    x607 = x271 - x438 * x8
    x608 = x145 * x435 + x607
    x609 = x445 * x8
    x610 = x284 + x609
    x611 = x4 * (-x606 + x608 + x610)
    x612 = x283 - x609
    x613 = x606 + x612
    x614 = x3 * x608 - x6 * x613
    x615 = x3 * x613
    x616 = x145 * x445
    x617 = x455 * x8
    x618 = x292 - x617
    x619 = x616 + x618
    x620 = x6 * x619
    x621 = x615 - x620
    x622 = x3 * x614 - x6 * x621 + x611
    x623 = x312 + x617
    x624 = x4 * (x613 - x616 + x623)
    x625 = x3 * x621
    x626 = x3 * x619
    x627 = x145 * x455
    x628 = x464 * x8
    x629 = x318 - x628
    x630 = x627 + x629
    x631 = x6 * x630
    x632 = x626 - x631
    x633 = x6 * x632
    x634 = x624 + x625 - x633
    x635 = x347 + x628
    x636 = x4 * (x619 - x627 + x635)
    x637 = x349 - x497 * x8
    x638 = x145 * x464 + x637
    x639 = -x624
    x640 = x513 * x8
    x641 = x145 * x506
    x642 = -x506 * x8
    x643 = x145 * x501 + x642
    x644 = x4 * (x640 - x641 + x643)
    x645 = -x640
    x646 = x641 + x645
    x647 = x3 * x643 - x6 * x646
    x648 = x3 * x646
    x649 = x145 * x513
    x650 = x524 * x8
    x651 = -x650
    x652 = x649 + x651
    x653 = x6 * x652
    x654 = x648 - x653
    x655 = x3 * x647 - x6 * x654 + x644
    x656 = x4 * (x646 - x649 + x650)
    x657 = x3 * x654
    x658 = x3 * x652
    x659 = x145 * x524
    x660 = x533 * x8
    x661 = -x660
    x662 = x659 + x661
    x663 = x6 * x662
    x664 = x658 - x663
    x665 = x6 * x664
    x666 = x656 + x657 - x665
    x667 = x4 * (x652 - x659 + x660)
    x668 = -x568 * x8
    x669 = x145 * x533 + x668
    x670 = -x656
    x671 = x255 * x506
    x672 = -x10 * x506 + 2.0 * x271
    x673 = x255 * x501 + x672
    x674 = x10 * x513
    x675 = 2.0 * x283
    x676 = x674 - x675
    x677 = x4 * (-x671 + x673 + x676)
    x678 = -x674 + x675
    x679 = x671 + x678
    x680 = x3 * x673 - x6 * x679
    x681 = x3 * x679
    x682 = x255 * x513
    x683 = x10 * x524
    x684 = 2.0 * x292
    x685 = -x683 + x684
    x686 = x682 + x685
    x687 = x6 * x686
    x688 = x681 - x687
    x689 = x3 * x680 - x6 * x688 + x677
    x690 = x683 - x684
    x691 = x4 * (x679 - x682 + x690)
    x692 = x3 * x688
    x693 = x3 * x686
    x694 = x255 * x524
    x695 = x10 * x533
    x696 = 2.0 * x318
    x697 = -x695 + x696
    x698 = x694 + x697
    x699 = x6 * x698
    x700 = x693 - x699
    x701 = x6 * x700
    x702 = x691 + x692 - x701
    x703 = x695 - x696
    x704 = x4 * (x686 - x694 + x703)
    x705 = -x10 * x568 + 2.0 * x349
    x706 = x255 * x533 + x705
    x707 = -x691
    x708 = -x7 - A[1]
    x709 = x16 * x708
    x710 = x144 + x709
    x711 = x5 * x710
    x712 = x13 * x708
    x713 = x150 + x712
    x714 = x6 * x713
    x715 = x711 - x714
    x716 = x5 * x715
    x717 = x4 * (x149 + x710 - x712)
    x718 = x5 * x713
    x719 = x21 * x708
    x720 = x166 + x719
    x721 = x6 * x720
    x722 = x718 - x721
    x723 = x6 * x722
    x724 = x717 - x723
    x725 = x716 + x724
    x726 = x5 * x725
    x727 = x157 + x31 * x708
    x728 = x5 * x727 - x6 * x710
    x729 = x4 * (x143 - x709 + x727)
    x730 = -x6 * x715 + x729
    x731 = x5 * x728 + x730
    x732 = -x6 * x725 + x99 * (-x711 + x714 + x728)
    x733 = x5 * x731 + x732
    x734 = x4 * (x165 + x713 - x719)
    x735 = x5 * x722
    x736 = x5 * x720
    x737 = x41 * x708
    x738 = x185 + x737
    x739 = x6 * x738
    x740 = x736 - x739
    x741 = x6 * x740
    x742 = x734 + x735 - x741
    x743 = x6 * x742
    x744 = x99 * (x715 - x718 + x721)
    x745 = x743 - x744
    x746 = -x743 + x744
    x747 = x726 + x746
    x748 = -x717
    x749 = x723 + x748
    x750 = x4 * (-x716 + x731 + x749)
    x751 = x3 * x733 - x6 * x747 + 3.0 * x750
    x752 = x3 * x747
    x753 = x5 * x742
    x754 = x4 * (x184 + x720 - x737)
    x755 = x5 * x740
    x756 = x5 * x738
    x757 = x62 * x708
    x758 = x211 + x757
    x759 = x6 * x758
    x760 = x756 - x759
    x761 = x6 * x760
    x762 = x754 + x755 - x761
    x763 = x6 * x762
    x764 = x99 * (x722 - x736 + x739)
    x765 = -x763 + x764
    x766 = x753 + x765
    x767 = x6 * x766
    x768 = -x734
    x769 = x741 + x768
    x770 = x4 * (x725 - x735 + x769)
    x771 = 3.0 * x770
    x772 = x752 - x767 + x771
    x773 = x3 * x725
    x774 = x3 * x731 + x732
    x775 = x763 - x764
    x776 = x4 * (x210 + x738 - x757)
    x777 = x240 + x708 * x92
    x778 = -x754
    x779 = x3 * x742
    x780 = x746 + x773
    x781 = x3 * x715
    x782 = 0.06666666666666667 * x140
    x783 = x147 * x708
    x784 = x368 + x783
    x785 = x5 * x784
    x786 = x152 * x708
    x787 = x375 + x786
    x788 = x6 * x787
    x789 = -x788
    x790 = x785 + x789
    x791 = x5 * x790
    x792 = x158 * x708 + x363
    x793 = -x6 * x784
    x794 = x5 * x792 + x793
    x795 = x4 * (x366 - x783 + x792)
    x796 = -x6 * x790 + x795
    x797 = x5 * x794 + x796
    x798 = x5 * x787
    x799 = x168 * x708
    x800 = x386 + x799
    x801 = x6 * x800
    x802 = x798 - x801
    x803 = x6 * x802
    x804 = x4 * (x400 + x784 - x786)
    x805 = x803 - x804
    x806 = -x803 + x804
    x807 = x791 + x806
    x808 = x4 * (-x785 + x788 + x794)
    x809 = x3 * x797 - x6 * x807 + 2.0 * x808
    x810 = x3 * x807
    x811 = x5 * x802
    x812 = x4 * (x383 + x787 - x799)
    x813 = x5 * x800
    x814 = x187 * x708
    x815 = x395 + x814
    x816 = x6 * x815
    x817 = x813 - x816
    x818 = x6 * x817
    x819 = x812 - x818
    x820 = x811 + x819
    x821 = x6 * x820
    x822 = x4 * (x790 - x798 + x801)
    x823 = 2.0 * x822
    x824 = x810 - x821 + x823
    x825 = x3 * x790
    x826 = x3 * x794 + x796
    x827 = -x812 + x818
    x828 = x4 * (x428 + x800 - x814)
    x829 = x213 * x708 + x430
    x830 = x3 * x802
    x831 = x806 + x825
    x832 = x3 * x784
    x833 = 2.23606797749979 * x782
    x834 = x257 * x708
    x835 = x437 + x834
    x836 = x5 * x835
    x837 = x262 * x708
    x838 = x444 + x837
    x839 = x6 * x838
    x840 = -x839
    x841 = x836 + x840
    x842 = x5 * x841
    x843 = x268 * x708 + x434
    x844 = -x6 * x835
    x845 = x5 * x843 + x844
    x846 = x4 * (x432 - x834 + x843)
    x847 = -x6 * x841 + x846
    x848 = x5 * x845 + x847
    x849 = x5 * x838
    x850 = x278 * x708
    x851 = x454 + x850
    x852 = x6 * x851
    x853 = x849 - x852
    x854 = x6 * x853
    x855 = x4 * (x443 + x835 - x837)
    x856 = -x855
    x857 = x854 + x856
    x858 = -x854 + x855
    x859 = x842 + x858
    x860 = x4 * (-x836 + x839 + x845)
    x861 = x3 * x848 - x6 * x859 + 2.0 * x860
    x862 = x3 * x859
    x863 = x5 * x853
    x864 = x4 * (x450 + x838 - x850)
    x865 = x5 * x851
    x866 = x297 * x708
    x867 = x463 + x866
    x868 = x6 * x867
    x869 = x865 - x868
    x870 = x6 * x869
    x871 = x864 - x870
    x872 = x863 + x871
    x873 = x6 * x872
    x874 = x4 * (x841 - x849 + x852)
    x875 = 2.0 * x874
    x876 = x862 - x873 + x875
    x877 = x3 * x841
    x878 = x3 * x845 + x847
    x879 = -x864
    x880 = x870 + x879
    x881 = x4 * (x462 + x851 - x866)
    x882 = x323 * x708 + x496
    x883 = x3 * x853
    x884 = x858 + x877
    x885 = x3 * x835
    x886 = x369 * x708
    x887 = x364 * x708 + x570
    x888 = x4 * (x574 - x886 + x887)
    x889 = x576 + x886
    x890 = -x6 * x889
    x891 = x3 * x887 + x890
    x892 = x376 * x708
    x893 = x583 + x892
    x894 = x3 * x893
    x895 = x387 * x708
    x896 = x595 + x895
    x897 = x6 * x896
    x898 = -x897
    x899 = x4 * (x588 + x889 - x892)
    x900 = -x899
    x901 = x3 * x889
    x902 = x6 * x893
    x903 = -x902
    x904 = x901 + x903
    x905 = x5 * x889
    x906 = x5 * x887 + x890
    x907 = x903 + x905
    x908 = x3 * x906 - x6 * x907 + x888
    x909 = x3 * x907
    x910 = x5 * x893
    x911 = x898 + x910
    x912 = x6 * x911
    x913 = x899 + x909 - x912
    x914 = x4 * (x601 + x893 - x895)
    x915 = x396 * x708 + x603
    x916 = x438 * x708
    x917 = x435 * x708 + x607
    x918 = x4 * (x610 - x916 + x917)
    x919 = x612 + x916
    x920 = -x6 * x919
    x921 = x3 * x917 + x920
    x922 = x445 * x708
    x923 = x618 + x922
    x924 = x3 * x923
    x925 = x455 * x708
    x926 = x629 + x925
    x927 = x6 * x926
    x928 = -x927
    x929 = x4 * (x623 + x919 - x922)
    x930 = -x929
    x931 = x3 * x919
    x932 = x6 * x923
    x933 = -x932
    x934 = x931 + x933
    x935 = x5 * x919
    x936 = x5 * x917 + x920
    x937 = x933 + x935
    x938 = x3 * x936 - x6 * x937 + x918
    x939 = x3 * x937
    x940 = x5 * x923
    x941 = x928 + x940
    x942 = x6 * x941
    x943 = x929 + x939 - x942
    x944 = x4 * (x635 + x923 - x925)
    x945 = x464 * x708 + x637
    x946 = 3.872983346207417
    x947 = x782 * x946
    x948 = x506 * x708
    x949 = x501 * x708 + x642
    x950 = x4 * (x640 - x948 + x949)
    x951 = x645 + x948
    x952 = -x6 * x951
    x953 = x3 * x949 + x952
    x954 = x513 * x708
    x955 = x651 + x954
    x956 = x3 * x955
    x957 = x524 * x708
    x958 = x661 + x957
    x959 = x6 * x958
    x960 = -x959
    x961 = x4 * (x650 + x951 - x954)
    x962 = -x961
    x963 = x3 * x951
    x964 = x6 * x955
    x965 = -x964
    x966 = x963 + x965
    x967 = x5 * x951
    x968 = x5 * x949 + x952
    x969 = x965 + x967
    x970 = x3 * x968 - x6 * x969 + x950
    x971 = x3 * x969
    x972 = x5 * x955
    x973 = x960 + x972
    x974 = x6 * x973
    x975 = x961 + x971 - x974
    x976 = x4 * (x660 + x955 - x957)
    x977 = x533 * x708 + x668
    x978 = x584 * x8
    x979 = x577 * x708
    x980 = 3.0 * x401
    x981 = 3.0 * x367 + x571 * x708 - x577 * x8
    x982 = x4 * (x978 - x979 - x980 + x981)
    x983 = -x978 + x979 + x980
    x984 = x3 * x981 - x6 * x983
    x985 = x3 * x983
    x986 = x584 * x708
    x987 = x596 * x8
    x988 = 3.0 * x384
    x989 = x986 - x987 + x988
    x990 = x6 * x989
    x991 = x985 - x990
    x992 = x4 * (x983 - x986 + x987 - x988)
    x993 = 3.0 * x429 + x596 * x708 - x604 * x8
    x994 = x619 * x8
    x995 = x613 * x708
    x996 = 2.0 * x468
    x997 = 2.0 * x436 + x608 * x708 - x613 * x8
    x998 = x4 * (x994 - x995 - x996 + x997)
    x999 = -x994 + x995 + x996
    x1000 = x3 * x997 - x6 * x999
    x1001 = x3 * x999
    x1002 = x619 * x708
    x1003 = x630 * x8
    x1004 = 2.0 * x452
    x1005 = x1002 - x1003 + x1004
    x1006 = x1005 * x6
    x1007 = x1001 - x1006
    x1008 = x4 * (-x1002 + x1003 - x1004 + x999)
    x1009 = 2.0 * x495 + x630 * x708 - x638 * x8
    x1010 = x652 * x8
    x1011 = x646 * x708
    x1012 = x504 + x643 * x708 - x646 * x8
    x1013 = x4 * (x1010 - x1011 + x1012 + x544)
    x1014 = -x1010 + x1011 + x538
    x1015 = x1012 * x3 - x1014 * x6
    x1016 = x1014 * x3
    x1017 = x652 * x708
    x1018 = x662 * x8
    x1019 = x1017 - x1018 + x521
    x1020 = x1019 * x6
    x1021 = x1016 - x1020
    x1022 = x4 * (x1014 - x1017 + x1018 + x564)
    x1023 = x566 + x662 * x708 - x669 * x8
    x1024 = x686 * x8
    x1025 = x679 * x708
    x1026 = x673 * x708 - x679 * x8
    x1027 = x4 * (x1024 - x1025 + x1026)
    x1028 = -x1024 + x1025
    x1029 = x1026 * x3 - x1028 * x6
    x1030 = x1028 * x3
    x1031 = x686 * x708
    x1032 = x698 * x8
    x1033 = x1031 - x1032
    x1034 = x1033 * x6
    x1035 = x1030 - x1034
    x1036 = x4 * (x1028 - x1031 + x1032)
    x1037 = x698 * x708 - x706 * x8
    x1038 = -x9 - A[2]
    x1039 = x1038 * x16
    x1040 = x1039 + x254
    x1041 = x1040 * x5
    x1042 = x1038 * x13
    x1043 = x1042 + x260
    x1044 = x1043 * x6
    x1045 = x1041 - x1044
    x1046 = x1045 * x5
    x1047 = x4 * (x1040 - x1042 + x259)
    x1048 = x1043 * x5
    x1049 = x1038 * x21
    x1050 = x1049 + x276
    x1051 = x1050 * x6
    x1052 = x1048 - x1051
    x1053 = x1052 * x6
    x1054 = x1047 - x1053
    x1055 = x1046 + x1054
    x1056 = x1055 * x5
    x1057 = x1038 * x31 + x267
    x1058 = -x1040 * x6 + x1057 * x5
    x1059 = x4 * (-x1039 + x1057 + x253)
    x1060 = -x1045 * x6 + x1059
    x1061 = x1058 * x5 + x1060
    x1062 = -x1055 * x6 + x99 * (-x1041 + x1044 + x1058)
    x1063 = x1061 * x5 + x1062
    x1064 = x4 * (x1043 - x1049 + x275)
    x1065 = x1052 * x5
    x1066 = x1050 * x5
    x1067 = x1038 * x41
    x1068 = x1067 + x295
    x1069 = x1068 * x6
    x1070 = x1066 - x1069
    x1071 = x1070 * x6
    x1072 = x1064 + x1065 - x1071
    x1073 = x1072 * x6
    x1074 = x99 * (x1045 - x1048 + x1051)
    x1075 = x1073 - x1074
    x1076 = -x1073 + x1074
    x1077 = x1056 + x1076
    x1078 = -x1047
    x1079 = x1053 + x1078
    x1080 = x4 * (-x1046 + x1061 + x1079)
    x1081 = x1063 * x3 - x1077 * x6 + 3.0 * x1080
    x1082 = x1077 * x3
    x1083 = x1072 * x5
    x1084 = x4 * (x1050 - x1067 + x294)
    x1085 = x1070 * x5
    x1086 = x1068 * x5
    x1087 = x1038 * x62
    x1088 = x1087 + x321
    x1089 = x1088 * x6
    x1090 = x1086 - x1089
    x1091 = x1090 * x6
    x1092 = x1084 + x1085 - x1091
    x1093 = x1092 * x6
    x1094 = x99 * (x1052 - x1066 + x1069)
    x1095 = -x1093 + x1094
    x1096 = x1083 + x1095
    x1097 = x1096 * x6
    x1098 = -x1064
    x1099 = x1071 + x1098
    x1100 = x4 * (x1055 - x1065 + x1099)
    x1101 = 3.0 * x1100
    x1102 = x1082 - x1097 + x1101
    x1103 = x1055 * x3
    x1104 = x1061 * x3 + x1062
    x1105 = x1093 - x1094
    x1106 = x4 * (x1068 - x1087 + x320)
    x1107 = x1038 * x92 + x350
    x1108 = -x1084
    x1109 = x1072 * x3
    x1110 = x1076 + x1103
    x1111 = x1045 * x3
    x1112 = x1040 * x145
    x1113 = x1043 * x8
    x1114 = -x1113
    x1115 = x1112 + x1114
    x1116 = x1115 * x5
    x1117 = x1043 * x145
    x1118 = x1050 * x8
    x1119 = -x1118
    x1120 = x1117 + x1119
    x1121 = x1120 * x6
    x1122 = -x1121
    x1123 = x1116 + x1122
    x1124 = x1123 * x5
    x1125 = -x1040 * x8
    x1126 = x1057 * x145 + x1125
    x1127 = -x1115 * x6
    x1128 = x1126 * x5 + x1127
    x1129 = x4 * (-x1112 + x1113 + x1126)
    x1130 = -x1123 * x6 + x1129
    x1131 = x1128 * x5 + x1130
    x1132 = x1120 * x5
    x1133 = x1050 * x145
    x1134 = x1068 * x8
    x1135 = -x1134
    x1136 = x1133 + x1135
    x1137 = x1136 * x6
    x1138 = x1132 - x1137
    x1139 = x1138 * x6
    x1140 = x4 * (x1115 - x1117 + x1118)
    x1141 = -x1140
    x1142 = x1139 + x1141
    x1143 = -x1139 + x1140
    x1144 = x1124 + x1143
    x1145 = x4 * (-x1116 + x1121 + x1128)
    x1146 = x1131 * x3 - x1144 * x6 + 2.0 * x1145
    x1147 = x1144 * x3
    x1148 = x1138 * x5
    x1149 = x4 * (x1120 - x1133 + x1134)
    x1150 = x1136 * x5
    x1151 = x1068 * x145
    x1152 = x1088 * x8
    x1153 = -x1152
    x1154 = x1151 + x1153
    x1155 = x1154 * x6
    x1156 = x1150 - x1155
    x1157 = x1156 * x6
    x1158 = x1149 - x1157
    x1159 = x1148 + x1158
    x1160 = x1159 * x6
    x1161 = x4 * (x1123 - x1132 + x1137)
    x1162 = 2.0 * x1161
    x1163 = x1147 - x1160 + x1162
    x1164 = x1123 * x3
    x1165 = x1128 * x3 + x1130
    x1166 = -x1149
    x1167 = x1157 + x1166
    x1168 = x4 * (x1136 - x1151 + x1152)
    x1169 = -x1107 * x8
    x1170 = x1088 * x145 + x1169
    x1171 = x1138 * x3
    x1172 = x1143 + x1164
    x1173 = x1115 * x3
    x1174 = x1038 * x257
    x1175 = x1174 + x505
    x1176 = x1175 * x5
    x1177 = x1038 * x262
    x1178 = x1177 + x512
    x1179 = x1178 * x6
    x1180 = -x1179
    x1181 = x1176 + x1180
    x1182 = x1181 * x5
    x1183 = x1038 * x268 + x500
    x1184 = -x1175 * x6
    x1185 = x1183 * x5 + x1184
    x1186 = x4 * (-x1174 + x1183 + x503)
    x1187 = -x1181 * x6 + x1186
    x1188 = x1185 * x5 + x1187
    x1189 = x1178 * x5
    x1190 = x1038 * x278
    x1191 = x1190 + x523
    x1192 = x1191 * x6
    x1193 = x1189 - x1192
    x1194 = x1193 * x6
    x1195 = x4 * (x1175 - x1177 + x537)
    x1196 = -x1195
    x1197 = x1194 + x1196
    x1198 = -x1194 + x1195
    x1199 = x1182 + x1198
    x1200 = x4 * (-x1176 + x1179 + x1185)
    x1201 = x1188 * x3 - x1199 * x6 + 2.0 * x1200
    x1202 = x1199 * x3
    x1203 = x1193 * x5
    x1204 = x4 * (x1178 - x1190 + x520)
    x1205 = x1191 * x5
    x1206 = x1038 * x297
    x1207 = x1206 + x532
    x1208 = x1207 * x6
    x1209 = x1205 - x1208
    x1210 = x1209 * x6
    x1211 = x1204 - x1210
    x1212 = x1203 + x1211
    x1213 = x1212 * x6
    x1214 = x4 * (x1181 - x1189 + x1192)
    x1215 = 2.0 * x1214
    x1216 = x1202 - x1213 + x1215
    x1217 = x1181 * x3
    x1218 = x1185 * x3 + x1187
    x1219 = -x1204
    x1220 = x1210 + x1219
    x1221 = x4 * (x1191 - x1206 + x565)
    x1222 = x1038 * x323 + x567
    x1223 = x1193 * x3
    x1224 = x1198 + x1217
    x1225 = x1175 * x3
    x1226 = x1115 * x145
    x1227 = x1059 - x1115 * x8
    x1228 = x1126 * x145 + x1227
    x1229 = x1120 * x8
    x1230 = x1078 + x1229
    x1231 = x4 * (-x1226 + x1228 + x1230)
    x1232 = x1047 - x1229
    x1233 = x1226 + x1232
    x1234 = -x1233 * x6
    x1235 = x1228 * x3 + x1234
    x1236 = x1120 * x145
    x1237 = x1136 * x8
    x1238 = x1064 - x1237
    x1239 = x1236 + x1238
    x1240 = x1239 * x3
    x1241 = x1136 * x145
    x1242 = x1154 * x8
    x1243 = x1084 - x1242
    x1244 = x1241 + x1243
    x1245 = x1244 * x6
    x1246 = -x1245
    x1247 = x1098 + x1237
    x1248 = x4 * (x1233 - x1236 + x1247)
    x1249 = -x1248
    x1250 = x1233 * x3
    x1251 = x1239 * x6
    x1252 = -x1251
    x1253 = x1250 + x1252
    x1254 = x1233 * x5
    x1255 = x1228 * x5 + x1234
    x1256 = x1252 + x1254
    x1257 = x1231 + x1255 * x3 - x1256 * x6
    x1258 = x1256 * x3
    x1259 = x1239 * x5
    x1260 = x1246 + x1259
    x1261 = x1260 * x6
    x1262 = x1248 + x1258 - x1261
    x1263 = x1108 + x1242
    x1264 = x4 * (x1239 - x1241 + x1263)
    x1265 = x1106 - x1170 * x8
    x1266 = x1154 * x145 + x1265
    x1267 = x1178 * x8
    x1268 = x1175 * x145
    x1269 = -x1175 * x8
    x1270 = x1183 * x145 + x1269
    x1271 = x4 * (x1267 - x1268 + x1270)
    x1272 = -x1267
    x1273 = x1268 + x1272
    x1274 = -x1273 * x6
    x1275 = x1270 * x3 + x1274
    x1276 = x1178 * x145
    x1277 = x1191 * x8
    x1278 = -x1277
    x1279 = x1276 + x1278
    x1280 = x1279 * x3
    x1281 = x1191 * x145
    x1282 = x1207 * x8
    x1283 = -x1282
    x1284 = x1281 + x1283
    x1285 = x1284 * x6
    x1286 = -x1285
    x1287 = x4 * (x1273 - x1276 + x1277)
    x1288 = -x1287
    x1289 = x1273 * x3
    x1290 = x1279 * x6
    x1291 = -x1290
    x1292 = x1289 + x1291
    x1293 = x1273 * x5
    x1294 = x1270 * x5 + x1274
    x1295 = x1291 + x1293
    x1296 = x1271 + x1294 * x3 - x1295 * x6
    x1297 = x1295 * x3
    x1298 = x1279 * x5
    x1299 = x1286 + x1298
    x1300 = x1299 * x6
    x1301 = x1287 + x1297 - x1300
    x1302 = x4 * (x1279 - x1281 + x1282)
    x1303 = -x1222 * x8
    x1304 = x1207 * x145 + x1303
    x1305 = x1038 * x506
    x1306 = x1038 * x501 + x672
    x1307 = x4 * (-x1305 + x1306 + x676)
    x1308 = x1305 + x678
    x1309 = -x1308 * x6
    x1310 = x1306 * x3 + x1309
    x1311 = x1038 * x513
    x1312 = x1311 + x685
    x1313 = x1312 * x3
    x1314 = x1038 * x524
    x1315 = x1314 + x697
    x1316 = x1315 * x6
    x1317 = -x1316
    x1318 = x4 * (x1308 - x1311 + x690)
    x1319 = -x1318
    x1320 = x1308 * x3
    x1321 = x1312 * x6
    x1322 = -x1321
    x1323 = x1320 + x1322
    x1324 = x1308 * x5
    x1325 = x1306 * x5 + x1309
    x1326 = x1322 + x1324
    x1327 = x1307 + x1325 * x3 - x1326 * x6
    x1328 = x1326 * x3
    x1329 = x1312 * x5
    x1330 = x1317 + x1329
    x1331 = x1330 * x6
    x1332 = x1318 + x1328 - x1331
    x1333 = x4 * (x1312 - x1314 + x703)
    x1334 = x1038 * x533 + x705
    x1335 = x1233 * x145
    x1336 = 2.0 * x1129 - x1233 * x8
    x1337 = x1228 * x145 + x1336
    x1338 = x1239 * x8
    x1339 = 2.0 * x1140
    x1340 = x1338 - x1339
    x1341 = x4 * (-x1335 + x1337 + x1340)
    x1342 = -x1338 + x1339
    x1343 = x1335 + x1342
    x1344 = x1337 * x3 - x1343 * x6
    x1345 = x1343 * x3
    x1346 = x1239 * x145
    x1347 = x1244 * x8
    x1348 = 2.0 * x1149
    x1349 = -x1347 + x1348
    x1350 = x1346 + x1349
    x1351 = x1350 * x6
    x1352 = x1345 - x1351
    x1353 = x1347 - x1348
    x1354 = x4 * (x1343 - x1346 + x1353)
    x1355 = 2.0 * x1168 - x1266 * x8
    x1356 = x1244 * x145 + x1355
    x1357 = x1273 * x145
    x1358 = x1186 - x1273 * x8
    x1359 = x1270 * x145 + x1358
    x1360 = x1279 * x8
    x1361 = x1196 + x1360
    x1362 = x4 * (-x1357 + x1359 + x1361)
    x1363 = x1195 - x1360
    x1364 = x1357 + x1363
    x1365 = x1359 * x3 - x1364 * x6
    x1366 = x1364 * x3
    x1367 = x1279 * x145
    x1368 = x1284 * x8
    x1369 = x1204 - x1368
    x1370 = x1367 + x1369
    x1371 = x1370 * x6
    x1372 = x1366 - x1371
    x1373 = x1219 + x1368
    x1374 = x4 * (x1364 - x1367 + x1373)
    x1375 = x1221 - x1304 * x8
    x1376 = x1284 * x145 + x1375
    x1377 = x1312 * x8
    x1378 = x1308 * x145
    x1379 = -x1308 * x8
    x1380 = x1306 * x145 + x1379
    x1381 = x4 * (x1377 - x1378 + x1380)
    x1382 = -x1377
    x1383 = x1378 + x1382
    x1384 = x1380 * x3 - x1383 * x6
    x1385 = x1383 * x3
    x1386 = x1312 * x145
    x1387 = x1315 * x8
    x1388 = -x1387
    x1389 = x1386 + x1388
    x1390 = x1389 * x6
    x1391 = x1385 - x1390
    x1392 = x4 * (x1383 - x1386 + x1387)
    x1393 = -x1334 * x8
    x1394 = x1315 * x145 + x1393
    x1395 = x10 * x686
    x1396 = x1038 * x679
    x1397 = 3.0 * x538
    x1398 = -x10 * x679 + x1038 * x673 + 3.0 * x504
    x1399 = x4 * (x1395 - x1396 - x1397 + x1398)
    x1400 = -x1395 + x1396 + x1397
    x1401 = x1398 * x3 - x1400 * x6
    x1402 = x1400 * x3
    x1403 = x1038 * x686
    x1404 = x10 * x698
    x1405 = 3.0 * x521
    x1406 = x1403 - x1404 + x1405
    x1407 = x1406 * x6
    x1408 = x1402 - x1407
    x1409 = x4 * (x1400 - x1403 + x1404 - x1405)
    x1410 = -x10 * x706 + x1038 * x698 + 3.0 * x566
    x1411 = x720 * x8
    x1412 = x708 * x713
    x1413 = x708 * x710
    x1414 = x713 * x8
    x1415 = x1413 - x1414 + x20
    x1416 = x4 * (x1411 - x1412 + x1415 + x75)
    x1417 = x1415 * x5
    x1418 = -x1411 + x1412 + x40
    x1419 = x1418 * x6
    x1420 = x1417 - x1419
    x1421 = x1420 * x5
    x1422 = x1418 * x5
    x1423 = x708 * x720
    x1424 = x738 * x8
    x1425 = x1423 - x1424 + x61
    x1426 = x1425 * x6
    x1427 = x1422 - x1426
    x1428 = x1427 * x6
    x1429 = x1416 + x1421 - x1428
    x1430 = x1429 * x5
    x1431 = x33 + x708 * x727 - x710 * x8
    x1432 = x4 * (-x1413 + x1414 + x1431 + x54)
    x1433 = -x1415 * x6 + x1431 * x5
    x1434 = -x1420 * x6 + x1432 + x1433 * x5
    x1435 = -x1429 * x6 + x99 * (-x1417 + x1419 + x1433)
    x1436 = x1434 * x5 + x1435
    x1437 = x4 * (x104 + x1418 - x1423 + x1424)
    x1438 = x1427 * x5
    x1439 = x1425 * x5
    x1440 = x708 * x738
    x1441 = x758 * x8
    x1442 = x1440 - x1441 + x90
    x1443 = x1442 * x6
    x1444 = x1439 - x1443
    x1445 = x1444 * x6
    x1446 = x1437 + x1438 - x1445
    x1447 = x1446 * x6
    x1448 = x99 * (x1420 - x1422 + x1426)
    x1449 = x1447 - x1448
    x1450 = x1430 - x1447 + x1448
    x1451 = -x1416
    x1452 = x4 * (x127 + x1425 - x1440 + x1441)
    x1453 = x125 + x708 * x758 - x777 * x8
    x1454 = -x1437
    x1455 = 0.02222222222222222 * x140 * x946
    x1456 = x708 * x784
    x1457 = x787 * x8
    x1458 = x1456 - x1457 + x173 + x717
    x1459 = x1458 * x5
    x1460 = x708 * x787
    x1461 = x8 * x800
    x1462 = x1460 - x1461 + x182 + x734
    x1463 = x1462 * x6
    x1464 = x1459 - x1463
    x1465 = x1464 * x5
    x1466 = x161 + x708 * x792 + x729 - x784 * x8
    x1467 = -x1458 * x6 + x1466 * x5
    x1468 = x4 * (-x1456 + x1457 + x1466 + x174 + x748)
    x1469 = -x1464 * x6 + x1468
    x1470 = x1467 * x5 + x1469
    x1471 = x1462 * x5
    x1472 = x708 * x800
    x1473 = x8 * x815
    x1474 = x1472 - x1473 + x208 + x754
    x1475 = x1474 * x6
    x1476 = x1471 - x1475
    x1477 = x1476 * x6
    x1478 = x4 * (x1458 - x1460 + x1461 + x202 + x768)
    x1479 = x1477 - x1478
    x1480 = x1465 - x1477 + x1478
    x1481 = x4 * (x1462 - x1472 + x1473 + x237 + x778)
    x1482 = x239 + x708 * x815 + x776 - x8 * x829
    x1483 = 1.732050807568877
    x1484 = 0.1111111111111111 * x140 * x1483
    x1485 = x708 * x835
    x1486 = x8 * x838
    x1487 = x1485 - x1486 + x283
    x1488 = x1487 * x5
    x1489 = x708 * x838
    x1490 = x8 * x851
    x1491 = x1489 - x1490 + x292
    x1492 = x1491 * x6
    x1493 = x1488 - x1492
    x1494 = x1493 * x5
    x1495 = x271 + x708 * x843 - x8 * x835
    x1496 = -x1487 * x6 + x1495 * x5
    x1497 = x4 * (-x1485 + x1486 + x1495 + x284)
    x1498 = -x1493 * x6 + x1497
    x1499 = x1496 * x5 + x1498
    x1500 = x1491 * x5
    x1501 = x708 * x851
    x1502 = x8 * x867
    x1503 = x1501 - x1502 + x318
    x1504 = x1503 * x6
    x1505 = x1500 - x1504
    x1506 = x1505 * x6
    x1507 = x4 * (x1487 - x1489 + x1490 + x312)
    x1508 = -x1507
    x1509 = x1506 + x1508
    x1510 = x1494 - x1506 + x1507
    x1511 = x4 * (x1491 - x1501 + x1502 + x347)
    x1512 = x349 + x708 * x867 - x8 * x882
    x1513 = 2.0 * x795
    x1514 = x1513 + x367 + x708 * x887 - x8 * x889
    x1515 = x708 * x893
    x1516 = x8 * x896
    x1517 = 2.0 * x812
    x1518 = x1515 - x1516 + x1517 + x384
    x1519 = x1518 * x6
    x1520 = x708 * x889
    x1521 = x8 * x893
    x1522 = 2.0 * x804
    x1523 = x1520 - x1521 + x1522 + x401
    x1524 = -x1523 * x6
    x1525 = x1523 * x5
    x1526 = x1514 * x5 + x1524
    x1527 = -x1522
    x1528 = x4 * (x1514 - x1520 + x1521 + x1527 + x407)
    x1529 = -x1519 + x1525
    x1530 = -x1517
    x1531 = x4 * (-x1515 + x1516 + x1523 + x1530 + x427)
    x1532 = 2.0 * x828
    x1533 = x1532 + x429 + x708 * x896 - x8 * x915
    x1534 = x436 + x708 * x917 - x8 * x919 + x846
    x1535 = x708 * x923
    x1536 = x8 * x926
    x1537 = x1535 - x1536 + x452 + x864
    x1538 = x1537 * x6
    x1539 = x708 * x919
    x1540 = x8 * x923
    x1541 = x1539 - x1540 + x468 + x855
    x1542 = -x1541 * x6
    x1543 = x1541 * x5
    x1544 = x1534 * x5 + x1542
    x1545 = x4 * (x1534 - x1539 + x1540 + x474 + x856)
    x1546 = -x1538 + x1543
    x1547 = x4 * (-x1535 + x1536 + x1541 + x494 + x879)
    x1548 = x495 + x708 * x926 - x8 * x945 + x881
    x1549 = 0.3333333333333333 * x140
    x1550 = x504 + x708 * x949 - x8 * x951
    x1551 = x708 * x955
    x1552 = x8 * x958
    x1553 = x1551 - x1552 + x521
    x1554 = x1553 * x6
    x1555 = x708 * x951
    x1556 = x8 * x955
    x1557 = x1555 - x1556 + x538
    x1558 = -x1557 * x6
    x1559 = x1557 * x5
    x1560 = x1550 * x5 + x1558
    x1561 = x4 * (x1550 - x1555 + x1556 + x544)
    x1562 = -x1554 + x1559
    x1563 = x4 * (-x1551 + x1552 + x1557 + x564)
    x1564 = x566 + x708 * x958 - x8 * x977
    x1565 = x8 * x989
    x1566 = x708 * x983
    x1567 = 3.0 * x899
    x1568 = x575 + x708 * x981 - x8 * x983 + 3.0 * x888
    x1569 = x4 * (x1565 - x1566 - x1567 + x1568 + x605)
    x1570 = -x1565 + x1566 + x1567 + x589
    x1571 = x602 + x708 * x989 - x8 * x993 + 3.0 * x914
    x1572 = x1005 * x8
    x1573 = x708 * x999
    x1574 = 2.0 * x929
    x1575 = -x1574
    x1576 = 2.0 * x918
    x1577 = x1576 + x611 + x708 * x997 - x8 * x999
    x1578 = x4 * (x1572 - x1573 + x1575 + x1577 + x639)
    x1579 = -x1572 + x1573 + x1574 + x624
    x1580 = 2.0 * x944
    x1581 = x1005 * x708 - x1009 * x8 + x1580 + x636
    x1582 = x1019 * x8
    x1583 = x1014 * x708
    x1584 = x1012 * x708 - x1014 * x8 + x644 + x950
    x1585 = x4 * (x1582 - x1583 + x1584 + x670 + x962)
    x1586 = -x1582 + x1583 + x656 + x961
    x1587 = x1019 * x708 - x1023 * x8 + x667 + x976
    x1588 = x1033 * x8
    x1589 = x1028 * x708
    x1590 = x1026 * x708 - x1028 * x8 + x677
    x1591 = x4 * (x1588 - x1589 + x1590 + x707)
    x1592 = -x1588 + x1589 + x691
    x1593 = x1033 * x708 - x1037 * x8 + x704
    x1594 = x1043 * x708
    x1595 = x1040 * x708
    x1596 = x1114 + x1595
    x1597 = x4 * (x1118 - x1594 + x1596)
    x1598 = x1596 * x5
    x1599 = x1119 + x1594
    x1600 = x1599 * x6
    x1601 = x1598 - x1600
    x1602 = x1601 * x5
    x1603 = x1599 * x5
    x1604 = x1050 * x708
    x1605 = x1135 + x1604
    x1606 = x1605 * x6
    x1607 = x1603 - x1606
    x1608 = x1607 * x6
    x1609 = x1597 + x1602 - x1608
    x1610 = x1609 * x5
    x1611 = x1057 * x708 + x1125
    x1612 = x4 * (x1113 - x1595 + x1611)
    x1613 = -x1596 * x6 + x1611 * x5
    x1614 = -x1601 * x6 + x1612 + x1613 * x5
    x1615 = -x1609 * x6 + x99 * (-x1598 + x1600 + x1613)
    x1616 = x1614 * x5 + x1615
    x1617 = x4 * (x1134 + x1599 - x1604)
    x1618 = x1607 * x5
    x1619 = x1605 * x5
    x1620 = x1068 * x708
    x1621 = x1153 + x1620
    x1622 = x1621 * x6
    x1623 = x1619 - x1622
    x1624 = x1623 * x6
    x1625 = x1617 + x1618 - x1624
    x1626 = x1625 * x6
    x1627 = x99 * (x1601 - x1603 + x1606)
    x1628 = x1626 - x1627
    x1629 = x1610 - x1626 + x1627
    x1630 = -x1597
    x1631 = x4 * (x1152 + x1605 - x1620)
    x1632 = x1088 * x708 + x1169
    x1633 = -x1617
    x1634 = x1115 * x708
    x1635 = x1232 + x1634
    x1636 = x1635 * x5
    x1637 = x1120 * x708
    x1638 = x1238 + x1637
    x1639 = x1638 * x6
    x1640 = x1636 - x1639
    x1641 = x1640 * x5
    x1642 = x1126 * x708 + x1227
    x1643 = -x1635 * x6 + x1642 * x5
    x1644 = x4 * (x1230 - x1634 + x1642)
    x1645 = -x1640 * x6 + x1644
    x1646 = x1643 * x5 + x1645
    x1647 = x1638 * x5
    x1648 = x1136 * x708
    x1649 = x1243 + x1648
    x1650 = x1649 * x6
    x1651 = x1647 - x1650
    x1652 = x1651 * x6
    x1653 = x4 * (x1247 + x1635 - x1637)
    x1654 = x1652 - x1653
    x1655 = x1641 - x1652 + x1653
    x1656 = x4 * (x1263 + x1638 - x1648)
    x1657 = x1154 * x708 + x1265
    x1658 = x1175 * x708
    x1659 = x1272 + x1658
    x1660 = x1659 * x5
    x1661 = x1178 * x708
    x1662 = x1278 + x1661
    x1663 = x1662 * x6
    x1664 = x1660 - x1663
    x1665 = x1664 * x5
    x1666 = x1183 * x708 + x1269
    x1667 = -x1659 * x6 + x1666 * x5
    x1668 = x4 * (x1267 - x1658 + x1666)
    x1669 = -x1664 * x6 + x1668
    x1670 = x1667 * x5 + x1669
    x1671 = x1662 * x5
    x1672 = x1191 * x708
    x1673 = x1283 + x1672
    x1674 = x1673 * x6
    x1675 = x1671 - x1674
    x1676 = x1675 * x6
    x1677 = x4 * (x1277 + x1659 - x1661)
    x1678 = -x1677
    x1679 = x1676 + x1678
    x1680 = x1665 - x1676 + x1677
    x1681 = x4 * (x1282 + x1662 - x1672)
    x1682 = x1207 * x708 + x1303
    x1683 = x1228 * x708 + x1336
    x1684 = x1239 * x708
    x1685 = x1349 + x1684
    x1686 = x1685 * x6
    x1687 = x1233 * x708
    x1688 = x1342 + x1687
    x1689 = -x1688 * x6
    x1690 = x1688 * x5
    x1691 = x1683 * x5 + x1689
    x1692 = x4 * (x1340 + x1683 - x1687)
    x1693 = -x1686 + x1690
    x1694 = x4 * (x1353 - x1684 + x1688)
    x1695 = x1244 * x708 + x1355
    x1696 = x1270 * x708 + x1358
    x1697 = x1279 * x708
    x1698 = x1369 + x1697
    x1699 = x1698 * x6
    x1700 = x1273 * x708
    x1701 = x1363 + x1700
    x1702 = -x1701 * x6
    x1703 = x1701 * x5
    x1704 = x1696 * x5 + x1702
    x1705 = x4 * (x1361 + x1696 - x1700)
    x1706 = -x1699 + x1703
    x1707 = x4 * (x1373 - x1697 + x1701)
    x1708 = x1284 * x708 + x1375
    x1709 = x1483 * x1549
    x1710 = x1306 * x708 + x1379
    x1711 = x1312 * x708
    x1712 = x1388 + x1711
    x1713 = x1712 * x6
    x1714 = x1308 * x708
    x1715 = x1382 + x1714
    x1716 = -x1715 * x6
    x1717 = x1715 * x5
    x1718 = x1710 * x5 + x1716
    x1719 = x4 * (x1377 + x1710 - x1714)
    x1720 = -x1713 + x1717
    x1721 = x4 * (x1387 - x1711 + x1715)
    x1722 = x1315 * x708 + x1393
    x1723 = x1350 * x8
    x1724 = x1343 * x708
    x1725 = 3.0 * x1248
    x1726 = 3.0 * x1231 + x1337 * x708 - x1343 * x8
    x1727 = x4 * (x1723 - x1724 - x1725 + x1726)
    x1728 = -x1723 + x1724 + x1725
    x1729 = 3.0 * x1264 + x1350 * x708 - x1356 * x8
    x1730 = x1370 * x8
    x1731 = x1364 * x708
    x1732 = 2.0 * x1287
    x1733 = 2.0 * x1271 + x1359 * x708 - x1364 * x8
    x1734 = x4 * (x1730 - x1731 - x1732 + x1733)
    x1735 = -x1730 + x1731 + x1732
    x1736 = 2.0 * x1302 + x1370 * x708 - x1376 * x8
    x1737 = x1389 * x8
    x1738 = x1383 * x708
    x1739 = x1307 + x1380 * x708 - x1383 * x8
    x1740 = x4 * (x1319 + x1737 - x1738 + x1739)
    x1741 = x1318 - x1737 + x1738
    x1742 = x1333 + x1389 * x708 - x1394 * x8
    x1743 = x1406 * x8
    x1744 = x1400 * x708
    x1745 = x1398 * x708 - x1400 * x8
    x1746 = x4 * (x1743 - x1744 + x1745)
    x1747 = -x1743 + x1744
    x1748 = x1406 * x708 - x1410 * x8
    x1749 = x10 * x1050
    x1750 = x1038 * x1043
    x1751 = x1038 * x1040
    x1752 = x10 * x1043
    x1753 = x1751 - x1752 + x20
    x1754 = x4 * (x1749 - x1750 + x1753 + x75)
    x1755 = x1753 * x5
    x1756 = -x1749 + x1750 + x40
    x1757 = x1756 * x6
    x1758 = x1755 - x1757
    x1759 = x1758 * x5
    x1760 = x1756 * x5
    x1761 = x1038 * x1050
    x1762 = x10 * x1068
    x1763 = x1761 - x1762 + x61
    x1764 = x1763 * x6
    x1765 = x1760 - x1764
    x1766 = x1765 * x6
    x1767 = x1754 + x1759 - x1766
    x1768 = x1767 * x5
    x1769 = -x10 * x1040 + x1038 * x1057 + x33
    x1770 = x4 * (-x1751 + x1752 + x1769 + x54)
    x1771 = -x1753 * x6 + x1769 * x5
    x1772 = -x1758 * x6 + x1770 + x1771 * x5
    x1773 = -x1767 * x6 + x99 * (-x1755 + x1757 + x1771)
    x1774 = x1772 * x5 + x1773
    x1775 = x4 * (x104 + x1756 - x1761 + x1762)
    x1776 = x1765 * x5
    x1777 = x1763 * x5
    x1778 = x1038 * x1068
    x1779 = x10 * x1088
    x1780 = x1778 - x1779 + x90
    x1781 = x1780 * x6
    x1782 = x1777 - x1781
    x1783 = x1782 * x6
    x1784 = x1775 + x1776 - x1783
    x1785 = x1784 * x6
    x1786 = x99 * (x1758 - x1760 + x1764)
    x1787 = x1785 - x1786
    x1788 = x1768 - x1785 + x1786
    x1789 = -x1754
    x1790 = x4 * (x127 + x1763 - x1778 + x1779)
    x1791 = -x10 * x1107 + x1038 * x1088 + x125
    x1792 = -x1775
    x1793 = x145 * x1753
    x1794 = x1756 * x8
    x1795 = -x1794
    x1796 = x1793 + x1795
    x1797 = x1796 * x5
    x1798 = x145 * x1756
    x1799 = x1763 * x8
    x1800 = -x1799
    x1801 = x1798 + x1800
    x1802 = x1801 * x6
    x1803 = x1797 - x1802
    x1804 = x1803 * x5
    x1805 = -x1753 * x8
    x1806 = x145 * x1769 + x1805
    x1807 = -x1796 * x6 + x1806 * x5
    x1808 = x4 * (-x1793 + x1794 + x1806)
    x1809 = -x1803 * x6 + x1808
    x1810 = x1807 * x5 + x1809
    x1811 = x1801 * x5
    x1812 = x145 * x1763
    x1813 = x1780 * x8
    x1814 = -x1813
    x1815 = x1812 + x1814
    x1816 = x1815 * x6
    x1817 = x1811 - x1816
    x1818 = x1817 * x6
    x1819 = x4 * (x1796 - x1798 + x1799)
    x1820 = -x1819
    x1821 = x1818 + x1820
    x1822 = x1804 - x1818 + x1819
    x1823 = x4 * (x1801 - x1812 + x1813)
    x1824 = -x1791 * x8
    x1825 = x145 * x1780 + x1824
    x1826 = x1038 * x1175
    x1827 = x10 * x1178
    x1828 = x1047 + x1826 - x1827 + x283
    x1829 = x1828 * x5
    x1830 = x1038 * x1178
    x1831 = x10 * x1191
    x1832 = x1064 + x1830 - x1831 + x292
    x1833 = x1832 * x6
    x1834 = x1829 - x1833
    x1835 = x1834 * x5
    x1836 = -x10 * x1175 + x1038 * x1183 + x1059 + x271
    x1837 = -x1828 * x6 + x1836 * x5
    x1838 = x4 * (x1078 - x1826 + x1827 + x1836 + x284)
    x1839 = -x1834 * x6 + x1838
    x1840 = x1837 * x5 + x1839
    x1841 = x1832 * x5
    x1842 = x1038 * x1191
    x1843 = x10 * x1207
    x1844 = x1084 + x1842 - x1843 + x318
    x1845 = x1844 * x6
    x1846 = x1841 - x1845
    x1847 = x1846 * x6
    x1848 = x4 * (x1098 + x1828 - x1830 + x1831 + x312)
    x1849 = -x1848
    x1850 = x1847 + x1849
    x1851 = x1835 - x1847 + x1848
    x1852 = x4 * (x1108 + x1832 - x1842 + x1843 + x347)
    x1853 = -x10 * x1222 + x1038 * x1207 + x1106 + x349
    x1854 = x1770 - x1796 * x8
    x1855 = x145 * x1806 + x1854
    x1856 = x145 * x1801
    x1857 = x1815 * x8
    x1858 = x1775 - x1857
    x1859 = x1856 + x1858
    x1860 = x1859 * x6
    x1861 = x145 * x1796
    x1862 = x1801 * x8
    x1863 = x1754 - x1862
    x1864 = x1861 + x1863
    x1865 = -x1864 * x6
    x1866 = x1864 * x5
    x1867 = x1855 * x5 + x1865
    x1868 = x1789 + x1862
    x1869 = x4 * (x1855 - x1861 + x1868)
    x1870 = -x1860 + x1866
    x1871 = x1792 + x1857
    x1872 = x4 * (-x1856 + x1864 + x1871)
    x1873 = x1790 - x1825 * x8
    x1874 = x145 * x1815 + x1873
    x1875 = -x1828 * x8
    x1876 = x145 * x1836 + x1875
    x1877 = x145 * x1832
    x1878 = x1844 * x8
    x1879 = -x1878
    x1880 = x1877 + x1879
    x1881 = x1880 * x6
    x1882 = x145 * x1828
    x1883 = x1832 * x8
    x1884 = -x1883
    x1885 = x1882 + x1884
    x1886 = -x1885 * x6
    x1887 = x1885 * x5
    x1888 = x1876 * x5 + x1886
    x1889 = x4 * (x1876 - x1882 + x1883)
    x1890 = -x1881 + x1887
    x1891 = x4 * (-x1877 + x1878 + x1885)
    x1892 = -x1853 * x8
    x1893 = x145 * x1844 + x1892
    x1894 = 2.0 * x1186
    x1895 = -x10 * x1308 + x1038 * x1306 + x1894 + x504
    x1896 = x1038 * x1312
    x1897 = x10 * x1315
    x1898 = 2.0 * x1204
    x1899 = x1896 - x1897 + x1898 + x521
    x1900 = x1899 * x6
    x1901 = x1038 * x1308
    x1902 = x10 * x1312
    x1903 = 2.0 * x1195
    x1904 = x1901 - x1902 + x1903 + x538
    x1905 = -x1904 * x6
    x1906 = x1904 * x5
    x1907 = x1895 * x5 + x1905
    x1908 = -x1903
    x1909 = x4 * (x1895 - x1901 + x1902 + x1908 + x544)
    x1910 = -x1900 + x1906
    x1911 = -x1898
    x1912 = x4 * (-x1896 + x1897 + x1904 + x1911 + x564)
    x1913 = 2.0 * x1221
    x1914 = -x10 * x1334 + x1038 * x1315 + x1913 + x566
    x1915 = x145 * x1864
    x1916 = 2.0 * x1808 - x1864 * x8
    x1917 = x145 * x1855 + x1916
    x1918 = x1859 * x8
    x1919 = 2.0 * x1819
    x1920 = x1918 - x1919
    x1921 = x4 * (-x1915 + x1917 + x1920)
    x1922 = -x1918 + x1919
    x1923 = x1915 + x1922
    x1924 = 2.0 * x1823 - x1874 * x8
    x1925 = x145 * x1859 + x1924
    x1926 = x145 * x1885
    x1927 = x1838 - x1885 * x8
    x1928 = x145 * x1876 + x1927
    x1929 = x1880 * x8
    x1930 = x1849 + x1929
    x1931 = x4 * (-x1926 + x1928 + x1930)
    x1932 = x1848 - x1929
    x1933 = x1926 + x1932
    x1934 = x1852 - x1893 * x8
    x1935 = x145 * x1880 + x1934
    x1936 = x1899 * x8
    x1937 = x145 * x1904
    x1938 = -x1904 * x8
    x1939 = x145 * x1895 + x1938
    x1940 = x4 * (x1936 - x1937 + x1939)
    x1941 = -x1936
    x1942 = x1937 + x1941
    x1943 = -x1914 * x8
    x1944 = x145 * x1899 + x1943
    x1945 = x10 * x1406
    x1946 = x1038 * x1400
    x1947 = 3.0 * x1318
    x1948 = -x10 * x1400 + x1038 * x1398 + 3.0 * x1307 + x677
    x1949 = x4 * (x1945 - x1946 - x1947 + x1948 + x707)
    x1950 = -x1945 + x1946 + x1947 + x691
    x1951 = -x10 * x1410 + x1038 * x1406 + 3.0 * x1333 + x704
    x1952 = x1418 * x8
    x1953 = x1415 * x708
    x1954 = 2.0 * x717
    x1955 = -x1415 * x8 + x1431 * x708 + 2.0 * x729
    x1956 = x4 * (x1952 - x1953 - x1954 + x1955)
    x1957 = -x1952 + x1953 + x1954
    x1958 = x1955 * x5 - x1957 * x6
    x1959 = x1957 * x5
    x1960 = x1418 * x708
    x1961 = x1425 * x8
    x1962 = 2.0 * x734
    x1963 = x1960 - x1961 + x1962
    x1964 = x1963 * x6
    x1965 = x1959 - x1964
    x1966 = x1956 + x1958 * x5 - x1965 * x6
    x1967 = x4 * (x1957 - x1960 + x1961 - x1962)
    x1968 = x1965 * x5
    x1969 = x1963 * x5
    x1970 = x1425 * x708
    x1971 = x1442 * x8
    x1972 = 2.0 * x754
    x1973 = x1970 - x1971 + x1972
    x1974 = x1973 * x6
    x1975 = x1969 - x1974
    x1976 = x1975 * x6
    x1977 = x1967 + x1968 - x1976
    x1978 = x4 * (x1963 - x1970 + x1971 - x1972)
    x1979 = x1442 * x708 - x1453 * x8 + 2.0 * x776
    x1980 = -x1967
    x1981 = x1462 * x8
    x1982 = x1458 * x708
    x1983 = x1432 - x1458 * x8 + x1466 * x708 + x1513
    x1984 = x4 * (x1451 + x1527 + x1981 - x1982 + x1983)
    x1985 = x1416 + x1522 - x1981 + x1982
    x1986 = x1983 * x5 - x1985 * x6
    x1987 = x1985 * x5
    x1988 = x1462 * x708
    x1989 = x1474 * x8
    x1990 = x1437 + x1517 + x1988 - x1989
    x1991 = x1990 * x6
    x1992 = x1987 - x1991
    x1993 = x4 * (x1454 + x1530 + x1985 - x1988 + x1989)
    x1994 = x1452 + x1474 * x708 - x1482 * x8 + x1532
    x1995 = x1491 * x8
    x1996 = x1487 * x708
    x1997 = 2.0 * x855
    x1998 = -x1487 * x8 + x1495 * x708 + 2.0 * x846
    x1999 = x4 * (x1995 - x1996 - x1997 + x1998)
    x2000 = -x1995 + x1996 + x1997
    x2001 = x1998 * x5 - x2000 * x6
    x2002 = x2000 * x5
    x2003 = x1491 * x708
    x2004 = x1503 * x8
    x2005 = 2.0 * x864
    x2006 = x2003 - x2004 + x2005
    x2007 = x2006 * x6
    x2008 = x2002 - x2007
    x2009 = x4 * (x2000 - x2003 + x2004 - x2005)
    x2010 = x1503 * x708 - x1512 * x8 + 2.0 * x881
    x2011 = x1518 * x8
    x2012 = x1523 * x708
    x2013 = 2.0 * x899
    x2014 = 2.0 * x1478
    x2015 = 2.0 * x1468 + x1514 * x708 - x1523 * x8 + 2.0 * x888
    x2016 = x4 * (x2011 - x2012 - x2013 - x2014 + x2015)
    x2017 = -x2011 + x2012 + x2013 + x2014
    x2018 = 2.0 * x1481 + x1518 * x708 - x1533 * x8 + 2.0 * x914
    x2019 = x1537 * x8
    x2020 = x1541 * x708
    x2021 = x1497 + x1534 * x708 - x1541 * x8 + x1576
    x2022 = x4 * (x1508 + x1575 + x2019 - x2020 + x2021)
    x2023 = x1507 + x1574 - x2019 + x2020
    x2024 = x1511 + x1537 * x708 - x1548 * x8 + x1580
    x2025 = x1553 * x8
    x2026 = x1557 * x708
    x2027 = 2.0 * x961
    x2028 = x1550 * x708 - x1557 * x8 + 2.0 * x950
    x2029 = x4 * (x2025 - x2026 - x2027 + x2028)
    x2030 = -x2025 + x2026 + x2027
    x2031 = x1553 * x708 - x1564 * x8 + 2.0 * x976
    x2032 = 3.0 * x1528
    x2033 = x1568 * x708 - x1570 * x8 + x2032 + 2.0 * x982
    x2034 = 3.0 * x1531
    x2035 = x1570 * x708 - x1571 * x8 + x2034 + 2.0 * x992
    x2036 = 2.0 * x1545 + x1577 * x708 - x1579 * x8 + 2.0 * x998
    x2037 = 2.0 * x1008 + 2.0 * x1547 + x1579 * x708 - x1581 * x8
    x2038 = 2.0 * x1013 + x1561 + x1584 * x708 - x1586 * x8
    x2039 = 2.0 * x1022 + x1563 + x1586 * x708 - x1587 * x8
    x2040 = 2.0 * x1027 + x1590 * x708 - x1592 * x8
    x2041 = 2.0 * x1036 + x1592 * x708 - x1593 * x8
    x2042 = x1599 * x8
    x2043 = x1596 * x708
    x2044 = x1059 - x1596 * x8 + x1611 * x708
    x2045 = x4 * (x1078 + x2042 - x2043 + x2044)
    x2046 = x1047 - x2042 + x2043
    x2047 = x2044 * x5 - x2046 * x6
    x2048 = x2046 * x5
    x2049 = x1599 * x708
    x2050 = x1605 * x8
    x2051 = x1064 + x2049 - x2050
    x2052 = x2051 * x6
    x2053 = x2048 - x2052
    x2054 = x2045 + x2047 * x5 - x2053 * x6
    x2055 = x4 * (x1098 + x2046 - x2049 + x2050)
    x2056 = x2053 * x5
    x2057 = x2051 * x5
    x2058 = x1605 * x708
    x2059 = x1621 * x8
    x2060 = x1084 + x2058 - x2059
    x2061 = x2060 * x6
    x2062 = x2057 - x2061
    x2063 = x2062 * x6
    x2064 = x2055 + x2056 - x2063
    x2065 = x4 * (x1108 + x2051 - x2058 + x2059)
    x2066 = x1106 + x1621 * x708 - x1632 * x8
    x2067 = -x2055
    x2068 = x1638 * x8
    x2069 = x1635 * x708
    x2070 = x1129 + x1612 - x1635 * x8 + x1642 * x708
    x2071 = x4 * (x1141 + x1630 + x2068 - x2069 + x2070)
    x2072 = x1140 + x1597 - x2068 + x2069
    x2073 = x2070 * x5 - x2072 * x6
    x2074 = x2072 * x5
    x2075 = x1638 * x708
    x2076 = x1649 * x8
    x2077 = x1149 + x1617 + x2075 - x2076
    x2078 = x2077 * x6
    x2079 = x2074 - x2078
    x2080 = x4 * (x1166 + x1633 + x2072 - x2075 + x2076)
    x2081 = x1168 + x1631 + x1649 * x708 - x1657 * x8
    x2082 = x1662 * x8
    x2083 = x1659 * x708
    x2084 = x1186 - x1659 * x8 + x1666 * x708
    x2085 = x4 * (x1196 + x2082 - x2083 + x2084)
    x2086 = x1195 - x2082 + x2083
    x2087 = x2084 * x5 - x2086 * x6
    x2088 = x2086 * x5
    x2089 = x1662 * x708
    x2090 = x1673 * x8
    x2091 = x1204 + x2089 - x2090
    x2092 = x2091 * x6
    x2093 = x2088 - x2092
    x2094 = x4 * (x1219 + x2086 - x2089 + x2090)
    x2095 = x1221 + x1673 * x708 - x1682 * x8
    x2096 = x1685 * x8
    x2097 = x1688 * x708
    x2098 = 2.0 * x1653
    x2099 = -x2098
    x2100 = 2.0 * x1644
    x2101 = x1231 + x1683 * x708 - x1688 * x8 + x2100
    x2102 = x4 * (x1249 + x2096 - x2097 + x2099 + x2101)
    x2103 = x1248 - x2096 + x2097 + x2098
    x2104 = 2.0 * x1656
    x2105 = x1264 + x1685 * x708 - x1695 * x8 + x2104
    x2106 = x1698 * x8
    x2107 = x1701 * x708
    x2108 = x1271 + x1668 + x1696 * x708 - x1701 * x8
    x2109 = x4 * (x1288 + x1678 + x2106 - x2107 + x2108)
    x2110 = x1287 + x1677 - x2106 + x2107
    x2111 = x1302 + x1681 + x1698 * x708 - x1708 * x8
    x2112 = x1712 * x8
    x2113 = x1715 * x708
    x2114 = x1307 + x1710 * x708 - x1715 * x8
    x2115 = x4 * (x1319 + x2112 - x2113 + x2114)
    x2116 = x1318 - x2112 + x2113
    x2117 = x1333 + x1712 * x708 - x1722 * x8
    x2118 = x1341 + 3.0 * x1692 + x1726 * x708 - x1728 * x8
    x2119 = x1354 + 3.0 * x1694 + x1728 * x708 - x1729 * x8
    x2120 = 2.0 * x1705
    x2121 = x1362 + x1733 * x708 - x1735 * x8 + x2120
    x2122 = 2.0 * x1707
    x2123 = x1374 + x1735 * x708 - x1736 * x8 + x2122
    x2124 = x1381 + x1719 + x1739 * x708 - x1741 * x8
    x2125 = x1392 + x1721 + x1741 * x708 - x1742 * x8
    x2126 = x1399 + x1745 * x708 - x1747 * x8
    x2127 = x1409 + x1747 * x708 - x1748 * x8
    x2128 = x1753 * x708
    x2129 = x1769 * x708 + x1805
    x2130 = x4 * (x1794 - x2128 + x2129)
    x2131 = x1795 + x2128
    x2132 = x2129 * x5 - x2131 * x6
    x2133 = x2131 * x5
    x2134 = x1756 * x708
    x2135 = x1800 + x2134
    x2136 = x2135 * x6
    x2137 = x2133 - x2136
    x2138 = x2130 + x2132 * x5 - x2137 * x6
    x2139 = x4 * (x1799 + x2131 - x2134)
    x2140 = x2137 * x5
    x2141 = x2135 * x5
    x2142 = x1763 * x708
    x2143 = x1814 + x2142
    x2144 = x2143 * x6
    x2145 = x2141 - x2144
    x2146 = x2145 * x6
    x2147 = x2139 + x2140 - x2146
    x2148 = x4 * (x1813 + x2135 - x2142)
    x2149 = x1780 * x708 + x1824
    x2150 = -x2139
    x2151 = x1796 * x708
    x2152 = x1806 * x708 + x1854
    x2153 = x4 * (x1868 - x2151 + x2152)
    x2154 = x1863 + x2151
    x2155 = x2152 * x5 - x2154 * x6
    x2156 = x2154 * x5
    x2157 = x1801 * x708
    x2158 = x1858 + x2157
    x2159 = x2158 * x6
    x2160 = x2156 - x2159
    x2161 = x4 * (x1871 + x2154 - x2157)
    x2162 = x1815 * x708 + x1873
    x2163 = x1828 * x708
    x2164 = x1836 * x708 + x1875
    x2165 = x4 * (x1883 - x2163 + x2164)
    x2166 = x1884 + x2163
    x2167 = x2164 * x5 - x2166 * x6
    x2168 = x2166 * x5
    x2169 = x1832 * x708
    x2170 = x1879 + x2169
    x2171 = x2170 * x6
    x2172 = x2168 - x2171
    x2173 = x4 * (x1878 + x2166 - x2169)
    x2174 = x1844 * x708 + x1892
    x2175 = x1864 * x708
    x2176 = x1855 * x708 + x1916
    x2177 = x4 * (x1920 - x2175 + x2176)
    x2178 = x1922 + x2175
    x2179 = x1859 * x708 + x1924
    x2180 = x1885 * x708
    x2181 = x1876 * x708 + x1927
    x2182 = x4 * (x1930 - x2180 + x2181)
    x2183 = x1932 + x2180
    x2184 = x1880 * x708 + x1934
    x2185 = x1904 * x708
    x2186 = x1895 * x708 + x1938
    x2187 = x4 * (x1936 - x2185 + x2186)
    x2188 = x1941 + x2185
    x2189 = x1899 * x708 + x1943
    x2190 = 3.0 * x1869 + x1917 * x708 - x1923 * x8
    x2191 = 3.0 * x1872 + x1923 * x708 - x1925 * x8
    x2192 = 2.0 * x1889 + x1928 * x708 - x1933 * x8
    x2193 = 2.0 * x1891 + x1933 * x708 - x1935 * x8
    x2194 = x1909 + x1939 * x708 - x1942 * x8
    x2195 = x1912 + x1942 * x708 - x1944 * x8
    x2196 = x1948 * x708 - x1950 * x8
    x2197 = x1950 * x708 - x1951 * x8
    x2198 = x10 * x1756
    x2199 = x1038 * x1753
    x2200 = 2.0 * x1047
    x2201 = -x10 * x1753 + x1038 * x1769 + 2.0 * x1059
    x2202 = x4 * (x2198 - x2199 - x2200 + x2201)
    x2203 = -x2198 + x2199 + x2200
    x2204 = x2201 * x5 - x2203 * x6
    x2205 = x2203 * x5
    x2206 = x1038 * x1756
    x2207 = x10 * x1763
    x2208 = 2.0 * x1064
    x2209 = x2206 - x2207 + x2208
    x2210 = x2209 * x6
    x2211 = x2205 - x2210
    x2212 = x2202 + x2204 * x5 - x2211 * x6
    x2213 = x4 * (x2203 - x2206 + x2207 - x2208)
    x2214 = x2211 * x5
    x2215 = x2209 * x5
    x2216 = x1038 * x1763
    x2217 = x10 * x1780
    x2218 = 2.0 * x1084
    x2219 = x2216 - x2217 + x2218
    x2220 = x2219 * x6
    x2221 = x2215 - x2220
    x2222 = x2221 * x6
    x2223 = x2213 + x2214 - x2222
    x2224 = x4 * (x2209 - x2216 + x2217 - x2218)
    x2225 = -x10 * x1791 + x1038 * x1780 + 2.0 * x1106
    x2226 = -x2213
    x2227 = x2209 * x8
    x2228 = x145 * x2203
    x2229 = -x2203 * x8
    x2230 = x145 * x2201 + x2229
    x2231 = x4 * (x2227 - x2228 + x2230)
    x2232 = -x2227
    x2233 = x2228 + x2232
    x2234 = x2230 * x5 - x2233 * x6
    x2235 = x2233 * x5
    x2236 = x145 * x2209
    x2237 = x2219 * x8
    x2238 = -x2237
    x2239 = x2236 + x2238
    x2240 = x2239 * x6
    x2241 = x2235 - x2240
    x2242 = x4 * (x2233 - x2236 + x2237)
    x2243 = -x2225 * x8
    x2244 = x145 * x2219 + x2243
    x2245 = x10 * x1832
    x2246 = x1038 * x1828
    x2247 = -x10 * x1828 + x1038 * x1836 + x1770 + x1894
    x2248 = x4 * (x1789 + x1908 + x2245 - x2246 + x2247)
    x2249 = x1754 + x1903 - x2245 + x2246
    x2250 = x2247 * x5 - x2249 * x6
    x2251 = x2249 * x5
    x2252 = x1038 * x1832
    x2253 = x10 * x1844
    x2254 = x1775 + x1898 + x2252 - x2253
    x2255 = x2254 * x6
    x2256 = x2251 - x2255
    x2257 = x4 * (x1792 + x1911 + x2249 - x2252 + x2253)
    x2258 = -x10 * x1853 + x1038 * x1844 + x1790 + x1913
    x2259 = x145 * x2233
    x2260 = x2202 - x2233 * x8
    x2261 = x145 * x2230 + x2260
    x2262 = x2239 * x8
    x2263 = x2226 + x2262
    x2264 = x4 * (-x2259 + x2261 + x2263)
    x2265 = x2213 - x2262
    x2266 = x2259 + x2265
    x2267 = x2224 - x2244 * x8
    x2268 = x145 * x2239 + x2267
    x2269 = x2254 * x8
    x2270 = x145 * x2249
    x2271 = -x2249 * x8
    x2272 = x145 * x2247 + x2271
    x2273 = x4 * (x2269 - x2270 + x2272)
    x2274 = -x2269
    x2275 = x2270 + x2274
    x2276 = -x2258 * x8
    x2277 = x145 * x2254 + x2276
    x2278 = x10 * x1899
    x2279 = x1038 * x1904
    x2280 = 2.0 * x1318
    x2281 = 2.0 * x1848
    x2282 = -x10 * x1904 + x1038 * x1895 + 2.0 * x1307 + 2.0 * x1838
    x2283 = x4 * (x2278 - x2279 - x2280 - x2281 + x2282)
    x2284 = -x2278 + x2279 + x2280 + x2281
    x2285 = -x10 * x1914 + x1038 * x1899 + 2.0 * x1333 + 2.0 * x1852
    x2286 = 2.0 * x2231 - x2266 * x8
    x2287 = x145 * x2261 + x2286
    x2288 = 2.0 * x2242 - x2268 * x8
    x2289 = x145 * x2266 + x2288
    x2290 = x2248 - x2275 * x8
    x2291 = x145 * x2272 + x2290
    x2292 = x2257 - x2277 * x8
    x2293 = x145 * x2275 + x2292
    x2294 = -x2284 * x8
    x2295 = x145 * x2282 + x2294
    x2296 = -x2285 * x8
    x2297 = x145 * x2284 + x2296
    x2298 = 3.0 * x1909
    x2299 = -x10 * x1950 + x1038 * x1948 + 2.0 * x1399 + x2298
    x2300 = 3.0 * x1912
    x2301 = -x10 * x1951 + x1038 * x1950 + 2.0 * x1409 + x2300
    x2302 = x1963 * x8
    x2303 = x1957 * x708
    x2304 = 3.0 * x1416
    x2305 = 3.0 * x1432 + x1955 * x708 - x1957 * x8
    x2306 = -x2302 + x2303 + x2304
    x2307 = x2305 * x5 - x2306 * x6
    x2308 = x2306 * x5
    x2309 = x1963 * x708
    x2310 = x1973 * x8
    x2311 = 3.0 * x1437
    x2312 = x2309 - x2310 + x2311
    x2313 = x2312 * x6
    x2314 = x2308 - x2313
    x2315 = x1990 * x8
    x2316 = x1985 * x708
    x2317 = 3.0 * x1478
    x2318 = 3.0 * x1468 + x1956 + x1983 * x708 - x1985 * x8
    x2319 = x1967 - x2315 + x2316 + x2317
    x2320 = x2006 * x8
    x2321 = x2000 * x708
    x2322 = 3.0 * x1507
    x2323 = 3.0 * x1497 + x1998 * x708 - x2000 * x8
    x2324 = -x2320 + x2321 + x2322
    x2325 = x2051 * x8
    x2326 = x2046 * x708
    x2327 = 2.0 * x1597
    x2328 = 2.0 * x1612 + x2044 * x708 - x2046 * x8
    x2329 = -x2325 + x2326 + x2327
    x2330 = x2328 * x5 - x2329 * x6
    x2331 = x2329 * x5
    x2332 = x2051 * x708
    x2333 = x2060 * x8
    x2334 = 2.0 * x1617
    x2335 = x2332 - x2333 + x2334
    x2336 = x2335 * x6
    x2337 = x2331 - x2336
    x2338 = x2077 * x8
    x2339 = x2072 * x708
    x2340 = x2045 + x2070 * x708 - x2072 * x8 + x2100
    x2341 = x2055 + x2098 - x2338 + x2339
    x2342 = x2091 * x8
    x2343 = x2086 * x708
    x2344 = 2.0 * x1677
    x2345 = 2.0 * x1668 + x2084 * x708 - x2086 * x8
    x2346 = -x2342 + x2343 + x2344
    x2347 = x2135 * x8
    x2348 = x2131 * x708
    x2349 = x1770 + x2129 * x708 - x2131 * x8
    x2350 = x1754 - x2347 + x2348
    x2351 = x2349 * x5 - x2350 * x6
    x2352 = x2350 * x5
    x2353 = x2135 * x708
    x2354 = x2143 * x8
    x2355 = x1775 + x2353 - x2354
    x2356 = x2355 * x6
    x2357 = x2352 - x2356
    x2358 = x2158 * x8
    x2359 = x2154 * x708
    x2360 = x1808 + x2130 + x2152 * x708 - x2154 * x8
    x2361 = x1819 + x2139 - x2358 + x2359
    x2362 = x2170 * x8
    x2363 = x2166 * x708
    x2364 = x1838 + x2164 * x708 - x2166 * x8
    x2365 = x1848 - x2362 + x2363
    x2366 = x2203 * x708
    x2367 = x2201 * x708 + x2229
    x2368 = x2232 + x2366
    x2369 = x2367 * x5 - x2368 * x6
    x2370 = x2368 * x5
    x2371 = x2209 * x708
    x2372 = x2238 + x2371
    x2373 = x2372 * x6
    x2374 = x2370 - x2373
    x2375 = x2233 * x708
    x2376 = x2230 * x708 + x2260
    x2377 = x2265 + x2375
    x2378 = x2249 * x708
    x2379 = x2247 * x708 + x2271
    x2380 = x2274 + x2378
    x2381 = x10 * x2209
    x2382 = x1038 * x2203
    x2383 = 3.0 * x1754
    x2384 = -x10 * x2203 + x1038 * x2201 + 3.0 * x1770
    x2385 = x4 * (x2381 - x2382 - x2383 + x2384)
    x2386 = -x2381 + x2382 + x2383
    x2387 = x2384 * x5 - x2386 * x6
    x2388 = x2386 * x5
    x2389 = x1038 * x2209
    x2390 = x10 * x2219
    x2391 = 3.0 * x1775
    x2392 = x2389 - x2390 + x2391
    x2393 = x2392 * x6
    x2394 = x2388 - x2393
    x2395 = x4 * (x2386 - x2389 + x2390 - x2391)
    x2396 = -x10 * x2225 + x1038 * x2219 + 3.0 * x1790
    x2397 = x2392 * x8
    x2398 = x145 * x2386
    x2399 = x145 * x2384 - x2386 * x8
    x2400 = x4 * (x2397 - x2398 + x2399)
    x2401 = -x2397 + x2398
    x2402 = x145 * x2392 - x2396 * x8
    x2403 = x10 * x2254
    x2404 = x1038 * x2249
    x2405 = 3.0 * x1848
    x2406 = -x10 * x2249 + x1038 * x2247 + 3.0 * x1838 + x2202
    x2407 = x4 * (x2226 + x2403 - x2404 - x2405 + x2406)
    x2408 = x2213 - x2403 + x2404 + x2405
    x2409 = -x10 * x2258 + x1038 * x2254 + 3.0 * x1852 + x2224
    x2410 = x145 * x2399 + x2385 - x2401 * x8
    x2411 = x145 * x2401 + x2395 - x2402 * x8
    x2412 = x145 * x2406 - x2408 * x8
    x2413 = x145 * x2408 - x2409 * x8
    x2414 = -x10 * x2284 + x1038 * x2282 + 2.0 * x2248 + x2298
    x2415 = -x10 * x2285 + x1038 * x2284 + 2.0 * x2257 + x2300

    # 150 item(s)
    result[0, 0] = numpy.sum(
        -x142
        * (
            x3
            * (
                x114 * x6
                - x3 * x84
                + x83 * (-x116 + x117 + x121 - x123 + x77)
                - x99 * (x57 - x58 + x74 - x78)
            )
            + x6
            * (
                x114 * x3
                - x6
                * (
                    x108 * x3
                    + x4 * (x124 + x73 - x89)
                    - x6
                    * (
                        x102 * x3
                        - x6
                        * (
                            x5 * x97
                            - x6 * (x125 + x5 * x95 + x6 * (x126 * x6 - x5 * x92))
                            + x99 * (x65 + x93 - x94)
                        )
                        + x83 * (x127 + x68 - x91 + x96)
                    )
                    + x83 * (x115 + x124 - x128)
                )
                - x83 * (x106 - x129 + x130 + x133 - x134)
                + x99 * (x103 - x107 + x79 - x88)
            )
            + x83 * (-x109 + x113 - x84 + x86 + x87)
            + x83
            * (
                x112 * x99
                - x123 * x3
                + x134 * x3
                + x134 * x6
                - x6 * (x106 - x129 + x130 + x133)
                - x82 * x99
                + x99
                * (
                    x120 * x6
                    - x122 * x3
                    + x137
                    + x138
                    - x139
                    - x36
                    - x4 * (-x136 + x14 + x3 * x31 + x30)
                    + x49
                )
                - x99
                * (
                    x132 * x3
                    - x137
                    - x138
                    + x139
                    + x4 * (x135 - x21 * x3 + x23 + x42)
                    - x49
                    - x6 * (x131 + x67)
                    + x70
                )
            )
        )
    )
    result[0, 1] = numpy.sum(
        x252
        * (
            x3
            * (
                x201 * x3
                - x227 * x6
                + x99 * (x179 - x180 + x194 - x196)
                - x99 * (x195 - x229 + x233 + x234 - x236)
            )
            - x6
            * (
                x227 * x3
                - x6
                * (
                    x222 * x3
                    + x4 * (x193 - x207 + x238)
                    - x6
                    * (
                        x218 * x3
                        - x6 * (x215 * x5 + x239 - x6 * (x213 * x5 - x241 * x6))
                        + x99 * (x190 - x209 + x214)
                    )
                    + x99 * (x228 + x238 - x242)
                )
                + x99 * (x197 - x206 + x219 - x221)
                - x99 * (x220 - x243 + x246 + x247 - x248)
            )
            + x83 * (x201 - x204 - x205 + x223 + x251)
            + x99
            * (
                x200
                + x236 * x3
                - x248 * x3
                - x248 * x6
                + x251
                + x4 * (x161 + x174 - x232 * x6 + x235 * x3 + x249 - x250)
                - x4 * (x173 + x202 - x245 * x3 - x249 + x250 + x6 * (x189 + x244))
                + x6 * (x220 - x243 + x246 + x247)
            )
        )
    )
    result[0, 2] = numpy.sum(
        x252
        * (
            x3
            * (
                x3 * x311
                - x337 * x6
                + x99 * (x289 - x290 + x304 - x306)
                - x99 * (x305 - x339 + x343 + x344 - x346)
            )
            - x6
            * (
                x3 * x337
                - x6
                * (
                    x3 * x332
                    + x4 * (x303 - x317 + x348)
                    - x6
                    * (
                        x3 * x328
                        - x6 * (x325 * x5 + x349 - x6 * (x323 * x5 - x351 * x6))
                        + x99 * (x300 - x319 + x324)
                    )
                    + x99 * (x338 + x348 - x352)
                )
                + x99 * (x307 - x316 + x329 - x331)
                - x99 * (x330 - x353 + x356 + x357 - x358)
            )
            + x83 * (x311 - x314 - x315 + x333 + x361)
            + x99
            * (
                x3 * x346
                - x3 * x358
                + x310
                - x358 * x6
                + x361
                + x4 * (x271 + x284 + x3 * x345 - x342 * x6 + x359 - x360)
                - x4 * (x283 - x3 * x355 + x312 - x359 + x360 + x6 * (x299 + x354))
                + x6 * (x330 - x353 + x356 + x357)
            )
        )
    )
    result[0, 3] = numpy.sum(
        x252
        * (
            x3
            * (
                x3 * x417
                + x4 * (x380 - x402 + x403 + x407)
                - x426 * x6
                + x99 * (x407 + x411 - x412 + x415)
            )
            + x4
            * (
                x3 * x380
                - x3 * x404
                - x404 * x6
                - 2.0 * x405
                + 2.0 * x406
                + x6 * (x384 + x391 - x399)
            )
            - x6
            * (
                x3 * x426
                + x4 * (-x391 + x399 + x404 + x427)
                - x6
                * (
                    x3 * x424
                    + x4 * (x390 - x392 + x397)
                    + x4 * (x397 + x414 - x421)
                    - x6 * (x3 * x422 + x429 - x6 * (x396 * x5 - x431 * x6))
                )
                + x99 * (x416 - x420 + x423 + x427)
            )
            - x83 * (x405 - x417 + x418 + x419 - x425)
        )
    )
    result[0, 4] = numpy.sum(
        x498
        * (
            x3
            * (
                x3 * x484
                + x4 * (x449 - x469 + x470 + x474)
                - x493 * x6
                + x99 * (x474 + x478 - x479 + x482)
            )
            + x4
            * (
                x3 * x449
                - x3 * x471
                - x471 * x6
                - 2.0 * x472
                + 2.0 * x473
                + x6 * (x452 + x459 - x467)
            )
            - x6
            * (
                x3 * x493
                + x4 * (-x459 + x467 + x471 + x494)
                - x6
                * (
                    x3 * x491
                    + x4 * (x458 - x460 + x465)
                    + x4 * (x465 + x481 - x488)
                    - x6 * (x3 * x489 + x495 - x6 * (x464 * x5 - x497 * x6))
                )
                + x99 * (x483 - x487 + x490 + x494)
            )
            - x83 * (x472 - x484 + x485 + x486 - x492)
        )
    )
    result[0, 5] = numpy.sum(
        x252
        * (
            x3
            * (
                x3 * x554
                + x4 * (x517 - x539 + x540 + x544)
                - x563 * x6
                + x99 * (x544 + x548 - x549 + x552)
            )
            + x4
            * (
                x3 * x517
                - x3 * x541
                - x541 * x6
                - 2.0 * x542
                + 2.0 * x543
                + x6 * (x521 + x528 - x536)
            )
            - x6
            * (
                x3 * x563
                + x4 * (-x528 + x536 + x541 + x564)
                - x6
                * (
                    x3 * x561
                    + x4 * (x527 - x529 + x534)
                    + x4 * (x534 + x551 - x558)
                    - x6 * (x3 * x559 + x566 - x6 * (x5 * x533 - x568 * x6))
                )
                + x99 * (x553 - x557 + x560 + x564)
            )
            - x83 * (x542 - x554 + x555 + x556 - x562)
        )
    )
    result[0, 6] = numpy.sum(
        x142
        * (
            x3 * (x3 * x587 - x6 * x600 + x99 * (x578 - x579 + x585))
            - x6
            * (
                x3 * x600
                - x6 * (x3 * x598 - x6 * (x3 * x596 - x6 * x604) + x602)
                + x99 * (x586 - x591 + x597)
            )
            + x83 * (x587 - x590 + x599 + x605)
        )
    )
    result[0, 7] = numpy.sum(
        x252
        * (
            x3 * (x3 * x622 - x6 * x634 + x99 * (x614 - x615 + x620))
            - x6
            * (
                x3 * x634
                - x6 * (x3 * x632 - x6 * (x3 * x630 - x6 * x638) + x636)
                + x99 * (x621 - x626 + x631)
            )
            + x83 * (x622 - x625 + x633 + x639)
        )
    )
    result[0, 8] = numpy.sum(
        x252
        * (
            x3 * (x3 * x655 - x6 * x666 + x99 * (x647 - x648 + x653))
            - x6
            * (
                x3 * x666
                - x6 * (x3 * x664 - x6 * (x3 * x662 - x6 * x669) + x667)
                + x99 * (x654 - x658 + x663)
            )
            + x83 * (x655 - x657 + x665 + x670)
        )
    )
    result[0, 9] = numpy.sum(
        x142
        * (
            x3 * (x3 * x689 - x6 * x702 + x99 * (x680 - x681 + x687))
            - x6
            * (
                x3 * x702
                - x6 * (x3 * x700 - x6 * (x3 * x698 - x6 * x706) + x704)
                + x99 * (x688 - x693 + x699)
            )
            + x83 * (x689 - x692 + x701 + x707)
        )
    )
    result[1, 0] = numpy.sum(
        x782
        * (
            x3
            * (
                x3 * x751
                + x4 * (-x726 + x733 + x745)
                - x6 * x772
                + x83 * (x745 - x773 + x774)
            )
            - x6
            * (
                x3 * x772
                + x4 * (x747 - x753 + x775)
                - x6
                * (
                    x3 * x766
                    - x6
                    * (
                        x5 * x762
                        - x6 * (x5 * x760 - x6 * (x5 * x758 - x6 * x777) + x776)
                        + x99 * (x740 - x756 + x759)
                    )
                    + x83 * (x742 - x755 + x761 + x778)
                )
                + x83 * (x775 - x779 + x780)
            )
            + x83
            * (
                x3 * x774
                - x3 * x780
                - x6 * x780
                + x6 * (x765 + x779)
                + x750
                - x770
                - x99 * (-x3 * x722 + x724 + x769 + x781)
                + x99 * (x3 * x728 + x730 + x749 - x781)
            )
            + x99 * (x751 - x752 + x767 - x771)
        )
    )
    result[1, 1] = numpy.sum(
        x833
        * (
            x3
            * (
                x3 * x809
                + x4 * (-x791 + x797 + x805)
                - x6 * x824
                + x99 * (x805 - x825 + x826)
            )
            - x6
            * (
                x3 * x824
                + x4 * (x807 - x811 + x827)
                - x6
                * (
                    x3 * x820
                    - x6 * (x5 * x817 - x6 * (x5 * x815 - x6 * x829) + x828)
                    + x99 * (x802 - x813 + x816)
                )
                + x99 * (x827 - x830 + x831)
            )
            + x99 * (x809 - x810 + x821 - x823)
            + x99
            * (
                x3 * x826
                - x3 * x831
                - x4 * (-x3 * x787 + x789 + x801 + x832)
                + x4 * (x3 * x792 + x788 + x793 - x832)
                - x6 * x831
                + x6 * (x819 + x830)
                + x808
                - x822
            )
        )
    )
    result[1, 2] = numpy.sum(
        x833
        * (
            x3
            * (
                x3 * x861
                + x4 * (-x842 + x848 + x857)
                - x6 * x876
                + x99 * (x857 - x877 + x878)
            )
            - x6
            * (
                x3 * x876
                + x4 * (x859 - x863 + x880)
                - x6
                * (
                    x3 * x872
                    - x6 * (x5 * x869 - x6 * (x5 * x867 - x6 * x882) + x881)
                    + x99 * (x853 - x865 + x868)
                )
                + x99 * (x880 - x883 + x884)
            )
            + x99 * (x861 - x862 + x873 - x875)
            + x99
            * (
                x3 * x878
                - x3 * x884
                - x4 * (-x3 * x838 + x840 + x852 + x885)
                + x4 * (x3 * x843 + x839 + x844 - x885)
                - x6 * x884
                + x6 * (x871 + x883)
                + x860
                - x874
            )
        )
    )
    result[1, 3] = numpy.sum(
        x833
        * (
            x3
            * (
                x3 * x908
                + x4 * (x891 - x901 + x902)
                + x4 * (x902 - x905 + x906)
                - x6 * x913
            )
            + x4 * (x3 * x891 - x3 * x904 - x6 * x904 + x6 * (x894 + x898) + x888 + x900)
            - x6
            * (
                x3 * x913
                + x4 * (-x894 + x897 + x904)
                + x4 * (x897 + x907 - x910)
                - x6 * (x3 * x911 - x6 * (x5 * x896 - x6 * x915) + x914)
            )
            + x99 * (x900 + x908 - x909 + x912)
        )
    )
    result[1, 4] = numpy.sum(
        x947
        * (
            x3
            * (
                x3 * x938
                + x4 * (x921 - x931 + x932)
                + x4 * (x932 - x935 + x936)
                - x6 * x943
            )
            + x4 * (x3 * x921 - x3 * x934 - x6 * x934 + x6 * (x924 + x928) + x918 + x930)
            - x6
            * (
                x3 * x943
                + x4 * (-x924 + x927 + x934)
                + x4 * (x927 + x937 - x940)
                - x6 * (x3 * x941 - x6 * (x5 * x926 - x6 * x945) + x944)
            )
            + x99 * (x930 + x938 - x939 + x942)
        )
    )
    result[1, 5] = numpy.sum(
        x833
        * (
            x3
            * (
                x3 * x970
                + x4 * (x953 - x963 + x964)
                + x4 * (x964 - x967 + x968)
                - x6 * x975
            )
            + x4 * (x3 * x953 - x3 * x966 - x6 * x966 + x6 * (x956 + x960) + x950 + x962)
            - x6
            * (
                x3 * x975
                + x4 * (-x956 + x959 + x966)
                + x4 * (x959 + x969 - x972)
                - x6 * (x3 * x973 - x6 * (x5 * x958 - x6 * x977) + x976)
            )
            + x99 * (x962 + x970 - x971 + x974)
        )
    )
    result[1, 6] = numpy.sum(
        x782
        * (
            x3 * (x3 * x984 - x6 * x991 + x982)
            - x6 * (x3 * x991 - x6 * (x3 * x989 - x6 * x993) + x992)
            + x99 * (x984 - x985 + x990)
        )
    )
    result[1, 7] = numpy.sum(
        x833
        * (
            x3 * (x1000 * x3 - x1007 * x6 + x998)
            - x6 * (x1007 * x3 + x1008 - x6 * (x1005 * x3 - x1009 * x6))
            + x99 * (x1000 - x1001 + x1006)
        )
    )
    result[1, 8] = numpy.sum(
        x833
        * (
            x3 * (x1013 + x1015 * x3 - x1021 * x6)
            - x6 * (x1021 * x3 + x1022 - x6 * (x1019 * x3 - x1023 * x6))
            + x99 * (x1015 - x1016 + x1020)
        )
    )
    result[1, 9] = numpy.sum(
        x782
        * (
            x3 * (x1027 + x1029 * x3 - x1035 * x6)
            - x6 * (x1035 * x3 + x1036 - x6 * (x1033 * x3 - x1037 * x6))
            + x99 * (x1029 - x1030 + x1034)
        )
    )
    result[2, 0] = numpy.sum(
        x782
        * (
            x3
            * (
                x1081 * x3
                - x1102 * x6
                + x4 * (-x1056 + x1063 + x1075)
                + x83 * (x1075 - x1103 + x1104)
            )
            - x6
            * (
                x1102 * x3
                + x4 * (x1077 - x1083 + x1105)
                - x6
                * (
                    x1096 * x3
                    - x6
                    * (
                        x1092 * x5
                        - x6 * (x1090 * x5 + x1106 - x6 * (x1088 * x5 - x1107 * x6))
                        + x99 * (x1070 - x1086 + x1089)
                    )
                    + x83 * (x1072 - x1085 + x1091 + x1108)
                )
                + x83 * (x1105 - x1109 + x1110)
            )
            + x83
            * (
                x1080
                - x1100
                + x1104 * x3
                - x1110 * x3
                - x1110 * x6
                + x6 * (x1095 + x1109)
                - x99 * (-x1052 * x3 + x1054 + x1099 + x1111)
                + x99 * (x1058 * x3 + x1060 + x1079 - x1111)
            )
            + x99 * (x1081 - x1082 + x1097 - x1101)
        )
    )
    result[2, 1] = numpy.sum(
        x833
        * (
            x3
            * (
                x1146 * x3
                - x1163 * x6
                + x4 * (-x1124 + x1131 + x1142)
                + x99 * (x1142 - x1164 + x1165)
            )
            - x6
            * (
                x1163 * x3
                + x4 * (x1144 - x1148 + x1167)
                - x6
                * (
                    x1159 * x3
                    - x6 * (x1156 * x5 + x1168 - x6 * (x1154 * x5 - x1170 * x6))
                    + x99 * (x1138 - x1150 + x1155)
                )
                + x99 * (x1167 - x1171 + x1172)
            )
            + x99 * (x1146 - x1147 + x1160 - x1162)
            + x99
            * (
                x1145
                - x1161
                + x1165 * x3
                - x1172 * x3
                - x1172 * x6
                + x4 * (x1121 + x1126 * x3 + x1127 - x1173)
                - x4 * (-x1120 * x3 + x1122 + x1137 + x1173)
                + x6 * (x1158 + x1171)
            )
        )
    )
    result[2, 2] = numpy.sum(
        x833
        * (
            x3
            * (
                x1201 * x3
                - x1216 * x6
                + x4 * (-x1182 + x1188 + x1197)
                + x99 * (x1197 - x1217 + x1218)
            )
            - x6
            * (
                x1216 * x3
                + x4 * (x1199 - x1203 + x1220)
                - x6
                * (
                    x1212 * x3
                    - x6 * (x1209 * x5 + x1221 - x6 * (x1207 * x5 - x1222 * x6))
                    + x99 * (x1193 - x1205 + x1208)
                )
                + x99 * (x1220 - x1223 + x1224)
            )
            + x99 * (x1201 - x1202 + x1213 - x1215)
            + x99
            * (
                x1200
                - x1214
                + x1218 * x3
                - x1224 * x3
                - x1224 * x6
                + x4 * (x1179 + x1183 * x3 + x1184 - x1225)
                - x4 * (-x1178 * x3 + x1180 + x1192 + x1225)
                + x6 * (x1211 + x1223)
            )
        )
    )
    result[2, 3] = numpy.sum(
        x833
        * (
            x3
            * (
                x1257 * x3
                - x1262 * x6
                + x4 * (x1235 - x1250 + x1251)
                + x4 * (x1251 - x1254 + x1255)
            )
            + x4
            * (
                x1231
                + x1235 * x3
                + x1249
                - x1253 * x3
                - x1253 * x6
                + x6 * (x1240 + x1246)
            )
            - x6
            * (
                x1262 * x3
                + x4 * (-x1240 + x1245 + x1253)
                + x4 * (x1245 + x1256 - x1259)
                - x6 * (x1260 * x3 + x1264 - x6 * (x1244 * x5 - x1266 * x6))
            )
            + x99 * (x1249 + x1257 - x1258 + x1261)
        )
    )
    result[2, 4] = numpy.sum(
        x947
        * (
            x3
            * (
                x1296 * x3
                - x1301 * x6
                + x4 * (x1275 - x1289 + x1290)
                + x4 * (x1290 - x1293 + x1294)
            )
            + x4
            * (
                x1271
                + x1275 * x3
                + x1288
                - x1292 * x3
                - x1292 * x6
                + x6 * (x1280 + x1286)
            )
            - x6
            * (
                x1301 * x3
                + x4 * (-x1280 + x1285 + x1292)
                + x4 * (x1285 + x1295 - x1298)
                - x6 * (x1299 * x3 + x1302 - x6 * (x1284 * x5 - x1304 * x6))
            )
            + x99 * (x1288 + x1296 - x1297 + x1300)
        )
    )
    result[2, 5] = numpy.sum(
        x833
        * (
            x3
            * (
                x1327 * x3
                - x1332 * x6
                + x4 * (x1310 - x1320 + x1321)
                + x4 * (x1321 - x1324 + x1325)
            )
            + x4
            * (
                x1307
                + x1310 * x3
                + x1319
                - x1323 * x3
                - x1323 * x6
                + x6 * (x1313 + x1317)
            )
            - x6
            * (
                x1332 * x3
                + x4 * (-x1313 + x1316 + x1323)
                + x4 * (x1316 + x1326 - x1329)
                - x6 * (x1330 * x3 + x1333 - x6 * (x1315 * x5 - x1334 * x6))
            )
            + x99 * (x1319 + x1327 - x1328 + x1331)
        )
    )
    result[2, 6] = numpy.sum(
        x782
        * (
            x3 * (x1341 + x1344 * x3 - x1352 * x6)
            - x6 * (x1352 * x3 + x1354 - x6 * (x1350 * x3 - x1356 * x6))
            + x99 * (x1344 - x1345 + x1351)
        )
    )
    result[2, 7] = numpy.sum(
        x833
        * (
            x3 * (x1362 + x1365 * x3 - x1372 * x6)
            - x6 * (x1372 * x3 + x1374 - x6 * (x1370 * x3 - x1376 * x6))
            + x99 * (x1365 - x1366 + x1371)
        )
    )
    result[2, 8] = numpy.sum(
        x833
        * (
            x3 * (x1381 + x1384 * x3 - x1391 * x6)
            - x6 * (x1391 * x3 + x1392 - x6 * (x1389 * x3 - x1394 * x6))
            + x99 * (x1384 - x1385 + x1390)
        )
    )
    result[2, 9] = numpy.sum(
        x782
        * (
            x3 * (x1399 + x1401 * x3 - x1408 * x6)
            - x6 * (x1408 * x3 + x1409 - x6 * (x1406 * x3 - x1410 * x6))
            + x99 * (x1401 - x1402 + x1407)
        )
    )
    result[3, 0] = numpy.sum(
        x1455
        * (
            x3 * (x1436 * x3 - x1450 * x6 + x83 * (-x1421 + x1428 + x1434 + x1451))
            + x4 * (-x1430 + x1436 + x1449)
            - x6
            * (
                x1450 * x3
                - x6
                * (
                    x1446 * x5
                    - x6 * (x1444 * x5 + x1452 - x6 * (x1442 * x5 - x1453 * x6))
                    + x99 * (x1427 - x1439 + x1443)
                )
                + x83 * (x1429 - x1438 + x1445 + x1454)
            )
            + x83 * (-x1429 * x3 + x1434 * x3 + x1435 + x1449)
        )
    )
    result[3, 1] = numpy.sum(
        x1484
        * (
            x3 * (x1470 * x3 - x1480 * x6 + x99 * (-x1459 + x1463 + x1467))
            + x4 * (-x1465 + x1470 + x1479)
            - x6
            * (
                x1480 * x3
                - x6 * (x1476 * x5 + x1481 - x6 * (x1474 * x5 - x1482 * x6))
                + x99 * (x1464 - x1471 + x1475)
            )
            + x99 * (-x1464 * x3 + x1467 * x3 + x1469 + x1479)
        )
    )
    result[3, 2] = numpy.sum(
        x1484
        * (
            x3 * (x1499 * x3 - x1510 * x6 + x99 * (-x1488 + x1492 + x1496))
            + x4 * (-x1494 + x1499 + x1509)
            - x6
            * (
                x1510 * x3
                - x6 * (x1505 * x5 + x1511 - x6 * (x1503 * x5 - x1512 * x6))
                + x99 * (x1493 - x1500 + x1504)
            )
            + x99 * (-x1493 * x3 + x1496 * x3 + x1498 + x1509)
        )
    )
    result[3, 3] = numpy.sum(
        x1484
        * (
            x3 * (x1526 * x3 + x1528 - x1529 * x6)
            + x4 * (x1519 - x1525 + x1526)
            + x4 * (x1514 * x3 + x1519 - x1523 * x3 + x1524)
            - x6 * (x1529 * x3 + x1531 - x6 * (x1518 * x5 - x1533 * x6))
        )
    )
    result[3, 4] = numpy.sum(
        x1549
        * (
            x3 * (x1544 * x3 + x1545 - x1546 * x6)
            + x4 * (x1538 - x1543 + x1544)
            + x4 * (x1534 * x3 + x1538 - x1541 * x3 + x1542)
            - x6 * (x1546 * x3 + x1547 - x6 * (x1537 * x5 - x1548 * x6))
        )
    )
    result[3, 5] = numpy.sum(
        x1484
        * (
            x3 * (x1560 * x3 + x1561 - x1562 * x6)
            + x4 * (x1554 - x1559 + x1560)
            + x4 * (x1550 * x3 + x1554 - x1557 * x3 + x1558)
            - x6 * (x1562 * x3 + x1563 - x6 * (x1553 * x5 - x1564 * x6))
        )
    )
    result[3, 6] = numpy.sum(
        x1455 * (x1569 + x3 * (x1568 * x3 - x1570 * x6) - x6 * (x1570 * x3 - x1571 * x6))
    )
    result[3, 7] = numpy.sum(
        x1484 * (x1578 + x3 * (x1577 * x3 - x1579 * x6) - x6 * (x1579 * x3 - x1581 * x6))
    )
    result[3, 8] = numpy.sum(
        x1484 * (x1585 + x3 * (x1584 * x3 - x1586 * x6) - x6 * (x1586 * x3 - x1587 * x6))
    )
    result[3, 9] = numpy.sum(
        x1455 * (x1591 + x3 * (x1590 * x3 - x1592 * x6) - x6 * (x1592 * x3 - x1593 * x6))
    )
    result[4, 0] = numpy.sum(
        x833
        * (
            x3 * (x1616 * x3 - x1629 * x6 + x83 * (-x1602 + x1608 + x1614 + x1630))
            + x4 * (-x1610 + x1616 + x1628)
            - x6
            * (
                x1629 * x3
                - x6
                * (
                    x1625 * x5
                    - x6 * (x1623 * x5 + x1631 - x6 * (x1621 * x5 - x1632 * x6))
                    + x99 * (x1607 - x1619 + x1622)
                )
                + x83 * (x1609 - x1618 + x1624 + x1633)
            )
            + x83 * (-x1609 * x3 + x1614 * x3 + x1615 + x1628)
        )
    )
    result[4, 1] = numpy.sum(
        x1549
        * (
            x3 * (x1646 * x3 - x1655 * x6 + x99 * (-x1636 + x1639 + x1643))
            + x4 * (-x1641 + x1646 + x1654)
            - x6
            * (
                x1655 * x3
                - x6 * (x1651 * x5 + x1656 - x6 * (x1649 * x5 - x1657 * x6))
                + x99 * (x1640 - x1647 + x1650)
            )
            + x99 * (-x1640 * x3 + x1643 * x3 + x1645 + x1654)
        )
    )
    result[4, 2] = numpy.sum(
        x1549
        * (
            x3 * (x1670 * x3 - x1680 * x6 + x99 * (-x1660 + x1663 + x1667))
            + x4 * (-x1665 + x1670 + x1679)
            - x6
            * (
                x1680 * x3
                - x6 * (x1675 * x5 + x1681 - x6 * (x1673 * x5 - x1682 * x6))
                + x99 * (x1664 - x1671 + x1674)
            )
            + x99 * (-x1664 * x3 + x1667 * x3 + x1669 + x1679)
        )
    )
    result[4, 3] = numpy.sum(
        x1549
        * (
            x3 * (x1691 * x3 + x1692 - x1693 * x6)
            + x4 * (x1686 - x1690 + x1691)
            + x4 * (x1683 * x3 + x1686 - x1688 * x3 + x1689)
            - x6 * (x1693 * x3 + x1694 - x6 * (x1685 * x5 - x1695 * x6))
        )
    )
    result[4, 4] = numpy.sum(
        x1709
        * (
            x3 * (x1704 * x3 + x1705 - x1706 * x6)
            + x4 * (x1699 - x1703 + x1704)
            + x4 * (x1696 * x3 + x1699 - x1701 * x3 + x1702)
            - x6 * (x1706 * x3 + x1707 - x6 * (x1698 * x5 - x1708 * x6))
        )
    )
    result[4, 5] = numpy.sum(
        x1549
        * (
            x3 * (x1718 * x3 + x1719 - x1720 * x6)
            + x4 * (x1713 - x1717 + x1718)
            + x4 * (x1710 * x3 + x1713 - x1715 * x3 + x1716)
            - x6 * (x1720 * x3 + x1721 - x6 * (x1712 * x5 - x1722 * x6))
        )
    )
    result[4, 6] = numpy.sum(
        x833 * (x1727 + x3 * (x1726 * x3 - x1728 * x6) - x6 * (x1728 * x3 - x1729 * x6))
    )
    result[4, 7] = numpy.sum(
        x1549 * (x1734 + x3 * (x1733 * x3 - x1735 * x6) - x6 * (x1735 * x3 - x1736 * x6))
    )
    result[4, 8] = numpy.sum(
        x1549 * (x1740 + x3 * (x1739 * x3 - x1741 * x6) - x6 * (x1741 * x3 - x1742 * x6))
    )
    result[4, 9] = numpy.sum(
        x833 * (x1746 + x3 * (x1745 * x3 - x1747 * x6) - x6 * (x1747 * x3 - x1748 * x6))
    )
    result[5, 0] = numpy.sum(
        x1455
        * (
            x3 * (x1774 * x3 - x1788 * x6 + x83 * (-x1759 + x1766 + x1772 + x1789))
            + x4 * (-x1768 + x1774 + x1787)
            - x6
            * (
                x1788 * x3
                - x6
                * (
                    x1784 * x5
                    - x6 * (x1782 * x5 + x1790 - x6 * (x1780 * x5 - x1791 * x6))
                    + x99 * (x1765 - x1777 + x1781)
                )
                + x83 * (x1767 - x1776 + x1783 + x1792)
            )
            + x83 * (-x1767 * x3 + x1772 * x3 + x1773 + x1787)
        )
    )
    result[5, 1] = numpy.sum(
        x1484
        * (
            x3 * (x1810 * x3 - x1822 * x6 + x99 * (-x1797 + x1802 + x1807))
            + x4 * (-x1804 + x1810 + x1821)
            - x6
            * (
                x1822 * x3
                - x6 * (x1817 * x5 + x1823 - x6 * (x1815 * x5 - x1825 * x6))
                + x99 * (x1803 - x1811 + x1816)
            )
            + x99 * (-x1803 * x3 + x1807 * x3 + x1809 + x1821)
        )
    )
    result[5, 2] = numpy.sum(
        x1484
        * (
            x3 * (x1840 * x3 - x1851 * x6 + x99 * (-x1829 + x1833 + x1837))
            + x4 * (-x1835 + x1840 + x1850)
            - x6
            * (
                x1851 * x3
                - x6 * (x1846 * x5 + x1852 - x6 * (x1844 * x5 - x1853 * x6))
                + x99 * (x1834 - x1841 + x1845)
            )
            + x99 * (-x1834 * x3 + x1837 * x3 + x1839 + x1850)
        )
    )
    result[5, 3] = numpy.sum(
        x1484
        * (
            x3 * (x1867 * x3 + x1869 - x1870 * x6)
            + x4 * (x1860 - x1866 + x1867)
            + x4 * (x1855 * x3 + x1860 - x1864 * x3 + x1865)
            - x6 * (x1870 * x3 + x1872 - x6 * (x1859 * x5 - x1874 * x6))
        )
    )
    result[5, 4] = numpy.sum(
        x1549
        * (
            x3 * (x1888 * x3 + x1889 - x1890 * x6)
            + x4 * (x1881 - x1887 + x1888)
            + x4 * (x1876 * x3 + x1881 - x1885 * x3 + x1886)
            - x6 * (x1890 * x3 + x1891 - x6 * (x1880 * x5 - x1893 * x6))
        )
    )
    result[5, 5] = numpy.sum(
        x1484
        * (
            x3 * (x1907 * x3 + x1909 - x1910 * x6)
            + x4 * (x1900 - x1906 + x1907)
            + x4 * (x1895 * x3 + x1900 - x1904 * x3 + x1905)
            - x6 * (x1910 * x3 + x1912 - x6 * (x1899 * x5 - x1914 * x6))
        )
    )
    result[5, 6] = numpy.sum(
        x1455 * (x1921 + x3 * (x1917 * x3 - x1923 * x6) - x6 * (x1923 * x3 - x1925 * x6))
    )
    result[5, 7] = numpy.sum(
        x1484 * (x1931 + x3 * (x1928 * x3 - x1933 * x6) - x6 * (x1933 * x3 - x1935 * x6))
    )
    result[5, 8] = numpy.sum(
        x1484 * (x1940 + x3 * (x1939 * x3 - x1942 * x6) - x6 * (x1942 * x3 - x1944 * x6))
    )
    result[5, 9] = numpy.sum(
        x1455 * (x1949 + x3 * (x1948 * x3 - x1950 * x6) - x6 * (x1950 * x3 - x1951 * x6))
    )
    result[6, 0] = numpy.sum(
        x782
        * (
            x3 * (x1966 * x5 - x1977 * x6 + x99 * (x1958 - x1959 + x1964))
            - x6
            * (
                x1977 * x5
                - x6 * (x1975 * x5 + x1978 - x6 * (x1973 * x5 - x1979 * x6))
                + x99 * (x1965 - x1969 + x1974)
            )
            + x83 * (x1966 - x1968 + x1976 + x1980)
        )
    )
    result[6, 1] = numpy.sum(
        x833
        * (
            x3 * (x1984 + x1986 * x5 - x1992 * x6)
            - x6 * (x1992 * x5 + x1993 - x6 * (x1990 * x5 - x1994 * x6))
            + x99 * (x1986 - x1987 + x1991)
        )
    )
    result[6, 2] = numpy.sum(
        x833
        * (
            x3 * (x1999 + x2001 * x5 - x2008 * x6)
            - x6 * (x2008 * x5 + x2009 - x6 * (x2006 * x5 - x2010 * x6))
            + x99 * (x2001 - x2002 + x2007)
        )
    )
    result[6, 3] = numpy.sum(
        x833 * (x2016 + x3 * (x2015 * x5 - x2017 * x6) - x6 * (x2017 * x5 - x2018 * x6))
    )
    result[6, 4] = numpy.sum(
        x947 * (x2022 + x3 * (x2021 * x5 - x2023 * x6) - x6 * (x2023 * x5 - x2024 * x6))
    )
    result[6, 5] = numpy.sum(
        x833 * (x2029 + x3 * (x2028 * x5 - x2030 * x6) - x6 * (x2030 * x5 - x2031 * x6))
    )
    result[6, 6] = numpy.sum(x782 * (x2033 * x3 - x2035 * x6))
    result[6, 7] = numpy.sum(x833 * (x2036 * x3 - x2037 * x6))
    result[6, 8] = numpy.sum(x833 * (x2038 * x3 - x2039 * x6))
    result[6, 9] = numpy.sum(x782 * (x2040 * x3 - x2041 * x6))
    result[7, 0] = numpy.sum(
        x833
        * (
            x3 * (x2054 * x5 - x2064 * x6 + x99 * (x2047 - x2048 + x2052))
            - x6
            * (
                x2064 * x5
                - x6 * (x2062 * x5 + x2065 - x6 * (x2060 * x5 - x2066 * x6))
                + x99 * (x2053 - x2057 + x2061)
            )
            + x83 * (x2054 - x2056 + x2063 + x2067)
        )
    )
    result[7, 1] = numpy.sum(
        x1549
        * (
            x3 * (x2071 + x2073 * x5 - x2079 * x6)
            - x6 * (x2079 * x5 + x2080 - x6 * (x2077 * x5 - x2081 * x6))
            + x99 * (x2073 - x2074 + x2078)
        )
    )
    result[7, 2] = numpy.sum(
        x1549
        * (
            x3 * (x2085 + x2087 * x5 - x2093 * x6)
            - x6 * (x2093 * x5 + x2094 - x6 * (x2091 * x5 - x2095 * x6))
            + x99 * (x2087 - x2088 + x2092)
        )
    )
    result[7, 3] = numpy.sum(
        x1549 * (x2102 + x3 * (x2101 * x5 - x2103 * x6) - x6 * (x2103 * x5 - x2105 * x6))
    )
    result[7, 4] = numpy.sum(
        x1709 * (x2109 + x3 * (x2108 * x5 - x2110 * x6) - x6 * (x2110 * x5 - x2111 * x6))
    )
    result[7, 5] = numpy.sum(
        x1549 * (x2115 + x3 * (x2114 * x5 - x2116 * x6) - x6 * (x2116 * x5 - x2117 * x6))
    )
    result[7, 6] = numpy.sum(x833 * (x2118 * x3 - x2119 * x6))
    result[7, 7] = numpy.sum(x1549 * (x2121 * x3 - x2123 * x6))
    result[7, 8] = numpy.sum(x1549 * (x2124 * x3 - x2125 * x6))
    result[7, 9] = numpy.sum(x833 * (x2126 * x3 - x2127 * x6))
    result[8, 0] = numpy.sum(
        x833
        * (
            x3 * (x2138 * x5 - x2147 * x6 + x99 * (x2132 - x2133 + x2136))
            - x6
            * (
                x2147 * x5
                - x6 * (x2145 * x5 + x2148 - x6 * (x2143 * x5 - x2149 * x6))
                + x99 * (x2137 - x2141 + x2144)
            )
            + x83 * (x2138 - x2140 + x2146 + x2150)
        )
    )
    result[8, 1] = numpy.sum(
        x1549
        * (
            x3 * (x2153 + x2155 * x5 - x2160 * x6)
            - x6 * (x2160 * x5 + x2161 - x6 * (x2158 * x5 - x2162 * x6))
            + x99 * (x2155 - x2156 + x2159)
        )
    )
    result[8, 2] = numpy.sum(
        x1549
        * (
            x3 * (x2165 + x2167 * x5 - x2172 * x6)
            - x6 * (x2172 * x5 + x2173 - x6 * (x2170 * x5 - x2174 * x6))
            + x99 * (x2167 - x2168 + x2171)
        )
    )
    result[8, 3] = numpy.sum(
        x1549 * (x2177 + x3 * (x2176 * x5 - x2178 * x6) - x6 * (x2178 * x5 - x2179 * x6))
    )
    result[8, 4] = numpy.sum(
        x1709 * (x2182 + x3 * (x2181 * x5 - x2183 * x6) - x6 * (x2183 * x5 - x2184 * x6))
    )
    result[8, 5] = numpy.sum(
        x1549 * (x2187 + x3 * (x2186 * x5 - x2188 * x6) - x6 * (x2188 * x5 - x2189 * x6))
    )
    result[8, 6] = numpy.sum(x833 * (x2190 * x3 - x2191 * x6))
    result[8, 7] = numpy.sum(x1549 * (x2192 * x3 - x2193 * x6))
    result[8, 8] = numpy.sum(x1549 * (x2194 * x3 - x2195 * x6))
    result[8, 9] = numpy.sum(x833 * (x2196 * x3 - x2197 * x6))
    result[9, 0] = numpy.sum(
        x782
        * (
            x3 * (x2212 * x5 - x2223 * x6 + x99 * (x2204 - x2205 + x2210))
            - x6
            * (
                x2223 * x5
                - x6 * (x2221 * x5 + x2224 - x6 * (x2219 * x5 - x2225 * x6))
                + x99 * (x2211 - x2215 + x2220)
            )
            + x83 * (x2212 - x2214 + x2222 + x2226)
        )
    )
    result[9, 1] = numpy.sum(
        x833
        * (
            x3 * (x2231 + x2234 * x5 - x2241 * x6)
            - x6 * (x2241 * x5 + x2242 - x6 * (x2239 * x5 - x2244 * x6))
            + x99 * (x2234 - x2235 + x2240)
        )
    )
    result[9, 2] = numpy.sum(
        x833
        * (
            x3 * (x2248 + x2250 * x5 - x2256 * x6)
            - x6 * (x2256 * x5 + x2257 - x6 * (x2254 * x5 - x2258 * x6))
            + x99 * (x2250 - x2251 + x2255)
        )
    )
    result[9, 3] = numpy.sum(
        x833 * (x2264 + x3 * (x2261 * x5 - x2266 * x6) - x6 * (x2266 * x5 - x2268 * x6))
    )
    result[9, 4] = numpy.sum(
        x947 * (x2273 + x3 * (x2272 * x5 - x2275 * x6) - x6 * (x2275 * x5 - x2277 * x6))
    )
    result[9, 5] = numpy.sum(
        x833 * (x2283 + x3 * (x2282 * x5 - x2284 * x6) - x6 * (x2284 * x5 - x2285 * x6))
    )
    result[9, 6] = numpy.sum(x782 * (x2287 * x3 - x2289 * x6))
    result[9, 7] = numpy.sum(x833 * (x2291 * x3 - x2293 * x6))
    result[9, 8] = numpy.sum(x833 * (x2295 * x3 - x2297 * x6))
    result[9, 9] = numpy.sum(x782 * (x2299 * x3 - x2301 * x6))
    result[10, 0] = numpy.sum(
        x142
        * (
            x5 * (x2307 * x5 - x2314 * x6 + x4 * (x2302 - x2303 - x2304 + x2305))
            - x6
            * (
                x2314 * x5
                + x4 * (x2306 - x2309 + x2310 - x2311)
                - x6 * (x2312 * x5 - x6 * (3.0 * x1452 + x1973 * x708 - x1979 * x8))
            )
            + x99 * (x2307 - x2308 + x2313)
        )
    )
    result[10, 1] = numpy.sum(
        x252
        * (
            x4 * (x1980 + x2315 - x2316 - x2317 + x2318)
            + x5 * (x2318 * x5 - x2319 * x6)
            - x6 * (x2319 * x5 - x6 * (3.0 * x1481 + x1978 + x1990 * x708 - x1994 * x8))
        )
    )
    result[10, 2] = numpy.sum(
        x252
        * (
            x4 * (x2320 - x2321 - x2322 + x2323)
            + x5 * (x2323 * x5 - x2324 * x6)
            - x6 * (x2324 * x5 - x6 * (3.0 * x1511 + x2006 * x708 - x2010 * x8))
        )
    )
    result[10, 3] = numpy.sum(
        x252
        * (
            x5 * (2.0 * x1984 + x2015 * x708 - x2017 * x8 + x2032)
            - x6 * (2.0 * x1993 + x2017 * x708 - x2018 * x8 + x2034)
        )
    )
    result[10, 4] = numpy.sum(
        x498
        * (
            x5 * (3.0 * x1545 + x1999 + x2021 * x708 - x2023 * x8)
            - x6 * (3.0 * x1547 + x2009 + x2023 * x708 - x2024 * x8)
        )
    )
    result[10, 5] = numpy.sum(
        x252
        * (
            x5 * (3.0 * x1561 + x2028 * x708 - x2030 * x8)
            - x6 * (3.0 * x1563 + x2030 * x708 - x2031 * x8)
        )
    )
    result[10, 6] = numpy.sum(
        x142 * (3.0 * x1569 + 3.0 * x2016 + x2033 * x708 - x2035 * x8)
    )
    result[10, 7] = numpy.sum(
        x252 * (3.0 * x1578 + 2.0 * x2022 + x2036 * x708 - x2037 * x8)
    )
    result[10, 8] = numpy.sum(x252 * (3.0 * x1585 + x2029 + x2038 * x708 - x2039 * x8))
    result[10, 9] = numpy.sum(x142 * (3.0 * x1591 + x2040 * x708 - x2041 * x8))
    result[11, 0] = numpy.sum(
        x782
        * (
            x5 * (x2330 * x5 - x2337 * x6 + x4 * (x2325 - x2326 - x2327 + x2328))
            - x6
            * (
                x2337 * x5
                + x4 * (x2329 - x2332 + x2333 - x2334)
                - x6 * (x2335 * x5 - x6 * (2.0 * x1631 + x2060 * x708 - x2066 * x8))
            )
            + x99 * (x2330 - x2331 + x2336)
        )
    )
    result[11, 1] = numpy.sum(
        x833
        * (
            x4 * (x2067 + x2099 + x2338 - x2339 + x2340)
            + x5 * (x2340 * x5 - x2341 * x6)
            - x6 * (x2341 * x5 - x6 * (x2065 + x2077 * x708 - x2081 * x8 + x2104))
        )
    )
    result[11, 2] = numpy.sum(
        x833
        * (
            x4 * (x2342 - x2343 - x2344 + x2345)
            + x5 * (x2345 * x5 - x2346 * x6)
            - x6 * (x2346 * x5 - x6 * (2.0 * x1681 + x2091 * x708 - x2095 * x8))
        )
    )
    result[11, 3] = numpy.sum(
        x833
        * (
            x5 * (2.0 * x1692 + 2.0 * x2071 + x2101 * x708 - x2103 * x8)
            - x6 * (2.0 * x1694 + 2.0 * x2080 + x2103 * x708 - x2105 * x8)
        )
    )
    result[11, 4] = numpy.sum(
        x947
        * (
            x5 * (x2085 + x2108 * x708 - x2110 * x8 + x2120)
            - x6 * (x2094 + x2110 * x708 - x2111 * x8 + x2122)
        )
    )
    result[11, 5] = numpy.sum(
        x833
        * (
            x5 * (2.0 * x1719 + x2114 * x708 - x2116 * x8)
            - x6 * (2.0 * x1721 + x2116 * x708 - x2117 * x8)
        )
    )
    result[11, 6] = numpy.sum(
        x782 * (2.0 * x1727 + 3.0 * x2102 + x2118 * x708 - x2119 * x8)
    )
    result[11, 7] = numpy.sum(
        x833 * (2.0 * x1734 + 2.0 * x2109 + x2121 * x708 - x2123 * x8)
    )
    result[11, 8] = numpy.sum(x833 * (2.0 * x1740 + x2115 + x2124 * x708 - x2125 * x8))
    result[11, 9] = numpy.sum(x782 * (2.0 * x1746 + x2126 * x708 - x2127 * x8))
    result[12, 0] = numpy.sum(
        x1455
        * (
            x5 * (x2351 * x5 - x2357 * x6 + x4 * (x1789 + x2347 - x2348 + x2349))
            - x6
            * (
                x2357 * x5
                + x4 * (x1792 + x2350 - x2353 + x2354)
                - x6 * (x2355 * x5 - x6 * (x1790 + x2143 * x708 - x2149 * x8))
            )
            + x99 * (x2351 - x2352 + x2356)
        )
    )
    result[12, 1] = numpy.sum(
        x1484
        * (
            x4 * (x1820 + x2150 + x2358 - x2359 + x2360)
            + x5 * (x2360 * x5 - x2361 * x6)
            - x6 * (x2361 * x5 - x6 * (x1823 + x2148 + x2158 * x708 - x2162 * x8))
        )
    )
    result[12, 2] = numpy.sum(
        x1484
        * (
            x4 * (x1849 + x2362 - x2363 + x2364)
            + x5 * (x2364 * x5 - x2365 * x6)
            - x6 * (x2365 * x5 - x6 * (x1852 + x2170 * x708 - x2174 * x8))
        )
    )
    result[12, 3] = numpy.sum(
        x1484
        * (
            x5 * (x1869 + 2.0 * x2153 + x2176 * x708 - x2178 * x8)
            - x6 * (x1872 + 2.0 * x2161 + x2178 * x708 - x2179 * x8)
        )
    )
    result[12, 4] = numpy.sum(
        x1549
        * (
            x5 * (x1889 + x2165 + x2181 * x708 - x2183 * x8)
            - x6 * (x1891 + x2173 + x2183 * x708 - x2184 * x8)
        )
    )
    result[12, 5] = numpy.sum(
        x1484
        * (
            x5 * (x1909 + x2186 * x708 - x2188 * x8)
            - x6 * (x1912 + x2188 * x708 - x2189 * x8)
        )
    )
    result[12, 6] = numpy.sum(x1455 * (x1921 + 3.0 * x2177 + x2190 * x708 - x2191 * x8))
    result[12, 7] = numpy.sum(x1484 * (x1931 + 2.0 * x2182 + x2192 * x708 - x2193 * x8))
    result[12, 8] = numpy.sum(x1484 * (x1940 + x2187 + x2194 * x708 - x2195 * x8))
    result[12, 9] = numpy.sum(x1455 * (x1949 + x2196 * x708 - x2197 * x8))
    result[13, 0] = numpy.sum(
        x782
        * (
            x5 * (x2369 * x5 - x2374 * x6 + x4 * (x2227 - x2366 + x2367))
            - x6
            * (
                x2374 * x5
                + x4 * (x2237 + x2368 - x2371)
                - x6 * (x2372 * x5 - x6 * (x2219 * x708 + x2243))
            )
            + x99 * (x2369 - x2370 + x2373)
        )
    )
    result[13, 1] = numpy.sum(
        x833
        * (
            x4 * (x2263 - x2375 + x2376)
            + x5 * (x2376 * x5 - x2377 * x6)
            - x6 * (x2377 * x5 - x6 * (x2239 * x708 + x2267))
        )
    )
    result[13, 2] = numpy.sum(
        x833
        * (
            x4 * (x2269 - x2378 + x2379)
            + x5 * (x2379 * x5 - x2380 * x6)
            - x6 * (x2380 * x5 - x6 * (x2254 * x708 + x2276))
        )
    )
    result[13, 3] = numpy.sum(
        x833 * (x5 * (x2261 * x708 + x2286) - x6 * (x2266 * x708 + x2288))
    )
    result[13, 4] = numpy.sum(
        x947 * (x5 * (x2272 * x708 + x2290) - x6 * (x2275 * x708 + x2292))
    )
    result[13, 5] = numpy.sum(
        x833 * (x5 * (x2282 * x708 + x2294) - x6 * (x2284 * x708 + x2296))
    )
    result[13, 6] = numpy.sum(x782 * (3.0 * x2264 + x2287 * x708 - x2289 * x8))
    result[13, 7] = numpy.sum(x833 * (2.0 * x2273 + x2291 * x708 - x2293 * x8))
    result[13, 8] = numpy.sum(x833 * (x2283 + x2295 * x708 - x2297 * x8))
    result[13, 9] = numpy.sum(x782 * (x2299 * x708 - x2301 * x8))
    result[14, 0] = numpy.sum(
        x142
        * (
            x5 * (x2385 + x2387 * x5 - x2394 * x6)
            - x6 * (x2394 * x5 + x2395 - x6 * (x2392 * x5 - x2396 * x6))
            + x99 * (x2387 - x2388 + x2393)
        )
    )
    result[14, 1] = numpy.sum(
        x252 * (x2400 + x5 * (x2399 * x5 - x2401 * x6) - x6 * (x2401 * x5 - x2402 * x6))
    )
    result[14, 2] = numpy.sum(
        x252 * (x2407 + x5 * (x2406 * x5 - x2408 * x6) - x6 * (x2408 * x5 - x2409 * x6))
    )
    result[14, 3] = numpy.sum(x252 * (x2410 * x5 - x2411 * x6))
    result[14, 4] = numpy.sum(x498 * (x2412 * x5 - x2413 * x6))
    result[14, 5] = numpy.sum(x252 * (x2414 * x5 - x2415 * x6))
    result[14, 6] = numpy.sum(x142 * (x145 * x2410 + 2.0 * x2400 - x2411 * x8))
    result[14, 7] = numpy.sum(x252 * (x145 * x2412 + x2407 - x2413 * x8))
    result[14, 8] = numpy.sum(x252 * (x145 * x2414 - x2415 * x8))
    result[14, 9] = numpy.sum(
        x142 * (-x10 * x2301 + x1038 * x2299 + 3.0 * x1949 + 3.0 * x2283)
    )
    return result


def coulomb3d_44(ax, da, A, bx, db, B, R):
    """Cartesian (gg) 1-electron Coulomb integral.

    Generated code; DO NOT modify by hand!"""

    result = numpy.zeros((15, 15), dtype=float)

    x0 = ax + bx
    x1 = x0 ** (-1.0)
    x2 = -x1 * (ax * A[0] + bx * B[0])
    x3 = -x2 - A[0]
    x4 = 0.5 / (ax + bx)
    x5 = -x2 - B[0]
    x6 = -x2 - R[0]
    x7 = -x1 * (ax * A[1] + bx * B[1])
    x8 = -x7 - R[1]
    x9 = -x1 * (ax * A[2] + bx * B[2])
    x10 = -x9 - R[2]
    x11 = x0 * (x10**2 + x6**2 + x8**2)
    x12 = (
        6.283185307179586
        * x1
        * numpy.exp(
            -ax * bx * x1 * ((A[0] - B[0]) ** 2 + (A[1] - B[1]) ** 2 + (A[2] - B[2]) ** 2)
        )
    )
    x13 = x12 * boys(2, x11)
    x14 = x13 * x6
    x15 = x12 * boys(1, x11)
    x16 = x15 * x5
    x17 = -x14 + x16
    x18 = x17 * x5
    x19 = x4 * (-x13 + x15)
    x20 = x12 * boys(3, x11)
    x21 = x20 * x6
    x22 = x13 * x5
    x23 = -x21 + x22
    x24 = x23 * x6
    x25 = x19 - x24
    x26 = x18 + x25
    x27 = x26 * x5
    x28 = x23 * x5
    x29 = x4 * (x13 - x20)
    x30 = x12 * boys(4, x11)
    x31 = x30 * x6
    x32 = x20 * x5
    x33 = -x31 + x32
    x34 = x33 * x6
    x35 = x29 - x34
    x36 = x28 + x35
    x37 = x36 * x6
    x38 = 2.0 * x4
    x39 = x38 * (x17 + x21 - x22)
    x40 = -x37 + x39
    x41 = x27 + x40
    x42 = x41 * x5
    x43 = x12 * boys(0, x11)
    x44 = -x15 * x6 + x43 * x5
    x45 = x4 * (-x15 + x43)
    x46 = -x17 * x6 + x45
    x47 = x44 * x5 + x46
    x48 = -x26 * x6 + x38 * (x14 - x16 + x44)
    x49 = x47 * x5 + x48
    x50 = -x19
    x51 = x24 + x50
    x52 = x4 * (-x18 + x47 + x51)
    x53 = -x41 * x6 + 3.0 * x52
    x54 = x49 * x5 + x53
    x55 = x36 * x5
    x56 = x4 * (x20 - x30)
    x57 = x33 * x5
    x58 = x12 * boys(5, x11)
    x59 = x58 * x6
    x60 = x30 * x5
    x61 = -x59 + x60
    x62 = x6 * x61
    x63 = x56 + x57 - x62
    x64 = x6 * x63
    x65 = x38 * (x23 + x31 - x32)
    x66 = -x64 + x65
    x67 = x55 + x66
    x68 = x6 * x67
    x69 = -x29
    x70 = x34 + x69
    x71 = x4 * (x26 - x28 + x70)
    x72 = 3.0 * x71
    x73 = x68 - x72
    x74 = -x68 + x72
    x75 = x42 + x74
    x76 = x37 - x39
    x77 = x4 * (-x27 + x49 + x76)
    x78 = x3 * x54 - x6 * x75 + 4.0 * x77
    x79 = x3 * x75
    x80 = x5 * x67
    x81 = x5 * x63
    x82 = x4 * (x30 - x58)
    x83 = x5 * x61
    x84 = x12 * boys(6, x11)
    x85 = x6 * x84
    x86 = x5 * x58
    x87 = -x85 + x86
    x88 = x6 * x87
    x89 = x82 + x83 - x88
    x90 = x6 * x89
    x91 = x38 * (x33 + x59 - x60)
    x92 = -x90 + x91
    x93 = x81 + x92
    x94 = x6 * x93
    x95 = -x56
    x96 = x62 + x95
    x97 = x4 * (x36 - x57 + x96)
    x98 = 3.0 * x97
    x99 = -x94 + x98
    x100 = x80 + x99
    x101 = x100 * x6
    x102 = x64 - x65
    x103 = x4 * (x102 + x41 - x55)
    x104 = 4.0 * x103
    x105 = -x101 + x104 + x79
    x106 = x3 * x41
    x107 = x3 * x49 + x53
    x108 = -x106 + x107 + x73
    x109 = 4.0 * x4
    x110 = -x105 * x6 + x108 * x109 + x3 * x78 + x4 * (-x42 + x54 + x73)
    x111 = x94 - x98
    x112 = x4 * (x111 + x75 - x80)
    x113 = x105 * x3
    x114 = x100 * x3
    x115 = x5 * x93
    x116 = x5 * x89
    x117 = x4 * (x58 - x84)
    x118 = x5 * x87
    x119 = x12 * boys(7, x11)
    x120 = x119 * x6
    x121 = x5 * x84
    x122 = -x120 + x121
    x123 = x122 * x6
    x124 = x117 + x118 - x123
    x125 = x124 * x6
    x126 = x38 * (x61 + x85 - x86)
    x127 = x116 - x125 + x126
    x128 = x127 * x6
    x129 = -x82
    x130 = 3.0 * x4
    x131 = x130 * (x129 + x63 - x83 + x88)
    x132 = -x128 + x131
    x133 = x115 + x132
    x134 = x133 * x6
    x135 = x90 - x91
    x136 = x4 * (x135 + x67 - x81)
    x137 = 4.0 * x136
    x138 = x114 - x134 + x137
    x139 = x138 * x6
    x140 = x3 * x67
    x141 = x106 + x74
    x142 = x111 - x140 + x141
    x143 = x109 * x142
    x144 = x112 + x113 - x139 + x143
    x145 = x140 + x99
    x146 = x145 * x6
    x147 = x141 * x3
    x148 = x3 * x36
    x149 = x26 * x3
    x150 = x149 + x40
    x151 = x130 * (x102 - x148 + x150)
    x152 = x3 * x47 + x48
    x153 = x107 * x3 + x130 * (-x149 + x152 + x76) - x141 * x6 + x77
    x154 = x128 - x131
    x155 = x4 * (-x119 + x84)
    x156 = x12 * boys(8, x11)
    x157 = -x117
    x158 = x3 * x93
    x159 = x6 * (x132 + x158)
    x160 = x145 * x3
    x161 = x3 * x63
    x162 = x148 + x66
    x163 = x130 * (x135 - x161 + x162)
    x164 = x103 - x146 + x147 + x151
    x165 = x150 * x3
    x166 = x162 * x6
    x167 = x23 * x3
    x168 = x17 * x3
    x169 = x38 * (-x167 + x168 + x25 + x70)
    x170 = da * db
    x171 = 0.009523809523809524 * x170
    x172 = x13 * x8
    x173 = -x172
    x174 = -x7 - B[1]
    x175 = x15 * x174
    x176 = x173 + x175
    x177 = x176 * x5
    x178 = x20 * x8
    x179 = -x178
    x180 = x13 * x174
    x181 = x179 + x180
    x182 = x181 * x6
    x183 = -x182
    x184 = x177 + x183
    x185 = x184 * x5
    x186 = x4 * (x176 + x178 - x180)
    x187 = x181 * x5
    x188 = x30 * x8
    x189 = -x188
    x190 = x174 * x20
    x191 = x189 + x190
    x192 = x191 * x6
    x193 = -x192
    x194 = x187 + x193
    x195 = x194 * x6
    x196 = x186 - x195
    x197 = x185 + x196
    x198 = x197 * x5
    x199 = -x15 * x8
    x200 = x174 * x43 + x199
    x201 = -x176 * x6
    x202 = x200 * x5 + x201
    x203 = x4 * (x172 - x175 + x200)
    x204 = -x184 * x6 + x203
    x205 = x202 * x5 + x204
    x206 = x4 * (-x177 + x182 + x202)
    x207 = -x197 * x6 + 2.0 * x206
    x208 = x205 * x5 + x207
    x209 = x194 * x5
    x210 = x4 * (x181 + x188 - x190)
    x211 = x191 * x5
    x212 = x58 * x8
    x213 = -x212
    x214 = x174 * x30
    x215 = x213 + x214
    x216 = x215 * x6
    x217 = x211 - x216
    x218 = x217 * x6
    x219 = x210 - x218
    x220 = x209 + x219
    x221 = x220 * x6
    x222 = x4 * (x184 - x187 + x192)
    x223 = 2.0 * x222
    x224 = x221 - x223
    x225 = -x221 + x223
    x226 = x198 + x225
    x227 = -x186
    x228 = x195 + x227
    x229 = x4 * (-x185 + x205 + x228)
    x230 = x208 * x3 - x226 * x6 + 3.0 * x229
    x231 = x226 * x3
    x232 = x220 * x5
    x233 = x217 * x5
    x234 = x4 * (x191 + x212 - x214)
    x235 = x215 * x5
    x236 = x8 * x84
    x237 = -x236
    x238 = x174 * x58
    x239 = x237 + x238
    x240 = x239 * x6
    x241 = x235 - x240
    x242 = x241 * x6
    x243 = x234 - x242
    x244 = x233 + x243
    x245 = x244 * x6
    x246 = x4 * (x194 - x211 + x216)
    x247 = 2.0 * x246
    x248 = -x245 + x247
    x249 = x232 + x248
    x250 = x249 * x6
    x251 = -x210
    x252 = x218 + x251
    x253 = x4 * (x197 - x209 + x252)
    x254 = 3.0 * x253
    x255 = x231 - x250 + x254
    x256 = x197 * x3
    x257 = x205 * x3 + x207
    x258 = x224 - x256 + x257
    x259 = x130 * x258 + x230 * x3 - x255 * x6 + x4 * (-x198 + x208 + x224)
    x260 = x245 - x247
    x261 = x4 * (x226 - x232 + x260)
    x262 = x255 * x3
    x263 = x249 * x3
    x264 = x244 * x5
    x265 = x4 * (x215 + x236 - x238)
    x266 = x241 * x5
    x267 = x239 * x5
    x268 = x119 * x8
    x269 = -x268
    x270 = x174 * x84
    x271 = x269 + x270
    x272 = x271 * x6
    x273 = x267 - x272
    x274 = x273 * x6
    x275 = x265 + x266 - x274
    x276 = x275 * x6
    x277 = x38 * (x217 - x235 + x240)
    x278 = -x276 + x277
    x279 = x264 + x278
    x280 = x279 * x6
    x281 = -x234
    x282 = x242 + x281
    x283 = x4 * (x220 - x233 + x282)
    x284 = 3.0 * x283
    x285 = x263 - x280 + x284
    x286 = x285 * x6
    x287 = x220 * x3
    x288 = x225 + x256
    x289 = x260 - x287 + x288
    x290 = x130 * x289
    x291 = x261 + x262 - x286 + x290
    x292 = x248 + x287
    x293 = x292 * x6
    x294 = x288 * x3
    x295 = x194 * x3
    x296 = x184 * x3
    x297 = x196 + x296
    x298 = x38 * (x252 - x295 + x297)
    x299 = x202 * x3 + x204
    x300 = x229 + x257 * x3 - x288 * x6 + x38 * (x228 - x296 + x299)
    x301 = x276 - x277
    x302 = x4 * (x239 + x268 - x270)
    x303 = -x156 * x8
    x304 = x119 * x174 + x303
    x305 = -x265
    x306 = x244 * x3
    x307 = x6 * (x278 + x306)
    x308 = x292 * x3
    x309 = x217 * x3
    x310 = x219 + x295
    x311 = x38 * (x282 - x309 + x310)
    x312 = x253 - x293 + x294 + x298
    x313 = x176 * x3
    x314 = x181 * x3
    x315 = x4 * (x183 + x192 + x313 - x314)
    x316 = x297 * x3
    x317 = x310 * x6
    x318 = 2.645751311064591 * x171
    x319 = x10 * x13
    x320 = -x319
    x321 = -x9 - B[2]
    x322 = x15 * x321
    x323 = x320 + x322
    x324 = x323 * x5
    x325 = x10 * x20
    x326 = -x325
    x327 = x13 * x321
    x328 = x326 + x327
    x329 = x328 * x6
    x330 = -x329
    x331 = x324 + x330
    x332 = x331 * x5
    x333 = x4 * (x323 + x325 - x327)
    x334 = x328 * x5
    x335 = x10 * x30
    x336 = -x335
    x337 = x20 * x321
    x338 = x336 + x337
    x339 = x338 * x6
    x340 = -x339
    x341 = x334 + x340
    x342 = x341 * x6
    x343 = x333 - x342
    x344 = x332 + x343
    x345 = x344 * x5
    x346 = -x10 * x15
    x347 = x321 * x43 + x346
    x348 = -x323 * x6
    x349 = x347 * x5 + x348
    x350 = x4 * (x319 - x322 + x347)
    x351 = -x331 * x6 + x350
    x352 = x349 * x5 + x351
    x353 = x4 * (-x324 + x329 + x349)
    x354 = -x344 * x6 + 2.0 * x353
    x355 = x352 * x5 + x354
    x356 = x341 * x5
    x357 = x4 * (x328 + x335 - x337)
    x358 = x338 * x5
    x359 = x10 * x58
    x360 = -x359
    x361 = x30 * x321
    x362 = x360 + x361
    x363 = x362 * x6
    x364 = x358 - x363
    x365 = x364 * x6
    x366 = x357 - x365
    x367 = x356 + x366
    x368 = x367 * x6
    x369 = x4 * (x331 - x334 + x339)
    x370 = 2.0 * x369
    x371 = x368 - x370
    x372 = -x368 + x370
    x373 = x345 + x372
    x374 = -x333
    x375 = x342 + x374
    x376 = x4 * (-x332 + x352 + x375)
    x377 = x3 * x355 - x373 * x6 + 3.0 * x376
    x378 = x3 * x373
    x379 = x367 * x5
    x380 = x364 * x5
    x381 = x4 * (x338 + x359 - x361)
    x382 = x362 * x5
    x383 = x10 * x84
    x384 = -x383
    x385 = x321 * x58
    x386 = x384 + x385
    x387 = x386 * x6
    x388 = x382 - x387
    x389 = x388 * x6
    x390 = x381 - x389
    x391 = x380 + x390
    x392 = x391 * x6
    x393 = x4 * (x341 - x358 + x363)
    x394 = 2.0 * x393
    x395 = -x392 + x394
    x396 = x379 + x395
    x397 = x396 * x6
    x398 = -x357
    x399 = x365 + x398
    x400 = x4 * (x344 - x356 + x399)
    x401 = 3.0 * x400
    x402 = x378 - x397 + x401
    x403 = x3 * x344
    x404 = x3 * x352 + x354
    x405 = x371 - x403 + x404
    x406 = x130 * x405 + x3 * x377 + x4 * (-x345 + x355 + x371) - x402 * x6
    x407 = x392 - x394
    x408 = x4 * (x373 - x379 + x407)
    x409 = x3 * x402
    x410 = x3 * x396
    x411 = x391 * x5
    x412 = x4 * (x362 + x383 - x385)
    x413 = x388 * x5
    x414 = x386 * x5
    x415 = x10 * x119
    x416 = -x415
    x417 = x321 * x84
    x418 = x416 + x417
    x419 = x418 * x6
    x420 = x414 - x419
    x421 = x420 * x6
    x422 = x412 + x413 - x421
    x423 = x422 * x6
    x424 = x38 * (x364 - x382 + x387)
    x425 = -x423 + x424
    x426 = x411 + x425
    x427 = x426 * x6
    x428 = -x381
    x429 = x389 + x428
    x430 = x4 * (x367 - x380 + x429)
    x431 = 3.0 * x430
    x432 = x410 - x427 + x431
    x433 = x432 * x6
    x434 = x3 * x367
    x435 = x372 + x403
    x436 = x407 - x434 + x435
    x437 = x130 * x436
    x438 = x408 + x409 - x433 + x437
    x439 = x395 + x434
    x440 = x439 * x6
    x441 = x3 * x435
    x442 = x3 * x341
    x443 = x3 * x331
    x444 = x343 + x443
    x445 = x38 * (x399 - x442 + x444)
    x446 = x3 * x349 + x351
    x447 = x3 * x404 + x376 + x38 * (x375 - x443 + x446) - x435 * x6
    x448 = x423 - x424
    x449 = x4 * (x386 + x415 - x417)
    x450 = -x10 * x156
    x451 = x119 * x321 + x450
    x452 = -x412
    x453 = x3 * x391
    x454 = x6 * (x425 + x453)
    x455 = x3 * x439
    x456 = x3 * x364
    x457 = x366 + x442
    x458 = x38 * (x429 - x456 + x457)
    x459 = x400 - x440 + x441 + x445
    x460 = x3 * x323
    x461 = x3 * x328
    x462 = x4 * (x330 + x339 + x460 - x461)
    x463 = x3 * x444
    x464 = x457 * x6
    x465 = x174 * x176
    x466 = x181 * x8
    x467 = x19 - x466
    x468 = x465 + x467
    x469 = x468 * x5
    x470 = x174 * x181
    x471 = x191 * x8
    x472 = x29 - x471
    x473 = x470 + x472
    x474 = x473 * x6
    x475 = -x474
    x476 = x469 + x475
    x477 = x476 * x5
    x478 = -x176 * x8 + x45
    x479 = x174 * x200 + x478
    x480 = -x468 * x6
    x481 = x479 * x5 + x480
    x482 = x466 + x50
    x483 = x4 * (-x465 + x479 + x482)
    x484 = -x476 * x6 + x483
    x485 = x481 * x5 + x484
    x486 = x473 * x5
    x487 = x174 * x191
    x488 = x215 * x8
    x489 = -x488 + x56
    x490 = x487 + x489
    x491 = x490 * x6
    x492 = -x491
    x493 = x486 + x492
    x494 = x493 * x6
    x495 = x471 + x69
    x496 = x4 * (x468 - x470 + x495)
    x497 = -x496
    x498 = x494 + x497
    x499 = -x494 + x496
    x500 = x477 + x499
    x501 = x4 * (-x469 + x474 + x481)
    x502 = x3 * x485 - x500 * x6 + 2.0 * x501
    x503 = x3 * x500
    x504 = x493 * x5
    x505 = x488 + x95
    x506 = x4 * (x473 - x487 + x505)
    x507 = x490 * x5
    x508 = x174 * x215
    x509 = x239 * x8
    x510 = -x509 + x82
    x511 = x508 + x510
    x512 = x511 * x6
    x513 = -x512
    x514 = x507 + x513
    x515 = x514 * x6
    x516 = x506 - x515
    x517 = x504 + x516
    x518 = x517 * x6
    x519 = x4 * (x476 - x486 + x491)
    x520 = 2.0 * x519
    x521 = x503 - x518 + x520
    x522 = x3 * x476
    x523 = x3 * x481 + x484
    x524 = x38 * (x498 - x522 + x523)
    x525 = x3 * x502 + x4 * (-x477 + x485 + x498) - x521 * x6 + x524
    x526 = -x506
    x527 = x515 + x526
    x528 = x4 * (x500 - x504 + x527)
    x529 = x3 * x521
    x530 = x3 * x517
    x531 = x5 * x514
    x532 = x129 + x509
    x533 = x4 * (x490 - x508 + x532)
    x534 = x5 * x511
    x535 = x174 * x239
    x536 = x271 * x8
    x537 = x117 - x536
    x538 = x535 + x537
    x539 = x538 * x6
    x540 = x534 - x539
    x541 = x540 * x6
    x542 = x533 - x541
    x543 = x531 + x542
    x544 = x543 * x6
    x545 = x4 * (x493 - x507 + x512)
    x546 = 2.0 * x545
    x547 = x530 - x544 + x546
    x548 = x547 * x6
    x549 = x3 * x493
    x550 = x499 + x522
    x551 = x38 * (x527 - x549 + x550)
    x552 = x528 + x529 - x548 + x551
    x553 = x516 + x549
    x554 = x553 * x6
    x555 = x3 * x473
    x556 = x3 * x468
    x557 = x475 + x556
    x558 = x4 * (x491 - x555 + x557)
    x559 = x3 * x550
    x560 = x3 * x479 + x480
    x561 = x3 * x523 + x4 * (x474 - x556 + x560) + x501 - x550 * x6
    x562 = -x533
    x563 = x541 + x562
    x564 = x157 + x536
    x565 = x4 * (x511 - x535 + x564)
    x566 = x155 - x304 * x8
    x567 = x174 * x271 + x566
    x568 = x3 * x514
    x569 = x6 * (x542 + x568)
    x570 = x3 * x490
    x571 = x492 + x555
    x572 = x4 * (x512 - x570 + x571)
    x573 = x3 * x553
    x574 = x519 - x554 + x558 + x559
    x575 = x571 * x6
    x576 = x3 * x557
    x577 = -x551
    x578 = 0.03253000243161777 * x170
    x579 = x174 * x323
    x580 = x328 * x8
    x581 = -x580
    x582 = x579 + x581
    x583 = x5 * x582
    x584 = x174 * x328
    x585 = x338 * x8
    x586 = -x585
    x587 = x584 + x586
    x588 = x587 * x6
    x589 = -x588
    x590 = x583 + x589
    x591 = x5 * x590
    x592 = -x323 * x8
    x593 = x174 * x347 + x592
    x594 = -x582 * x6
    x595 = x5 * x593 + x594
    x596 = x4 * (-x579 + x580 + x593)
    x597 = -x590 * x6 + x596
    x598 = x5 * x595 + x597
    x599 = x5 * x587
    x600 = x174 * x338
    x601 = x362 * x8
    x602 = -x601
    x603 = x600 + x602
    x604 = x6 * x603
    x605 = -x604
    x606 = x599 + x605
    x607 = x6 * x606
    x608 = x4 * (x582 - x584 + x585)
    x609 = -x608
    x610 = x607 + x609
    x611 = -x607 + x608
    x612 = x591 + x611
    x613 = x4 * (-x583 + x588 + x595)
    x614 = x3 * x598 - x6 * x612 + 2.0 * x613
    x615 = x3 * x612
    x616 = x5 * x606
    x617 = x4 * (x587 - x600 + x601)
    x618 = x5 * x603
    x619 = x174 * x362
    x620 = x386 * x8
    x621 = -x620
    x622 = x619 + x621
    x623 = x6 * x622
    x624 = -x623
    x625 = x618 + x624
    x626 = x6 * x625
    x627 = x617 - x626
    x628 = x616 + x627
    x629 = x6 * x628
    x630 = x4 * (x590 - x599 + x604)
    x631 = 2.0 * x630
    x632 = x615 - x629 + x631
    x633 = x3 * x590
    x634 = x3 * x595 + x597
    x635 = x38 * (x610 - x633 + x634)
    x636 = x3 * x614 + x4 * (-x591 + x598 + x610) - x6 * x632 + x635
    x637 = -x617
    x638 = x626 + x637
    x639 = x4 * (x612 - x616 + x638)
    x640 = x3 * x632
    x641 = x3 * x628
    x642 = x5 * x625
    x643 = x4 * (x603 - x619 + x620)
    x644 = x5 * x622
    x645 = x174 * x386
    x646 = x418 * x8
    x647 = -x646
    x648 = x645 + x647
    x649 = x6 * x648
    x650 = x644 - x649
    x651 = x6 * x650
    x652 = x643 - x651
    x653 = x642 + x652
    x654 = x6 * x653
    x655 = x4 * (x606 - x618 + x623)
    x656 = 2.0 * x655
    x657 = x641 - x654 + x656
    x658 = x6 * x657
    x659 = x3 * x606
    x660 = x611 + x633
    x661 = x38 * (x638 - x659 + x660)
    x662 = x639 + x640 - x658 + x661
    x663 = x627 + x659
    x664 = x6 * x663
    x665 = x3 * x587
    x666 = x3 * x582
    x667 = x589 + x666
    x668 = x4 * (x604 - x665 + x667)
    x669 = x3 * x660
    x670 = x3 * x593 + x594
    x671 = x3 * x634 + x4 * (x588 - x666 + x670) - x6 * x660 + x613
    x672 = -x643
    x673 = x651 + x672
    x674 = x4 * (x622 - x645 + x646)
    x675 = -x451 * x8
    x676 = x174 * x418 + x675
    x677 = x3 * x625
    x678 = x6 * (x652 + x677)
    x679 = x3 * x603
    x680 = x605 + x665
    x681 = x4 * (x623 - x679 + x680)
    x682 = x3 * x663
    x683 = x630 - x664 + x668 + x669
    x684 = x6 * x680
    x685 = x3 * x667
    x686 = -x661
    x687 = 5.916079783099616 * x171
    x688 = x321 * x323
    x689 = x10 * x328
    x690 = x19 - x689
    x691 = x688 + x690
    x692 = x5 * x691
    x693 = x321 * x328
    x694 = x10 * x338
    x695 = x29 - x694
    x696 = x693 + x695
    x697 = x6 * x696
    x698 = -x697
    x699 = x692 + x698
    x700 = x5 * x699
    x701 = -x10 * x323 + x45
    x702 = x321 * x347 + x701
    x703 = -x6 * x691
    x704 = x5 * x702 + x703
    x705 = x50 + x689
    x706 = x4 * (-x688 + x702 + x705)
    x707 = -x6 * x699 + x706
    x708 = x5 * x704 + x707
    x709 = x5 * x696
    x710 = x321 * x338
    x711 = x10 * x362
    x712 = x56 - x711
    x713 = x710 + x712
    x714 = x6 * x713
    x715 = -x714
    x716 = x709 + x715
    x717 = x6 * x716
    x718 = x69 + x694
    x719 = x4 * (x691 - x693 + x718)
    x720 = -x719
    x721 = x717 + x720
    x722 = -x717 + x719
    x723 = x700 + x722
    x724 = x4 * (-x692 + x697 + x704)
    x725 = x3 * x708 - x6 * x723 + 2.0 * x724
    x726 = x3 * x723
    x727 = x5 * x716
    x728 = x711 + x95
    x729 = x4 * (x696 - x710 + x728)
    x730 = x5 * x713
    x731 = x321 * x362
    x732 = x10 * x386
    x733 = -x732 + x82
    x734 = x731 + x733
    x735 = x6 * x734
    x736 = -x735
    x737 = x730 + x736
    x738 = x6 * x737
    x739 = x729 - x738
    x740 = x727 + x739
    x741 = x6 * x740
    x742 = x4 * (x699 - x709 + x714)
    x743 = 2.0 * x742
    x744 = x726 - x741 + x743
    x745 = x3 * x699
    x746 = x3 * x704 + x707
    x747 = x38 * (x721 - x745 + x746)
    x748 = x3 * x725 + x4 * (-x700 + x708 + x721) - x6 * x744 + x747
    x749 = -x729
    x750 = x738 + x749
    x751 = x4 * (x723 - x727 + x750)
    x752 = x3 * x744
    x753 = x3 * x740
    x754 = x5 * x737
    x755 = x129 + x732
    x756 = x4 * (x713 - x731 + x755)
    x757 = x5 * x734
    x758 = x321 * x386
    x759 = x10 * x418
    x760 = x117 - x759
    x761 = x758 + x760
    x762 = x6 * x761
    x763 = x757 - x762
    x764 = x6 * x763
    x765 = x756 - x764
    x766 = x754 + x765
    x767 = x6 * x766
    x768 = x4 * (x716 - x730 + x735)
    x769 = 2.0 * x768
    x770 = x753 - x767 + x769
    x771 = x6 * x770
    x772 = x3 * x716
    x773 = x722 + x745
    x774 = x38 * (x750 - x772 + x773)
    x775 = x751 + x752 - x771 + x774
    x776 = x739 + x772
    x777 = x6 * x776
    x778 = x3 * x696
    x779 = x3 * x691
    x780 = x698 + x779
    x781 = x4 * (x714 - x778 + x780)
    x782 = x3 * x773
    x783 = x3 * x702 + x703
    x784 = x3 * x746 + x4 * (x697 - x779 + x783) - x6 * x773 + x724
    x785 = -x756
    x786 = x764 + x785
    x787 = x157 + x759
    x788 = x4 * (x734 - x758 + x787)
    x789 = -x10 * x451 + x155
    x790 = x321 * x418 + x789
    x791 = x3 * x737
    x792 = x6 * (x765 + x791)
    x793 = x3 * x713
    x794 = x715 + x778
    x795 = x4 * (x735 - x793 + x794)
    x796 = x3 * x776
    x797 = x742 - x777 + x781 + x782
    x798 = x6 * x794
    x799 = x3 * x780
    x800 = -x774
    x801 = x174 * x468
    x802 = 2.0 * x203 - x468 * x8
    x803 = x174 * x479 + x802
    x804 = x473 * x8
    x805 = 2.0 * x186
    x806 = x804 - x805
    x807 = x4 * (-x801 + x803 + x806)
    x808 = -x804 + x805
    x809 = x801 + x808
    x810 = -x6 * x809
    x811 = x3 * x803 + x810
    x812 = x3 * x809
    x813 = x174 * x473
    x814 = x490 * x8
    x815 = 2.0 * x210
    x816 = -x814 + x815
    x817 = x813 + x816
    x818 = x6 * x817
    x819 = -x818
    x820 = x812 + x819
    x821 = x3 * x811 - x6 * x820 + x807
    x822 = x174 * x490
    x823 = x511 * x8
    x824 = 2.0 * x234
    x825 = x823 - x824
    x826 = x4 * (x817 - x822 + x825)
    x827 = x3 * x817
    x828 = -x823 + x824
    x829 = x822 + x828
    x830 = x6 * x829
    x831 = -x830
    x832 = x827 + x831
    x833 = x3 * x832
    x834 = x3 * x829
    x835 = x174 * x511
    x836 = x538 * x8
    x837 = 2.0 * x265
    x838 = -x836 + x837
    x839 = x835 + x838
    x840 = x6 * x839
    x841 = -x840
    x842 = x6 * (x834 + x841)
    x843 = x814 - x815
    x844 = x4 * (x809 - x813 + x843)
    x845 = x3 * x820
    x846 = x6 * x832
    x847 = x844 + x845 - x846
    x848 = x4 * (x820 - x827 + x830)
    x849 = x4 * (x811 - x812 + x818)
    x850 = -x844
    x851 = x5 * x809
    x852 = x5 * x803 + x810
    x853 = x819 + x851
    x854 = x3 * x852 - x6 * x853 + x807
    x855 = x3 * x853
    x856 = x5 * x817
    x857 = x831 + x856
    x858 = x6 * x857
    x859 = x844 + x855 - x858
    x860 = x3 * x854 + x4 * (x818 - x851 + x852) - x6 * x859 + x849
    x861 = x4 * (x830 + x853 - x856)
    x862 = x3 * x859
    x863 = x3 * x857
    x864 = x5 * x829
    x865 = x841 + x864
    x866 = x6 * x865
    x867 = x826 + x863 - x866
    x868 = x6 * x867
    x869 = x848 + x861 + x862 - x868
    x870 = -x826
    x871 = x836 - x837
    x872 = x4 * (x829 - x835 + x871)
    x873 = 2.0 * x302 - x567 * x8
    x874 = x174 * x538 + x873
    x875 = x174 * x582
    x876 = x350 - x582 * x8
    x877 = x174 * x593 + x876
    x878 = x587 * x8
    x879 = x374 + x878
    x880 = x4 * (-x875 + x877 + x879)
    x881 = x333 - x878
    x882 = x875 + x881
    x883 = -x6 * x882
    x884 = x3 * x877 + x883
    x885 = x3 * x882
    x886 = x174 * x587
    x887 = x603 * x8
    x888 = x357 - x887
    x889 = x886 + x888
    x890 = x6 * x889
    x891 = -x890
    x892 = x885 + x891
    x893 = x3 * x884 - x6 * x892 + x880
    x894 = x174 * x603
    x895 = x622 * x8
    x896 = x428 + x895
    x897 = x4 * (x889 - x894 + x896)
    x898 = x3 * x889
    x899 = x381 - x895
    x900 = x894 + x899
    x901 = x6 * x900
    x902 = -x901
    x903 = x898 + x902
    x904 = x3 * x903
    x905 = x3 * x900
    x906 = x174 * x622
    x907 = x648 * x8
    x908 = x412 - x907
    x909 = x906 + x908
    x910 = x6 * x909
    x911 = -x910
    x912 = x6 * (x905 + x911)
    x913 = x398 + x887
    x914 = x4 * (x882 - x886 + x913)
    x915 = x3 * x892
    x916 = x6 * x903
    x917 = x914 + x915 - x916
    x918 = x4 * (x892 - x898 + x901)
    x919 = x4 * (x884 - x885 + x890)
    x920 = -x914
    x921 = x5 * x882
    x922 = x5 * x877 + x883
    x923 = x891 + x921
    x924 = x3 * x922 - x6 * x923 + x880
    x925 = x3 * x923
    x926 = x5 * x889
    x927 = x902 + x926
    x928 = x6 * x927
    x929 = x914 + x925 - x928
    x930 = x3 * x924 + x4 * (x890 - x921 + x922) - x6 * x929 + x919
    x931 = x4 * (x901 + x923 - x926)
    x932 = x3 * x929
    x933 = x3 * x927
    x934 = x5 * x900
    x935 = x911 + x934
    x936 = x6 * x935
    x937 = x897 + x933 - x936
    x938 = x6 * x937
    x939 = x918 + x931 + x932 - x938
    x940 = -x897
    x941 = x452 + x907
    x942 = x4 * (x900 - x906 + x941)
    x943 = x449 - x676 * x8
    x944 = x174 * x648 + x943
    x945 = x696 * x8
    x946 = x174 * x691
    x947 = -x691 * x8
    x948 = x174 * x702 + x947
    x949 = x4 * (x945 - x946 + x948)
    x950 = -x945
    x951 = x946 + x950
    x952 = -x6 * x951
    x953 = x3 * x948 + x952
    x954 = x3 * x951
    x955 = x174 * x696
    x956 = x713 * x8
    x957 = -x956
    x958 = x955 + x957
    x959 = x6 * x958
    x960 = -x959
    x961 = x954 + x960
    x962 = x3 * x953 - x6 * x961 + x949
    x963 = x734 * x8
    x964 = x174 * x713
    x965 = x4 * (x958 + x963 - x964)
    x966 = x3 * x958
    x967 = -x963
    x968 = x964 + x967
    x969 = x6 * x968
    x970 = -x969
    x971 = x966 + x970
    x972 = x3 * x971
    x973 = x3 * x968
    x974 = x174 * x734
    x975 = x761 * x8
    x976 = -x975
    x977 = x974 + x976
    x978 = x6 * x977
    x979 = -x978
    x980 = x6 * (x973 + x979)
    x981 = x4 * (x951 - x955 + x956)
    x982 = x3 * x961
    x983 = x6 * x971
    x984 = x981 + x982 - x983
    x985 = x4 * (x961 - x966 + x969)
    x986 = x4 * (x953 - x954 + x959)
    x987 = -x981
    x988 = x5 * x951
    x989 = x5 * x948 + x952
    x990 = x960 + x988
    x991 = x3 * x989 - x6 * x990 + x949
    x992 = x3 * x990
    x993 = x5 * x958
    x994 = x970 + x993
    x995 = x6 * x994
    x996 = x981 + x992 - x995
    x997 = x3 * x991 + x4 * (x959 - x988 + x989) - x6 * x996 + x986
    x998 = x4 * (x969 + x990 - x993)
    x999 = x3 * x996
    x1000 = x3 * x994
    x1001 = x5 * x968
    x1002 = x1001 + x979
    x1003 = x1002 * x6
    x1004 = x1000 - x1003 + x965
    x1005 = x1004 * x6
    x1006 = -x1005 + x985 + x998 + x999
    x1007 = -x965
    x1008 = x4 * (x968 - x974 + x975)
    x1009 = -x790 * x8
    x1010 = x1009 + x174 * x761
    x1011 = x321 * x691
    x1012 = -x10 * x691 + 2.0 * x350
    x1013 = x1012 + x321 * x702
    x1014 = x10 * x696
    x1015 = 2.0 * x333
    x1016 = x1014 - x1015
    x1017 = x4 * (-x1011 + x1013 + x1016)
    x1018 = -x1014 + x1015
    x1019 = x1011 + x1018
    x1020 = -x1019 * x6
    x1021 = x1013 * x3 + x1020
    x1022 = x1019 * x3
    x1023 = x321 * x696
    x1024 = x10 * x713
    x1025 = 2.0 * x357
    x1026 = -x1024 + x1025
    x1027 = x1023 + x1026
    x1028 = x1027 * x6
    x1029 = -x1028
    x1030 = x1022 + x1029
    x1031 = x1017 + x1021 * x3 - x1030 * x6
    x1032 = x321 * x713
    x1033 = x10 * x734
    x1034 = 2.0 * x381
    x1035 = x1033 - x1034
    x1036 = x4 * (x1027 - x1032 + x1035)
    x1037 = x1027 * x3
    x1038 = -x1033 + x1034
    x1039 = x1032 + x1038
    x1040 = x1039 * x6
    x1041 = -x1040
    x1042 = x1037 + x1041
    x1043 = x1042 * x3
    x1044 = x1039 * x3
    x1045 = x321 * x734
    x1046 = x10 * x761
    x1047 = 2.0 * x412
    x1048 = -x1046 + x1047
    x1049 = x1045 + x1048
    x1050 = x1049 * x6
    x1051 = -x1050
    x1052 = x6 * (x1044 + x1051)
    x1053 = x1024 - x1025
    x1054 = x4 * (x1019 - x1023 + x1053)
    x1055 = x1030 * x3
    x1056 = x1042 * x6
    x1057 = x1054 + x1055 - x1056
    x1058 = x4 * (x1030 - x1037 + x1040)
    x1059 = x4 * (x1021 - x1022 + x1028)
    x1060 = -x1054
    x1061 = x1019 * x5
    x1062 = x1013 * x5 + x1020
    x1063 = x1029 + x1061
    x1064 = x1017 + x1062 * x3 - x1063 * x6
    x1065 = x1063 * x3
    x1066 = x1027 * x5
    x1067 = x1041 + x1066
    x1068 = x1067 * x6
    x1069 = x1054 + x1065 - x1068
    x1070 = x1059 + x1064 * x3 - x1069 * x6 + x4 * (x1028 - x1061 + x1062)
    x1071 = x4 * (x1040 + x1063 - x1066)
    x1072 = x1069 * x3
    x1073 = x1067 * x3
    x1074 = x1039 * x5
    x1075 = x1051 + x1074
    x1076 = x1075 * x6
    x1077 = x1036 + x1073 - x1076
    x1078 = x1077 * x6
    x1079 = x1058 + x1071 + x1072 - x1078
    x1080 = -x1036
    x1081 = x1046 - x1047
    x1082 = x4 * (x1039 - x1045 + x1081)
    x1083 = -x10 * x790 + 2.0 * x449
    x1084 = x1083 + x321 * x761
    x1085 = x174 * x809
    x1086 = 3.0 * x483 - x8 * x809
    x1087 = x1086 + x174 * x803
    x1088 = x8 * x817
    x1089 = 3.0 * x496
    x1090 = x1088 - x1089
    x1091 = x4 * (-x1085 + x1087 + x1090)
    x1092 = -x1088 + x1089
    x1093 = x1085 + x1092
    x1094 = x1087 * x3 - x1093 * x6
    x1095 = x1093 * x3
    x1096 = x174 * x817
    x1097 = x8 * x829
    x1098 = 3.0 * x506
    x1099 = -x1097 + x1098
    x1100 = x1096 + x1099
    x1101 = x1100 * x6
    x1102 = x1095 - x1101
    x1103 = x1091 + x1094 * x3 - x1102 * x6
    x1104 = x1097 - x1098
    x1105 = x4 * (x1093 - x1096 + x1104)
    x1106 = x1102 * x3
    x1107 = x1100 * x3
    x1108 = x174 * x829
    x1109 = x8 * x839
    x1110 = 3.0 * x533
    x1111 = -x1109 + x1110
    x1112 = x1108 + x1111
    x1113 = x1112 * x6
    x1114 = x1107 - x1113
    x1115 = x1114 * x6
    x1116 = x1105 + x1106 - x1115
    x1117 = x1109 - x1110
    x1118 = x4 * (x1100 - x1108 + x1117)
    x1119 = 3.0 * x565 - x8 * x874
    x1120 = x1119 + x174 * x839
    x1121 = -x1105
    x1122 = x174 * x882
    x1123 = 2.0 * x596 - x8 * x882
    x1124 = x1123 + x174 * x877
    x1125 = x8 * x889
    x1126 = 2.0 * x608
    x1127 = x1125 - x1126
    x1128 = x4 * (-x1122 + x1124 + x1127)
    x1129 = -x1125 + x1126
    x1130 = x1122 + x1129
    x1131 = x1124 * x3 - x1130 * x6
    x1132 = x1130 * x3
    x1133 = x174 * x889
    x1134 = x8 * x900
    x1135 = 2.0 * x617
    x1136 = -x1134 + x1135
    x1137 = x1133 + x1136
    x1138 = x1137 * x6
    x1139 = x1132 - x1138
    x1140 = x1128 + x1131 * x3 - x1139 * x6
    x1141 = x1134 - x1135
    x1142 = x4 * (x1130 - x1133 + x1141)
    x1143 = x1139 * x3
    x1144 = x1137 * x3
    x1145 = x174 * x900
    x1146 = x8 * x909
    x1147 = 2.0 * x643
    x1148 = -x1146 + x1147
    x1149 = x1145 + x1148
    x1150 = x1149 * x6
    x1151 = x1144 - x1150
    x1152 = x1151 * x6
    x1153 = x1142 + x1143 - x1152
    x1154 = x1146 - x1147
    x1155 = x4 * (x1137 - x1145 + x1154)
    x1156 = 2.0 * x674 - x8 * x944
    x1157 = x1156 + x174 * x909
    x1158 = -x1142
    x1159 = x174 * x951
    x1160 = x706 - x8 * x951
    x1161 = x1160 + x174 * x948
    x1162 = x8 * x958
    x1163 = x1162 + x720
    x1164 = x4 * (-x1159 + x1161 + x1163)
    x1165 = -x1162 + x719
    x1166 = x1159 + x1165
    x1167 = x1161 * x3 - x1166 * x6
    x1168 = x1166 * x3
    x1169 = x174 * x958
    x1170 = x8 * x968
    x1171 = -x1170 + x729
    x1172 = x1169 + x1171
    x1173 = x1172 * x6
    x1174 = x1168 - x1173
    x1175 = x1164 + x1167 * x3 - x1174 * x6
    x1176 = x1170 + x749
    x1177 = x4 * (x1166 - x1169 + x1176)
    x1178 = x1174 * x3
    x1179 = x1172 * x3
    x1180 = x174 * x968
    x1181 = x8 * x977
    x1182 = -x1181 + x756
    x1183 = x1180 + x1182
    x1184 = x1183 * x6
    x1185 = x1179 - x1184
    x1186 = x1185 * x6
    x1187 = x1177 + x1178 - x1186
    x1188 = x1181 + x785
    x1189 = x4 * (x1172 - x1180 + x1188)
    x1190 = -x1010 * x8 + x788
    x1191 = x1190 + x174 * x977
    x1192 = -x1177
    x1193 = x1027 * x8
    x1194 = x1019 * x174
    x1195 = -x1019 * x8
    x1196 = x1013 * x174 + x1195
    x1197 = x4 * (x1193 - x1194 + x1196)
    x1198 = -x1193
    x1199 = x1194 + x1198
    x1200 = x1196 * x3 - x1199 * x6
    x1201 = x1199 * x3
    x1202 = x1027 * x174
    x1203 = x1039 * x8
    x1204 = -x1203
    x1205 = x1202 + x1204
    x1206 = x1205 * x6
    x1207 = x1201 - x1206
    x1208 = x1197 + x1200 * x3 - x1207 * x6
    x1209 = x4 * (x1199 - x1202 + x1203)
    x1210 = x1207 * x3
    x1211 = x1205 * x3
    x1212 = x1039 * x174
    x1213 = x1049 * x8
    x1214 = -x1213
    x1215 = x1212 + x1214
    x1216 = x1215 * x6
    x1217 = x1211 - x1216
    x1218 = x1217 * x6
    x1219 = x1209 + x1210 - x1218
    x1220 = x4 * (x1205 - x1212 + x1213)
    x1221 = -x1084 * x8
    x1222 = x1049 * x174 + x1221
    x1223 = -x1209
    x1224 = x1019 * x321
    x1225 = -x10 * x1019 + 3.0 * x706
    x1226 = x1013 * x321 + x1225
    x1227 = x10 * x1027
    x1228 = 3.0 * x719
    x1229 = x1227 - x1228
    x1230 = x4 * (-x1224 + x1226 + x1229)
    x1231 = -x1227 + x1228
    x1232 = x1224 + x1231
    x1233 = x1226 * x3 - x1232 * x6
    x1234 = x1232 * x3
    x1235 = x1027 * x321
    x1236 = x10 * x1039
    x1237 = 3.0 * x729
    x1238 = -x1236 + x1237
    x1239 = x1235 + x1238
    x1240 = x1239 * x6
    x1241 = x1234 - x1240
    x1242 = x1230 + x1233 * x3 - x1241 * x6
    x1243 = x1236 - x1237
    x1244 = x4 * (x1232 - x1235 + x1243)
    x1245 = x1241 * x3
    x1246 = x1239 * x3
    x1247 = x1039 * x321
    x1248 = x10 * x1049
    x1249 = 3.0 * x756
    x1250 = -x1248 + x1249
    x1251 = x1247 + x1250
    x1252 = x1251 * x6
    x1253 = x1246 - x1252
    x1254 = x1253 * x6
    x1255 = x1244 + x1245 - x1254
    x1256 = x1248 - x1249
    x1257 = x4 * (x1239 - x1247 + x1256)
    x1258 = -x10 * x1084 + 3.0 * x788
    x1259 = x1049 * x321 + x1258
    x1260 = -x1244
    x1261 = -x7 - A[1]
    x1262 = x1261 * x13
    x1263 = x1261 * x15
    x1264 = x1263 + x173
    x1265 = x4 * (-x1262 + x1264 + x178)
    x1266 = x1264 * x5
    x1267 = x1262 + x179
    x1268 = x1267 * x6
    x1269 = x1266 - x1268
    x1270 = x1269 * x5
    x1271 = x1267 * x5
    x1272 = x1261 * x20
    x1273 = x1272 + x189
    x1274 = x1273 * x6
    x1275 = x1271 - x1274
    x1276 = x1275 * x6
    x1277 = x1265 + x1270 - x1276
    x1278 = x1277 * x5
    x1279 = x4 * (x1267 - x1272 + x188)
    x1280 = x1275 * x5
    x1281 = x1273 * x5
    x1282 = x1261 * x30
    x1283 = x1282 + x213
    x1284 = x1283 * x6
    x1285 = x1281 - x1284
    x1286 = x1285 * x6
    x1287 = x1279 + x1280 - x1286
    x1288 = x1287 * x6
    x1289 = x38 * (x1269 - x1271 + x1274)
    x1290 = -x1288 + x1289
    x1291 = x1278 + x1290
    x1292 = x1291 * x5
    x1293 = x1261 * x43 + x199
    x1294 = x4 * (-x1263 + x1293 + x172)
    x1295 = -x1264 * x6 + x1293 * x5
    x1296 = -x1269 * x6 + x1294 + x1295 * x5
    x1297 = -x1277 * x6 + x38 * (-x1266 + x1268 + x1295)
    x1298 = x1296 * x5 + x1297
    x1299 = -x1265
    x1300 = -x1291 * x6 + x130 * (-x1270 + x1276 + x1296 + x1299)
    x1301 = x1298 * x5 + x1300
    x1302 = x1287 * x5
    x1303 = x4 * (x1273 - x1282 + x212)
    x1304 = x1285 * x5
    x1305 = x1283 * x5
    x1306 = x1261 * x58
    x1307 = x1306 + x237
    x1308 = x1307 * x6
    x1309 = x1305 - x1308
    x1310 = x1309 * x6
    x1311 = x1303 + x1304 - x1310
    x1312 = x1311 * x6
    x1313 = x38 * (x1275 - x1281 + x1284)
    x1314 = x1302 - x1312 + x1313
    x1315 = x1314 * x6
    x1316 = -x1279
    x1317 = x130 * (x1277 - x1280 + x1286 + x1316)
    x1318 = x1315 - x1317
    x1319 = -x1315 + x1317
    x1320 = x1292 + x1319
    x1321 = x1288 - x1289
    x1322 = x4 * (-x1278 + x1298 + x1321)
    x1323 = x1301 * x3 - x1320 * x6 + 4.0 * x1322
    x1324 = x1320 * x3
    x1325 = x1314 * x5
    x1326 = x1311 * x5
    x1327 = x4 * (x1283 - x1306 + x236)
    x1328 = x1309 * x5
    x1329 = x1307 * x5
    x1330 = x1261 * x84
    x1331 = x1330 + x269
    x1332 = x1331 * x6
    x1333 = x1329 - x1332
    x1334 = x1333 * x6
    x1335 = x1327 + x1328 - x1334
    x1336 = x1335 * x6
    x1337 = x38 * (x1285 - x1305 + x1308)
    x1338 = x1326 - x1336 + x1337
    x1339 = x1338 * x6
    x1340 = -x1303
    x1341 = x130 * (x1287 - x1304 + x1310 + x1340)
    x1342 = -x1339 + x1341
    x1343 = x1325 + x1342
    x1344 = x1343 * x6
    x1345 = x1312 - x1313
    x1346 = x4 * (x1291 - x1302 + x1345)
    x1347 = 4.0 * x1346
    x1348 = x1324 - x1344 + x1347
    x1349 = x1291 * x3
    x1350 = x1298 * x3 + x1300
    x1351 = x1339 - x1341
    x1352 = x4 * (x1307 - x1330 + x268)
    x1353 = x119 * x1261 + x303
    x1354 = -x1327
    x1355 = x1314 * x3
    x1356 = x1319 + x1349
    x1357 = x1277 * x3
    x1358 = x1261 * x176
    x1359 = x1358 + x467
    x1360 = x1359 * x5
    x1361 = x1261 * x181
    x1362 = x1361 + x472
    x1363 = x1362 * x6
    x1364 = x1360 - x1363
    x1365 = x1364 * x5
    x1366 = x4 * (x1359 - x1361 + x495)
    x1367 = x1362 * x5
    x1368 = x1261 * x191
    x1369 = x1368 + x489
    x1370 = x1369 * x6
    x1371 = x1367 - x1370
    x1372 = x1371 * x6
    x1373 = x1366 - x1372
    x1374 = x1365 + x1373
    x1375 = x1374 * x5
    x1376 = x1261 * x200 + x478
    x1377 = -x1359 * x6 + x1376 * x5
    x1378 = x4 * (-x1358 + x1376 + x482)
    x1379 = -x1364 * x6 + x1378
    x1380 = x1377 * x5 + x1379
    x1381 = -x1374 * x6 + x38 * (-x1360 + x1363 + x1377)
    x1382 = x1380 * x5 + x1381
    x1383 = x4 * (x1362 - x1368 + x505)
    x1384 = x1371 * x5
    x1385 = x1369 * x5
    x1386 = x1261 * x215
    x1387 = x1386 + x510
    x1388 = x1387 * x6
    x1389 = x1385 - x1388
    x1390 = x1389 * x6
    x1391 = x1383 + x1384 - x1390
    x1392 = x1391 * x6
    x1393 = x38 * (x1364 - x1367 + x1370)
    x1394 = x1392 - x1393
    x1395 = -x1392 + x1393
    x1396 = x1375 + x1395
    x1397 = -x1366 + x1372
    x1398 = x4 * (-x1365 + x1380 + x1397)
    x1399 = x1382 * x3 - x1396 * x6 + 3.0 * x1398
    x1400 = x1396 * x3
    x1401 = x1391 * x5
    x1402 = x4 * (x1369 - x1386 + x532)
    x1403 = x1389 * x5
    x1404 = x1387 * x5
    x1405 = x1261 * x239
    x1406 = x1405 + x537
    x1407 = x1406 * x6
    x1408 = x1404 - x1407
    x1409 = x1408 * x6
    x1410 = x1402 + x1403 - x1409
    x1411 = x1410 * x6
    x1412 = x38 * (x1371 - x1385 + x1388)
    x1413 = -x1411 + x1412
    x1414 = x1401 + x1413
    x1415 = x1414 * x6
    x1416 = -x1383 + x1390
    x1417 = x4 * (x1374 - x1384 + x1416)
    x1418 = 3.0 * x1417
    x1419 = x1400 - x1415 + x1418
    x1420 = x1374 * x3
    x1421 = x1380 * x3 + x1381
    x1422 = x1411 - x1412
    x1423 = x4 * (x1387 - x1405 + x564)
    x1424 = x1261 * x271 + x566
    x1425 = x1391 * x3
    x1426 = x1395 + x1420
    x1427 = x1364 * x3
    x1428 = 0.06666666666666667 * x170
    x1429 = x1261 * x323
    x1430 = x1429 + x581
    x1431 = x1430 * x5
    x1432 = x1261 * x328
    x1433 = x1432 + x586
    x1434 = x1433 * x6
    x1435 = x1431 - x1434
    x1436 = x1435 * x5
    x1437 = x4 * (x1430 - x1432 + x585)
    x1438 = x1433 * x5
    x1439 = x1261 * x338
    x1440 = x1439 + x602
    x1441 = x1440 * x6
    x1442 = x1438 - x1441
    x1443 = x1442 * x6
    x1444 = x1437 - x1443
    x1445 = x1436 + x1444
    x1446 = x1445 * x5
    x1447 = x1261 * x347 + x592
    x1448 = -x1430 * x6 + x1447 * x5
    x1449 = x4 * (-x1429 + x1447 + x580)
    x1450 = -x1435 * x6 + x1449
    x1451 = x1448 * x5 + x1450
    x1452 = -x1445 * x6 + x38 * (-x1431 + x1434 + x1448)
    x1453 = x1451 * x5 + x1452
    x1454 = x4 * (x1433 - x1439 + x601)
    x1455 = x1442 * x5
    x1456 = x1440 * x5
    x1457 = x1261 * x362
    x1458 = x1457 + x621
    x1459 = x1458 * x6
    x1460 = x1456 - x1459
    x1461 = x1460 * x6
    x1462 = x1454 + x1455 - x1461
    x1463 = x1462 * x6
    x1464 = x38 * (x1435 - x1438 + x1441)
    x1465 = x1463 - x1464
    x1466 = -x1463 + x1464
    x1467 = x1446 + x1466
    x1468 = -x1437
    x1469 = x1443 + x1468
    x1470 = x4 * (-x1436 + x1451 + x1469)
    x1471 = x1453 * x3 - x1467 * x6 + 3.0 * x1470
    x1472 = x1467 * x3
    x1473 = x1462 * x5
    x1474 = x4 * (x1440 - x1457 + x620)
    x1475 = x1460 * x5
    x1476 = x1458 * x5
    x1477 = x1261 * x386
    x1478 = x1477 + x647
    x1479 = x1478 * x6
    x1480 = x1476 - x1479
    x1481 = x1480 * x6
    x1482 = x1474 + x1475 - x1481
    x1483 = x1482 * x6
    x1484 = x38 * (x1442 - x1456 + x1459)
    x1485 = -x1483 + x1484
    x1486 = x1473 + x1485
    x1487 = x1486 * x6
    x1488 = -x1454
    x1489 = x1461 + x1488
    x1490 = x4 * (x1445 - x1455 + x1489)
    x1491 = 3.0 * x1490
    x1492 = x1472 - x1487 + x1491
    x1493 = x1445 * x3
    x1494 = x1451 * x3 + x1452
    x1495 = x1483 - x1484
    x1496 = x4 * (x1458 - x1477 + x646)
    x1497 = x1261 * x418 + x675
    x1498 = -x1474
    x1499 = x1462 * x3
    x1500 = x1466 + x1493
    x1501 = x1435 * x3
    x1502 = x1261 * x468
    x1503 = x1502 + x808
    x1504 = x1503 * x5
    x1505 = x1261 * x473
    x1506 = x1505 + x816
    x1507 = x1506 * x6
    x1508 = -x1507
    x1509 = x1504 + x1508
    x1510 = x1509 * x5
    x1511 = x1261 * x479 + x802
    x1512 = -x1503 * x6
    x1513 = x1511 * x5 + x1512
    x1514 = x4 * (-x1502 + x1511 + x806)
    x1515 = -x1509 * x6 + x1514
    x1516 = x1513 * x5 + x1515
    x1517 = x1506 * x5
    x1518 = x1261 * x490
    x1519 = x1518 + x828
    x1520 = x1519 * x6
    x1521 = x1517 - x1520
    x1522 = x1521 * x6
    x1523 = x4 * (x1503 - x1505 + x843)
    x1524 = x1522 - x1523
    x1525 = -x1522 + x1523
    x1526 = x1510 + x1525
    x1527 = x4 * (-x1504 + x1507 + x1513)
    x1528 = x1516 * x3 - x1526 * x6 + 2.0 * x1527
    x1529 = x1526 * x3
    x1530 = x1521 * x5
    x1531 = x4 * (x1506 - x1518 + x825)
    x1532 = x1519 * x5
    x1533 = x1261 * x511
    x1534 = x1533 + x838
    x1535 = x1534 * x6
    x1536 = x1532 - x1535
    x1537 = x1536 * x6
    x1538 = x1531 - x1537
    x1539 = x1530 + x1538
    x1540 = x1539 * x6
    x1541 = x4 * (x1509 - x1517 + x1520)
    x1542 = 2.0 * x1541
    x1543 = x1529 - x1540 + x1542
    x1544 = x1509 * x3
    x1545 = x1513 * x3 + x1515
    x1546 = -x1531 + x1537
    x1547 = x4 * (x1519 - x1533 + x871)
    x1548 = x1261 * x538 + x873
    x1549 = x1521 * x3
    x1550 = x1525 + x1544
    x1551 = x1503 * x3
    x1552 = 0.08606629658238704 * x170
    x1553 = x1261 * x582
    x1554 = x1553 + x881
    x1555 = x1554 * x5
    x1556 = x1261 * x587
    x1557 = x1556 + x888
    x1558 = x1557 * x6
    x1559 = -x1558
    x1560 = x1555 + x1559
    x1561 = x1560 * x5
    x1562 = x1261 * x593 + x876
    x1563 = -x1554 * x6
    x1564 = x1562 * x5 + x1563
    x1565 = x4 * (-x1553 + x1562 + x879)
    x1566 = -x1560 * x6 + x1565
    x1567 = x1564 * x5 + x1566
    x1568 = x1557 * x5
    x1569 = x1261 * x603
    x1570 = x1569 + x899
    x1571 = x1570 * x6
    x1572 = x1568 - x1571
    x1573 = x1572 * x6
    x1574 = x4 * (x1554 - x1556 + x913)
    x1575 = x1573 - x1574
    x1576 = -x1573 + x1574
    x1577 = x1561 + x1576
    x1578 = x4 * (-x1555 + x1558 + x1564)
    x1579 = x1567 * x3 - x1577 * x6 + 2.0 * x1578
    x1580 = x1577 * x3
    x1581 = x1572 * x5
    x1582 = x4 * (x1557 - x1569 + x896)
    x1583 = x1570 * x5
    x1584 = x1261 * x622
    x1585 = x1584 + x908
    x1586 = x1585 * x6
    x1587 = x1583 - x1586
    x1588 = x1587 * x6
    x1589 = x1582 - x1588
    x1590 = x1581 + x1589
    x1591 = x1590 * x6
    x1592 = x4 * (x1560 - x1568 + x1571)
    x1593 = 2.0 * x1592
    x1594 = x1580 - x1591 + x1593
    x1595 = x1560 * x3
    x1596 = x1564 * x3 + x1566
    x1597 = -x1582 + x1588
    x1598 = x4 * (x1570 - x1584 + x941)
    x1599 = x1261 * x648 + x943
    x1600 = x1572 * x3
    x1601 = x1576 + x1595
    x1602 = x1554 * x3
    x1603 = 2.23606797749979 * x1428
    x1604 = x1261 * x691
    x1605 = x1604 + x950
    x1606 = x1605 * x5
    x1607 = x1261 * x696
    x1608 = x1607 + x957
    x1609 = x1608 * x6
    x1610 = -x1609
    x1611 = x1606 + x1610
    x1612 = x1611 * x5
    x1613 = x1261 * x702 + x947
    x1614 = -x1605 * x6
    x1615 = x1613 * x5 + x1614
    x1616 = x4 * (-x1604 + x1613 + x945)
    x1617 = -x1611 * x6 + x1616
    x1618 = x1615 * x5 + x1617
    x1619 = x1608 * x5
    x1620 = x1261 * x713
    x1621 = x1620 + x967
    x1622 = x1621 * x6
    x1623 = x1619 - x1622
    x1624 = x1623 * x6
    x1625 = x4 * (x1605 - x1607 + x956)
    x1626 = -x1625
    x1627 = x1624 + x1626
    x1628 = -x1624 + x1625
    x1629 = x1612 + x1628
    x1630 = x4 * (-x1606 + x1609 + x1615)
    x1631 = x1618 * x3 - x1629 * x6 + 2.0 * x1630
    x1632 = x1629 * x3
    x1633 = x1623 * x5
    x1634 = x4 * (x1608 - x1620 + x963)
    x1635 = x1621 * x5
    x1636 = x1261 * x734
    x1637 = x1636 + x976
    x1638 = x1637 * x6
    x1639 = x1635 - x1638
    x1640 = x1639 * x6
    x1641 = x1634 - x1640
    x1642 = x1633 + x1641
    x1643 = x1642 * x6
    x1644 = x4 * (x1611 - x1619 + x1622)
    x1645 = 2.0 * x1644
    x1646 = x1632 - x1643 + x1645
    x1647 = x1611 * x3
    x1648 = x1615 * x3 + x1617
    x1649 = -x1634
    x1650 = x1640 + x1649
    x1651 = x4 * (x1621 - x1636 + x975)
    x1652 = x1009 + x1261 * x761
    x1653 = x1623 * x3
    x1654 = x1628 + x1647
    x1655 = x1605 * x3
    x1656 = x1261 * x809
    x1657 = x1086 + x1261 * x803
    x1658 = x4 * (x1090 - x1656 + x1657)
    x1659 = x1092 + x1656
    x1660 = -x1659 * x6
    x1661 = x1657 * x3 + x1660
    x1662 = x1261 * x817
    x1663 = x1099 + x1662
    x1664 = x1663 * x3
    x1665 = x1261 * x829
    x1666 = x1111 + x1665
    x1667 = x1666 * x6
    x1668 = -x1667
    x1669 = x4 * (x1104 + x1659 - x1662)
    x1670 = -x1669
    x1671 = x1659 * x3
    x1672 = x1663 * x6
    x1673 = -x1672
    x1674 = x1671 + x1673
    x1675 = x1659 * x5
    x1676 = x1657 * x5 + x1660
    x1677 = x1673 + x1675
    x1678 = x1658 + x1676 * x3 - x1677 * x6
    x1679 = x1677 * x3
    x1680 = x1663 * x5
    x1681 = x1668 + x1680
    x1682 = x1681 * x6
    x1683 = x1669 + x1679 - x1682
    x1684 = x4 * (x1117 + x1663 - x1665)
    x1685 = x1119 + x1261 * x839
    x1686 = x1261 * x882
    x1687 = x1123 + x1261 * x877
    x1688 = x4 * (x1127 - x1686 + x1687)
    x1689 = x1129 + x1686
    x1690 = -x1689 * x6
    x1691 = x1687 * x3 + x1690
    x1692 = x1261 * x889
    x1693 = x1136 + x1692
    x1694 = x1693 * x3
    x1695 = x1261 * x900
    x1696 = x1148 + x1695
    x1697 = x1696 * x6
    x1698 = -x1697
    x1699 = x4 * (x1141 + x1689 - x1692)
    x1700 = -x1699
    x1701 = x1689 * x3
    x1702 = x1693 * x6
    x1703 = -x1702
    x1704 = x1701 + x1703
    x1705 = x1689 * x5
    x1706 = x1687 * x5 + x1690
    x1707 = x1703 + x1705
    x1708 = x1688 + x1706 * x3 - x1707 * x6
    x1709 = x1707 * x3
    x1710 = x1693 * x5
    x1711 = x1698 + x1710
    x1712 = x1711 * x6
    x1713 = x1699 + x1709 - x1712
    x1714 = x4 * (x1154 + x1693 - x1695)
    x1715 = x1156 + x1261 * x909
    x1716 = x1261 * x951
    x1717 = x1160 + x1261 * x948
    x1718 = x4 * (x1163 - x1716 + x1717)
    x1719 = x1165 + x1716
    x1720 = -x1719 * x6
    x1721 = x1717 * x3 + x1720
    x1722 = x1261 * x958
    x1723 = x1171 + x1722
    x1724 = x1723 * x3
    x1725 = x1261 * x968
    x1726 = x1182 + x1725
    x1727 = x1726 * x6
    x1728 = -x1727
    x1729 = x4 * (x1176 + x1719 - x1722)
    x1730 = -x1729
    x1731 = x1719 * x3
    x1732 = x1723 * x6
    x1733 = -x1732
    x1734 = x1731 + x1733
    x1735 = x1719 * x5
    x1736 = x1717 * x5 + x1720
    x1737 = x1733 + x1735
    x1738 = x1718 + x1736 * x3 - x1737 * x6
    x1739 = x1737 * x3
    x1740 = x1723 * x5
    x1741 = x1728 + x1740
    x1742 = x1741 * x6
    x1743 = x1729 + x1739 - x1742
    x1744 = x4 * (x1188 + x1723 - x1725)
    x1745 = x1190 + x1261 * x977
    x1746 = x1019 * x1261
    x1747 = x1013 * x1261 + x1195
    x1748 = x4 * (x1193 - x1746 + x1747)
    x1749 = x1198 + x1746
    x1750 = -x1749 * x6
    x1751 = x1747 * x3 + x1750
    x1752 = x1027 * x1261
    x1753 = x1204 + x1752
    x1754 = x1753 * x3
    x1755 = x1039 * x1261
    x1756 = x1214 + x1755
    x1757 = x1756 * x6
    x1758 = -x1757
    x1759 = x4 * (x1203 + x1749 - x1752)
    x1760 = -x1759
    x1761 = x1749 * x3
    x1762 = x1753 * x6
    x1763 = -x1762
    x1764 = x1761 + x1763
    x1765 = x1749 * x5
    x1766 = x1747 * x5 + x1750
    x1767 = x1763 + x1765
    x1768 = x1748 + x1766 * x3 - x1767 * x6
    x1769 = x1767 * x3
    x1770 = x1753 * x5
    x1771 = x1758 + x1770
    x1772 = x1771 * x6
    x1773 = x1759 + x1769 - x1772
    x1774 = x4 * (x1213 + x1753 - x1755)
    x1775 = x1049 * x1261 + x1221
    x1776 = x1100 * x8
    x1777 = x1093 * x1261
    x1778 = 4.0 * x844
    x1779 = x1087 * x1261 - x1093 * x8 + 4.0 * x807
    x1780 = x4 * (x1776 - x1777 - x1778 + x1779)
    x1781 = -x1776 + x1777 + x1778
    x1782 = x1779 * x3 - x1781 * x6
    x1783 = x1781 * x3
    x1784 = x1100 * x1261
    x1785 = x1112 * x8
    x1786 = 4.0 * x826
    x1787 = x1784 - x1785 + x1786
    x1788 = x1787 * x6
    x1789 = x1783 - x1788
    x1790 = x4 * (x1781 - x1784 + x1785 - x1786)
    x1791 = x1112 * x1261 - x1120 * x8 + 4.0 * x872
    x1792 = x1137 * x8
    x1793 = x1130 * x1261
    x1794 = 3.0 * x914
    x1795 = x1124 * x1261 - x1130 * x8 + 3.0 * x880
    x1796 = x4 * (x1792 - x1793 - x1794 + x1795)
    x1797 = -x1792 + x1793 + x1794
    x1798 = x1795 * x3 - x1797 * x6
    x1799 = x1797 * x3
    x1800 = x1137 * x1261
    x1801 = x1149 * x8
    x1802 = 3.0 * x897
    x1803 = x1800 - x1801 + x1802
    x1804 = x1803 * x6
    x1805 = x1799 - x1804
    x1806 = x4 * (x1797 - x1800 + x1801 - x1802)
    x1807 = x1149 * x1261 - x1157 * x8 + 3.0 * x942
    x1808 = x1172 * x8
    x1809 = x1166 * x1261
    x1810 = 2.0 * x981
    x1811 = x1161 * x1261 - x1166 * x8 + 2.0 * x949
    x1812 = x4 * (x1808 - x1809 - x1810 + x1811)
    x1813 = -x1808 + x1809 + x1810
    x1814 = x1811 * x3 - x1813 * x6
    x1815 = x1813 * x3
    x1816 = x1172 * x1261
    x1817 = x1183 * x8
    x1818 = 2.0 * x965
    x1819 = x1816 - x1817 + x1818
    x1820 = x1819 * x6
    x1821 = x1815 - x1820
    x1822 = x4 * (x1813 - x1816 + x1817 - x1818)
    x1823 = 2.0 * x1008 + x1183 * x1261 - x1191 * x8
    x1824 = x1205 * x8
    x1825 = x1199 * x1261
    x1826 = x1017 + x1196 * x1261 - x1199 * x8
    x1827 = x4 * (x1060 + x1824 - x1825 + x1826)
    x1828 = x1054 - x1824 + x1825
    x1829 = x1826 * x3 - x1828 * x6
    x1830 = x1828 * x3
    x1831 = x1205 * x1261
    x1832 = x1215 * x8
    x1833 = x1036 + x1831 - x1832
    x1834 = x1833 * x6
    x1835 = x1830 - x1834
    x1836 = x4 * (x1080 + x1828 - x1831 + x1832)
    x1837 = x1082 + x1215 * x1261 - x1222 * x8
    x1838 = x1239 * x8
    x1839 = x1232 * x1261
    x1840 = x1226 * x1261 - x1232 * x8
    x1841 = x4 * (x1838 - x1839 + x1840)
    x1842 = -x1838 + x1839
    x1843 = x1840 * x3 - x1842 * x6
    x1844 = x1842 * x3
    x1845 = x1239 * x1261
    x1846 = x1251 * x8
    x1847 = x1845 - x1846
    x1848 = x1847 * x6
    x1849 = x1844 - x1848
    x1850 = x4 * (x1842 - x1845 + x1846)
    x1851 = x1251 * x1261 - x1259 * x8
    x1852 = -x9 - A[2]
    x1853 = x13 * x1852
    x1854 = x15 * x1852
    x1855 = x1854 + x320
    x1856 = x4 * (-x1853 + x1855 + x325)
    x1857 = x1855 * x5
    x1858 = x1853 + x326
    x1859 = x1858 * x6
    x1860 = x1857 - x1859
    x1861 = x1860 * x5
    x1862 = x1858 * x5
    x1863 = x1852 * x20
    x1864 = x1863 + x336
    x1865 = x1864 * x6
    x1866 = x1862 - x1865
    x1867 = x1866 * x6
    x1868 = x1856 + x1861 - x1867
    x1869 = x1868 * x5
    x1870 = x4 * (x1858 - x1863 + x335)
    x1871 = x1866 * x5
    x1872 = x1864 * x5
    x1873 = x1852 * x30
    x1874 = x1873 + x360
    x1875 = x1874 * x6
    x1876 = x1872 - x1875
    x1877 = x1876 * x6
    x1878 = x1870 + x1871 - x1877
    x1879 = x1878 * x6
    x1880 = x38 * (x1860 - x1862 + x1865)
    x1881 = -x1879 + x1880
    x1882 = x1869 + x1881
    x1883 = x1882 * x5
    x1884 = x1852 * x43 + x346
    x1885 = x4 * (-x1854 + x1884 + x319)
    x1886 = -x1855 * x6 + x1884 * x5
    x1887 = -x1860 * x6 + x1885 + x1886 * x5
    x1888 = -x1868 * x6 + x38 * (-x1857 + x1859 + x1886)
    x1889 = x1887 * x5 + x1888
    x1890 = -x1856
    x1891 = x130 * (-x1861 + x1867 + x1887 + x1890) - x1882 * x6
    x1892 = x1889 * x5 + x1891
    x1893 = x1878 * x5
    x1894 = x4 * (x1864 - x1873 + x359)
    x1895 = x1876 * x5
    x1896 = x1874 * x5
    x1897 = x1852 * x58
    x1898 = x1897 + x384
    x1899 = x1898 * x6
    x1900 = x1896 - x1899
    x1901 = x1900 * x6
    x1902 = x1894 + x1895 - x1901
    x1903 = x1902 * x6
    x1904 = x38 * (x1866 - x1872 + x1875)
    x1905 = x1893 - x1903 + x1904
    x1906 = x1905 * x6
    x1907 = -x1870
    x1908 = x130 * (x1868 - x1871 + x1877 + x1907)
    x1909 = x1906 - x1908
    x1910 = -x1906 + x1908
    x1911 = x1883 + x1910
    x1912 = x1879 - x1880
    x1913 = x4 * (-x1869 + x1889 + x1912)
    x1914 = x1892 * x3 - x1911 * x6 + 4.0 * x1913
    x1915 = x1911 * x3
    x1916 = x1905 * x5
    x1917 = x1902 * x5
    x1918 = x4 * (x1874 - x1897 + x383)
    x1919 = x1900 * x5
    x1920 = x1898 * x5
    x1921 = x1852 * x84
    x1922 = x1921 + x416
    x1923 = x1922 * x6
    x1924 = x1920 - x1923
    x1925 = x1924 * x6
    x1926 = x1918 + x1919 - x1925
    x1927 = x1926 * x6
    x1928 = x38 * (x1876 - x1896 + x1899)
    x1929 = x1917 - x1927 + x1928
    x1930 = x1929 * x6
    x1931 = -x1894
    x1932 = x130 * (x1878 - x1895 + x1901 + x1931)
    x1933 = -x1930 + x1932
    x1934 = x1916 + x1933
    x1935 = x1934 * x6
    x1936 = x1903 - x1904
    x1937 = x4 * (x1882 - x1893 + x1936)
    x1938 = 4.0 * x1937
    x1939 = x1915 - x1935 + x1938
    x1940 = x1882 * x3
    x1941 = x1889 * x3 + x1891
    x1942 = x1930 - x1932
    x1943 = x4 * (x1898 - x1921 + x415)
    x1944 = x119 * x1852 + x450
    x1945 = -x1918
    x1946 = x1905 * x3
    x1947 = x1910 + x1940
    x1948 = x1868 * x3
    x1949 = x174 * x1855
    x1950 = x1858 * x8
    x1951 = -x1950
    x1952 = x1949 + x1951
    x1953 = x1952 * x5
    x1954 = x174 * x1858
    x1955 = x1864 * x8
    x1956 = -x1955
    x1957 = x1954 + x1956
    x1958 = x1957 * x6
    x1959 = x1953 - x1958
    x1960 = x1959 * x5
    x1961 = x4 * (x1952 - x1954 + x1955)
    x1962 = x1957 * x5
    x1963 = x174 * x1864
    x1964 = x1874 * x8
    x1965 = -x1964
    x1966 = x1963 + x1965
    x1967 = x1966 * x6
    x1968 = x1962 - x1967
    x1969 = x1968 * x6
    x1970 = x1961 - x1969
    x1971 = x1960 + x1970
    x1972 = x1971 * x5
    x1973 = -x1855 * x8
    x1974 = x174 * x1884 + x1973
    x1975 = -x1952 * x6 + x1974 * x5
    x1976 = x4 * (-x1949 + x1950 + x1974)
    x1977 = -x1959 * x6 + x1976
    x1978 = x1975 * x5 + x1977
    x1979 = -x1971 * x6 + x38 * (-x1953 + x1958 + x1975)
    x1980 = x1978 * x5 + x1979
    x1981 = x4 * (x1957 - x1963 + x1964)
    x1982 = x1968 * x5
    x1983 = x1966 * x5
    x1984 = x174 * x1874
    x1985 = x1898 * x8
    x1986 = -x1985
    x1987 = x1984 + x1986
    x1988 = x1987 * x6
    x1989 = x1983 - x1988
    x1990 = x1989 * x6
    x1991 = x1981 + x1982 - x1990
    x1992 = x1991 * x6
    x1993 = x38 * (x1959 - x1962 + x1967)
    x1994 = x1992 - x1993
    x1995 = -x1992 + x1993
    x1996 = x1972 + x1995
    x1997 = -x1961
    x1998 = x1969 + x1997
    x1999 = x4 * (-x1960 + x1978 + x1998)
    x2000 = x1980 * x3 - x1996 * x6 + 3.0 * x1999
    x2001 = x1996 * x3
    x2002 = x1991 * x5
    x2003 = x4 * (x1966 - x1984 + x1985)
    x2004 = x1989 * x5
    x2005 = x1987 * x5
    x2006 = x174 * x1898
    x2007 = x1922 * x8
    x2008 = -x2007
    x2009 = x2006 + x2008
    x2010 = x2009 * x6
    x2011 = x2005 - x2010
    x2012 = x2011 * x6
    x2013 = x2003 + x2004 - x2012
    x2014 = x2013 * x6
    x2015 = x38 * (x1968 - x1983 + x1988)
    x2016 = -x2014 + x2015
    x2017 = x2002 + x2016
    x2018 = x2017 * x6
    x2019 = -x1981
    x2020 = x1990 + x2019
    x2021 = x4 * (x1971 - x1982 + x2020)
    x2022 = 3.0 * x2021
    x2023 = x2001 - x2018 + x2022
    x2024 = x1971 * x3
    x2025 = x1978 * x3 + x1979
    x2026 = x2014 - x2015
    x2027 = x4 * (x1987 - x2006 + x2007)
    x2028 = -x1944 * x8
    x2029 = x174 * x1922 + x2028
    x2030 = -x2003
    x2031 = x1991 * x3
    x2032 = x1995 + x2024
    x2033 = x1959 * x3
    x2034 = x1852 * x323
    x2035 = x2034 + x690
    x2036 = x2035 * x5
    x2037 = x1852 * x328
    x2038 = x2037 + x695
    x2039 = x2038 * x6
    x2040 = x2036 - x2039
    x2041 = x2040 * x5
    x2042 = x4 * (x2035 - x2037 + x718)
    x2043 = x2038 * x5
    x2044 = x1852 * x338
    x2045 = x2044 + x712
    x2046 = x2045 * x6
    x2047 = x2043 - x2046
    x2048 = x2047 * x6
    x2049 = x2042 - x2048
    x2050 = x2041 + x2049
    x2051 = x2050 * x5
    x2052 = x1852 * x347 + x701
    x2053 = -x2035 * x6 + x2052 * x5
    x2054 = x4 * (-x2034 + x2052 + x705)
    x2055 = -x2040 * x6 + x2054
    x2056 = x2053 * x5 + x2055
    x2057 = -x2050 * x6 + x38 * (-x2036 + x2039 + x2053)
    x2058 = x2056 * x5 + x2057
    x2059 = x4 * (x2038 - x2044 + x728)
    x2060 = x2047 * x5
    x2061 = x2045 * x5
    x2062 = x1852 * x362
    x2063 = x2062 + x733
    x2064 = x2063 * x6
    x2065 = x2061 - x2064
    x2066 = x2065 * x6
    x2067 = x2059 + x2060 - x2066
    x2068 = x2067 * x6
    x2069 = x38 * (x2040 - x2043 + x2046)
    x2070 = x2068 - x2069
    x2071 = -x2068 + x2069
    x2072 = x2051 + x2071
    x2073 = -x2042
    x2074 = x2048 + x2073
    x2075 = x4 * (-x2041 + x2056 + x2074)
    x2076 = x2058 * x3 - x2072 * x6 + 3.0 * x2075
    x2077 = x2072 * x3
    x2078 = x2067 * x5
    x2079 = x4 * (x2045 - x2062 + x755)
    x2080 = x2065 * x5
    x2081 = x2063 * x5
    x2082 = x1852 * x386
    x2083 = x2082 + x760
    x2084 = x2083 * x6
    x2085 = x2081 - x2084
    x2086 = x2085 * x6
    x2087 = x2079 + x2080 - x2086
    x2088 = x2087 * x6
    x2089 = x38 * (x2047 - x2061 + x2064)
    x2090 = -x2088 + x2089
    x2091 = x2078 + x2090
    x2092 = x2091 * x6
    x2093 = -x2059
    x2094 = x2066 + x2093
    x2095 = x4 * (x2050 - x2060 + x2094)
    x2096 = 3.0 * x2095
    x2097 = x2077 - x2092 + x2096
    x2098 = x2050 * x3
    x2099 = x2056 * x3 + x2057
    x2100 = x2088 - x2089
    x2101 = x4 * (x2063 - x2082 + x787)
    x2102 = x1852 * x418 + x789
    x2103 = -x2079
    x2104 = x2067 * x3
    x2105 = x2071 + x2098
    x2106 = x2040 * x3
    x2107 = x174 * x1952
    x2108 = x1957 * x8
    x2109 = x1856 - x2108
    x2110 = x2107 + x2109
    x2111 = x2110 * x5
    x2112 = x174 * x1957
    x2113 = x1966 * x8
    x2114 = x1870 - x2113
    x2115 = x2112 + x2114
    x2116 = x2115 * x6
    x2117 = -x2116
    x2118 = x2111 + x2117
    x2119 = x2118 * x5
    x2120 = x1885 - x1952 * x8
    x2121 = x174 * x1974 + x2120
    x2122 = -x2110 * x6
    x2123 = x2121 * x5 + x2122
    x2124 = x1890 + x2108
    x2125 = x4 * (-x2107 + x2121 + x2124)
    x2126 = -x2118 * x6 + x2125
    x2127 = x2123 * x5 + x2126
    x2128 = x2115 * x5
    x2129 = x174 * x1966
    x2130 = x1987 * x8
    x2131 = x1894 - x2130
    x2132 = x2129 + x2131
    x2133 = x2132 * x6
    x2134 = x2128 - x2133
    x2135 = x2134 * x6
    x2136 = x1907 + x2113
    x2137 = x4 * (x2110 - x2112 + x2136)
    x2138 = -x2137
    x2139 = x2135 + x2138
    x2140 = -x2135 + x2137
    x2141 = x2119 + x2140
    x2142 = x4 * (-x2111 + x2116 + x2123)
    x2143 = x2127 * x3 - x2141 * x6 + 2.0 * x2142
    x2144 = x2141 * x3
    x2145 = x2134 * x5
    x2146 = x1931 + x2130
    x2147 = x4 * (x2115 - x2129 + x2146)
    x2148 = x2132 * x5
    x2149 = x174 * x1987
    x2150 = x2009 * x8
    x2151 = x1918 - x2150
    x2152 = x2149 + x2151
    x2153 = x2152 * x6
    x2154 = x2148 - x2153
    x2155 = x2154 * x6
    x2156 = x2147 - x2155
    x2157 = x2145 + x2156
    x2158 = x2157 * x6
    x2159 = x4 * (x2118 - x2128 + x2133)
    x2160 = 2.0 * x2159
    x2161 = x2144 - x2158 + x2160
    x2162 = x2118 * x3
    x2163 = x2123 * x3 + x2126
    x2164 = -x2147
    x2165 = x2155 + x2164
    x2166 = x1945 + x2150
    x2167 = x4 * (x2132 - x2149 + x2166)
    x2168 = x1943 - x2029 * x8
    x2169 = x174 * x2009 + x2168
    x2170 = x2134 * x3
    x2171 = x2140 + x2162
    x2172 = x2110 * x3
    x2173 = x174 * x2035
    x2174 = x2038 * x8
    x2175 = -x2174
    x2176 = x2173 + x2175
    x2177 = x2176 * x5
    x2178 = x174 * x2038
    x2179 = x2045 * x8
    x2180 = -x2179
    x2181 = x2178 + x2180
    x2182 = x2181 * x6
    x2183 = -x2182
    x2184 = x2177 + x2183
    x2185 = x2184 * x5
    x2186 = -x2035 * x8
    x2187 = x174 * x2052 + x2186
    x2188 = -x2176 * x6
    x2189 = x2187 * x5 + x2188
    x2190 = x4 * (-x2173 + x2174 + x2187)
    x2191 = -x2184 * x6 + x2190
    x2192 = x2189 * x5 + x2191
    x2193 = x2181 * x5
    x2194 = x174 * x2045
    x2195 = x2063 * x8
    x2196 = -x2195
    x2197 = x2194 + x2196
    x2198 = x2197 * x6
    x2199 = x2193 - x2198
    x2200 = x2199 * x6
    x2201 = x4 * (x2176 - x2178 + x2179)
    x2202 = -x2201
    x2203 = x2200 + x2202
    x2204 = -x2200 + x2201
    x2205 = x2185 + x2204
    x2206 = x4 * (-x2177 + x2182 + x2189)
    x2207 = x2192 * x3 - x2205 * x6 + 2.0 * x2206
    x2208 = x2205 * x3
    x2209 = x2199 * x5
    x2210 = x4 * (x2181 - x2194 + x2195)
    x2211 = x2197 * x5
    x2212 = x174 * x2063
    x2213 = x2083 * x8
    x2214 = -x2213
    x2215 = x2212 + x2214
    x2216 = x2215 * x6
    x2217 = x2211 - x2216
    x2218 = x2217 * x6
    x2219 = x2210 - x2218
    x2220 = x2209 + x2219
    x2221 = x2220 * x6
    x2222 = x4 * (x2184 - x2193 + x2198)
    x2223 = 2.0 * x2222
    x2224 = x2208 - x2221 + x2223
    x2225 = x2184 * x3
    x2226 = x2189 * x3 + x2191
    x2227 = -x2210
    x2228 = x2218 + x2227
    x2229 = x4 * (x2197 - x2212 + x2213)
    x2230 = -x2102 * x8
    x2231 = x174 * x2083 + x2230
    x2232 = x2199 * x3
    x2233 = x2204 + x2225
    x2234 = x2176 * x3
    x2235 = x1852 * x691
    x2236 = x1018 + x2235
    x2237 = x2236 * x5
    x2238 = x1852 * x696
    x2239 = x1026 + x2238
    x2240 = x2239 * x6
    x2241 = -x2240
    x2242 = x2237 + x2241
    x2243 = x2242 * x5
    x2244 = x1012 + x1852 * x702
    x2245 = -x2236 * x6
    x2246 = x2244 * x5 + x2245
    x2247 = x4 * (x1016 - x2235 + x2244)
    x2248 = -x2242 * x6 + x2247
    x2249 = x2246 * x5 + x2248
    x2250 = x2239 * x5
    x2251 = x1852 * x713
    x2252 = x1038 + x2251
    x2253 = x2252 * x6
    x2254 = x2250 - x2253
    x2255 = x2254 * x6
    x2256 = x4 * (x1053 + x2236 - x2238)
    x2257 = -x2256
    x2258 = x2255 + x2257
    x2259 = -x2255 + x2256
    x2260 = x2243 + x2259
    x2261 = x4 * (-x2237 + x2240 + x2246)
    x2262 = x2249 * x3 - x2260 * x6 + 2.0 * x2261
    x2263 = x2260 * x3
    x2264 = x2254 * x5
    x2265 = x4 * (x1035 + x2239 - x2251)
    x2266 = x2252 * x5
    x2267 = x1852 * x734
    x2268 = x1048 + x2267
    x2269 = x2268 * x6
    x2270 = x2266 - x2269
    x2271 = x2270 * x6
    x2272 = x2265 - x2271
    x2273 = x2264 + x2272
    x2274 = x2273 * x6
    x2275 = x4 * (x2242 - x2250 + x2253)
    x2276 = 2.0 * x2275
    x2277 = x2263 - x2274 + x2276
    x2278 = x2242 * x3
    x2279 = x2246 * x3 + x2248
    x2280 = -x2265
    x2281 = x2271 + x2280
    x2282 = x4 * (x1081 + x2252 - x2267)
    x2283 = x1083 + x1852 * x761
    x2284 = x2254 * x3
    x2285 = x2259 + x2278
    x2286 = x2236 * x3
    x2287 = x174 * x2110
    x2288 = 2.0 * x1976 - x2110 * x8
    x2289 = x174 * x2121 + x2288
    x2290 = x2115 * x8
    x2291 = 2.0 * x1961
    x2292 = x2290 - x2291
    x2293 = x4 * (-x2287 + x2289 + x2292)
    x2294 = -x2290 + x2291
    x2295 = x2287 + x2294
    x2296 = -x2295 * x6
    x2297 = x2289 * x3 + x2296
    x2298 = x174 * x2115
    x2299 = x2132 * x8
    x2300 = 2.0 * x1981
    x2301 = -x2299 + x2300
    x2302 = x2298 + x2301
    x2303 = x2302 * x3
    x2304 = x174 * x2132
    x2305 = x2152 * x8
    x2306 = 2.0 * x2003
    x2307 = -x2305 + x2306
    x2308 = x2304 + x2307
    x2309 = x2308 * x6
    x2310 = -x2309
    x2311 = x2299 - x2300
    x2312 = x4 * (x2295 - x2298 + x2311)
    x2313 = -x2312
    x2314 = x2295 * x3
    x2315 = x2302 * x6
    x2316 = -x2315
    x2317 = x2314 + x2316
    x2318 = x2295 * x5
    x2319 = x2289 * x5 + x2296
    x2320 = x2316 + x2318
    x2321 = x2293 + x2319 * x3 - x2320 * x6
    x2322 = x2320 * x3
    x2323 = x2302 * x5
    x2324 = x2310 + x2323
    x2325 = x2324 * x6
    x2326 = x2312 + x2322 - x2325
    x2327 = x2305 - x2306
    x2328 = x4 * (x2302 - x2304 + x2327)
    x2329 = 2.0 * x2027 - x2169 * x8
    x2330 = x174 * x2152 + x2329
    x2331 = x174 * x2176
    x2332 = x2054 - x2176 * x8
    x2333 = x174 * x2187 + x2332
    x2334 = x2181 * x8
    x2335 = x2073 + x2334
    x2336 = x4 * (-x2331 + x2333 + x2335)
    x2337 = x2042 - x2334
    x2338 = x2331 + x2337
    x2339 = -x2338 * x6
    x2340 = x2333 * x3 + x2339
    x2341 = x174 * x2181
    x2342 = x2197 * x8
    x2343 = x2059 - x2342
    x2344 = x2341 + x2343
    x2345 = x2344 * x3
    x2346 = x174 * x2197
    x2347 = x2215 * x8
    x2348 = x2079 - x2347
    x2349 = x2346 + x2348
    x2350 = x2349 * x6
    x2351 = -x2350
    x2352 = x2093 + x2342
    x2353 = x4 * (x2338 - x2341 + x2352)
    x2354 = -x2353
    x2355 = x2338 * x3
    x2356 = x2344 * x6
    x2357 = -x2356
    x2358 = x2355 + x2357
    x2359 = x2338 * x5
    x2360 = x2333 * x5 + x2339
    x2361 = x2357 + x2359
    x2362 = x2336 + x2360 * x3 - x2361 * x6
    x2363 = x2361 * x3
    x2364 = x2344 * x5
    x2365 = x2351 + x2364
    x2366 = x2365 * x6
    x2367 = x2353 + x2363 - x2366
    x2368 = x2103 + x2347
    x2369 = x4 * (x2344 - x2346 + x2368)
    x2370 = x2101 - x2231 * x8
    x2371 = x174 * x2215 + x2370
    x2372 = x2239 * x8
    x2373 = x174 * x2236
    x2374 = -x2236 * x8
    x2375 = x174 * x2244 + x2374
    x2376 = x4 * (x2372 - x2373 + x2375)
    x2377 = -x2372
    x2378 = x2373 + x2377
    x2379 = -x2378 * x6
    x2380 = x2375 * x3 + x2379
    x2381 = x174 * x2239
    x2382 = x2252 * x8
    x2383 = -x2382
    x2384 = x2381 + x2383
    x2385 = x2384 * x3
    x2386 = x174 * x2252
    x2387 = x2268 * x8
    x2388 = -x2387
    x2389 = x2386 + x2388
    x2390 = x2389 * x6
    x2391 = -x2390
    x2392 = x4 * (x2378 - x2381 + x2382)
    x2393 = -x2392
    x2394 = x2378 * x3
    x2395 = x2384 * x6
    x2396 = -x2395
    x2397 = x2394 + x2396
    x2398 = x2378 * x5
    x2399 = x2375 * x5 + x2379
    x2400 = x2396 + x2398
    x2401 = x2376 + x2399 * x3 - x2400 * x6
    x2402 = x2400 * x3
    x2403 = x2384 * x5
    x2404 = x2391 + x2403
    x2405 = x2404 * x6
    x2406 = x2392 + x2402 - x2405
    x2407 = x4 * (x2384 - x2386 + x2387)
    x2408 = -x2283 * x8
    x2409 = x174 * x2268 + x2408
    x2410 = x1019 * x1852
    x2411 = x1013 * x1852 + x1225
    x2412 = x4 * (x1229 - x2410 + x2411)
    x2413 = x1231 + x2410
    x2414 = -x2413 * x6
    x2415 = x2411 * x3 + x2414
    x2416 = x1027 * x1852
    x2417 = x1238 + x2416
    x2418 = x2417 * x3
    x2419 = x1039 * x1852
    x2420 = x1250 + x2419
    x2421 = x2420 * x6
    x2422 = -x2421
    x2423 = x4 * (x1243 + x2413 - x2416)
    x2424 = -x2423
    x2425 = x2413 * x3
    x2426 = x2417 * x6
    x2427 = -x2426
    x2428 = x2425 + x2427
    x2429 = x2413 * x5
    x2430 = x2411 * x5 + x2414
    x2431 = x2427 + x2429
    x2432 = x2412 + x2430 * x3 - x2431 * x6
    x2433 = x2431 * x3
    x2434 = x2417 * x5
    x2435 = x2422 + x2434
    x2436 = x2435 * x6
    x2437 = x2423 + x2433 - x2436
    x2438 = x4 * (x1256 + x2417 - x2419)
    x2439 = x1049 * x1852 + x1258
    x2440 = x174 * x2295
    x2441 = 3.0 * x2125 - x2295 * x8
    x2442 = x174 * x2289 + x2441
    x2443 = x2302 * x8
    x2444 = 3.0 * x2137
    x2445 = x2443 - x2444
    x2446 = x4 * (-x2440 + x2442 + x2445)
    x2447 = -x2443 + x2444
    x2448 = x2440 + x2447
    x2449 = x2442 * x3 - x2448 * x6
    x2450 = x2448 * x3
    x2451 = x174 * x2302
    x2452 = x2308 * x8
    x2453 = 3.0 * x2147
    x2454 = -x2452 + x2453
    x2455 = x2451 + x2454
    x2456 = x2455 * x6
    x2457 = x2450 - x2456
    x2458 = x2452 - x2453
    x2459 = x4 * (x2448 - x2451 + x2458)
    x2460 = 3.0 * x2167 - x2330 * x8
    x2461 = x174 * x2308 + x2460
    x2462 = x174 * x2338
    x2463 = 2.0 * x2190 - x2338 * x8
    x2464 = x174 * x2333 + x2463
    x2465 = x2344 * x8
    x2466 = 2.0 * x2201
    x2467 = x2465 - x2466
    x2468 = x4 * (-x2462 + x2464 + x2467)
    x2469 = -x2465 + x2466
    x2470 = x2462 + x2469
    x2471 = x2464 * x3 - x2470 * x6
    x2472 = x2470 * x3
    x2473 = x174 * x2344
    x2474 = x2349 * x8
    x2475 = 2.0 * x2210
    x2476 = -x2474 + x2475
    x2477 = x2473 + x2476
    x2478 = x2477 * x6
    x2479 = x2472 - x2478
    x2480 = x2474 - x2475
    x2481 = x4 * (x2470 - x2473 + x2480)
    x2482 = 2.0 * x2229 - x2371 * x8
    x2483 = x174 * x2349 + x2482
    x2484 = x174 * x2378
    x2485 = x2247 - x2378 * x8
    x2486 = x174 * x2375 + x2485
    x2487 = x2384 * x8
    x2488 = x2257 + x2487
    x2489 = x4 * (-x2484 + x2486 + x2488)
    x2490 = x2256 - x2487
    x2491 = x2484 + x2490
    x2492 = x2486 * x3 - x2491 * x6
    x2493 = x2491 * x3
    x2494 = x174 * x2384
    x2495 = x2389 * x8
    x2496 = x2265 - x2495
    x2497 = x2494 + x2496
    x2498 = x2497 * x6
    x2499 = x2493 - x2498
    x2500 = x2280 + x2495
    x2501 = x4 * (x2491 - x2494 + x2500)
    x2502 = x2282 - x2409 * x8
    x2503 = x174 * x2389 + x2502
    x2504 = x2417 * x8
    x2505 = x174 * x2413
    x2506 = -x2413 * x8
    x2507 = x174 * x2411 + x2506
    x2508 = x4 * (x2504 - x2505 + x2507)
    x2509 = -x2504
    x2510 = x2505 + x2509
    x2511 = x2507 * x3 - x2510 * x6
    x2512 = x2510 * x3
    x2513 = x174 * x2417
    x2514 = x2420 * x8
    x2515 = -x2514
    x2516 = x2513 + x2515
    x2517 = x2516 * x6
    x2518 = x2512 - x2517
    x2519 = x4 * (x2510 - x2513 + x2514)
    x2520 = -x2439 * x8
    x2521 = x174 * x2420 + x2520
    x2522 = x10 * x1239
    x2523 = x1232 * x1852
    x2524 = 4.0 * x1054
    x2525 = -x10 * x1232 + 4.0 * x1017 + x1226 * x1852
    x2526 = x4 * (x2522 - x2523 - x2524 + x2525)
    x2527 = -x2522 + x2523 + x2524
    x2528 = x2525 * x3 - x2527 * x6
    x2529 = x2527 * x3
    x2530 = x1239 * x1852
    x2531 = x10 * x1251
    x2532 = 4.0 * x1036
    x2533 = x2530 - x2531 + x2532
    x2534 = x2533 * x6
    x2535 = x2529 - x2534
    x2536 = x4 * (x2527 - x2530 + x2531 - x2532)
    x2537 = -x10 * x1259 + 4.0 * x1082 + x1251 * x1852
    x2538 = x1273 * x8
    x2539 = x1261 * x1267
    x2540 = x1261 * x1264
    x2541 = x1267 * x8
    x2542 = x19 + x2540 - x2541
    x2543 = x4 * (x2538 - x2539 + x2542 + x69)
    x2544 = x2542 * x5
    x2545 = -x2538 + x2539 + x29
    x2546 = x2545 * x6
    x2547 = x2544 - x2546
    x2548 = x2547 * x5
    x2549 = x2545 * x5
    x2550 = x1261 * x1273
    x2551 = x1283 * x8
    x2552 = x2550 - x2551 + x56
    x2553 = x2552 * x6
    x2554 = x2549 - x2553
    x2555 = x2554 * x6
    x2556 = x2543 + x2548 - x2555
    x2557 = x2556 * x5
    x2558 = x4 * (x2545 - x2550 + x2551 + x95)
    x2559 = x2554 * x5
    x2560 = x2552 * x5
    x2561 = x1261 * x1283
    x2562 = x1307 * x8
    x2563 = x2561 - x2562 + x82
    x2564 = x2563 * x6
    x2565 = x2560 - x2564
    x2566 = x2565 * x6
    x2567 = x2558 + x2559 - x2566
    x2568 = x2567 * x6
    x2569 = x38 * (x2547 - x2549 + x2553)
    x2570 = x2557 - x2568 + x2569
    x2571 = x2570 * x5
    x2572 = x1261 * x1293 - x1264 * x8 + x45
    x2573 = x4 * (-x2540 + x2541 + x2572 + x50)
    x2574 = -x2542 * x6 + x2572 * x5
    x2575 = -x2547 * x6 + x2573 + x2574 * x5
    x2576 = -x2556 * x6 + x2575 * x5 + x38 * (-x2544 + x2546 + x2574)
    x2577 = -x2543
    x2578 = x130 * (-x2548 + x2555 + x2575 + x2577) - x2570 * x6
    x2579 = x2576 * x5 + x2578
    x2580 = x2567 * x5
    x2581 = x4 * (x129 + x2552 - x2561 + x2562)
    x2582 = x2565 * x5
    x2583 = x2563 * x5
    x2584 = x1261 * x1307
    x2585 = x1331 * x8
    x2586 = x117 + x2584 - x2585
    x2587 = x2586 * x6
    x2588 = x2583 - x2587
    x2589 = x2588 * x6
    x2590 = x2581 + x2582 - x2589
    x2591 = x2590 * x6
    x2592 = x38 * (x2554 - x2560 + x2564)
    x2593 = x2580 - x2591 + x2592
    x2594 = x2593 * x6
    x2595 = -x2558
    x2596 = x130 * (x2556 - x2559 + x2566 + x2595)
    x2597 = x2594 - x2596
    x2598 = x2571 - x2594 + x2596
    x2599 = x4 * (x157 + x2563 - x2584 + x2585)
    x2600 = x1261 * x1331 - x1353 * x8 + x155
    x2601 = -x2581
    x2602 = x1369 * x8
    x2603 = x1261 * x1362
    x2604 = x1261 * x1359
    x2605 = x1362 * x8
    x2606 = x1265 + x186 + x2604 - x2605
    x2607 = x4 * (x1316 + x251 + x2602 - x2603 + x2606)
    x2608 = x2606 * x5
    x2609 = x1279 + x210 - x2602 + x2603
    x2610 = x2609 * x6
    x2611 = x2608 - x2610
    x2612 = x2611 * x5
    x2613 = x2609 * x5
    x2614 = x1261 * x1369
    x2615 = x1387 * x8
    x2616 = x1303 + x234 + x2614 - x2615
    x2617 = x2616 * x6
    x2618 = x2613 - x2617
    x2619 = x2618 * x6
    x2620 = x2607 + x2612 - x2619
    x2621 = x2620 * x5
    x2622 = x1261 * x1376 + x1294 - x1359 * x8 + x203
    x2623 = x4 * (x1299 + x227 - x2604 + x2605 + x2622)
    x2624 = -x2606 * x6 + x2622 * x5
    x2625 = -x2611 * x6 + x2623 + x2624 * x5
    x2626 = -x2620 * x6 + x38 * (-x2608 + x2610 + x2624)
    x2627 = x2625 * x5 + x2626
    x2628 = x4 * (x1340 + x2609 - x2614 + x2615 + x281)
    x2629 = x2618 * x5
    x2630 = x2616 * x5
    x2631 = x1261 * x1387
    x2632 = x1406 * x8
    x2633 = x1327 + x2631 - x2632 + x265
    x2634 = x2633 * x6
    x2635 = x2630 - x2634
    x2636 = x2635 * x6
    x2637 = x2628 + x2629 - x2636
    x2638 = x2637 * x6
    x2639 = x38 * (x2611 - x2613 + x2617)
    x2640 = x2638 - x2639
    x2641 = x2621 - x2638 + x2639
    x2642 = x4 * (x1354 + x2616 - x2631 + x2632 + x305)
    x2643 = x1261 * x1406 + x1352 - x1424 * x8 + x302
    x2644 = x1440 * x8
    x2645 = x1261 * x1433
    x2646 = x1261 * x1430
    x2647 = x1433 * x8
    x2648 = x2646 - x2647 + x333
    x2649 = x4 * (x2644 - x2645 + x2648 + x398)
    x2650 = x2648 * x5
    x2651 = -x2644 + x2645 + x357
    x2652 = x2651 * x6
    x2653 = x2650 - x2652
    x2654 = x2653 * x5
    x2655 = x2651 * x5
    x2656 = x1261 * x1440
    x2657 = x1458 * x8
    x2658 = x2656 - x2657 + x381
    x2659 = x2658 * x6
    x2660 = x2655 - x2659
    x2661 = x2660 * x6
    x2662 = x2649 + x2654 - x2661
    x2663 = x2662 * x5
    x2664 = x1261 * x1447 - x1430 * x8 + x350
    x2665 = x4 * (-x2646 + x2647 + x2664 + x374)
    x2666 = -x2648 * x6 + x2664 * x5
    x2667 = -x2653 * x6 + x2665 + x2666 * x5
    x2668 = -x2662 * x6 + x38 * (-x2650 + x2652 + x2666)
    x2669 = x2667 * x5 + x2668
    x2670 = x4 * (x2651 - x2656 + x2657 + x428)
    x2671 = x2660 * x5
    x2672 = x2658 * x5
    x2673 = x1261 * x1458
    x2674 = x1478 * x8
    x2675 = x2673 - x2674 + x412
    x2676 = x2675 * x6
    x2677 = x2672 - x2676
    x2678 = x2677 * x6
    x2679 = x2670 + x2671 - x2678
    x2680 = x2679 * x6
    x2681 = x38 * (x2653 - x2655 + x2659)
    x2682 = x2680 - x2681
    x2683 = x2663 - x2680 + x2681
    x2684 = -x2649
    x2685 = x4 * (x2658 - x2673 + x2674 + x452)
    x2686 = x1261 * x1478 - x1497 * x8 + x449
    x2687 = -x2670
    x2688 = x1261 * x1503
    x2689 = x1506 * x8
    x2690 = 2.0 * x1366
    x2691 = x2688 - x2689 + x2690 + x496
    x2692 = x2691 * x5
    x2693 = x1261 * x1506
    x2694 = x1519 * x8
    x2695 = 2.0 * x1383
    x2696 = x2693 - x2694 + x2695 + x506
    x2697 = x2696 * x6
    x2698 = x2692 - x2697
    x2699 = x2698 * x5
    x2700 = 2.0 * x1378
    x2701 = x1261 * x1511 - x1503 * x8 + x2700 + x483
    x2702 = -x2691 * x6 + x2701 * x5
    x2703 = -x2690
    x2704 = x4 * (-x2688 + x2689 + x2701 + x2703 + x497)
    x2705 = -x2698 * x6 + x2704
    x2706 = x2702 * x5 + x2705
    x2707 = x2696 * x5
    x2708 = x1261 * x1519
    x2709 = x1534 * x8
    x2710 = 2.0 * x1402
    x2711 = x2708 - x2709 + x2710 + x533
    x2712 = x2711 * x6
    x2713 = x2707 - x2712
    x2714 = x2713 * x6
    x2715 = -x2695
    x2716 = x4 * (x2691 - x2693 + x2694 + x2715 + x526)
    x2717 = x2714 - x2716
    x2718 = x2699 - x2714 + x2716
    x2719 = -x2710
    x2720 = x4 * (x2696 - x2708 + x2709 + x2719 + x562)
    x2721 = 2.0 * x1423
    x2722 = x1261 * x1534 - x1548 * x8 + x2721 + x565
    x2723 = 0.1111111111111111 * x170
    x2724 = x1261 * x1554
    x2725 = x1557 * x8
    x2726 = x1437 + x2724 - x2725 + x608
    x2727 = x2726 * x5
    x2728 = x1261 * x1557
    x2729 = x1570 * x8
    x2730 = x1454 + x2728 - x2729 + x617
    x2731 = x2730 * x6
    x2732 = x2727 - x2731
    x2733 = x2732 * x5
    x2734 = x1261 * x1562 + x1449 - x1554 * x8 + x596
    x2735 = -x2726 * x6 + x2734 * x5
    x2736 = x4 * (x1468 - x2724 + x2725 + x2734 + x609)
    x2737 = -x2732 * x6 + x2736
    x2738 = x2735 * x5 + x2737
    x2739 = x2730 * x5
    x2740 = x1261 * x1570
    x2741 = x1585 * x8
    x2742 = x1474 + x2740 - x2741 + x643
    x2743 = x2742 * x6
    x2744 = x2739 - x2743
    x2745 = x2744 * x6
    x2746 = x4 * (x1488 + x2726 - x2728 + x2729 + x637)
    x2747 = x2745 - x2746
    x2748 = x2733 - x2745 + x2746
    x2749 = x4 * (x1498 + x2730 - x2740 + x2741 + x672)
    x2750 = x1261 * x1585 + x1496 - x1599 * x8 + x674
    x2751 = 1.732050807568877 * x2723
    x2752 = x1261 * x1605
    x2753 = x1608 * x8
    x2754 = x2752 - x2753 + x719
    x2755 = x2754 * x5
    x2756 = x1261 * x1608
    x2757 = x1621 * x8
    x2758 = x2756 - x2757 + x729
    x2759 = x2758 * x6
    x2760 = x2755 - x2759
    x2761 = x2760 * x5
    x2762 = x1261 * x1613 - x1605 * x8 + x706
    x2763 = -x2754 * x6 + x2762 * x5
    x2764 = x4 * (-x2752 + x2753 + x2762 + x720)
    x2765 = -x2760 * x6 + x2764
    x2766 = x2763 * x5 + x2765
    x2767 = x2758 * x5
    x2768 = x1261 * x1621
    x2769 = x1637 * x8
    x2770 = x2768 - x2769 + x756
    x2771 = x2770 * x6
    x2772 = x2767 - x2771
    x2773 = x2772 * x6
    x2774 = x4 * (x2754 - x2756 + x2757 + x749)
    x2775 = -x2774
    x2776 = x2773 + x2775
    x2777 = x2761 - x2773 + x2774
    x2778 = x4 * (x2758 - x2768 + x2769 + x785)
    x2779 = x1261 * x1637 - x1652 * x8 + x788
    x2780 = x1261 * x1657 + 3.0 * x1514 - x1659 * x8 + x807
    x2781 = x1261 * x1663
    x2782 = x1666 * x8
    x2783 = 3.0 * x1531
    x2784 = x2781 - x2782 + x2783 + x826
    x2785 = x2784 * x6
    x2786 = x1261 * x1659
    x2787 = x1663 * x8
    x2788 = 3.0 * x1523
    x2789 = x2786 - x2787 + x2788 + x844
    x2790 = -x2789 * x6
    x2791 = x2789 * x5
    x2792 = x2780 * x5 + x2790
    x2793 = x4 * (x2780 - x2786 + x2787 - x2788 + x850)
    x2794 = -x2785 + x2791
    x2795 = x4 * (-x2781 + x2782 - x2783 + x2789 + x870)
    x2796 = x1261 * x1666 + 3.0 * x1547 - x1685 * x8 + x872
    x2797 = 2.0 * x1565
    x2798 = x1261 * x1687 - x1689 * x8 + x2797 + x880
    x2799 = x1261 * x1693
    x2800 = x1696 * x8
    x2801 = 2.0 * x1582
    x2802 = x2799 - x2800 + x2801 + x897
    x2803 = x2802 * x6
    x2804 = x1261 * x1689
    x2805 = x1693 * x8
    x2806 = 2.0 * x1574
    x2807 = x2804 - x2805 + x2806 + x914
    x2808 = -x2807 * x6
    x2809 = x2807 * x5
    x2810 = x2798 * x5 + x2808
    x2811 = -x2806
    x2812 = x4 * (x2798 - x2804 + x2805 + x2811 + x920)
    x2813 = -x2803 + x2809
    x2814 = -x2801
    x2815 = x4 * (-x2799 + x2800 + x2807 + x2814 + x940)
    x2816 = 2.0 * x1598
    x2817 = x1261 * x1696 - x1715 * x8 + x2816 + x942
    x2818 = x1261 * x1717 + x1616 - x1719 * x8 + x949
    x2819 = x1261 * x1723
    x2820 = x1726 * x8
    x2821 = x1634 + x2819 - x2820 + x965
    x2822 = x2821 * x6
    x2823 = x1261 * x1719
    x2824 = x1723 * x8
    x2825 = x1625 + x2823 - x2824 + x981
    x2826 = -x2825 * x6
    x2827 = x2825 * x5
    x2828 = x2818 * x5 + x2826
    x2829 = x4 * (x1626 + x2818 - x2823 + x2824 + x987)
    x2830 = -x2822 + x2827
    x2831 = x4 * (x1007 + x1649 - x2819 + x2820 + x2825)
    x2832 = x1008 + x1261 * x1726 + x1651 - x1745 * x8
    x2833 = x1017 + x1261 * x1747 - x1749 * x8
    x2834 = x1261 * x1753
    x2835 = x1756 * x8
    x2836 = x1036 + x2834 - x2835
    x2837 = x2836 * x6
    x2838 = x1261 * x1749
    x2839 = x1753 * x8
    x2840 = x1054 + x2838 - x2839
    x2841 = -x2840 * x6
    x2842 = x2840 * x5
    x2843 = x2833 * x5 + x2841
    x2844 = x4 * (x1060 + x2833 - x2838 + x2839)
    x2845 = -x2837 + x2842
    x2846 = x4 * (x1080 - x2834 + x2835 + x2840)
    x2847 = x1082 + x1261 * x1756 - x1775 * x8
    x2848 = x1787 * x8
    x2849 = x1261 * x1781
    x2850 = 4.0 * x1669
    x2851 = x1091 + x1261 * x1779 + 4.0 * x1658 - x1781 * x8
    x2852 = x4 * (x1121 + x2848 - x2849 - x2850 + x2851)
    x2853 = x1105 - x2848 + x2849 + x2850
    x2854 = x1118 + x1261 * x1787 + 4.0 * x1684 - x1791 * x8
    x2855 = x1803 * x8
    x2856 = x1261 * x1797
    x2857 = 3.0 * x1699
    x2858 = x1128 + x1261 * x1795 + 3.0 * x1688 - x1797 * x8
    x2859 = x4 * (x1158 + x2855 - x2856 - x2857 + x2858)
    x2860 = x1142 - x2855 + x2856 + x2857
    x2861 = x1155 + x1261 * x1803 + 3.0 * x1714 - x1807 * x8
    x2862 = x1819 * x8
    x2863 = x1261 * x1813
    x2864 = 2.0 * x1729
    x2865 = -x2864
    x2866 = 2.0 * x1718
    x2867 = x1164 + x1261 * x1811 - x1813 * x8 + x2866
    x2868 = x4 * (x1192 + x2862 - x2863 + x2865 + x2867)
    x2869 = x1177 - x2862 + x2863 + x2864
    x2870 = 2.0 * x1744
    x2871 = x1189 + x1261 * x1819 - x1823 * x8 + x2870
    x2872 = x1833 * x8
    x2873 = x1261 * x1828
    x2874 = x1197 + x1261 * x1826 + x1748 - x1828 * x8
    x2875 = x4 * (x1223 + x1760 + x2872 - x2873 + x2874)
    x2876 = x1209 + x1759 - x2872 + x2873
    x2877 = x1220 + x1261 * x1833 + x1774 - x1837 * x8
    x2878 = x1847 * x8
    x2879 = x1261 * x1842
    x2880 = x1230 + x1261 * x1840 - x1842 * x8
    x2881 = x4 * (x1260 + x2878 - x2879 + x2880)
    x2882 = x1244 - x2878 + x2879
    x2883 = x1257 + x1261 * x1847 - x1851 * x8
    x2884 = x1261 * x1858
    x2885 = x1261 * x1855
    x2886 = x1951 + x2885
    x2887 = x4 * (x1955 - x2884 + x2886)
    x2888 = x2886 * x5
    x2889 = x1956 + x2884
    x2890 = x2889 * x6
    x2891 = x2888 - x2890
    x2892 = x2891 * x5
    x2893 = x2889 * x5
    x2894 = x1261 * x1864
    x2895 = x1965 + x2894
    x2896 = x2895 * x6
    x2897 = x2893 - x2896
    x2898 = x2897 * x6
    x2899 = x2887 + x2892 - x2898
    x2900 = x2899 * x5
    x2901 = x4 * (x1964 + x2889 - x2894)
    x2902 = x2897 * x5
    x2903 = x2895 * x5
    x2904 = x1261 * x1874
    x2905 = x1986 + x2904
    x2906 = x2905 * x6
    x2907 = x2903 - x2906
    x2908 = x2907 * x6
    x2909 = x2901 + x2902 - x2908
    x2910 = x2909 * x6
    x2911 = x38 * (x2891 - x2893 + x2896)
    x2912 = x2900 - x2910 + x2911
    x2913 = x2912 * x5
    x2914 = x1261 * x1884 + x1973
    x2915 = x4 * (x1950 - x2885 + x2914)
    x2916 = -x2886 * x6 + x2914 * x5
    x2917 = -x2891 * x6 + x2915 + x2916 * x5
    x2918 = -x2899 * x6 + x2917 * x5 + x38 * (-x2888 + x2890 + x2916)
    x2919 = -x2887
    x2920 = x130 * (-x2892 + x2898 + x2917 + x2919) - x2912 * x6
    x2921 = x2918 * x5 + x2920
    x2922 = x2909 * x5
    x2923 = x4 * (x1985 + x2895 - x2904)
    x2924 = x2907 * x5
    x2925 = x2905 * x5
    x2926 = x1261 * x1898
    x2927 = x2008 + x2926
    x2928 = x2927 * x6
    x2929 = x2925 - x2928
    x2930 = x2929 * x6
    x2931 = x2923 + x2924 - x2930
    x2932 = x2931 * x6
    x2933 = x38 * (x2897 - x2903 + x2906)
    x2934 = x2922 - x2932 + x2933
    x2935 = x2934 * x6
    x2936 = -x2901
    x2937 = x130 * (x2899 - x2902 + x2908 + x2936)
    x2938 = x2935 - x2937
    x2939 = x2913 - x2935 + x2937
    x2940 = x4 * (x2007 + x2905 - x2926)
    x2941 = x1261 * x1922 + x2028
    x2942 = -x2923
    x2943 = x1261 * x1957
    x2944 = x1261 * x1952
    x2945 = x2109 + x2944
    x2946 = x4 * (x2136 - x2943 + x2945)
    x2947 = x2945 * x5
    x2948 = x2114 + x2943
    x2949 = x2948 * x6
    x2950 = x2947 - x2949
    x2951 = x2950 * x5
    x2952 = x2948 * x5
    x2953 = x1261 * x1966
    x2954 = x2131 + x2953
    x2955 = x2954 * x6
    x2956 = x2952 - x2955
    x2957 = x2956 * x6
    x2958 = x2946 + x2951 - x2957
    x2959 = x2958 * x5
    x2960 = x1261 * x1974 + x2120
    x2961 = x4 * (x2124 - x2944 + x2960)
    x2962 = -x2945 * x6 + x2960 * x5
    x2963 = -x2950 * x6 + x2961 + x2962 * x5
    x2964 = -x2958 * x6 + x38 * (-x2947 + x2949 + x2962)
    x2965 = x2963 * x5 + x2964
    x2966 = x4 * (x2146 + x2948 - x2953)
    x2967 = x2956 * x5
    x2968 = x2954 * x5
    x2969 = x1261 * x1987
    x2970 = x2151 + x2969
    x2971 = x2970 * x6
    x2972 = x2968 - x2971
    x2973 = x2972 * x6
    x2974 = x2966 + x2967 - x2973
    x2975 = x2974 * x6
    x2976 = x38 * (x2950 - x2952 + x2955)
    x2977 = x2975 - x2976
    x2978 = x2959 - x2975 + x2976
    x2979 = x4 * (x2166 + x2954 - x2969)
    x2980 = x1261 * x2009 + x2168
    x2981 = x1261 * x2038
    x2982 = x1261 * x2035
    x2983 = x2175 + x2982
    x2984 = x4 * (x2179 - x2981 + x2983)
    x2985 = x2983 * x5
    x2986 = x2180 + x2981
    x2987 = x2986 * x6
    x2988 = x2985 - x2987
    x2989 = x2988 * x5
    x2990 = x2986 * x5
    x2991 = x1261 * x2045
    x2992 = x2196 + x2991
    x2993 = x2992 * x6
    x2994 = x2990 - x2993
    x2995 = x2994 * x6
    x2996 = x2984 + x2989 - x2995
    x2997 = x2996 * x5
    x2998 = x1261 * x2052 + x2186
    x2999 = x4 * (x2174 - x2982 + x2998)
    x3000 = -x2983 * x6 + x2998 * x5
    x3001 = -x2988 * x6 + x2999 + x3000 * x5
    x3002 = -x2996 * x6 + x38 * (-x2985 + x2987 + x3000)
    x3003 = x3001 * x5 + x3002
    x3004 = x4 * (x2195 + x2986 - x2991)
    x3005 = x2994 * x5
    x3006 = x2992 * x5
    x3007 = x1261 * x2063
    x3008 = x2214 + x3007
    x3009 = x3008 * x6
    x3010 = x3006 - x3009
    x3011 = x3010 * x6
    x3012 = x3004 + x3005 - x3011
    x3013 = x3012 * x6
    x3014 = x38 * (x2988 - x2990 + x2993)
    x3015 = x3013 - x3014
    x3016 = x2997 - x3013 + x3014
    x3017 = -x2984
    x3018 = x4 * (x2213 + x2992 - x3007)
    x3019 = x1261 * x2083 + x2230
    x3020 = -x3004
    x3021 = x1261 * x2110
    x3022 = x2294 + x3021
    x3023 = x3022 * x5
    x3024 = x1261 * x2115
    x3025 = x2301 + x3024
    x3026 = x3025 * x6
    x3027 = x3023 - x3026
    x3028 = x3027 * x5
    x3029 = x1261 * x2121 + x2288
    x3030 = -x3022 * x6 + x3029 * x5
    x3031 = x4 * (x2292 - x3021 + x3029)
    x3032 = -x3027 * x6 + x3031
    x3033 = x3030 * x5 + x3032
    x3034 = x3025 * x5
    x3035 = x1261 * x2132
    x3036 = x2307 + x3035
    x3037 = x3036 * x6
    x3038 = x3034 - x3037
    x3039 = x3038 * x6
    x3040 = x4 * (x2311 + x3022 - x3024)
    x3041 = x3039 - x3040
    x3042 = x3028 - x3039 + x3040
    x3043 = x4 * (x2327 + x3025 - x3035)
    x3044 = x1261 * x2152 + x2329
    x3045 = x1261 * x2176
    x3046 = x2337 + x3045
    x3047 = x3046 * x5
    x3048 = x1261 * x2181
    x3049 = x2343 + x3048
    x3050 = x3049 * x6
    x3051 = x3047 - x3050
    x3052 = x3051 * x5
    x3053 = x1261 * x2187 + x2332
    x3054 = -x3046 * x6 + x3053 * x5
    x3055 = x4 * (x2335 - x3045 + x3053)
    x3056 = -x3051 * x6 + x3055
    x3057 = x3054 * x5 + x3056
    x3058 = x3049 * x5
    x3059 = x1261 * x2197
    x3060 = x2348 + x3059
    x3061 = x3060 * x6
    x3062 = x3058 - x3061
    x3063 = x3062 * x6
    x3064 = x4 * (x2352 + x3046 - x3048)
    x3065 = x3063 - x3064
    x3066 = x3052 - x3063 + x3064
    x3067 = x4 * (x2368 + x3049 - x3059)
    x3068 = x1261 * x2215 + x2370
    x3069 = 0.3333333333333333 * x170
    x3070 = x1261 * x2236
    x3071 = x2377 + x3070
    x3072 = x3071 * x5
    x3073 = x1261 * x2239
    x3074 = x2383 + x3073
    x3075 = x3074 * x6
    x3076 = x3072 - x3075
    x3077 = x3076 * x5
    x3078 = x1261 * x2244 + x2374
    x3079 = -x3071 * x6 + x3078 * x5
    x3080 = x4 * (x2372 - x3070 + x3078)
    x3081 = -x3076 * x6 + x3080
    x3082 = x3079 * x5 + x3081
    x3083 = x3074 * x5
    x3084 = x1261 * x2252
    x3085 = x2388 + x3084
    x3086 = x3085 * x6
    x3087 = x3083 - x3086
    x3088 = x3087 * x6
    x3089 = x4 * (x2382 + x3071 - x3073)
    x3090 = -x3089
    x3091 = x3088 + x3090
    x3092 = x3077 - x3088 + x3089
    x3093 = x4 * (x2387 + x3074 - x3084)
    x3094 = x1261 * x2268 + x2408
    x3095 = x1261 * x2289 + x2441
    x3096 = x1261 * x2302
    x3097 = x2454 + x3096
    x3098 = x3097 * x6
    x3099 = x1261 * x2295
    x3100 = x2447 + x3099
    x3101 = -x3100 * x6
    x3102 = x3100 * x5
    x3103 = x3095 * x5 + x3101
    x3104 = x4 * (x2445 + x3095 - x3099)
    x3105 = -x3098 + x3102
    x3106 = x4 * (x2458 - x3096 + x3100)
    x3107 = x1261 * x2308 + x2460
    x3108 = x1261 * x2333 + x2463
    x3109 = x1261 * x2344
    x3110 = x2476 + x3109
    x3111 = x3110 * x6
    x3112 = x1261 * x2338
    x3113 = x2469 + x3112
    x3114 = -x3113 * x6
    x3115 = x3113 * x5
    x3116 = x3108 * x5 + x3114
    x3117 = x4 * (x2467 + x3108 - x3112)
    x3118 = -x3111 + x3115
    x3119 = x4 * (x2480 - x3109 + x3113)
    x3120 = x1261 * x2349 + x2482
    x3121 = x1261 * x2375 + x2485
    x3122 = x1261 * x2384
    x3123 = x2496 + x3122
    x3124 = x3123 * x6
    x3125 = x1261 * x2378
    x3126 = x2490 + x3125
    x3127 = -x3126 * x6
    x3128 = x3126 * x5
    x3129 = x3121 * x5 + x3127
    x3130 = x4 * (x2488 + x3121 - x3125)
    x3131 = -x3124 + x3128
    x3132 = x4 * (x2500 - x3122 + x3126)
    x3133 = x1261 * x2389 + x2502
    x3134 = x1261 * x2411 + x2506
    x3135 = x1261 * x2417
    x3136 = x2515 + x3135
    x3137 = x3136 * x6
    x3138 = x1261 * x2413
    x3139 = x2509 + x3138
    x3140 = -x3139 * x6
    x3141 = x3139 * x5
    x3142 = x3134 * x5 + x3140
    x3143 = x4 * (x2504 + x3134 - x3138)
    x3144 = -x3137 + x3141
    x3145 = x4 * (x2514 - x3135 + x3139)
    x3146 = x1261 * x2420 + x2520
    x3147 = x2455 * x8
    x3148 = x1261 * x2448
    x3149 = 4.0 * x2312
    x3150 = x1261 * x2442 + 4.0 * x2293 - x2448 * x8
    x3151 = x4 * (x3147 - x3148 - x3149 + x3150)
    x3152 = -x3147 + x3148 + x3149
    x3153 = x1261 * x2455 + 4.0 * x2328 - x2461 * x8
    x3154 = x2477 * x8
    x3155 = x1261 * x2470
    x3156 = 3.0 * x2353
    x3157 = x1261 * x2464 + 3.0 * x2336 - x2470 * x8
    x3158 = x4 * (x3154 - x3155 - x3156 + x3157)
    x3159 = -x3154 + x3155 + x3156
    x3160 = x1261 * x2477 + 3.0 * x2369 - x2483 * x8
    x3161 = x2497 * x8
    x3162 = x1261 * x2491
    x3163 = 2.0 * x2392
    x3164 = x1261 * x2486 + 2.0 * x2376 - x2491 * x8
    x3165 = x4 * (x3161 - x3162 - x3163 + x3164)
    x3166 = -x3161 + x3162 + x3163
    x3167 = x1261 * x2497 + 2.0 * x2407 - x2503 * x8
    x3168 = x2516 * x8
    x3169 = x1261 * x2510
    x3170 = x1261 * x2507 + x2412 - x2510 * x8
    x3171 = x4 * (x2424 + x3168 - x3169 + x3170)
    x3172 = x2423 - x3168 + x3169
    x3173 = x1261 * x2516 + x2438 - x2521 * x8
    x3174 = x2533 * x8
    x3175 = x1261 * x2527
    x3176 = x1261 * x2525 - x2527 * x8
    x3177 = x4 * (x3174 - x3175 + x3176)
    x3178 = -x3174 + x3175
    x3179 = x1261 * x2533 - x2537 * x8
    x3180 = x10 * x1864
    x3181 = x1852 * x1858
    x3182 = x1852 * x1855
    x3183 = x10 * x1858
    x3184 = x19 + x3182 - x3183
    x3185 = x4 * (x3180 - x3181 + x3184 + x69)
    x3186 = x3184 * x5
    x3187 = x29 - x3180 + x3181
    x3188 = x3187 * x6
    x3189 = x3186 - x3188
    x3190 = x3189 * x5
    x3191 = x3187 * x5
    x3192 = x1852 * x1864
    x3193 = x10 * x1874
    x3194 = x3192 - x3193 + x56
    x3195 = x3194 * x6
    x3196 = x3191 - x3195
    x3197 = x3196 * x6
    x3198 = x3185 + x3190 - x3197
    x3199 = x3198 * x5
    x3200 = x4 * (x3187 - x3192 + x3193 + x95)
    x3201 = x3196 * x5
    x3202 = x3194 * x5
    x3203 = x1852 * x1874
    x3204 = x10 * x1898
    x3205 = x3203 - x3204 + x82
    x3206 = x3205 * x6
    x3207 = x3202 - x3206
    x3208 = x3207 * x6
    x3209 = x3200 + x3201 - x3208
    x3210 = x3209 * x6
    x3211 = x38 * (x3189 - x3191 + x3195)
    x3212 = x3199 - x3210 + x3211
    x3213 = x3212 * x5
    x3214 = -x10 * x1855 + x1852 * x1884 + x45
    x3215 = x4 * (-x3182 + x3183 + x3214 + x50)
    x3216 = -x3184 * x6 + x3214 * x5
    x3217 = -x3189 * x6 + x3215 + x3216 * x5
    x3218 = -x3198 * x6 + x3217 * x5 + x38 * (-x3186 + x3188 + x3216)
    x3219 = -x3185
    x3220 = x130 * (-x3190 + x3197 + x3217 + x3219) - x3212 * x6
    x3221 = x3218 * x5 + x3220
    x3222 = x3209 * x5
    x3223 = x4 * (x129 + x3194 - x3203 + x3204)
    x3224 = x3207 * x5
    x3225 = x3205 * x5
    x3226 = x1852 * x1898
    x3227 = x10 * x1922
    x3228 = x117 + x3226 - x3227
    x3229 = x3228 * x6
    x3230 = x3225 - x3229
    x3231 = x3230 * x6
    x3232 = x3223 + x3224 - x3231
    x3233 = x3232 * x6
    x3234 = x38 * (x3196 - x3202 + x3206)
    x3235 = x3222 - x3233 + x3234
    x3236 = x3235 * x6
    x3237 = -x3200
    x3238 = x130 * (x3198 - x3201 + x3208 + x3237)
    x3239 = x3236 - x3238
    x3240 = x3213 - x3236 + x3238
    x3241 = x4 * (x157 + x3205 - x3226 + x3227)
    x3242 = -x10 * x1944 + x155 + x1852 * x1922
    x3243 = -x3223
    x3244 = x3194 * x8
    x3245 = x174 * x3187
    x3246 = x174 * x3184
    x3247 = x3187 * x8
    x3248 = -x3247
    x3249 = x3246 + x3248
    x3250 = x4 * (x3244 - x3245 + x3249)
    x3251 = x3249 * x5
    x3252 = -x3244
    x3253 = x3245 + x3252
    x3254 = x3253 * x6
    x3255 = x3251 - x3254
    x3256 = x3255 * x5
    x3257 = x3253 * x5
    x3258 = x174 * x3194
    x3259 = x3205 * x8
    x3260 = -x3259
    x3261 = x3258 + x3260
    x3262 = x3261 * x6
    x3263 = x3257 - x3262
    x3264 = x3263 * x6
    x3265 = x3250 + x3256 - x3264
    x3266 = x3265 * x5
    x3267 = -x3184 * x8
    x3268 = x174 * x3214 + x3267
    x3269 = x4 * (-x3246 + x3247 + x3268)
    x3270 = -x3249 * x6 + x3268 * x5
    x3271 = -x3255 * x6 + x3269 + x3270 * x5
    x3272 = -x3265 * x6 + x38 * (-x3251 + x3254 + x3270)
    x3273 = x3271 * x5 + x3272
    x3274 = x4 * (x3253 - x3258 + x3259)
    x3275 = x3263 * x5
    x3276 = x3261 * x5
    x3277 = x174 * x3205
    x3278 = x3228 * x8
    x3279 = -x3278
    x3280 = x3277 + x3279
    x3281 = x3280 * x6
    x3282 = x3276 - x3281
    x3283 = x3282 * x6
    x3284 = x3274 + x3275 - x3283
    x3285 = x3284 * x6
    x3286 = x38 * (x3255 - x3257 + x3262)
    x3287 = x3285 - x3286
    x3288 = x3266 - x3285 + x3286
    x3289 = -x3250
    x3290 = x4 * (x3261 - x3277 + x3278)
    x3291 = -x3242 * x8
    x3292 = x174 * x3228 + x3291
    x3293 = -x3274
    x3294 = x10 * x2045
    x3295 = x1852 * x2038
    x3296 = x1852 * x2035
    x3297 = x10 * x2038
    x3298 = x1856 + x3296 - x3297 + x333
    x3299 = x4 * (x1907 + x3294 - x3295 + x3298 + x398)
    x3300 = x3298 * x5
    x3301 = x1870 - x3294 + x3295 + x357
    x3302 = x3301 * x6
    x3303 = x3300 - x3302
    x3304 = x3303 * x5
    x3305 = x3301 * x5
    x3306 = x1852 * x2045
    x3307 = x10 * x2063
    x3308 = x1894 + x3306 - x3307 + x381
    x3309 = x3308 * x6
    x3310 = x3305 - x3309
    x3311 = x3310 * x6
    x3312 = x3299 + x3304 - x3311
    x3313 = x3312 * x5
    x3314 = -x10 * x2035 + x1852 * x2052 + x1885 + x350
    x3315 = x4 * (x1890 - x3296 + x3297 + x3314 + x374)
    x3316 = -x3298 * x6 + x3314 * x5
    x3317 = -x3303 * x6 + x3315 + x3316 * x5
    x3318 = -x3312 * x6 + x38 * (-x3300 + x3302 + x3316)
    x3319 = x3317 * x5 + x3318
    x3320 = x4 * (x1931 + x3301 - x3306 + x3307 + x428)
    x3321 = x3310 * x5
    x3322 = x3308 * x5
    x3323 = x1852 * x2063
    x3324 = x10 * x2083
    x3325 = x1918 + x3323 - x3324 + x412
    x3326 = x3325 * x6
    x3327 = x3322 - x3326
    x3328 = x3327 * x6
    x3329 = x3320 + x3321 - x3328
    x3330 = x3329 * x6
    x3331 = x38 * (x3303 - x3305 + x3309)
    x3332 = x3330 - x3331
    x3333 = x3313 - x3330 + x3331
    x3334 = -x3299
    x3335 = x4 * (x1945 + x3308 - x3323 + x3324 + x452)
    x3336 = -x10 * x2102 + x1852 * x2083 + x1943 + x449
    x3337 = -x3320
    x3338 = x174 * x3249
    x3339 = x3253 * x8
    x3340 = x3185 - x3339
    x3341 = x3338 + x3340
    x3342 = x3341 * x5
    x3343 = x174 * x3253
    x3344 = x3261 * x8
    x3345 = x3200 - x3344
    x3346 = x3343 + x3345
    x3347 = x3346 * x6
    x3348 = x3342 - x3347
    x3349 = x3348 * x5
    x3350 = x3215 - x3249 * x8
    x3351 = x174 * x3268 + x3350
    x3352 = -x3341 * x6 + x3351 * x5
    x3353 = x3219 + x3339
    x3354 = x4 * (-x3338 + x3351 + x3353)
    x3355 = -x3348 * x6 + x3354
    x3356 = x3352 * x5 + x3355
    x3357 = x3346 * x5
    x3358 = x174 * x3261
    x3359 = x3280 * x8
    x3360 = x3223 - x3359
    x3361 = x3358 + x3360
    x3362 = x3361 * x6
    x3363 = x3357 - x3362
    x3364 = x3363 * x6
    x3365 = x3237 + x3344
    x3366 = x4 * (x3341 - x3343 + x3365)
    x3367 = -x3366
    x3368 = x3364 + x3367
    x3369 = x3349 - x3364 + x3366
    x3370 = x3243 + x3359
    x3371 = x4 * (x3346 - x3358 + x3370)
    x3372 = x3241 - x3292 * x8
    x3373 = x174 * x3280 + x3372
    x3374 = x174 * x3298
    x3375 = x3301 * x8
    x3376 = -x3375
    x3377 = x3374 + x3376
    x3378 = x3377 * x5
    x3379 = x174 * x3301
    x3380 = x3308 * x8
    x3381 = -x3380
    x3382 = x3379 + x3381
    x3383 = x3382 * x6
    x3384 = x3378 - x3383
    x3385 = x3384 * x5
    x3386 = -x3298 * x8
    x3387 = x174 * x3314 + x3386
    x3388 = -x3377 * x6 + x3387 * x5
    x3389 = x4 * (-x3374 + x3375 + x3387)
    x3390 = -x3384 * x6 + x3389
    x3391 = x3388 * x5 + x3390
    x3392 = x3382 * x5
    x3393 = x174 * x3308
    x3394 = x3325 * x8
    x3395 = -x3394
    x3396 = x3393 + x3395
    x3397 = x3396 * x6
    x3398 = x3392 - x3397
    x3399 = x3398 * x6
    x3400 = x4 * (x3377 - x3379 + x3380)
    x3401 = -x3400
    x3402 = x3399 + x3401
    x3403 = x3385 - x3399 + x3400
    x3404 = x4 * (x3382 - x3393 + x3394)
    x3405 = -x3336 * x8
    x3406 = x174 * x3325 + x3405
    x3407 = x1852 * x2236
    x3408 = x10 * x2239
    x3409 = 2.0 * x2042
    x3410 = x3407 - x3408 + x3409 + x719
    x3411 = x3410 * x5
    x3412 = x1852 * x2239
    x3413 = x10 * x2252
    x3414 = 2.0 * x2059
    x3415 = x3412 - x3413 + x3414 + x729
    x3416 = x3415 * x6
    x3417 = x3411 - x3416
    x3418 = x3417 * x5
    x3419 = 2.0 * x2054
    x3420 = -x10 * x2236 + x1852 * x2244 + x3419 + x706
    x3421 = -x3410 * x6 + x3420 * x5
    x3422 = -x3409
    x3423 = x4 * (-x3407 + x3408 + x3420 + x3422 + x720)
    x3424 = -x3417 * x6 + x3423
    x3425 = x3421 * x5 + x3424
    x3426 = x3415 * x5
    x3427 = x1852 * x2252
    x3428 = x10 * x2268
    x3429 = 2.0 * x2079
    x3430 = x3427 - x3428 + x3429 + x756
    x3431 = x3430 * x6
    x3432 = x3426 - x3431
    x3433 = x3432 * x6
    x3434 = -x3414
    x3435 = x4 * (x3410 - x3412 + x3413 + x3434 + x749)
    x3436 = -x3435
    x3437 = x3433 + x3436
    x3438 = x3418 - x3433 + x3435
    x3439 = -x3429
    x3440 = x4 * (x3415 - x3427 + x3428 + x3439 + x785)
    x3441 = 2.0 * x2101
    x3442 = -x10 * x2283 + x1852 * x2268 + x3441 + x788
    x3443 = 2.0 * x3269 - x3341 * x8
    x3444 = x174 * x3351 + x3443
    x3445 = x174 * x3346
    x3446 = x3361 * x8
    x3447 = 2.0 * x3274
    x3448 = -x3446 + x3447
    x3449 = x3445 + x3448
    x3450 = x3449 * x6
    x3451 = x174 * x3341
    x3452 = x3346 * x8
    x3453 = 2.0 * x3250
    x3454 = -x3452 + x3453
    x3455 = x3451 + x3454
    x3456 = -x3455 * x6
    x3457 = x3455 * x5
    x3458 = x3444 * x5 + x3456
    x3459 = x3452 - x3453
    x3460 = x4 * (x3444 - x3451 + x3459)
    x3461 = -x3450 + x3457
    x3462 = x3446 - x3447
    x3463 = x4 * (-x3445 + x3455 + x3462)
    x3464 = 2.0 * x3290 - x3373 * x8
    x3465 = x174 * x3361 + x3464
    x3466 = x3315 - x3377 * x8
    x3467 = x174 * x3387 + x3466
    x3468 = x174 * x3382
    x3469 = x3396 * x8
    x3470 = x3320 - x3469
    x3471 = x3468 + x3470
    x3472 = x3471 * x6
    x3473 = x174 * x3377
    x3474 = x3382 * x8
    x3475 = x3299 - x3474
    x3476 = x3473 + x3475
    x3477 = -x3476 * x6
    x3478 = x3476 * x5
    x3479 = x3467 * x5 + x3477
    x3480 = x3334 + x3474
    x3481 = x4 * (x3467 - x3473 + x3480)
    x3482 = -x3472 + x3478
    x3483 = x3337 + x3469
    x3484 = x4 * (-x3468 + x3476 + x3483)
    x3485 = x3335 - x3406 * x8
    x3486 = x174 * x3396 + x3485
    x3487 = -x3410 * x8
    x3488 = x174 * x3420 + x3487
    x3489 = x174 * x3415
    x3490 = x3430 * x8
    x3491 = -x3490
    x3492 = x3489 + x3491
    x3493 = x3492 * x6
    x3494 = x174 * x3410
    x3495 = x3415 * x8
    x3496 = -x3495
    x3497 = x3494 + x3496
    x3498 = -x3497 * x6
    x3499 = x3497 * x5
    x3500 = x3488 * x5 + x3498
    x3501 = x4 * (x3488 - x3494 + x3495)
    x3502 = -x3493 + x3499
    x3503 = x4 * (-x3489 + x3490 + x3497)
    x3504 = -x3442 * x8
    x3505 = x174 * x3430 + x3504
    x3506 = -x10 * x2413 + x1017 + x1852 * x2411 + 3.0 * x2247
    x3507 = x1852 * x2417
    x3508 = x10 * x2420
    x3509 = 3.0 * x2265
    x3510 = x1036 + x3507 - x3508 + x3509
    x3511 = x3510 * x6
    x3512 = x1852 * x2413
    x3513 = x10 * x2417
    x3514 = 3.0 * x2256
    x3515 = x1054 + x3512 - x3513 + x3514
    x3516 = -x3515 * x6
    x3517 = x3515 * x5
    x3518 = x3506 * x5 + x3516
    x3519 = x4 * (x1060 + x3506 - x3512 + x3513 - x3514)
    x3520 = -x3511 + x3517
    x3521 = x4 * (x1080 - x3507 + x3508 - x3509 + x3515)
    x3522 = -x10 * x2439 + x1082 + x1852 * x2420 + 3.0 * x2282
    x3523 = x174 * x3455
    x3524 = 3.0 * x3354 - x3455 * x8
    x3525 = x174 * x3444 + x3524
    x3526 = x3449 * x8
    x3527 = 3.0 * x3366
    x3528 = x3526 - x3527
    x3529 = x4 * (-x3523 + x3525 + x3528)
    x3530 = -x3526 + x3527
    x3531 = x3523 + x3530
    x3532 = 3.0 * x3371 - x3465 * x8
    x3533 = x174 * x3449 + x3532
    x3534 = x174 * x3476
    x3535 = 2.0 * x3389 - x3476 * x8
    x3536 = x174 * x3467 + x3535
    x3537 = x3471 * x8
    x3538 = 2.0 * x3400
    x3539 = x3537 - x3538
    x3540 = x4 * (-x3534 + x3536 + x3539)
    x3541 = -x3537 + x3538
    x3542 = x3534 + x3541
    x3543 = 2.0 * x3404 - x3486 * x8
    x3544 = x174 * x3471 + x3543
    x3545 = x174 * x3497
    x3546 = x3423 - x3497 * x8
    x3547 = x174 * x3488 + x3546
    x3548 = x3492 * x8
    x3549 = x3436 + x3548
    x3550 = x4 * (-x3545 + x3547 + x3549)
    x3551 = x3435 - x3548
    x3552 = x3545 + x3551
    x3553 = x3440 - x3505 * x8
    x3554 = x174 * x3492 + x3553
    x3555 = x3510 * x8
    x3556 = x174 * x3515
    x3557 = -x3515 * x8
    x3558 = x174 * x3506 + x3557
    x3559 = x4 * (x3555 - x3556 + x3558)
    x3560 = -x3555
    x3561 = x3556 + x3560
    x3562 = -x3522 * x8
    x3563 = x174 * x3510 + x3562
    x3564 = x10 * x2533
    x3565 = x1852 * x2527
    x3566 = 4.0 * x2423
    x3567 = -x10 * x2527 + x1230 + x1852 * x2525 + 4.0 * x2412
    x3568 = x4 * (x1260 + x3564 - x3565 - x3566 + x3567)
    x3569 = x1244 - x3564 + x3565 + x3566
    x3570 = -x10 * x2537 + x1257 + x1852 * x2533 + 4.0 * x2438
    x3571 = x2545 * x8
    x3572 = x1261 * x2542
    x3573 = 2.0 * x1265
    x3574 = x1261 * x2572 + 2.0 * x1294 - x2542 * x8
    x3575 = x4 * (x3571 - x3572 - x3573 + x3574)
    x3576 = -x3571 + x3572 + x3573
    x3577 = x3574 * x5 - x3576 * x6
    x3578 = x3576 * x5
    x3579 = x1261 * x2545
    x3580 = x2552 * x8
    x3581 = 2.0 * x1279
    x3582 = x3579 - x3580 + x3581
    x3583 = x3582 * x6
    x3584 = x3578 - x3583
    x3585 = x3575 + x3577 * x5 - x3584 * x6
    x3586 = x4 * (x3576 - x3579 + x3580 - x3581)
    x3587 = x3584 * x5
    x3588 = x3582 * x5
    x3589 = x1261 * x2552
    x3590 = x2563 * x8
    x3591 = 2.0 * x1303
    x3592 = x3589 - x3590 + x3591
    x3593 = x3592 * x6
    x3594 = x3588 - x3593
    x3595 = x3594 * x6
    x3596 = x3586 + x3587 - x3595
    x3597 = x3585 * x5 - x3596 * x6 + x38 * (x3577 - x3578 + x3583)
    x3598 = x3596 * x5
    x3599 = x4 * (x3582 - x3589 + x3590 - x3591)
    x3600 = x3594 * x5
    x3601 = x3592 * x5
    x3602 = x1261 * x2563
    x3603 = x2586 * x8
    x3604 = 2.0 * x1327
    x3605 = x3602 - x3603 + x3604
    x3606 = x3605 * x6
    x3607 = x3601 - x3606
    x3608 = x3607 * x6
    x3609 = x3599 + x3600 - x3608
    x3610 = x3609 * x6
    x3611 = x38 * (x3584 - x3588 + x3593)
    x3612 = x3598 - x3610 + x3611
    x3613 = -x3586
    x3614 = x4 * (x3592 - x3602 + x3603 - x3604)
    x3615 = x1261 * x2586 + 2.0 * x1352 - x2600 * x8
    x3616 = -x3599
    x3617 = x2609 * x8
    x3618 = x1261 * x2606
    x3619 = x1261 * x2622 + x2573 - x2606 * x8 + x2700
    x3620 = x4 * (x2577 + x2703 + x3617 - x3618 + x3619)
    x3621 = x2543 + x2690 - x3617 + x3618
    x3622 = x3619 * x5 - x3621 * x6
    x3623 = x3621 * x5
    x3624 = x1261 * x2609
    x3625 = x2616 * x8
    x3626 = x2558 + x2695 + x3624 - x3625
    x3627 = x3626 * x6
    x3628 = x3623 - x3627
    x3629 = x3620 + x3622 * x5 - x3628 * x6
    x3630 = x4 * (x2595 + x2715 + x3621 - x3624 + x3625)
    x3631 = x3628 * x5
    x3632 = x3626 * x5
    x3633 = x1261 * x2616
    x3634 = x2633 * x8
    x3635 = x2581 + x2710 + x3633 - x3634
    x3636 = x3635 * x6
    x3637 = x3632 - x3636
    x3638 = x3637 * x6
    x3639 = x3630 + x3631 - x3638
    x3640 = x4 * (x2601 + x2719 + x3626 - x3633 + x3634)
    x3641 = x1261 * x2633 + x2599 - x2643 * x8 + x2721
    x3642 = x2651 * x8
    x3643 = x1261 * x2648
    x3644 = 2.0 * x1437
    x3645 = x1261 * x2664 + 2.0 * x1449 - x2648 * x8
    x3646 = x4 * (x3642 - x3643 - x3644 + x3645)
    x3647 = -x3642 + x3643 + x3644
    x3648 = x3645 * x5 - x3647 * x6
    x3649 = x3647 * x5
    x3650 = x1261 * x2651
    x3651 = x2658 * x8
    x3652 = 2.0 * x1454
    x3653 = x3650 - x3651 + x3652
    x3654 = x3653 * x6
    x3655 = x3649 - x3654
    x3656 = x3646 + x3648 * x5 - x3655 * x6
    x3657 = x4 * (x3647 - x3650 + x3651 - x3652)
    x3658 = x3655 * x5
    x3659 = x3653 * x5
    x3660 = x1261 * x2658
    x3661 = x2675 * x8
    x3662 = 2.0 * x1474
    x3663 = x3660 - x3661 + x3662
    x3664 = x3663 * x6
    x3665 = x3659 - x3664
    x3666 = x3665 * x6
    x3667 = x3657 + x3658 - x3666
    x3668 = x4 * (x3653 - x3660 + x3661 - x3662)
    x3669 = x1261 * x2675 + 2.0 * x1496 - x2686 * x8
    x3670 = -x3657
    x3671 = x2696 * x8
    x3672 = x1261 * x2691
    x3673 = 2.0 * x1523
    x3674 = 2.0 * x2607
    x3675 = x1261 * x2701 + 2.0 * x1514 + 2.0 * x2623 - x2691 * x8
    x3676 = x4 * (x3671 - x3672 - x3673 - x3674 + x3675)
    x3677 = -x3671 + x3672 + x3673 + x3674
    x3678 = x3675 * x5 - x3677 * x6
    x3679 = x3677 * x5
    x3680 = x1261 * x2696
    x3681 = x2711 * x8
    x3682 = 2.0 * x1531
    x3683 = 2.0 * x2628
    x3684 = x3680 - x3681 + x3682 + x3683
    x3685 = x3684 * x6
    x3686 = x3679 - x3685
    x3687 = x4 * (x3677 - x3680 + x3681 - x3682 - x3683)
    x3688 = x1261 * x2711 + 2.0 * x1547 + 2.0 * x2642 - x2722 * x8
    x3689 = x2730 * x8
    x3690 = x1261 * x2726
    x3691 = x1261 * x2734 + x2665 - x2726 * x8 + x2797
    x3692 = x4 * (x2684 + x2811 + x3689 - x3690 + x3691)
    x3693 = x2649 + x2806 - x3689 + x3690
    x3694 = x3691 * x5 - x3693 * x6
    x3695 = x3693 * x5
    x3696 = x1261 * x2730
    x3697 = x2742 * x8
    x3698 = x2670 + x2801 + x3696 - x3697
    x3699 = x3698 * x6
    x3700 = x3695 - x3699
    x3701 = x4 * (x2687 + x2814 + x3693 - x3696 + x3697)
    x3702 = x1261 * x2742 + x2685 - x2750 * x8 + x2816
    x3703 = x2758 * x8
    x3704 = x1261 * x2754
    x3705 = 2.0 * x1625
    x3706 = x1261 * x2762 + 2.0 * x1616 - x2754 * x8
    x3707 = x4 * (x3703 - x3704 - x3705 + x3706)
    x3708 = -x3703 + x3704 + x3705
    x3709 = x3706 * x5 - x3708 * x6
    x3710 = x3708 * x5
    x3711 = x1261 * x2758
    x3712 = x2770 * x8
    x3713 = 2.0 * x1634
    x3714 = x3711 - x3712 + x3713
    x3715 = x3714 * x6
    x3716 = x3710 - x3715
    x3717 = x4 * (x3708 - x3711 + x3712 - x3713)
    x3718 = x1261 * x2770 + 2.0 * x1651 - x2779 * x8
    x3719 = x2784 * x8
    x3720 = x1261 * x2789
    x3721 = 3.0 * x2716
    x3722 = -x3721
    x3723 = 2.0 * x1669
    x3724 = 3.0 * x2704
    x3725 = x1261 * x2780 + 2.0 * x1658 - x2789 * x8 + x3724
    x3726 = x4 * (x3719 - x3720 + x3722 - x3723 + x3725)
    x3727 = -x3719 + x3720 + x3721 + x3723
    x3728 = 3.0 * x2720
    x3729 = x1261 * x2784 + 2.0 * x1684 - x2796 * x8 + x3728
    x3730 = x2802 * x8
    x3731 = x1261 * x2807
    x3732 = 2.0 * x1699
    x3733 = 2.0 * x2746
    x3734 = x1261 * x2798 + 2.0 * x1688 + 2.0 * x2736 - x2807 * x8
    x3735 = x4 * (x3730 - x3731 - x3732 - x3733 + x3734)
    x3736 = -x3730 + x3731 + x3732 + x3733
    x3737 = x1261 * x2802 + 2.0 * x1714 + 2.0 * x2749 - x2817 * x8
    x3738 = x2821 * x8
    x3739 = x1261 * x2825
    x3740 = x1261 * x2818 + x2764 - x2825 * x8 + x2866
    x3741 = x4 * (x2775 + x2865 + x3738 - x3739 + x3740)
    x3742 = x2774 + x2864 - x3738 + x3739
    x3743 = x1261 * x2821 + x2778 - x2832 * x8 + x2870
    x3744 = x2836 * x8
    x3745 = x1261 * x2840
    x3746 = 2.0 * x1759
    x3747 = x1261 * x2833 + 2.0 * x1748 - x2840 * x8
    x3748 = x4 * (x3744 - x3745 - x3746 + x3747)
    x3749 = -x3744 + x3745 + x3746
    x3750 = x1261 * x2836 + 2.0 * x1774 - x2847 * x8
    x3751 = x1261 * x2851 + 2.0 * x1780 + 4.0 * x2793 - x2853 * x8
    x3752 = x1261 * x2853 + 2.0 * x1790 + 4.0 * x2795 - x2854 * x8
    x3753 = 3.0 * x2812
    x3754 = x1261 * x2858 + 2.0 * x1796 - x2860 * x8 + x3753
    x3755 = 3.0 * x2815
    x3756 = x1261 * x2860 + 2.0 * x1806 - x2861 * x8 + x3755
    x3757 = x1261 * x2867 + 2.0 * x1812 + 2.0 * x2829 - x2869 * x8
    x3758 = x1261 * x2869 + 2.0 * x1822 + 2.0 * x2831 - x2871 * x8
    x3759 = x1261 * x2874 + 2.0 * x1827 + x2844 - x2876 * x8
    x3760 = x1261 * x2876 + 2.0 * x1836 + x2846 - x2877 * x8
    x3761 = x1261 * x2880 + 2.0 * x1841 - x2882 * x8
    x3762 = x1261 * x2882 + 2.0 * x1850 - x2883 * x8
    x3763 = x2889 * x8
    x3764 = x1261 * x2886
    x3765 = x1261 * x2914 + x1885 - x2886 * x8
    x3766 = x4 * (x1890 + x3763 - x3764 + x3765)
    x3767 = x1856 - x3763 + x3764
    x3768 = x3765 * x5 - x3767 * x6
    x3769 = x3767 * x5
    x3770 = x1261 * x2889
    x3771 = x2895 * x8
    x3772 = x1870 + x3770 - x3771
    x3773 = x3772 * x6
    x3774 = x3769 - x3773
    x3775 = x3766 + x3768 * x5 - x3774 * x6
    x3776 = x4 * (x1907 + x3767 - x3770 + x3771)
    x3777 = x3774 * x5
    x3778 = x3772 * x5
    x3779 = x1261 * x2895
    x3780 = x2905 * x8
    x3781 = x1894 + x3779 - x3780
    x3782 = x3781 * x6
    x3783 = x3778 - x3782
    x3784 = x3783 * x6
    x3785 = x3776 + x3777 - x3784
    x3786 = x3775 * x5 - x3785 * x6 + x38 * (x3768 - x3769 + x3773)
    x3787 = x3785 * x5
    x3788 = x4 * (x1931 + x3772 - x3779 + x3780)
    x3789 = x3783 * x5
    x3790 = x3781 * x5
    x3791 = x1261 * x2905
    x3792 = x2927 * x8
    x3793 = x1918 + x3791 - x3792
    x3794 = x3793 * x6
    x3795 = x3790 - x3794
    x3796 = x3795 * x6
    x3797 = x3788 + x3789 - x3796
    x3798 = x3797 * x6
    x3799 = x38 * (x3774 - x3778 + x3782)
    x3800 = x3787 - x3798 + x3799
    x3801 = -x3776
    x3802 = x4 * (x1945 + x3781 - x3791 + x3792)
    x3803 = x1261 * x2927 + x1943 - x2941 * x8
    x3804 = -x3788
    x3805 = x2948 * x8
    x3806 = x1261 * x2945
    x3807 = x1261 * x2960 + x1976 + x2915 - x2945 * x8
    x3808 = x4 * (x1997 + x2919 + x3805 - x3806 + x3807)
    x3809 = x1961 + x2887 - x3805 + x3806
    x3810 = x3807 * x5 - x3809 * x6
    x3811 = x3809 * x5
    x3812 = x1261 * x2948
    x3813 = x2954 * x8
    x3814 = x1981 + x2901 + x3812 - x3813
    x3815 = x3814 * x6
    x3816 = x3811 - x3815
    x3817 = x3808 + x3810 * x5 - x3816 * x6
    x3818 = x4 * (x2019 + x2936 + x3809 - x3812 + x3813)
    x3819 = x3816 * x5
    x3820 = x3814 * x5
    x3821 = x1261 * x2954
    x3822 = x2970 * x8
    x3823 = x2003 + x2923 + x3821 - x3822
    x3824 = x3823 * x6
    x3825 = x3820 - x3824
    x3826 = x3825 * x6
    x3827 = x3818 + x3819 - x3826
    x3828 = x4 * (x2030 + x2942 + x3814 - x3821 + x3822)
    x3829 = x1261 * x2970 + x2027 + x2940 - x2980 * x8
    x3830 = x2986 * x8
    x3831 = x1261 * x2983
    x3832 = x1261 * x2998 + x2054 - x2983 * x8
    x3833 = x4 * (x2073 + x3830 - x3831 + x3832)
    x3834 = x2042 - x3830 + x3831
    x3835 = x3832 * x5 - x3834 * x6
    x3836 = x3834 * x5
    x3837 = x1261 * x2986
    x3838 = x2992 * x8
    x3839 = x2059 + x3837 - x3838
    x3840 = x3839 * x6
    x3841 = x3836 - x3840
    x3842 = x3833 + x3835 * x5 - x3841 * x6
    x3843 = x4 * (x2093 + x3834 - x3837 + x3838)
    x3844 = x3841 * x5
    x3845 = x3839 * x5
    x3846 = x1261 * x2992
    x3847 = x3008 * x8
    x3848 = x2079 + x3846 - x3847
    x3849 = x3848 * x6
    x3850 = x3845 - x3849
    x3851 = x3850 * x6
    x3852 = x3843 + x3844 - x3851
    x3853 = x4 * (x2103 + x3839 - x3846 + x3847)
    x3854 = x1261 * x3008 + x2101 - x3019 * x8
    x3855 = -x3843
    x3856 = x3025 * x8
    x3857 = x1261 * x3022
    x3858 = 2.0 * x2946
    x3859 = -x3858
    x3860 = 2.0 * x2961
    x3861 = x1261 * x3029 + x2125 - x3022 * x8 + x3860
    x3862 = x4 * (x2138 + x3856 - x3857 + x3859 + x3861)
    x3863 = x2137 - x3856 + x3857 + x3858
    x3864 = x3861 * x5 - x3863 * x6
    x3865 = x3863 * x5
    x3866 = x1261 * x3025
    x3867 = x3036 * x8
    x3868 = 2.0 * x2966
    x3869 = x2147 + x3866 - x3867 + x3868
    x3870 = x3869 * x6
    x3871 = x3865 - x3870
    x3872 = -x3868
    x3873 = x4 * (x2164 + x3863 - x3866 + x3867 + x3872)
    x3874 = 2.0 * x2979
    x3875 = x1261 * x3036 + x2167 - x3044 * x8 + x3874
    x3876 = x3049 * x8
    x3877 = x1261 * x3046
    x3878 = x1261 * x3053 + x2190 + x2999 - x3046 * x8
    x3879 = x4 * (x2202 + x3017 + x3876 - x3877 + x3878)
    x3880 = x2201 + x2984 - x3876 + x3877
    x3881 = x3878 * x5 - x3880 * x6
    x3882 = x3880 * x5
    x3883 = x1261 * x3049
    x3884 = x3060 * x8
    x3885 = x2210 + x3004 + x3883 - x3884
    x3886 = x3885 * x6
    x3887 = x3882 - x3886
    x3888 = x4 * (x2227 + x3020 + x3880 - x3883 + x3884)
    x3889 = x1261 * x3060 + x2229 + x3018 - x3068 * x8
    x3890 = x3074 * x8
    x3891 = x1261 * x3071
    x3892 = x1261 * x3078 + x2247 - x3071 * x8
    x3893 = x4 * (x2257 + x3890 - x3891 + x3892)
    x3894 = x2256 - x3890 + x3891
    x3895 = x3892 * x5 - x3894 * x6
    x3896 = x3894 * x5
    x3897 = x1261 * x3074
    x3898 = x3085 * x8
    x3899 = x2265 + x3897 - x3898
    x3900 = x3899 * x6
    x3901 = x3896 - x3900
    x3902 = x4 * (x2280 + x3894 - x3897 + x3898)
    x3903 = x1261 * x3085 + x2282 - x3094 * x8
    x3904 = x3097 * x8
    x3905 = x1261 * x3100
    x3906 = 3.0 * x3040
    x3907 = x1261 * x3095 + x2293 + 3.0 * x3031 - x3100 * x8
    x3908 = x4 * (x2313 + x3904 - x3905 - x3906 + x3907)
    x3909 = x2312 - x3904 + x3905 + x3906
    x3910 = x1261 * x3097 + x2328 + 3.0 * x3043 - x3107 * x8
    x3911 = x3110 * x8
    x3912 = x1261 * x3113
    x3913 = 2.0 * x3064
    x3914 = -x3913
    x3915 = 2.0 * x3055
    x3916 = x1261 * x3108 + x2336 - x3113 * x8 + x3915
    x3917 = x4 * (x2354 + x3911 - x3912 + x3914 + x3916)
    x3918 = x2353 - x3911 + x3912 + x3913
    x3919 = 2.0 * x3067
    x3920 = x1261 * x3110 + x2369 - x3120 * x8 + x3919
    x3921 = x3123 * x8
    x3922 = x1261 * x3126
    x3923 = x1261 * x3121 + x2376 + x3080 - x3126 * x8
    x3924 = x4 * (x2393 + x3090 + x3921 - x3922 + x3923)
    x3925 = x2392 + x3089 - x3921 + x3922
    x3926 = x1261 * x3123 + x2407 + x3093 - x3133 * x8
    x3927 = x3136 * x8
    x3928 = x1261 * x3139
    x3929 = x1261 * x3134 + x2412 - x3139 * x8
    x3930 = x4 * (x2424 + x3927 - x3928 + x3929)
    x3931 = x2423 - x3927 + x3928
    x3932 = x1261 * x3136 + x2438 - x3146 * x8
    x3933 = x1261 * x3150 + x2446 + 4.0 * x3104 - x3152 * x8
    x3934 = x1261 * x3152 + x2459 + 4.0 * x3106 - x3153 * x8
    x3935 = x1261 * x3157 + x2468 + 3.0 * x3117 - x3159 * x8
    x3936 = x1261 * x3159 + x2481 + 3.0 * x3119 - x3160 * x8
    x3937 = 2.0 * x3130
    x3938 = x1261 * x3164 + x2489 - x3166 * x8 + x3937
    x3939 = 2.0 * x3132
    x3940 = x1261 * x3166 + x2501 - x3167 * x8 + x3939
    x3941 = x1261 * x3170 + x2508 + x3143 - x3172 * x8
    x3942 = x1261 * x3172 + x2519 + x3145 - x3173 * x8
    x3943 = x1261 * x3176 + x2526 - x3178 * x8
    x3944 = x1261 * x3178 + x2536 - x3179 * x8
    x3945 = x1261 * x3184
    x3946 = x1261 * x3214 + x3267
    x3947 = x4 * (x3247 - x3945 + x3946)
    x3948 = x3248 + x3945
    x3949 = x3946 * x5 - x3948 * x6
    x3950 = x3948 * x5
    x3951 = x1261 * x3187
    x3952 = x3252 + x3951
    x3953 = x3952 * x6
    x3954 = x3950 - x3953
    x3955 = x3947 + x3949 * x5 - x3954 * x6
    x3956 = x4 * (x3244 + x3948 - x3951)
    x3957 = x3954 * x5
    x3958 = x3952 * x5
    x3959 = x1261 * x3194
    x3960 = x3260 + x3959
    x3961 = x3960 * x6
    x3962 = x3958 - x3961
    x3963 = x3962 * x6
    x3964 = x3956 + x3957 - x3963
    x3965 = x38 * (x3949 - x3950 + x3953) + x3955 * x5 - x3964 * x6
    x3966 = x3964 * x5
    x3967 = x4 * (x3259 + x3952 - x3959)
    x3968 = x3962 * x5
    x3969 = x3960 * x5
    x3970 = x1261 * x3205
    x3971 = x3279 + x3970
    x3972 = x3971 * x6
    x3973 = x3969 - x3972
    x3974 = x3973 * x6
    x3975 = x3967 + x3968 - x3974
    x3976 = x3975 * x6
    x3977 = x38 * (x3954 - x3958 + x3961)
    x3978 = x3966 - x3976 + x3977
    x3979 = -x3956
    x3980 = x4 * (x3278 + x3960 - x3970)
    x3981 = x1261 * x3228 + x3291
    x3982 = -x3967
    x3983 = x1261 * x3249
    x3984 = x1261 * x3268 + x3350
    x3985 = x4 * (x3353 - x3983 + x3984)
    x3986 = x3340 + x3983
    x3987 = x3984 * x5 - x3986 * x6
    x3988 = x3986 * x5
    x3989 = x1261 * x3253
    x3990 = x3345 + x3989
    x3991 = x3990 * x6
    x3992 = x3988 - x3991
    x3993 = x3985 + x3987 * x5 - x3992 * x6
    x3994 = x4 * (x3365 + x3986 - x3989)
    x3995 = x3992 * x5
    x3996 = x3990 * x5
    x3997 = x1261 * x3261
    x3998 = x3360 + x3997
    x3999 = x3998 * x6
    x4000 = x3996 - x3999
    x4001 = x4000 * x6
    x4002 = x3994 + x3995 - x4001
    x4003 = x4 * (x3370 + x3990 - x3997)
    x4004 = x1261 * x3280 + x3372
    x4005 = x1261 * x3298
    x4006 = x1261 * x3314 + x3386
    x4007 = x4 * (x3375 - x4005 + x4006)
    x4008 = x3376 + x4005
    x4009 = x4006 * x5 - x4008 * x6
    x4010 = x4008 * x5
    x4011 = x1261 * x3301
    x4012 = x3381 + x4011
    x4013 = x4012 * x6
    x4014 = x4010 - x4013
    x4015 = x4007 + x4009 * x5 - x4014 * x6
    x4016 = x4 * (x3380 + x4008 - x4011)
    x4017 = x4014 * x5
    x4018 = x4012 * x5
    x4019 = x1261 * x3308
    x4020 = x3395 + x4019
    x4021 = x4020 * x6
    x4022 = x4018 - x4021
    x4023 = x4022 * x6
    x4024 = x4016 + x4017 - x4023
    x4025 = x4 * (x3394 + x4012 - x4019)
    x4026 = x1261 * x3325 + x3405
    x4027 = -x4016
    x4028 = x1261 * x3341
    x4029 = x1261 * x3351 + x3443
    x4030 = x4 * (x3459 - x4028 + x4029)
    x4031 = x3454 + x4028
    x4032 = x4029 * x5 - x4031 * x6
    x4033 = x4031 * x5
    x4034 = x1261 * x3346
    x4035 = x3448 + x4034
    x4036 = x4035 * x6
    x4037 = x4033 - x4036
    x4038 = x4 * (x3462 + x4031 - x4034)
    x4039 = x1261 * x3361 + x3464
    x4040 = x1261 * x3377
    x4041 = x1261 * x3387 + x3466
    x4042 = x4 * (x3480 - x4040 + x4041)
    x4043 = x3475 + x4040
    x4044 = x4041 * x5 - x4043 * x6
    x4045 = x4043 * x5
    x4046 = x1261 * x3382
    x4047 = x3470 + x4046
    x4048 = x4047 * x6
    x4049 = x4045 - x4048
    x4050 = x4 * (x3483 + x4043 - x4046)
    x4051 = x1261 * x3396 + x3485
    x4052 = x1261 * x3410
    x4053 = x1261 * x3420 + x3487
    x4054 = x4 * (x3495 - x4052 + x4053)
    x4055 = x3496 + x4052
    x4056 = x4053 * x5 - x4055 * x6
    x4057 = x4055 * x5
    x4058 = x1261 * x3415
    x4059 = x3491 + x4058
    x4060 = x4059 * x6
    x4061 = x4057 - x4060
    x4062 = x4 * (x3490 + x4055 - x4058)
    x4063 = x1261 * x3430 + x3504
    x4064 = x1261 * x3455
    x4065 = x1261 * x3444 + x3524
    x4066 = x4 * (x3528 - x4064 + x4065)
    x4067 = x3530 + x4064
    x4068 = x1261 * x3449 + x3532
    x4069 = x1261 * x3476
    x4070 = x1261 * x3467 + x3535
    x4071 = x4 * (x3539 - x4069 + x4070)
    x4072 = x3541 + x4069
    x4073 = x1261 * x3471 + x3543
    x4074 = x1261 * x3497
    x4075 = x1261 * x3488 + x3546
    x4076 = x4 * (x3549 - x4074 + x4075)
    x4077 = x3551 + x4074
    x4078 = x1261 * x3492 + x3553
    x4079 = x1261 * x3515
    x4080 = x1261 * x3506 + x3557
    x4081 = x4 * (x3555 - x4079 + x4080)
    x4082 = x3560 + x4079
    x4083 = x1261 * x3510 + x3562
    x4084 = x1261 * x3525 + 4.0 * x3460 - x3531 * x8
    x4085 = x1261 * x3531 + 4.0 * x3463 - x3533 * x8
    x4086 = x1261 * x3536 + 3.0 * x3481 - x3542 * x8
    x4087 = x1261 * x3542 + 3.0 * x3484 - x3544 * x8
    x4088 = x1261 * x3547 + 2.0 * x3501 - x3552 * x8
    x4089 = x1261 * x3552 + 2.0 * x3503 - x3554 * x8
    x4090 = x1261 * x3558 + x3519 - x3561 * x8
    x4091 = x1261 * x3561 + x3521 - x3563 * x8
    x4092 = x1261 * x3567 - x3569 * x8
    x4093 = x1261 * x3569 - x3570 * x8
    x4094 = x10 * x3187
    x4095 = x1852 * x3184
    x4096 = 2.0 * x1856
    x4097 = -x10 * x3184 + x1852 * x3214 + 2.0 * x1885
    x4098 = x4 * (x4094 - x4095 - x4096 + x4097)
    x4099 = -x4094 + x4095 + x4096
    x4100 = x4097 * x5 - x4099 * x6
    x4101 = x4099 * x5
    x4102 = x1852 * x3187
    x4103 = x10 * x3194
    x4104 = 2.0 * x1870
    x4105 = x4102 - x4103 + x4104
    x4106 = x4105 * x6
    x4107 = x4101 - x4106
    x4108 = x4098 + x4100 * x5 - x4107 * x6
    x4109 = x4 * (x4099 - x4102 + x4103 - x4104)
    x4110 = x4107 * x5
    x4111 = x4105 * x5
    x4112 = x1852 * x3194
    x4113 = x10 * x3205
    x4114 = 2.0 * x1894
    x4115 = x4112 - x4113 + x4114
    x4116 = x4115 * x6
    x4117 = x4111 - x4116
    x4118 = x4117 * x6
    x4119 = x4109 + x4110 - x4118
    x4120 = x38 * (x4100 - x4101 + x4106) + x4108 * x5 - x4119 * x6
    x4121 = x4119 * x5
    x4122 = x4 * (x4105 - x4112 + x4113 - x4114)
    x4123 = x4117 * x5
    x4124 = x4115 * x5
    x4125 = x1852 * x3205
    x4126 = x10 * x3228
    x4127 = 2.0 * x1918
    x4128 = x4125 - x4126 + x4127
    x4129 = x4128 * x6
    x4130 = x4124 - x4129
    x4131 = x4130 * x6
    x4132 = x4122 + x4123 - x4131
    x4133 = x4132 * x6
    x4134 = x38 * (x4107 - x4111 + x4116)
    x4135 = x4121 - x4133 + x4134
    x4136 = -x4109
    x4137 = x4 * (x4115 - x4125 + x4126 - x4127)
    x4138 = -x10 * x3242 + x1852 * x3228 + 2.0 * x1943
    x4139 = -x4122
    x4140 = x4105 * x8
    x4141 = x174 * x4099
    x4142 = -x4099 * x8
    x4143 = x174 * x4097 + x4142
    x4144 = x4 * (x4140 - x4141 + x4143)
    x4145 = -x4140
    x4146 = x4141 + x4145
    x4147 = x4143 * x5 - x4146 * x6
    x4148 = x4146 * x5
    x4149 = x174 * x4105
    x4150 = x4115 * x8
    x4151 = -x4150
    x4152 = x4149 + x4151
    x4153 = x4152 * x6
    x4154 = x4148 - x4153
    x4155 = x4144 + x4147 * x5 - x4154 * x6
    x4156 = x4 * (x4146 - x4149 + x4150)
    x4157 = x4154 * x5
    x4158 = x4152 * x5
    x4159 = x174 * x4115
    x4160 = x4128 * x8
    x4161 = -x4160
    x4162 = x4159 + x4161
    x4163 = x4162 * x6
    x4164 = x4158 - x4163
    x4165 = x4164 * x6
    x4166 = x4156 + x4157 - x4165
    x4167 = x4 * (x4152 - x4159 + x4160)
    x4168 = -x4138 * x8
    x4169 = x174 * x4128 + x4168
    x4170 = x10 * x3301
    x4171 = x1852 * x3298
    x4172 = -x10 * x3298 + x1852 * x3314 + x3215 + x3419
    x4173 = x4 * (x3219 + x3422 + x4170 - x4171 + x4172)
    x4174 = x3185 + x3409 - x4170 + x4171
    x4175 = x4172 * x5 - x4174 * x6
    x4176 = x4174 * x5
    x4177 = x1852 * x3301
    x4178 = x10 * x3308
    x4179 = x3200 + x3414 + x4177 - x4178
    x4180 = x4179 * x6
    x4181 = x4176 - x4180
    x4182 = x4173 + x4175 * x5 - x4181 * x6
    x4183 = x4 * (x3237 + x3434 + x4174 - x4177 + x4178)
    x4184 = x4181 * x5
    x4185 = x4179 * x5
    x4186 = x1852 * x3308
    x4187 = x10 * x3325
    x4188 = x3223 + x3429 + x4186 - x4187
    x4189 = x4188 * x6
    x4190 = x4185 - x4189
    x4191 = x4190 * x6
    x4192 = x4183 + x4184 - x4191
    x4193 = x4 * (x3243 + x3439 + x4179 - x4186 + x4187)
    x4194 = -x10 * x3336 + x1852 * x3325 + x3241 + x3441
    x4195 = -x4183
    x4196 = x174 * x4146
    x4197 = x4098 - x4146 * x8
    x4198 = x174 * x4143 + x4197
    x4199 = x4152 * x8
    x4200 = x4136 + x4199
    x4201 = x4 * (-x4196 + x4198 + x4200)
    x4202 = x4109 - x4199
    x4203 = x4196 + x4202
    x4204 = x4198 * x5 - x4203 * x6
    x4205 = x4203 * x5
    x4206 = x174 * x4152
    x4207 = x4162 * x8
    x4208 = x4122 - x4207
    x4209 = x4206 + x4208
    x4210 = x4209 * x6
    x4211 = x4205 - x4210
    x4212 = x4139 + x4207
    x4213 = x4 * (x4203 - x4206 + x4212)
    x4214 = x4137 - x4169 * x8
    x4215 = x174 * x4162 + x4214
    x4216 = x4179 * x8
    x4217 = x174 * x4174
    x4218 = -x4174 * x8
    x4219 = x174 * x4172 + x4218
    x4220 = x4 * (x4216 - x4217 + x4219)
    x4221 = -x4216
    x4222 = x4217 + x4221
    x4223 = x4219 * x5 - x4222 * x6
    x4224 = x4222 * x5
    x4225 = x174 * x4179
    x4226 = x4188 * x8
    x4227 = -x4226
    x4228 = x4225 + x4227
    x4229 = x4228 * x6
    x4230 = x4224 - x4229
    x4231 = x4 * (x4222 - x4225 + x4226)
    x4232 = -x4194 * x8
    x4233 = x174 * x4188 + x4232
    x4234 = x10 * x3415
    x4235 = x1852 * x3410
    x4236 = 2.0 * x2256
    x4237 = 2.0 * x3299
    x4238 = -x10 * x3410 + x1852 * x3420 + 2.0 * x2247 + 2.0 * x3315
    x4239 = x4 * (x4234 - x4235 - x4236 - x4237 + x4238)
    x4240 = -x4234 + x4235 + x4236 + x4237
    x4241 = x4238 * x5 - x4240 * x6
    x4242 = x4240 * x5
    x4243 = x1852 * x3415
    x4244 = x10 * x3430
    x4245 = 2.0 * x2265
    x4246 = 2.0 * x3320
    x4247 = x4243 - x4244 + x4245 + x4246
    x4248 = x4247 * x6
    x4249 = x4242 - x4248
    x4250 = x4 * (x4240 - x4243 + x4244 - x4245 - x4246)
    x4251 = -x10 * x3442 + x1852 * x3430 + 2.0 * x2282 + 2.0 * x3335
    x4252 = x174 * x4203
    x4253 = 2.0 * x4144 - x4203 * x8
    x4254 = x174 * x4198 + x4253
    x4255 = x4209 * x8
    x4256 = 2.0 * x4156
    x4257 = x4255 - x4256
    x4258 = x4 * (-x4252 + x4254 + x4257)
    x4259 = -x4255 + x4256
    x4260 = x4252 + x4259
    x4261 = 2.0 * x4167 - x4215 * x8
    x4262 = x174 * x4209 + x4261
    x4263 = x174 * x4222
    x4264 = x4173 - x4222 * x8
    x4265 = x174 * x4219 + x4264
    x4266 = x4228 * x8
    x4267 = x4195 + x4266
    x4268 = x4 * (-x4263 + x4265 + x4267)
    x4269 = x4183 - x4266
    x4270 = x4263 + x4269
    x4271 = x4193 - x4233 * x8
    x4272 = x174 * x4228 + x4271
    x4273 = x4247 * x8
    x4274 = x174 * x4240
    x4275 = -x4240 * x8
    x4276 = x174 * x4238 + x4275
    x4277 = x4 * (x4273 - x4274 + x4276)
    x4278 = -x4273
    x4279 = x4274 + x4278
    x4280 = -x4251 * x8
    x4281 = x174 * x4247 + x4280
    x4282 = x10 * x3510
    x4283 = x1852 * x3515
    x4284 = 3.0 * x3435
    x4285 = -x4284
    x4286 = 2.0 * x2423
    x4287 = 3.0 * x3423
    x4288 = -x10 * x3515 + x1852 * x3506 + 2.0 * x2412 + x4287
    x4289 = x4 * (x4282 - x4283 + x4285 - x4286 + x4288)
    x4290 = -x4282 + x4283 + x4284 + x4286
    x4291 = 3.0 * x3440
    x4292 = -x10 * x3522 + x1852 * x3510 + 2.0 * x2438 + x4291
    x4293 = 3.0 * x4201 - x4260 * x8
    x4294 = x174 * x4254 + x4293
    x4295 = 3.0 * x4213 - x4262 * x8
    x4296 = x174 * x4260 + x4295
    x4297 = 2.0 * x4220 - x4270 * x8
    x4298 = x174 * x4265 + x4297
    x4299 = 2.0 * x4231 - x4272 * x8
    x4300 = x174 * x4270 + x4299
    x4301 = x4239 - x4279 * x8
    x4302 = x174 * x4276 + x4301
    x4303 = x4250 - x4281 * x8
    x4304 = x174 * x4279 + x4303
    x4305 = -x4290 * x8
    x4306 = x174 * x4288 + x4305
    x4307 = -x4292 * x8
    x4308 = x174 * x4290 + x4307
    x4309 = -x10 * x3569 + x1852 * x3567 + 2.0 * x2526 + 4.0 * x3519
    x4310 = -x10 * x3570 + x1852 * x3569 + 2.0 * x2536 + 4.0 * x3521
    x4311 = x3582 * x8
    x4312 = x1261 * x3576
    x4313 = 3.0 * x2543
    x4314 = x1261 * x3574 + 3.0 * x2573 - x3576 * x8
    x4315 = -x4311 + x4312 + x4313
    x4316 = x4314 * x5 - x4315 * x6
    x4317 = x4315 * x5
    x4318 = x1261 * x3582
    x4319 = x3592 * x8
    x4320 = 3.0 * x2558
    x4321 = x4318 - x4319 + x4320
    x4322 = x4321 * x6
    x4323 = x4317 - x4322
    x4324 = x4 * (x4311 - x4312 - x4313 + x4314) + x4316 * x5 - x4323 * x6
    x4325 = x4 * (x4315 - x4318 + x4319 - x4320)
    x4326 = x4323 * x5
    x4327 = x4321 * x5
    x4328 = x1261 * x3592
    x4329 = x3605 * x8
    x4330 = 3.0 * x2581
    x4331 = x4328 - x4329 + x4330
    x4332 = x4331 * x6
    x4333 = x4327 - x4332
    x4334 = x4333 * x6
    x4335 = x4325 + x4326 - x4334
    x4336 = x3626 * x8
    x4337 = x1261 * x3621
    x4338 = 3.0 * x2607
    x4339 = x1261 * x3619 + 3.0 * x2623 + x3575 - x3621 * x8
    x4340 = x3586 - x4336 + x4337 + x4338
    x4341 = x4339 * x5 - x4340 * x6
    x4342 = x4340 * x5
    x4343 = x1261 * x3626
    x4344 = x3635 * x8
    x4345 = 3.0 * x2628
    x4346 = x3599 + x4343 - x4344 + x4345
    x4347 = x4346 * x6
    x4348 = x4342 - x4347
    x4349 = x3653 * x8
    x4350 = x1261 * x3647
    x4351 = 3.0 * x2649
    x4352 = x1261 * x3645 + 3.0 * x2665 - x3647 * x8
    x4353 = -x4349 + x4350 + x4351
    x4354 = x4352 * x5 - x4353 * x6
    x4355 = x4353 * x5
    x4356 = x1261 * x3653
    x4357 = x3663 * x8
    x4358 = 3.0 * x2670
    x4359 = x4356 - x4357 + x4358
    x4360 = x4359 * x6
    x4361 = x4355 - x4360
    x4362 = x3684 * x8
    x4363 = x1261 * x3677
    x4364 = 2.0 * x3630
    x4365 = x1261 * x3675 + 2.0 * x3620 - x3677 * x8 + x3724
    x4366 = x3721 - x4362 + x4363 + x4364
    x4367 = x3698 * x8
    x4368 = x1261 * x3693
    x4369 = 3.0 * x2746
    x4370 = x1261 * x3691 + 3.0 * x2736 + x3646 - x3693 * x8
    x4371 = x3657 - x4367 + x4368 + x4369
    x4372 = x3714 * x8
    x4373 = x1261 * x3708
    x4374 = 3.0 * x2774
    x4375 = x1261 * x3706 + 3.0 * x2764 - x3708 * x8
    x4376 = -x4372 + x4373 + x4374
    x4377 = x3772 * x8
    x4378 = x1261 * x3767
    x4379 = 2.0 * x2887
    x4380 = x1261 * x3765 + 2.0 * x2915 - x3767 * x8
    x4381 = -x4377 + x4378 + x4379
    x4382 = x4380 * x5 - x4381 * x6
    x4383 = x4381 * x5
    x4384 = x1261 * x3772
    x4385 = x3781 * x8
    x4386 = 2.0 * x2901
    x4387 = x4384 - x4385 + x4386
    x4388 = x4387 * x6
    x4389 = x4383 - x4388
    x4390 = x4 * (x4377 - x4378 - x4379 + x4380) + x4382 * x5 - x4389 * x6
    x4391 = x4 * (x4381 - x4384 + x4385 - x4386)
    x4392 = x4389 * x5
    x4393 = x4387 * x5
    x4394 = x1261 * x3781
    x4395 = x3793 * x8
    x4396 = 2.0 * x2923
    x4397 = x4394 - x4395 + x4396
    x4398 = x4397 * x6
    x4399 = x4393 - x4398
    x4400 = x4399 * x6
    x4401 = x4391 + x4392 - x4400
    x4402 = x3814 * x8
    x4403 = x1261 * x3809
    x4404 = x1261 * x3807 + x3766 - x3809 * x8 + x3860
    x4405 = x3776 + x3858 - x4402 + x4403
    x4406 = x4404 * x5 - x4405 * x6
    x4407 = x4405 * x5
    x4408 = x1261 * x3814
    x4409 = x3823 * x8
    x4410 = x3788 + x3868 + x4408 - x4409
    x4411 = x4410 * x6
    x4412 = x4407 - x4411
    x4413 = x3839 * x8
    x4414 = x1261 * x3834
    x4415 = 2.0 * x2984
    x4416 = x1261 * x3832 + 2.0 * x2999 - x3834 * x8
    x4417 = -x4413 + x4414 + x4415
    x4418 = x4416 * x5 - x4417 * x6
    x4419 = x4417 * x5
    x4420 = x1261 * x3839
    x4421 = x3848 * x8
    x4422 = 2.0 * x3004
    x4423 = x4420 - x4421 + x4422
    x4424 = x4423 * x6
    x4425 = x4419 - x4424
    x4426 = x3869 * x8
    x4427 = x1261 * x3863
    x4428 = 2.0 * x3040
    x4429 = 2.0 * x3818
    x4430 = x1261 * x3861 + 2.0 * x3031 + 2.0 * x3808 - x3863 * x8
    x4431 = -x4426 + x4427 + x4428 + x4429
    x4432 = x3885 * x8
    x4433 = x1261 * x3880
    x4434 = x1261 * x3878 + x3833 - x3880 * x8 + x3915
    x4435 = x3843 + x3913 - x4432 + x4433
    x4436 = x3899 * x8
    x4437 = x1261 * x3894
    x4438 = 2.0 * x3089
    x4439 = x1261 * x3892 + 2.0 * x3080 - x3894 * x8
    x4440 = -x4436 + x4437 + x4438
    x4441 = x3952 * x8
    x4442 = x1261 * x3948
    x4443 = x1261 * x3946 + x3215 - x3948 * x8
    x4444 = x3185 - x4441 + x4442
    x4445 = x4443 * x5 - x4444 * x6
    x4446 = x4444 * x5
    x4447 = x1261 * x3952
    x4448 = x3960 * x8
    x4449 = x3200 + x4447 - x4448
    x4450 = x4449 * x6
    x4451 = x4446 - x4450
    x4452 = x4 * (x3219 + x4441 - x4442 + x4443) + x4445 * x5 - x4451 * x6
    x4453 = x4 * (x3237 + x4444 - x4447 + x4448)
    x4454 = x4451 * x5
    x4455 = x4449 * x5
    x4456 = x1261 * x3960
    x4457 = x3971 * x8
    x4458 = x3223 + x4456 - x4457
    x4459 = x4458 * x6
    x4460 = x4455 - x4459
    x4461 = x4460 * x6
    x4462 = x4453 + x4454 - x4461
    x4463 = x3990 * x8
    x4464 = x1261 * x3986
    x4465 = x1261 * x3984 + x3269 + x3947 - x3986 * x8
    x4466 = x3250 + x3956 - x4463 + x4464
    x4467 = x4465 * x5 - x4466 * x6
    x4468 = x4466 * x5
    x4469 = x1261 * x3990
    x4470 = x3998 * x8
    x4471 = x3274 + x3967 + x4469 - x4470
    x4472 = x4471 * x6
    x4473 = x4468 - x4472
    x4474 = x4012 * x8
    x4475 = x1261 * x4008
    x4476 = x1261 * x4006 + x3315 - x4008 * x8
    x4477 = x3299 - x4474 + x4475
    x4478 = x4476 * x5 - x4477 * x6
    x4479 = x4477 * x5
    x4480 = x1261 * x4012
    x4481 = x4020 * x8
    x4482 = x3320 + x4480 - x4481
    x4483 = x4482 * x6
    x4484 = x4479 - x4483
    x4485 = x4035 * x8
    x4486 = x1261 * x4031
    x4487 = 2.0 * x3994
    x4488 = x1261 * x4029 + x3354 + 2.0 * x3985 - x4031 * x8
    x4489 = x3366 - x4485 + x4486 + x4487
    x4490 = x4047 * x8
    x4491 = x1261 * x4043
    x4492 = x1261 * x4041 + x3389 + x4007 - x4043 * x8
    x4493 = x3400 + x4016 - x4490 + x4491
    x4494 = x4059 * x8
    x4495 = x1261 * x4055
    x4496 = x1261 * x4053 + x3423 - x4055 * x8
    x4497 = x3435 - x4494 + x4495
    x4498 = x1261 * x4099
    x4499 = x1261 * x4097 + x4142
    x4500 = x4145 + x4498
    x4501 = x4499 * x5 - x4500 * x6
    x4502 = x4500 * x5
    x4503 = x1261 * x4105
    x4504 = x4151 + x4503
    x4505 = x4504 * x6
    x4506 = x4502 - x4505
    x4507 = x4 * (x4140 - x4498 + x4499) + x4501 * x5 - x4506 * x6
    x4508 = x4 * (x4150 + x4500 - x4503)
    x4509 = x4506 * x5
    x4510 = x4504 * x5
    x4511 = x1261 * x4115
    x4512 = x4161 + x4511
    x4513 = x4512 * x6
    x4514 = x4510 - x4513
    x4515 = x4514 * x6
    x4516 = x4508 + x4509 - x4515
    x4517 = x1261 * x4146
    x4518 = x1261 * x4143 + x4197
    x4519 = x4202 + x4517
    x4520 = x4518 * x5 - x4519 * x6
    x4521 = x4519 * x5
    x4522 = x1261 * x4152
    x4523 = x4208 + x4522
    x4524 = x4523 * x6
    x4525 = x4521 - x4524
    x4526 = x1261 * x4174
    x4527 = x1261 * x4172 + x4218
    x4528 = x4221 + x4526
    x4529 = x4527 * x5 - x4528 * x6
    x4530 = x4528 * x5
    x4531 = x1261 * x4179
    x4532 = x4227 + x4531
    x4533 = x4532 * x6
    x4534 = x4530 - x4533
    x4535 = x1261 * x4203
    x4536 = x1261 * x4198 + x4253
    x4537 = x4259 + x4535
    x4538 = x1261 * x4222
    x4539 = x1261 * x4219 + x4264
    x4540 = x4269 + x4538
    x4541 = x1261 * x4240
    x4542 = x1261 * x4238 + x4275
    x4543 = x4278 + x4541
    x4544 = x10 * x4105
    x4545 = x1852 * x4099
    x4546 = 3.0 * x3185
    x4547 = -x10 * x4099 + x1852 * x4097 + 3.0 * x3215
    x4548 = x4 * (x4544 - x4545 - x4546 + x4547)
    x4549 = -x4544 + x4545 + x4546
    x4550 = x4547 * x5 - x4549 * x6
    x4551 = x4549 * x5
    x4552 = x1852 * x4105
    x4553 = x10 * x4115
    x4554 = 3.0 * x3200
    x4555 = x4552 - x4553 + x4554
    x4556 = x4555 * x6
    x4557 = x4551 - x4556
    x4558 = x4548 + x4550 * x5 - x4557 * x6
    x4559 = x4 * (x4549 - x4552 + x4553 - x4554)
    x4560 = x4557 * x5
    x4561 = x4555 * x5
    x4562 = x1852 * x4115
    x4563 = x10 * x4128
    x4564 = 3.0 * x3223
    x4565 = x4562 - x4563 + x4564
    x4566 = x4565 * x6
    x4567 = x4561 - x4566
    x4568 = x4567 * x6
    x4569 = x4559 + x4560 - x4568
    x4570 = x4 * (x4555 - x4562 + x4563 - x4564)
    x4571 = -x10 * x4138 + x1852 * x4128 + 3.0 * x3241
    x4572 = -x4559
    x4573 = x4555 * x8
    x4574 = x174 * x4549
    x4575 = x174 * x4547 - x4549 * x8
    x4576 = x4 * (x4573 - x4574 + x4575)
    x4577 = -x4573 + x4574
    x4578 = x4575 * x5 - x4577 * x6
    x4579 = x4577 * x5
    x4580 = x174 * x4555
    x4581 = x4565 * x8
    x4582 = x4580 - x4581
    x4583 = x4582 * x6
    x4584 = x4579 - x4583
    x4585 = x4 * (x4577 - x4580 + x4581)
    x4586 = x174 * x4565 - x4571 * x8
    x4587 = x10 * x4179
    x4588 = x1852 * x4174
    x4589 = 3.0 * x3299
    x4590 = -x10 * x4174 + x1852 * x4172 + 3.0 * x3315 + x4098
    x4591 = x4 * (x4136 + x4587 - x4588 - x4589 + x4590)
    x4592 = x4109 - x4587 + x4588 + x4589
    x4593 = x4590 * x5 - x4592 * x6
    x4594 = x4592 * x5
    x4595 = x1852 * x4179
    x4596 = x10 * x4188
    x4597 = 3.0 * x3320
    x4598 = x4122 + x4595 - x4596 + x4597
    x4599 = x4598 * x6
    x4600 = x4594 - x4599
    x4601 = x4 * (x4139 + x4592 - x4595 + x4596 - x4597)
    x4602 = -x10 * x4194 + x1852 * x4188 + 3.0 * x3335 + x4137
    x4603 = x4582 * x8
    x4604 = x174 * x4577
    x4605 = x174 * x4575 + x4548 - x4577 * x8
    x4606 = x4 * (x4572 + x4603 - x4604 + x4605)
    x4607 = x4559 - x4603 + x4604
    x4608 = x174 * x4582 + x4570 - x4586 * x8
    x4609 = x4598 * x8
    x4610 = x174 * x4592
    x4611 = x174 * x4590 - x4592 * x8
    x4612 = x4 * (x4609 - x4610 + x4611)
    x4613 = -x4609 + x4610
    x4614 = x174 * x4598 - x4602 * x8
    x4615 = x10 * x4247
    x4616 = x1852 * x4240
    x4617 = 2.0 * x4183
    x4618 = -x10 * x4240 + x1852 * x4238 + 2.0 * x4173 + x4287
    x4619 = x4 * (x4285 + x4615 - x4616 - x4617 + x4618)
    x4620 = x4284 - x4615 + x4616 + x4617
    x4621 = -x10 * x4251 + x1852 * x4247 + 2.0 * x4193 + x4291
    x4622 = x174 * x4605 + 2.0 * x4576 - x4607 * x8
    x4623 = x174 * x4607 + 2.0 * x4585 - x4608 * x8
    x4624 = x174 * x4611 + x4591 - x4613 * x8
    x4625 = x174 * x4613 + x4601 - x4614 * x8
    x4626 = x174 * x4618 - x4620 * x8
    x4627 = x174 * x4620 - x4621 * x8
    x4628 = -x10 * x4290 + x1852 * x4288 + 3.0 * x3519 + 3.0 * x4239
    x4629 = -x10 * x4292 + x1852 * x4290 + 3.0 * x3521 + 3.0 * x4250

    # 225 item(s)
    result[0, 0] = numpy.sum(
        x171
        * (
            x109
            * (
                x108 * x38
                - x130
                * (
                    x150 * x6
                    - x152 * x3
                    + x165
                    - x166
                    + x169
                    - x38 * (-x168 + x3 * x44 + x46 + x51)
                    - x52
                    + x71
                )
                + x130
                * (
                    x162 * x3
                    - x165
                    + x166
                    - x169
                    + x38 * (x167 - x3 * x33 + x35 + x96)
                    - x6 * (x161 + x92)
                    - x71
                    + x97
                )
                - x142 * x38
                + x153 * x3
                - x164 * x3
                - x164 * x6
                + x6 * (x136 - x159 + x160 + x163)
            )
            - x130 * (-x110 + x112 + x113 - x139 + x143)
            - x3
            * (
                x109 * (x103 - x146 + x147 + x151 - x153)
                - x110 * x3
                + x144 * x6
                - x38 * (x101 - x104 + x78 - x79)
            )
            + x6
            * (
                x109 * (x136 - x159 + x160 + x163 - x164)
                - x144 * x3
                - x38 * (x105 - x114 + x134 - x137)
                + x6
                * (
                    x109 * (x145 + x154 - x158)
                    + x138 * x3
                    + x4 * (x100 - x115 + x154)
                    - x6
                    * (
                        -x109 * (x116 - x125 + x126 - x93)
                        + x133 * x3
                        - x6
                        * (
                            x127 * x5
                            + x130 * (-x118 + x123 + x157 + x89)
                            - x6
                            * (
                                x124 * x5
                                + x38 * (x120 - x121 + x87)
                                - x6 * (x122 * x5 + x155 - x6 * (x119 * x5 - x156 * x6))
                            )
                        )
                    )
                )
            )
        )
    )
    result[0, 1] = numpy.sum(
        -x318
        * (
            x130 * (-x259 + x261 + x262 - x286 + x290)
            - x130
            * (
                x258 * x38
                - x289 * x38
                + x3 * x300
                - x3 * x312
                - x312 * x6
                + x38
                * (
                    x206
                    - x222
                    - x297 * x6
                    + x299 * x3
                    - x315
                    - x316
                    + x317
                    + x4 * (x182 + x200 * x3 + x201 - x313)
                )
                - x38
                * (
                    x222
                    - x246
                    - x3 * x310
                    + x315
                    + x316
                    - x317
                    - x4 * (-x191 * x3 + x193 + x216 + x314)
                    + x6 * (x243 + x309)
                )
                + x6 * (x283 - x307 + x308 + x311)
            )
            + x3
            * (
                x130 * (x253 - x293 + x294 + x298 - x300)
                - x259 * x3
                + x291 * x6
                - x38 * (x230 - x231 + x250 - x254)
            )
            - x6
            * (
                x130 * (x283 - x307 + x308 + x311 - x312)
                - x291 * x3
                - x38 * (x255 - x263 + x280 - x284)
                + x6
                * (
                    x130 * (x292 + x301 - x306)
                    + x285 * x3
                    + x4 * (x249 - x264 + x301)
                    - x6
                    * (
                        x130 * (x244 - x266 + x274 + x305)
                        + x279 * x3
                        - x6
                        * (
                            x275 * x5
                            + x38 * (x241 - x267 + x272)
                            - x6 * (x273 * x5 + x302 - x6 * (x271 * x5 - x304 * x6))
                        )
                    )
                )
            )
        )
    )
    result[0, 2] = numpy.sum(
        -x318
        * (
            x130 * (-x406 + x408 + x409 - x433 + x437)
            - x130
            * (
                x3 * x447
                - x3 * x459
                + x38 * x405
                - x38 * x436
                + x38
                * (
                    x3 * x446
                    + x353
                    - x369
                    + x4 * (x3 * x347 + x329 + x348 - x460)
                    - x444 * x6
                    - x462
                    - x463
                    + x464
                )
                + x38
                * (
                    x3 * x457
                    - x369
                    + x393
                    + x4 * (-x3 * x338 + x340 + x363 + x461)
                    - x462
                    - x463
                    + x464
                    - x6 * (x390 + x456)
                )
                - x459 * x6
                + x6 * (x430 - x454 + x455 + x458)
            )
            + x3
            * (
                x130 * (x400 - x440 + x441 + x445 - x447)
                - x3 * x406
                - x38 * (x377 - x378 + x397 - x401)
                + x438 * x6
            )
            - x6
            * (
                x130 * (x430 - x454 + x455 + x458 - x459)
                - x3 * x438
                - x38 * (x402 - x410 + x427 - x431)
                + x6
                * (
                    x130 * (x439 + x448 - x453)
                    + x3 * x432
                    + x4 * (x396 - x411 + x448)
                    - x6
                    * (
                        x130 * (x391 - x413 + x421 + x452)
                        + x3 * x426
                        - x6
                        * (
                            x38 * (x388 - x414 + x419)
                            + x422 * x5
                            - x6 * (x420 * x5 + x449 - x6 * (x418 * x5 - x451 * x6))
                        )
                    )
                )
            )
        )
    )
    result[0, 3] = numpy.sum(
        x578
        * (
            x130 * (x525 - x528 - x529 + x548 + x577)
            + x3
            * (
                x3 * x525
                + x38 * (x502 - x503 + x518 - x520)
                - x38 * (x519 - x554 + x558 + x559 - x561)
                - x552 * x6
            )
            + x38
            * (
                x3 * x561
                - x3 * x574
                + x4 * (x3 * x560 + x483 + x497 - x557 * x6 + x575 - x576)
                - x4 * (-x3 * x571 + x496 + x526 - x575 + x576 + x6 * (x513 + x570))
                + x524
                - x574 * x6
                + x577
                + x6 * (x545 - x569 + x572 + x573)
            )
            - x6
            * (
                x3 * x552
                + x38 * (x521 - x530 + x544 - x546)
                - x38 * (x545 - x569 + x572 + x573 - x574)
                - x6
                * (
                    x3 * x547
                    + x38 * (x553 + x563 - x568)
                    + x4 * (x517 - x531 + x563)
                    - x6
                    * (
                        x3 * x543
                        + x38 * (x514 - x534 + x539)
                        - x6 * (x5 * x540 + x565 - x6 * (x5 * x538 - x567 * x6))
                    )
                )
            )
        )
    )
    result[0, 4] = numpy.sum(
        x687
        * (
            x130 * (x636 - x639 - x640 + x658 + x686)
            + x3
            * (
                x3 * x636
                + x38 * (x614 - x615 + x629 - x631)
                - x38 * (x630 - x664 + x668 + x669 - x671)
                - x6 * x662
            )
            + x38
            * (
                x3 * x671
                - x3 * x683
                + x4 * (x3 * x670 + x596 - x6 * x667 + x609 + x684 - x685)
                - x4 * (-x3 * x680 + x6 * (x624 + x679) + x608 + x637 - x684 + x685)
                - x6 * x683
                + x6 * (x655 - x678 + x681 + x682)
                + x635
                + x686
            )
            - x6
            * (
                x3 * x662
                + x38 * (x632 - x641 + x654 - x656)
                - x38 * (x655 - x678 + x681 + x682 - x683)
                - x6
                * (
                    x3 * x657
                    + x38 * (x663 + x673 - x677)
                    + x4 * (x628 - x642 + x673)
                    - x6
                    * (
                        x3 * x653
                        + x38 * (x625 - x644 + x649)
                        - x6 * (x5 * x650 - x6 * (x5 * x648 - x6 * x676) + x674)
                    )
                )
            )
        )
    )
    result[0, 5] = numpy.sum(
        x578
        * (
            x130 * (x748 - x751 - x752 + x771 + x800)
            + x3
            * (
                x3 * x748
                + x38 * (x725 - x726 + x741 - x743)
                - x38 * (x742 - x777 + x781 + x782 - x784)
                - x6 * x775
            )
            + x38
            * (
                x3 * x784
                - x3 * x797
                + x4 * (x3 * x783 - x6 * x780 + x706 + x720 + x798 - x799)
                - x4 * (-x3 * x794 + x6 * (x736 + x793) + x719 + x749 - x798 + x799)
                - x6 * x797
                + x6 * (x768 - x792 + x795 + x796)
                + x747
                + x800
            )
            - x6
            * (
                x3 * x775
                + x38 * (x744 - x753 + x767 - x769)
                - x38 * (x768 - x792 + x795 + x796 - x797)
                - x6
                * (
                    x3 * x770
                    + x38 * (x776 + x786 - x791)
                    + x4 * (x740 - x754 + x786)
                    - x6
                    * (
                        x3 * x766
                        + x38 * (x737 - x757 + x762)
                        - x6 * (x5 * x763 - x6 * (x5 * x761 - x6 * x790) + x788)
                    )
                )
            )
        )
    )
    result[0, 6] = numpy.sum(
        -x318
        * (
            x130 * (x848 - x860 + x861 + x862 - x868)
            - x3
            * (
                x3 * x860
                + x38 * (x850 + x854 - x855 + x858)
                + x4 * (x821 - x845 + x846 + x850)
                - x6 * x869
            )
            - x4
            * (
                x3 * x821
                - x3 * x847
                - x6 * x847
                + x6 * (x826 + x833 - x842)
                - 2.0 * x848
                + 2.0 * x849
            )
            + x6
            * (
                x3 * x869
                + x38 * (x859 - x863 + x866 + x870)
                + x4 * (-x833 + x842 + x847 + x870)
                - x6
                * (
                    x3 * x867
                    + x4 * (x832 - x834 + x840)
                    + x4 * (x840 + x857 - x864)
                    - x6 * (x3 * x865 - x6 * (x5 * x839 - x6 * x874) + x872)
                )
            )
        )
    )
    result[0, 7] = numpy.sum(
        -x687
        * (
            x130 * (x918 - x930 + x931 + x932 - x938)
            - x3
            * (
                x3 * x930
                + x38 * (x920 + x924 - x925 + x928)
                + x4 * (x893 - x915 + x916 + x920)
                - x6 * x939
            )
            - x4
            * (
                x3 * x893
                - x3 * x917
                - x6 * x917
                + x6 * (x897 + x904 - x912)
                - 2.0 * x918
                + 2.0 * x919
            )
            + x6
            * (
                x3 * x939
                + x38 * (x929 - x933 + x936 + x940)
                + x4 * (-x904 + x912 + x917 + x940)
                - x6
                * (
                    x3 * x937
                    + x4 * (x903 - x905 + x910)
                    + x4 * (x910 + x927 - x934)
                    - x6 * (x3 * x935 - x6 * (x5 * x909 - x6 * x944) + x942)
                )
            )
        )
    )
    result[0, 8] = numpy.sum(
        -x687
        * (
            x130 * (-x1005 + x985 - x997 + x998 + x999)
            - x3
            * (
                -x1006 * x6
                + x3 * x997
                + x38 * (x987 + x991 - x992 + x995)
                + x4 * (x962 - x982 + x983 + x987)
            )
            - x4
            * (
                x3 * x962
                - x3 * x984
                - x6 * x984
                + x6 * (x965 + x972 - x980)
                - 2.0 * x985
                + 2.0 * x986
            )
            + x6
            * (
                x1006 * x3
                + x38 * (-x1000 + x1003 + x1007 + x996)
                + x4 * (x1007 - x972 + x980 + x984)
                - x6
                * (
                    x1004 * x3
                    + x4 * (-x1001 + x978 + x994)
                    + x4 * (x971 - x973 + x978)
                    - x6 * (x1002 * x3 + x1008 + x6 * (x1010 * x6 - x5 * x977))
                )
            )
        )
    )
    result[0, 9] = numpy.sum(
        -x318
        * (
            x130 * (x1058 - x1070 + x1071 + x1072 - x1078)
            - x3
            * (
                x1070 * x3
                - x1079 * x6
                + x38 * (x1060 + x1064 - x1065 + x1068)
                + x4 * (x1031 - x1055 + x1056 + x1060)
            )
            - x4
            * (
                x1031 * x3
                - x1057 * x3
                - x1057 * x6
                - 2.0 * x1058
                + 2.0 * x1059
                + x6 * (x1036 + x1043 - x1052)
            )
            + x6
            * (
                x1079 * x3
                + x38 * (x1069 - x1073 + x1076 + x1080)
                + x4 * (-x1043 + x1052 + x1057 + x1080)
                - x6
                * (
                    x1077 * x3
                    + x4 * (x1042 - x1044 + x1050)
                    + x4 * (x1050 + x1067 - x1074)
                    - x6 * (x1075 * x3 + x1082 - x6 * (x1049 * x5 - x1084 * x6))
                )
            )
        )
    )
    result[0, 10] = numpy.sum(
        x171
        * (
            x130 * (x1103 - x1106 + x1115 + x1121)
            + x3 * (x1103 * x3 - x1116 * x6 + x38 * (x1094 - x1095 + x1101))
            - x6
            * (
                x1116 * x3
                + x38 * (x1102 - x1107 + x1113)
                - x6 * (x1114 * x3 + x1118 - x6 * (x1112 * x3 - x1120 * x6))
            )
        )
    )
    result[0, 11] = numpy.sum(
        x318
        * (
            x130 * (x1140 - x1143 + x1152 + x1158)
            + x3 * (x1140 * x3 - x1153 * x6 + x38 * (x1131 - x1132 + x1138))
            - x6
            * (
                x1153 * x3
                + x38 * (x1139 - x1144 + x1150)
                - x6 * (x1151 * x3 + x1155 - x6 * (x1149 * x3 - x1157 * x6))
            )
        )
    )
    result[0, 12] = numpy.sum(
        x578
        * (
            x130 * (x1175 - x1178 + x1186 + x1192)
            + x3 * (x1175 * x3 - x1187 * x6 + x38 * (x1167 - x1168 + x1173))
            - x6
            * (
                x1187 * x3
                + x38 * (x1174 - x1179 + x1184)
                - x6 * (x1185 * x3 + x1189 - x6 * (x1183 * x3 - x1191 * x6))
            )
        )
    )
    result[0, 13] = numpy.sum(
        x318
        * (
            x130 * (x1208 - x1210 + x1218 + x1223)
            + x3 * (x1208 * x3 - x1219 * x6 + x38 * (x1200 - x1201 + x1206))
            - x6
            * (
                x1219 * x3
                + x38 * (x1207 - x1211 + x1216)
                - x6 * (x1217 * x3 + x1220 - x6 * (x1215 * x3 - x1222 * x6))
            )
        )
    )
    result[0, 14] = numpy.sum(
        x171
        * (
            x130 * (x1242 - x1245 + x1254 + x1260)
            + x3 * (x1242 * x3 - x1255 * x6 + x38 * (x1233 - x1234 + x1240))
            - x6
            * (
                x1255 * x3
                + x38 * (x1241 - x1246 + x1252)
                - x6 * (x1253 * x3 + x1257 - x6 * (x1251 * x3 - x1259 * x6))
            )
        )
    )
    result[1, 0] = numpy.sum(
        -x318
        * (
            x109
            * (
                x130 * (-x1287 * x3 + x1290 + x1345 + x1357)
                - x130 * (x1296 * x3 + x1297 + x1321 - x1357)
                - x1322
                + x1346
                - x1350 * x3
                + x1356 * x3
                + x1356 * x6
                - x6 * (x1342 + x1355)
            )
            - x3
            * (
                x109 * (x1318 - x1349 + x1350)
                + x1323 * x3
                - x1348 * x6
                + x4 * (-x1292 + x1301 + x1318)
            )
            - x38 * (x1323 - x1324 + x1344 - x1347)
            + x6
            * (
                x109 * (x1351 - x1355 + x1356)
                + x1348 * x3
                + x4 * (x1320 - x1325 + x1351)
                - x6
                * (
                    x109 * (x1314 - x1326 + x1336 - x1337)
                    + x1343 * x3
                    - x6
                    * (
                        x130 * (x1311 - x1328 + x1334 + x1354)
                        + x1338 * x5
                        - x6
                        * (
                            x1335 * x5
                            + x38 * (x1309 - x1329 + x1332)
                            - x6 * (x1333 * x5 + x1352 - x6 * (x1331 * x5 - x1353 * x6))
                        )
                    )
                )
            )
        )
    )
    result[1, 1] = numpy.sum(
        x1428
        * (
            x130
            * (
                x1398
                - x1417
                + x1421 * x3
                - x1426 * x3
                - x1426 * x6
                - x38 * (-x1371 * x3 + x1373 + x1416 + x1427)
                + x38 * (x1377 * x3 + x1379 + x1397 - x1427)
                + x6 * (x1413 + x1425)
            )
            + x3
            * (
                x130 * (x1394 - x1420 + x1421)
                + x1399 * x3
                - x1419 * x6
                + x4 * (-x1375 + x1382 + x1394)
            )
            + x38 * (x1399 - x1400 + x1415 - x1418)
            - x6
            * (
                x130 * (x1422 - x1425 + x1426)
                + x1419 * x3
                + x4 * (x1396 - x1401 + x1422)
                - x6
                * (
                    x130 * (x1391 - x1402 - x1403 + x1409)
                    + x1414 * x3
                    - x6
                    * (
                        x1410 * x5
                        + x38 * (x1389 - x1404 + x1407)
                        - x6 * (x1408 * x5 + x1423 - x6 * (x1406 * x5 - x1424 * x6))
                    )
                )
            )
        )
    )
    result[1, 2] = numpy.sum(
        x1428
        * (
            x130
            * (
                x1470
                - x1490
                + x1494 * x3
                - x1500 * x3
                - x1500 * x6
                - x38 * (-x1442 * x3 + x1444 + x1489 + x1501)
                + x38 * (x1448 * x3 + x1450 + x1469 - x1501)
                + x6 * (x1485 + x1499)
            )
            + x3
            * (
                x130 * (x1465 - x1493 + x1494)
                + x1471 * x3
                - x1492 * x6
                + x4 * (-x1446 + x1453 + x1465)
            )
            + x38 * (x1471 - x1472 + x1487 - x1491)
            - x6
            * (
                x130 * (x1495 - x1499 + x1500)
                + x1492 * x3
                + x4 * (x1467 - x1473 + x1495)
                - x6
                * (
                    x130 * (x1462 - x1475 + x1481 + x1498)
                    + x1486 * x3
                    - x6
                    * (
                        x1482 * x5
                        + x38 * (x1460 - x1476 + x1479)
                        - x6 * (x1480 * x5 + x1496 - x6 * (x1478 * x5 - x1497 * x6))
                    )
                )
            )
        )
    )
    result[1, 3] = numpy.sum(
        x1552
        * (
            x3
            * (
                x1528 * x3
                - x1543 * x6
                + x38 * (x1524 - x1544 + x1545)
                + x4 * (-x1510 + x1516 + x1524)
            )
            + x38 * (x1528 - x1529 + x1540 - x1542)
            + x38
            * (
                x1527
                - x1541
                + x1545 * x3
                - x1550 * x3
                - x1550 * x6
                + x4 * (x1507 + x1511 * x3 + x1512 - x1551)
                - x4 * (-x1506 * x3 + x1508 + x1520 + x1551)
                + x6 * (x1538 + x1549)
            )
            - x6
            * (
                x1543 * x3
                + x38 * (x1546 - x1549 + x1550)
                + x4 * (x1526 - x1530 + x1546)
                - x6
                * (
                    x1539 * x3
                    + x38 * (x1521 - x1532 + x1535)
                    - x6 * (x1536 * x5 + x1547 - x6 * (x1534 * x5 - x1548 * x6))
                )
            )
        )
    )
    result[1, 4] = numpy.sum(
        x1603
        * (
            x3
            * (
                x1579 * x3
                - x1594 * x6
                + x38 * (x1575 - x1595 + x1596)
                + x4 * (-x1561 + x1567 + x1575)
            )
            + x38 * (x1579 - x1580 + x1591 - x1593)
            + x38
            * (
                x1578
                - x1592
                + x1596 * x3
                - x1601 * x3
                - x1601 * x6
                + x4 * (x1558 + x1562 * x3 + x1563 - x1602)
                - x4 * (-x1557 * x3 + x1559 + x1571 + x1602)
                + x6 * (x1589 + x1600)
            )
            - x6
            * (
                x1594 * x3
                + x38 * (x1597 - x1600 + x1601)
                + x4 * (x1577 - x1581 + x1597)
                - x6
                * (
                    x1590 * x3
                    + x38 * (x1572 - x1583 + x1586)
                    - x6 * (x1587 * x5 + x1598 - x6 * (x1585 * x5 - x1599 * x6))
                )
            )
        )
    )
    result[1, 5] = numpy.sum(
        x1552
        * (
            x3
            * (
                x1631 * x3
                - x1646 * x6
                + x38 * (x1627 - x1647 + x1648)
                + x4 * (-x1612 + x1618 + x1627)
            )
            + x38 * (x1631 - x1632 + x1643 - x1645)
            + x38
            * (
                x1630
                - x1644
                + x1648 * x3
                - x1654 * x3
                - x1654 * x6
                + x4 * (x1609 + x1613 * x3 + x1614 - x1655)
                - x4 * (-x1608 * x3 + x1610 + x1622 + x1655)
                + x6 * (x1641 + x1653)
            )
            - x6
            * (
                x1646 * x3
                + x38 * (x1650 - x1653 + x1654)
                + x4 * (x1629 - x1633 + x1650)
                - x6
                * (
                    x1642 * x3
                    + x38 * (x1623 - x1635 + x1638)
                    - x6 * (x1639 * x5 + x1651 - x6 * (x1637 * x5 - x1652 * x6))
                )
            )
        )
    )
    result[1, 6] = numpy.sum(
        x1428
        * (
            x3
            * (
                x1678 * x3
                - x1683 * x6
                + x4 * (x1661 - x1671 + x1672)
                + x4 * (x1672 - x1675 + x1676)
            )
            + x38 * (x1670 + x1678 - x1679 + x1682)
            + x4
            * (
                x1658
                + x1661 * x3
                + x1670
                - x1674 * x3
                - x1674 * x6
                + x6 * (x1664 + x1668)
            )
            - x6
            * (
                x1683 * x3
                + x4 * (-x1664 + x1667 + x1674)
                + x4 * (x1667 + x1677 - x1680)
                - x6 * (x1681 * x3 + x1684 - x6 * (x1666 * x5 - x1685 * x6))
            )
        )
    )
    result[1, 7] = numpy.sum(
        x1603
        * (
            x3
            * (
                x1708 * x3
                - x1713 * x6
                + x4 * (x1691 - x1701 + x1702)
                + x4 * (x1702 - x1705 + x1706)
            )
            + x38 * (x1700 + x1708 - x1709 + x1712)
            + x4
            * (
                x1688
                + x1691 * x3
                + x1700
                - x1704 * x3
                - x1704 * x6
                + x6 * (x1694 + x1698)
            )
            - x6
            * (
                x1713 * x3
                + x4 * (-x1694 + x1697 + x1704)
                + x4 * (x1697 + x1707 - x1710)
                - x6 * (x1711 * x3 + x1714 - x6 * (x1696 * x5 - x1715 * x6))
            )
        )
    )
    result[1, 8] = numpy.sum(
        x1603
        * (
            x3
            * (
                x1738 * x3
                - x1743 * x6
                + x4 * (x1721 - x1731 + x1732)
                + x4 * (x1732 - x1735 + x1736)
            )
            + x38 * (x1730 + x1738 - x1739 + x1742)
            + x4
            * (
                x1718
                + x1721 * x3
                + x1730
                - x1734 * x3
                - x1734 * x6
                + x6 * (x1724 + x1728)
            )
            - x6
            * (
                x1743 * x3
                + x4 * (-x1724 + x1727 + x1734)
                + x4 * (x1727 + x1737 - x1740)
                - x6 * (x1741 * x3 + x1744 - x6 * (x1726 * x5 - x1745 * x6))
            )
        )
    )
    result[1, 9] = numpy.sum(
        x1428
        * (
            x3
            * (
                x1768 * x3
                - x1773 * x6
                + x4 * (x1751 - x1761 + x1762)
                + x4 * (x1762 - x1765 + x1766)
            )
            + x38 * (x1760 + x1768 - x1769 + x1772)
            + x4
            * (
                x1748
                + x1751 * x3
                + x1760
                - x1764 * x3
                - x1764 * x6
                + x6 * (x1754 + x1758)
            )
            - x6
            * (
                x1773 * x3
                + x4 * (-x1754 + x1757 + x1764)
                + x4 * (x1757 + x1767 - x1770)
                - x6 * (x1771 * x3 + x1774 - x6 * (x1756 * x5 - x1775 * x6))
            )
        )
    )
    result[1, 10] = numpy.sum(
        x318
        * (
            x3 * (x1780 + x1782 * x3 - x1789 * x6)
            + x38 * (x1782 - x1783 + x1788)
            - x6 * (x1789 * x3 + x1790 - x6 * (x1787 * x3 - x1791 * x6))
        )
    )
    result[1, 11] = numpy.sum(
        x1428
        * (
            x3 * (x1796 + x1798 * x3 - x1805 * x6)
            + x38 * (x1798 - x1799 + x1804)
            - x6 * (x1805 * x3 + x1806 - x6 * (x1803 * x3 - x1807 * x6))
        )
    )
    result[1, 12] = numpy.sum(
        x1552
        * (
            x3 * (x1812 + x1814 * x3 - x1821 * x6)
            + x38 * (x1814 - x1815 + x1820)
            - x6 * (x1821 * x3 + x1822 - x6 * (x1819 * x3 - x1823 * x6))
        )
    )
    result[1, 13] = numpy.sum(
        x1428
        * (
            x3 * (x1827 + x1829 * x3 - x1835 * x6)
            + x38 * (x1829 - x1830 + x1834)
            - x6 * (x1835 * x3 + x1836 - x6 * (x1833 * x3 - x1837 * x6))
        )
    )
    result[1, 14] = numpy.sum(
        x318
        * (
            x3 * (x1841 + x1843 * x3 - x1849 * x6)
            + x38 * (x1843 - x1844 + x1848)
            - x6 * (x1849 * x3 + x1850 - x6 * (x1847 * x3 - x1851 * x6))
        )
    )
    result[2, 0] = numpy.sum(
        -x318
        * (
            x109
            * (
                x130 * (-x1878 * x3 + x1881 + x1936 + x1948)
                - x130 * (x1887 * x3 + x1888 + x1912 - x1948)
                - x1913
                + x1937
                - x1941 * x3
                + x1947 * x3
                + x1947 * x6
                - x6 * (x1933 + x1946)
            )
            - x3
            * (
                x109 * (x1909 - x1940 + x1941)
                + x1914 * x3
                - x1939 * x6
                + x4 * (-x1883 + x1892 + x1909)
            )
            - x38 * (x1914 - x1915 + x1935 - x1938)
            + x6
            * (
                x109 * (x1942 - x1946 + x1947)
                + x1939 * x3
                + x4 * (x1911 - x1916 + x1942)
                - x6
                * (
                    x109 * (x1905 - x1917 + x1927 - x1928)
                    + x1934 * x3
                    - x6
                    * (
                        x130 * (x1902 - x1919 + x1925 + x1945)
                        + x1929 * x5
                        - x6
                        * (
                            x1926 * x5
                            + x38 * (x1900 - x1920 + x1923)
                            - x6 * (x1924 * x5 + x1943 - x6 * (x1922 * x5 - x1944 * x6))
                        )
                    )
                )
            )
        )
    )
    result[2, 1] = numpy.sum(
        x1428
        * (
            x130
            * (
                x1999
                - x2021
                + x2025 * x3
                - x2032 * x3
                - x2032 * x6
                - x38 * (-x1968 * x3 + x1970 + x2020 + x2033)
                + x38 * (x1975 * x3 + x1977 + x1998 - x2033)
                + x6 * (x2016 + x2031)
            )
            + x3
            * (
                x130 * (x1994 - x2024 + x2025)
                + x2000 * x3
                - x2023 * x6
                + x4 * (-x1972 + x1980 + x1994)
            )
            + x38 * (x2000 - x2001 + x2018 - x2022)
            - x6
            * (
                x130 * (x2026 - x2031 + x2032)
                + x2023 * x3
                + x4 * (x1996 - x2002 + x2026)
                - x6
                * (
                    x130 * (x1991 - x2004 + x2012 + x2030)
                    + x2017 * x3
                    - x6
                    * (
                        x2013 * x5
                        + x38 * (x1989 - x2005 + x2010)
                        - x6 * (x2011 * x5 + x2027 - x6 * (x2009 * x5 - x2029 * x6))
                    )
                )
            )
        )
    )
    result[2, 2] = numpy.sum(
        x1428
        * (
            x130
            * (
                x2075
                - x2095
                + x2099 * x3
                - x2105 * x3
                - x2105 * x6
                - x38 * (-x2047 * x3 + x2049 + x2094 + x2106)
                + x38 * (x2053 * x3 + x2055 + x2074 - x2106)
                + x6 * (x2090 + x2104)
            )
            + x3
            * (
                x130 * (x2070 - x2098 + x2099)
                + x2076 * x3
                - x2097 * x6
                + x4 * (-x2051 + x2058 + x2070)
            )
            + x38 * (x2076 - x2077 + x2092 - x2096)
            - x6
            * (
                x130 * (x2100 - x2104 + x2105)
                + x2097 * x3
                + x4 * (x2072 - x2078 + x2100)
                - x6
                * (
                    x130 * (x2067 - x2080 + x2086 + x2103)
                    + x2091 * x3
                    - x6
                    * (
                        x2087 * x5
                        + x38 * (x2065 - x2081 + x2084)
                        - x6 * (x2085 * x5 + x2101 - x6 * (x2083 * x5 - x2102 * x6))
                    )
                )
            )
        )
    )
    result[2, 3] = numpy.sum(
        x1552
        * (
            x3
            * (
                x2143 * x3
                - x2161 * x6
                + x38 * (x2139 - x2162 + x2163)
                + x4 * (-x2119 + x2127 + x2139)
            )
            + x38 * (x2143 - x2144 + x2158 - x2160)
            + x38
            * (
                x2142
                - x2159
                + x2163 * x3
                - x2171 * x3
                - x2171 * x6
                + x4 * (x2116 + x2121 * x3 + x2122 - x2172)
                - x4 * (-x2115 * x3 + x2117 + x2133 + x2172)
                + x6 * (x2156 + x2170)
            )
            - x6
            * (
                x2161 * x3
                + x38 * (x2165 - x2170 + x2171)
                + x4 * (x2141 - x2145 + x2165)
                - x6
                * (
                    x2157 * x3
                    + x38 * (x2134 - x2148 + x2153)
                    - x6 * (x2154 * x5 + x2167 - x6 * (x2152 * x5 - x2169 * x6))
                )
            )
        )
    )
    result[2, 4] = numpy.sum(
        x1603
        * (
            x3
            * (
                x2207 * x3
                - x2224 * x6
                + x38 * (x2203 - x2225 + x2226)
                + x4 * (-x2185 + x2192 + x2203)
            )
            + x38 * (x2207 - x2208 + x2221 - x2223)
            + x38
            * (
                x2206
                - x2222
                + x2226 * x3
                - x2233 * x3
                - x2233 * x6
                + x4 * (x2182 + x2187 * x3 + x2188 - x2234)
                - x4 * (-x2181 * x3 + x2183 + x2198 + x2234)
                + x6 * (x2219 + x2232)
            )
            - x6
            * (
                x2224 * x3
                + x38 * (x2228 - x2232 + x2233)
                + x4 * (x2205 - x2209 + x2228)
                - x6
                * (
                    x2220 * x3
                    + x38 * (x2199 - x2211 + x2216)
                    - x6 * (x2217 * x5 + x2229 - x6 * (x2215 * x5 - x2231 * x6))
                )
            )
        )
    )
    result[2, 5] = numpy.sum(
        x1552
        * (
            x3
            * (
                x2262 * x3
                - x2277 * x6
                + x38 * (x2258 - x2278 + x2279)
                + x4 * (-x2243 + x2249 + x2258)
            )
            + x38 * (x2262 - x2263 + x2274 - x2276)
            + x38
            * (
                x2261
                - x2275
                + x2279 * x3
                - x2285 * x3
                - x2285 * x6
                + x4 * (x2240 + x2244 * x3 + x2245 - x2286)
                - x4 * (-x2239 * x3 + x2241 + x2253 + x2286)
                + x6 * (x2272 + x2284)
            )
            - x6
            * (
                x2277 * x3
                + x38 * (x2281 - x2284 + x2285)
                + x4 * (x2260 - x2264 + x2281)
                - x6
                * (
                    x2273 * x3
                    + x38 * (x2254 - x2266 + x2269)
                    - x6 * (x2270 * x5 + x2282 - x6 * (x2268 * x5 - x2283 * x6))
                )
            )
        )
    )
    result[2, 6] = numpy.sum(
        x1428
        * (
            x3
            * (
                x2321 * x3
                - x2326 * x6
                + x4 * (x2297 - x2314 + x2315)
                + x4 * (x2315 - x2318 + x2319)
            )
            + x38 * (x2313 + x2321 - x2322 + x2325)
            + x4
            * (
                x2293
                + x2297 * x3
                + x2313
                - x2317 * x3
                - x2317 * x6
                + x6 * (x2303 + x2310)
            )
            - x6
            * (
                x2326 * x3
                + x4 * (-x2303 + x2309 + x2317)
                + x4 * (x2309 + x2320 - x2323)
                - x6 * (x2324 * x3 + x2328 - x6 * (x2308 * x5 - x2330 * x6))
            )
        )
    )
    result[2, 7] = numpy.sum(
        x1603
        * (
            x3
            * (
                x2362 * x3
                - x2367 * x6
                + x4 * (x2340 - x2355 + x2356)
                + x4 * (x2356 - x2359 + x2360)
            )
            + x38 * (x2354 + x2362 - x2363 + x2366)
            + x4
            * (
                x2336
                + x2340 * x3
                + x2354
                - x2358 * x3
                - x2358 * x6
                + x6 * (x2345 + x2351)
            )
            - x6
            * (
                x2367 * x3
                + x4 * (-x2345 + x2350 + x2358)
                + x4 * (x2350 + x2361 - x2364)
                - x6 * (x2365 * x3 + x2369 - x6 * (x2349 * x5 - x2371 * x6))
            )
        )
    )
    result[2, 8] = numpy.sum(
        x1603
        * (
            x3
            * (
                x2401 * x3
                - x2406 * x6
                + x4 * (x2380 - x2394 + x2395)
                + x4 * (x2395 - x2398 + x2399)
            )
            + x38 * (x2393 + x2401 - x2402 + x2405)
            + x4
            * (
                x2376
                + x2380 * x3
                + x2393
                - x2397 * x3
                - x2397 * x6
                + x6 * (x2385 + x2391)
            )
            - x6
            * (
                x2406 * x3
                + x4 * (-x2385 + x2390 + x2397)
                + x4 * (x2390 + x2400 - x2403)
                - x6 * (x2404 * x3 + x2407 - x6 * (x2389 * x5 - x2409 * x6))
            )
        )
    )
    result[2, 9] = numpy.sum(
        x1428
        * (
            x3
            * (
                x2432 * x3
                - x2437 * x6
                + x4 * (x2415 - x2425 + x2426)
                + x4 * (x2426 - x2429 + x2430)
            )
            + x38 * (x2424 + x2432 - x2433 + x2436)
            + x4
            * (
                x2412
                + x2415 * x3
                + x2424
                - x2428 * x3
                - x2428 * x6
                + x6 * (x2418 + x2422)
            )
            - x6
            * (
                x2437 * x3
                + x4 * (-x2418 + x2421 + x2428)
                + x4 * (x2421 + x2431 - x2434)
                - x6 * (x2435 * x3 + x2438 - x6 * (x2420 * x5 - x2439 * x6))
            )
        )
    )
    result[2, 10] = numpy.sum(
        x318
        * (
            x3 * (x2446 + x2449 * x3 - x2457 * x6)
            + x38 * (x2449 - x2450 + x2456)
            - x6 * (x2457 * x3 + x2459 - x6 * (x2455 * x3 - x2461 * x6))
        )
    )
    result[2, 11] = numpy.sum(
        x1428
        * (
            x3 * (x2468 + x2471 * x3 - x2479 * x6)
            + x38 * (x2471 - x2472 + x2478)
            - x6 * (x2479 * x3 + x2481 - x6 * (x2477 * x3 - x2483 * x6))
        )
    )
    result[2, 12] = numpy.sum(
        x1552
        * (
            x3 * (x2489 + x2492 * x3 - x2499 * x6)
            + x38 * (x2492 - x2493 + x2498)
            - x6 * (x2499 * x3 + x2501 - x6 * (x2497 * x3 - x2503 * x6))
        )
    )
    result[2, 13] = numpy.sum(
        x1428
        * (
            x3 * (x2508 + x2511 * x3 - x2518 * x6)
            + x38 * (x2511 - x2512 + x2517)
            - x6 * (x2518 * x3 + x2519 - x6 * (x2516 * x3 - x2521 * x6))
        )
    )
    result[2, 14] = numpy.sum(
        x318
        * (
            x3 * (x2526 + x2528 * x3 - x2535 * x6)
            + x38 * (x2528 - x2529 + x2534)
            - x6 * (x2535 * x3 + x2536 - x6 * (x2533 * x3 - x2537 * x6))
        )
    )
    result[3, 0] = numpy.sum(
        x578
        * (
            x109 * (-x2570 * x3 + x2576 * x3 + x2578 + x2597)
            - x3 * (x109 * (x2557 - x2568 + x2569 - x2576) - x2579 * x3 + x2598 * x6)
            + x4 * (-x2571 + x2579 + x2597)
            - x6
            * (
                x109 * (x2570 - x2580 + x2591 - x2592)
                + x2598 * x3
                - x6
                * (
                    x130 * (x2567 - x2582 + x2589 + x2601)
                    + x2593 * x5
                    - x6
                    * (
                        x2590 * x5
                        + x38 * (x2565 - x2583 + x2587)
                        - x6 * (x2588 * x5 + x2599 - x6 * (x2586 * x5 - x2600 * x6))
                    )
                )
            )
        )
    )
    result[3, 1] = numpy.sum(
        x1552
        * (
            x130 * (-x2620 * x3 + x2625 * x3 + x2626 + x2640)
            - x3 * (x130 * (x2607 + x2612 - x2619 - x2625) - x2627 * x3 + x2641 * x6)
            + x4 * (-x2621 + x2627 + x2640)
            - x6
            * (
                x130 * (x2620 - x2628 - x2629 + x2636)
                + x2641 * x3
                - x6
                * (
                    x2637 * x5
                    + x38 * (x2618 - x2630 + x2634)
                    - x6 * (x2635 * x5 + x2642 - x6 * (x2633 * x5 - x2643 * x6))
                )
            )
        )
    )
    result[3, 2] = numpy.sum(
        x1552
        * (
            x130 * (-x2662 * x3 + x2667 * x3 + x2668 + x2682)
            + x3 * (x130 * (-x2654 + x2661 + x2667 + x2684) + x2669 * x3 - x2683 * x6)
            + x4 * (-x2663 + x2669 + x2682)
            - x6
            * (
                x130 * (x2662 - x2671 + x2678 + x2687)
                + x2683 * x3
                - x6
                * (
                    x2679 * x5
                    + x38 * (x2660 - x2672 + x2676)
                    - x6 * (x2677 * x5 + x2685 - x6 * (x2675 * x5 - x2686 * x6))
                )
            )
        )
    )
    result[3, 3] = numpy.sum(
        x2723
        * (
            x3 * (x2706 * x3 - x2718 * x6 + x38 * (-x2692 + x2697 + x2702))
            + x38 * (-x2698 * x3 + x2702 * x3 + x2705 + x2717)
            + x4 * (-x2699 + x2706 + x2717)
            - x6
            * (
                x2718 * x3
                + x38 * (x2698 - x2707 + x2712)
                - x6 * (x2713 * x5 + x2720 - x6 * (x2711 * x5 - x2722 * x6))
            )
        )
    )
    result[3, 4] = numpy.sum(
        x2751
        * (
            x3 * (x2738 * x3 - x2748 * x6 + x38 * (-x2727 + x2731 + x2735))
            + x38 * (-x2732 * x3 + x2735 * x3 + x2737 + x2747)
            + x4 * (-x2733 + x2738 + x2747)
            - x6
            * (
                x2748 * x3
                + x38 * (x2732 - x2739 + x2743)
                - x6 * (x2744 * x5 + x2749 - x6 * (x2742 * x5 - x2750 * x6))
            )
        )
    )
    result[3, 5] = numpy.sum(
        x2723
        * (
            x3 * (x2766 * x3 - x2777 * x6 + x38 * (-x2755 + x2759 + x2763))
            + x38 * (-x2760 * x3 + x2763 * x3 + x2765 + x2776)
            + x4 * (-x2761 + x2766 + x2776)
            - x6
            * (
                x2777 * x3
                + x38 * (x2760 - x2767 + x2771)
                - x6 * (x2772 * x5 + x2778 - x6 * (x2770 * x5 - x2779 * x6))
            )
        )
    )
    result[3, 6] = numpy.sum(
        x1552
        * (
            x3 * (x2792 * x3 + x2793 - x2794 * x6)
            + x4 * (x2785 - x2791 + x2792)
            + x4 * (x2780 * x3 + x2785 - x2789 * x3 + x2790)
            - x6 * (x2794 * x3 + x2795 - x6 * (x2784 * x5 - x2796 * x6))
        )
    )
    result[3, 7] = numpy.sum(
        x2751
        * (
            x3 * (x2810 * x3 + x2812 - x2813 * x6)
            + x4 * (x2803 - x2809 + x2810)
            + x4 * (x2798 * x3 + x2803 - x2807 * x3 + x2808)
            - x6 * (x2813 * x3 + x2815 - x6 * (x2802 * x5 - x2817 * x6))
        )
    )
    result[3, 8] = numpy.sum(
        x2751
        * (
            x3 * (x2828 * x3 + x2829 - x2830 * x6)
            + x4 * (x2822 - x2827 + x2828)
            + x4 * (x2818 * x3 + x2822 - x2825 * x3 + x2826)
            - x6 * (x2830 * x3 + x2831 - x6 * (x2821 * x5 - x2832 * x6))
        )
    )
    result[3, 9] = numpy.sum(
        x1552
        * (
            x3 * (x2843 * x3 + x2844 - x2845 * x6)
            + x4 * (x2837 - x2842 + x2843)
            + x4 * (x2833 * x3 + x2837 - x2840 * x3 + x2841)
            - x6 * (x2845 * x3 + x2846 - x6 * (x2836 * x5 - x2847 * x6))
        )
    )
    result[3, 10] = numpy.sum(
        x578 * (x2852 + x3 * (x2851 * x3 - x2853 * x6) - x6 * (x2853 * x3 - x2854 * x6))
    )
    result[3, 11] = numpy.sum(
        x1552 * (x2859 + x3 * (x2858 * x3 - x2860 * x6) - x6 * (x2860 * x3 - x2861 * x6))
    )
    result[3, 12] = numpy.sum(
        x2723 * (x2868 + x3 * (x2867 * x3 - x2869 * x6) - x6 * (x2869 * x3 - x2871 * x6))
    )
    result[3, 13] = numpy.sum(
        x1552 * (x2875 + x3 * (x2874 * x3 - x2876 * x6) - x6 * (x2876 * x3 - x2877 * x6))
    )
    result[3, 14] = numpy.sum(
        x578 * (x2881 + x3 * (x2880 * x3 - x2882 * x6) - x6 * (x2882 * x3 - x2883 * x6))
    )
    result[4, 0] = numpy.sum(
        x687
        * (
            x109 * (-x2912 * x3 + x2918 * x3 + x2920 + x2938)
            - x3 * (x109 * (x2900 - x2910 + x2911 - x2918) - x2921 * x3 + x2939 * x6)
            + x4 * (-x2913 + x2921 + x2938)
            - x6
            * (
                x109 * (x2912 - x2922 + x2932 - x2933)
                + x2939 * x3
                - x6
                * (
                    x130 * (x2909 - x2924 + x2930 + x2942)
                    + x2934 * x5
                    - x6
                    * (
                        x2931 * x5
                        + x38 * (x2907 - x2925 + x2928)
                        - x6 * (x2929 * x5 + x2940 - x6 * (x2927 * x5 - x2941 * x6))
                    )
                )
            )
        )
    )
    result[4, 1] = numpy.sum(
        x1603
        * (
            x130 * (-x2958 * x3 + x2963 * x3 + x2964 + x2977)
            - x3 * (x130 * (x2946 + x2951 - x2957 - x2963) - x2965 * x3 + x2978 * x6)
            + x4 * (-x2959 + x2965 + x2977)
            - x6
            * (
                x130 * (x2958 - x2966 - x2967 + x2973)
                + x2978 * x3
                - x6
                * (
                    x2974 * x5
                    + x38 * (x2956 - x2968 + x2971)
                    - x6 * (x2972 * x5 + x2979 - x6 * (x2970 * x5 - x2980 * x6))
                )
            )
        )
    )
    result[4, 2] = numpy.sum(
        x1603
        * (
            x130 * (-x2996 * x3 + x3 * x3001 + x3002 + x3015)
            + x3 * (x130 * (-x2989 + x2995 + x3001 + x3017) + x3 * x3003 - x3016 * x6)
            + x4 * (-x2997 + x3003 + x3015)
            - x6
            * (
                x130 * (x2996 - x3005 + x3011 + x3020)
                + x3 * x3016
                - x6
                * (
                    x3012 * x5
                    + x38 * (x2994 - x3006 + x3009)
                    - x6 * (x3010 * x5 + x3018 - x6 * (x3008 * x5 - x3019 * x6))
                )
            )
        )
    )
    result[4, 3] = numpy.sum(
        x2751
        * (
            x3 * (x3 * x3033 - x3042 * x6 + x38 * (-x3023 + x3026 + x3030))
            + x38 * (-x3 * x3027 + x3 * x3030 + x3032 + x3041)
            + x4 * (-x3028 + x3033 + x3041)
            - x6
            * (
                x3 * x3042
                + x38 * (x3027 - x3034 + x3037)
                - x6 * (x3038 * x5 + x3043 - x6 * (x3036 * x5 - x3044 * x6))
            )
        )
    )
    result[4, 4] = numpy.sum(
        x3069
        * (
            x3 * (x3 * x3057 - x3066 * x6 + x38 * (-x3047 + x3050 + x3054))
            + x38 * (-x3 * x3051 + x3 * x3054 + x3056 + x3065)
            + x4 * (-x3052 + x3057 + x3065)
            - x6
            * (
                x3 * x3066
                + x38 * (x3051 - x3058 + x3061)
                - x6 * (x3062 * x5 + x3067 - x6 * (x3060 * x5 - x3068 * x6))
            )
        )
    )
    result[4, 5] = numpy.sum(
        x2751
        * (
            x3 * (x3 * x3082 - x3092 * x6 + x38 * (-x3072 + x3075 + x3079))
            + x38 * (-x3 * x3076 + x3 * x3079 + x3081 + x3091)
            + x4 * (-x3077 + x3082 + x3091)
            - x6
            * (
                x3 * x3092
                + x38 * (x3076 - x3083 + x3086)
                - x6 * (x3087 * x5 + x3093 - x6 * (x3085 * x5 - x3094 * x6))
            )
        )
    )
    result[4, 6] = numpy.sum(
        x1603
        * (
            x3 * (x3 * x3103 + x3104 - x3105 * x6)
            + x4 * (x3098 - x3102 + x3103)
            + x4 * (x3 * x3095 - x3 * x3100 + x3098 + x3101)
            - x6 * (x3 * x3105 + x3106 - x6 * (x3097 * x5 - x3107 * x6))
        )
    )
    result[4, 7] = numpy.sum(
        x3069
        * (
            x3 * (x3 * x3116 + x3117 - x3118 * x6)
            + x4 * (x3111 - x3115 + x3116)
            + x4 * (x3 * x3108 - x3 * x3113 + x3111 + x3114)
            - x6 * (x3 * x3118 + x3119 - x6 * (x3110 * x5 - x3120 * x6))
        )
    )
    result[4, 8] = numpy.sum(
        x3069
        * (
            x3 * (x3 * x3129 + x3130 - x3131 * x6)
            + x4 * (x3124 - x3128 + x3129)
            + x4 * (x3 * x3121 - x3 * x3126 + x3124 + x3127)
            - x6 * (x3 * x3131 + x3132 - x6 * (x3123 * x5 - x3133 * x6))
        )
    )
    result[4, 9] = numpy.sum(
        x1603
        * (
            x3 * (x3 * x3142 + x3143 - x3144 * x6)
            + x4 * (x3137 - x3141 + x3142)
            + x4 * (x3 * x3134 - x3 * x3139 + x3137 + x3140)
            - x6 * (x3 * x3144 + x3145 - x6 * (x3136 * x5 - x3146 * x6))
        )
    )
    result[4, 10] = numpy.sum(
        x687 * (x3 * (x3 * x3150 - x3152 * x6) + x3151 - x6 * (x3 * x3152 - x3153 * x6))
    )
    result[4, 11] = numpy.sum(
        x1603 * (x3 * (x3 * x3157 - x3159 * x6) + x3158 - x6 * (x3 * x3159 - x3160 * x6))
    )
    result[4, 12] = numpy.sum(
        x2751 * (x3 * (x3 * x3164 - x3166 * x6) + x3165 - x6 * (x3 * x3166 - x3167 * x6))
    )
    result[4, 13] = numpy.sum(
        x1603 * (x3 * (x3 * x3170 - x3172 * x6) + x3171 - x6 * (x3 * x3172 - x3173 * x6))
    )
    result[4, 14] = numpy.sum(
        x687 * (x3 * (x3 * x3176 - x3178 * x6) + x3177 - x6 * (x3 * x3178 - x3179 * x6))
    )
    result[5, 0] = numpy.sum(
        x578
        * (
            x109 * (-x3 * x3212 + x3 * x3218 + x3220 + x3239)
            - x3 * (x109 * (x3199 - x3210 + x3211 - x3218) - x3 * x3221 + x3240 * x6)
            + x4 * (-x3213 + x3221 + x3239)
            - x6
            * (
                x109 * (x3212 - x3222 + x3233 - x3234)
                + x3 * x3240
                - x6
                * (
                    x130 * (x3209 - x3224 + x3231 + x3243)
                    + x3235 * x5
                    - x6
                    * (
                        x3232 * x5
                        + x38 * (x3207 - x3225 + x3229)
                        - x6 * (x3230 * x5 + x3241 - x6 * (x3228 * x5 - x3242 * x6))
                    )
                )
            )
        )
    )
    result[5, 1] = numpy.sum(
        x1552
        * (
            x130 * (-x3 * x3265 + x3 * x3271 + x3272 + x3287)
            + x3 * (x130 * (-x3256 + x3264 + x3271 + x3289) + x3 * x3273 - x3288 * x6)
            + x4 * (-x3266 + x3273 + x3287)
            - x6
            * (
                x130 * (x3265 - x3275 + x3283 + x3293)
                + x3 * x3288
                - x6
                * (
                    x3284 * x5
                    + x38 * (x3263 - x3276 + x3281)
                    - x6 * (x3282 * x5 + x3290 - x6 * (x3280 * x5 - x3292 * x6))
                )
            )
        )
    )
    result[5, 2] = numpy.sum(
        x1552
        * (
            x130 * (-x3 * x3312 + x3 * x3317 + x3318 + x3332)
            + x3 * (x130 * (-x3304 + x3311 + x3317 + x3334) + x3 * x3319 - x3333 * x6)
            + x4 * (-x3313 + x3319 + x3332)
            - x6
            * (
                x130 * (x3312 - x3321 + x3328 + x3337)
                + x3 * x3333
                - x6
                * (
                    x3329 * x5
                    + x38 * (x3310 - x3322 + x3326)
                    - x6 * (x3327 * x5 + x3335 - x6 * (x3325 * x5 - x3336 * x6))
                )
            )
        )
    )
    result[5, 3] = numpy.sum(
        x2723
        * (
            x3 * (x3 * x3356 - x3369 * x6 + x38 * (-x3342 + x3347 + x3352))
            + x38 * (-x3 * x3348 + x3 * x3352 + x3355 + x3368)
            + x4 * (-x3349 + x3356 + x3368)
            - x6
            * (
                x3 * x3369
                + x38 * (x3348 - x3357 + x3362)
                - x6 * (x3363 * x5 + x3371 - x6 * (x3361 * x5 - x3373 * x6))
            )
        )
    )
    result[5, 4] = numpy.sum(
        x2751
        * (
            x3 * (x3 * x3391 - x3403 * x6 + x38 * (-x3378 + x3383 + x3388))
            + x38 * (-x3 * x3384 + x3 * x3388 + x3390 + x3402)
            + x4 * (-x3385 + x3391 + x3402)
            - x6
            * (
                x3 * x3403
                + x38 * (x3384 - x3392 + x3397)
                - x6 * (x3398 * x5 + x3404 - x6 * (x3396 * x5 - x3406 * x6))
            )
        )
    )
    result[5, 5] = numpy.sum(
        x2723
        * (
            x3 * (x3 * x3425 - x3438 * x6 + x38 * (-x3411 + x3416 + x3421))
            + x38 * (-x3 * x3417 + x3 * x3421 + x3424 + x3437)
            + x4 * (-x3418 + x3425 + x3437)
            - x6
            * (
                x3 * x3438
                + x38 * (x3417 - x3426 + x3431)
                - x6 * (x3432 * x5 + x3440 - x6 * (x3430 * x5 - x3442 * x6))
            )
        )
    )
    result[5, 6] = numpy.sum(
        x1552
        * (
            x3 * (x3 * x3458 + x3460 - x3461 * x6)
            + x4 * (x3450 - x3457 + x3458)
            + x4 * (x3 * x3444 - x3 * x3455 + x3450 + x3456)
            - x6 * (x3 * x3461 + x3463 - x6 * (x3449 * x5 - x3465 * x6))
        )
    )
    result[5, 7] = numpy.sum(
        x2751
        * (
            x3 * (x3 * x3479 + x3481 - x3482 * x6)
            + x4 * (x3472 - x3478 + x3479)
            + x4 * (x3 * x3467 - x3 * x3476 + x3472 + x3477)
            - x6 * (x3 * x3482 + x3484 - x6 * (x3471 * x5 - x3486 * x6))
        )
    )
    result[5, 8] = numpy.sum(
        x2751
        * (
            x3 * (x3 * x3500 + x3501 - x3502 * x6)
            + x4 * (x3493 - x3499 + x3500)
            + x4 * (x3 * x3488 - x3 * x3497 + x3493 + x3498)
            - x6 * (x3 * x3502 + x3503 - x6 * (x3492 * x5 - x3505 * x6))
        )
    )
    result[5, 9] = numpy.sum(
        x1552
        * (
            x3 * (x3 * x3518 + x3519 - x3520 * x6)
            + x4 * (x3511 - x3517 + x3518)
            + x4 * (x3 * x3506 - x3 * x3515 + x3511 + x3516)
            - x6 * (x3 * x3520 + x3521 - x6 * (x3510 * x5 - x3522 * x6))
        )
    )
    result[5, 10] = numpy.sum(
        x578 * (x3 * (x3 * x3525 - x3531 * x6) + x3529 - x6 * (x3 * x3531 - x3533 * x6))
    )
    result[5, 11] = numpy.sum(
        x1552 * (x3 * (x3 * x3536 - x3542 * x6) + x3540 - x6 * (x3 * x3542 - x3544 * x6))
    )
    result[5, 12] = numpy.sum(
        x2723 * (x3 * (x3 * x3547 - x3552 * x6) + x3550 - x6 * (x3 * x3552 - x3554 * x6))
    )
    result[5, 13] = numpy.sum(
        x1552 * (x3 * (x3 * x3558 - x3561 * x6) + x3559 - x6 * (x3 * x3561 - x3563 * x6))
    )
    result[5, 14] = numpy.sum(
        x578 * (x3 * (x3 * x3567 - x3569 * x6) + x3568 - x6 * (x3 * x3569 - x3570 * x6))
    )
    result[6, 0] = numpy.sum(
        x318
        * (
            x109 * (x3597 - x3598 + x3610 - x3611)
            + x3 * (x130 * (x3585 - x3587 + x3595 + x3613) + x3597 * x5 - x3612 * x6)
            - x6
            * (
                x130 * (x3596 - x3600 + x3608 + x3616)
                + x3612 * x5
                - x6
                * (
                    x3609 * x5
                    + x38 * (x3594 - x3601 + x3606)
                    - x6 * (x3607 * x5 + x3614 - x6 * (x3605 * x5 - x3615 * x6))
                )
            )
        )
    )
    result[6, 1] = numpy.sum(
        x1428
        * (
            x130 * (x3629 - x3630 - x3631 + x3638)
            + x3 * (x3629 * x5 - x3639 * x6 + x38 * (x3622 - x3623 + x3627))
            - x6
            * (
                x3639 * x5
                + x38 * (x3628 - x3632 + x3636)
                - x6 * (x3637 * x5 + x3640 - x6 * (x3635 * x5 - x3641 * x6))
            )
        )
    )
    result[6, 2] = numpy.sum(
        x1428
        * (
            x130 * (x3656 - x3658 + x3666 + x3670)
            + x3 * (x3656 * x5 - x3667 * x6 + x38 * (x3648 - x3649 + x3654))
            - x6
            * (
                x3667 * x5
                + x38 * (x3655 - x3659 + x3664)
                - x6 * (x3665 * x5 + x3668 - x6 * (x3663 * x5 - x3669 * x6))
            )
        )
    )
    result[6, 3] = numpy.sum(
        x1552
        * (
            x3 * (x3676 + x3678 * x5 - x3686 * x6)
            + x38 * (x3678 - x3679 + x3685)
            - x6 * (x3686 * x5 + x3687 - x6 * (x3684 * x5 - x3688 * x6))
        )
    )
    result[6, 4] = numpy.sum(
        x1603
        * (
            x3 * (x3692 + x3694 * x5 - x3700 * x6)
            + x38 * (x3694 - x3695 + x3699)
            - x6 * (x3700 * x5 + x3701 - x6 * (x3698 * x5 - x3702 * x6))
        )
    )
    result[6, 5] = numpy.sum(
        x1552
        * (
            x3 * (x3707 + x3709 * x5 - x3716 * x6)
            + x38 * (x3709 - x3710 + x3715)
            - x6 * (x3716 * x5 + x3717 - x6 * (x3714 * x5 - x3718 * x6))
        )
    )
    result[6, 6] = numpy.sum(
        x1428 * (x3 * (x3725 * x5 - x3727 * x6) + x3726 - x6 * (x3727 * x5 - x3729 * x6))
    )
    result[6, 7] = numpy.sum(
        x1603 * (x3 * (x3734 * x5 - x3736 * x6) + x3735 - x6 * (x3736 * x5 - x3737 * x6))
    )
    result[6, 8] = numpy.sum(
        x1603 * (x3 * (x3740 * x5 - x3742 * x6) + x3741 - x6 * (x3742 * x5 - x3743 * x6))
    )
    result[6, 9] = numpy.sum(
        x1428 * (x3 * (x3747 * x5 - x3749 * x6) + x3748 - x6 * (x3749 * x5 - x3750 * x6))
    )
    result[6, 10] = numpy.sum(x318 * (x3 * x3751 - x3752 * x6))
    result[6, 11] = numpy.sum(x1428 * (x3 * x3754 - x3756 * x6))
    result[6, 12] = numpy.sum(x1552 * (x3 * x3757 - x3758 * x6))
    result[6, 13] = numpy.sum(x1428 * (x3 * x3759 - x3760 * x6))
    result[6, 14] = numpy.sum(x318 * (x3 * x3761 - x3762 * x6))
    result[7, 0] = numpy.sum(
        x687
        * (
            x109 * (x3786 - x3787 + x3798 - x3799)
            + x3 * (x130 * (x3775 - x3777 + x3784 + x3801) + x3786 * x5 - x3800 * x6)
            - x6
            * (
                x130 * (x3785 - x3789 + x3796 + x3804)
                + x3800 * x5
                - x6
                * (
                    x3797 * x5
                    + x38 * (x3783 - x3790 + x3794)
                    - x6 * (x3795 * x5 + x3802 - x6 * (x3793 * x5 - x3803 * x6))
                )
            )
        )
    )
    result[7, 1] = numpy.sum(
        x1603
        * (
            x130 * (x3817 - x3818 - x3819 + x3826)
            + x3 * (x38 * (x3810 - x3811 + x3815) + x3817 * x5 - x3827 * x6)
            - x6
            * (
                x38 * (x3816 - x3820 + x3824)
                + x3827 * x5
                - x6 * (x3825 * x5 + x3828 - x6 * (x3823 * x5 - x3829 * x6))
            )
        )
    )
    result[7, 2] = numpy.sum(
        x1603
        * (
            x130 * (x3842 - x3844 + x3851 + x3855)
            + x3 * (x38 * (x3835 - x3836 + x3840) + x3842 * x5 - x3852 * x6)
            - x6
            * (
                x38 * (x3841 - x3845 + x3849)
                + x3852 * x5
                - x6 * (x3850 * x5 + x3853 - x6 * (x3848 * x5 - x3854 * x6))
            )
        )
    )
    result[7, 3] = numpy.sum(
        x2751
        * (
            x3 * (x3862 + x3864 * x5 - x3871 * x6)
            + x38 * (x3864 - x3865 + x3870)
            - x6 * (x3871 * x5 + x3873 - x6 * (x3869 * x5 - x3875 * x6))
        )
    )
    result[7, 4] = numpy.sum(
        x3069
        * (
            x3 * (x3879 + x3881 * x5 - x3887 * x6)
            + x38 * (x3881 - x3882 + x3886)
            - x6 * (x3887 * x5 + x3888 - x6 * (x3885 * x5 - x3889 * x6))
        )
    )
    result[7, 5] = numpy.sum(
        x2751
        * (
            x3 * (x3893 + x3895 * x5 - x3901 * x6)
            + x38 * (x3895 - x3896 + x3900)
            - x6 * (x3901 * x5 + x3902 - x6 * (x3899 * x5 - x3903 * x6))
        )
    )
    result[7, 6] = numpy.sum(
        x1603 * (x3 * (x3907 * x5 - x3909 * x6) + x3908 - x6 * (x3909 * x5 - x3910 * x6))
    )
    result[7, 7] = numpy.sum(
        x3069 * (x3 * (x3916 * x5 - x3918 * x6) + x3917 - x6 * (x3918 * x5 - x3920 * x6))
    )
    result[7, 8] = numpy.sum(
        x3069 * (x3 * (x3923 * x5 - x3925 * x6) + x3924 - x6 * (x3925 * x5 - x3926 * x6))
    )
    result[7, 9] = numpy.sum(
        x1603 * (x3 * (x3929 * x5 - x3931 * x6) + x3930 - x6 * (x3931 * x5 - x3932 * x6))
    )
    result[7, 10] = numpy.sum(x687 * (x3 * x3933 - x3934 * x6))
    result[7, 11] = numpy.sum(x1603 * (x3 * x3935 - x3936 * x6))
    result[7, 12] = numpy.sum(x2751 * (x3 * x3938 - x3940 * x6))
    result[7, 13] = numpy.sum(x1603 * (x3 * x3941 - x3942 * x6))
    result[7, 14] = numpy.sum(x687 * (x3 * x3943 - x3944 * x6))
    result[8, 0] = numpy.sum(
        x687
        * (
            x109 * (x3965 - x3966 + x3976 - x3977)
            + x3 * (x130 * (x3955 - x3957 + x3963 + x3979) + x3965 * x5 - x3978 * x6)
            - x6
            * (
                x130 * (x3964 - x3968 + x3974 + x3982)
                + x3978 * x5
                - x6
                * (
                    x38 * (x3962 - x3969 + x3972)
                    + x3975 * x5
                    - x6 * (x3973 * x5 + x3980 - x6 * (x3971 * x5 - x3981 * x6))
                )
            )
        )
    )
    result[8, 1] = numpy.sum(
        x1603
        * (
            x130 * (x3993 - x3994 - x3995 + x4001)
            + x3 * (x38 * (x3987 - x3988 + x3991) + x3993 * x5 - x4002 * x6)
            - x6
            * (
                x38 * (x3992 - x3996 + x3999)
                + x4002 * x5
                - x6 * (x4000 * x5 + x4003 - x6 * (x3998 * x5 - x4004 * x6))
            )
        )
    )
    result[8, 2] = numpy.sum(
        x1603
        * (
            x130 * (x4015 - x4017 + x4023 + x4027)
            + x3 * (x38 * (x4009 - x4010 + x4013) + x4015 * x5 - x4024 * x6)
            - x6
            * (
                x38 * (x4014 - x4018 + x4021)
                + x4024 * x5
                - x6 * (x4022 * x5 + x4025 - x6 * (x4020 * x5 - x4026 * x6))
            )
        )
    )
    result[8, 3] = numpy.sum(
        x2751
        * (
            x3 * (x4030 + x4032 * x5 - x4037 * x6)
            + x38 * (x4032 - x4033 + x4036)
            - x6 * (x4037 * x5 + x4038 - x6 * (x4035 * x5 - x4039 * x6))
        )
    )
    result[8, 4] = numpy.sum(
        x3069
        * (
            x3 * (x4042 + x4044 * x5 - x4049 * x6)
            + x38 * (x4044 - x4045 + x4048)
            - x6 * (x4049 * x5 + x4050 - x6 * (x4047 * x5 - x4051 * x6))
        )
    )
    result[8, 5] = numpy.sum(
        x2751
        * (
            x3 * (x4054 + x4056 * x5 - x4061 * x6)
            + x38 * (x4056 - x4057 + x4060)
            - x6 * (x4061 * x5 + x4062 - x6 * (x4059 * x5 - x4063 * x6))
        )
    )
    result[8, 6] = numpy.sum(
        x1603 * (x3 * (x4065 * x5 - x4067 * x6) + x4066 - x6 * (x4067 * x5 - x4068 * x6))
    )
    result[8, 7] = numpy.sum(
        x3069 * (x3 * (x4070 * x5 - x4072 * x6) + x4071 - x6 * (x4072 * x5 - x4073 * x6))
    )
    result[8, 8] = numpy.sum(
        x3069 * (x3 * (x4075 * x5 - x4077 * x6) + x4076 - x6 * (x4077 * x5 - x4078 * x6))
    )
    result[8, 9] = numpy.sum(
        x1603 * (x3 * (x4080 * x5 - x4082 * x6) + x4081 - x6 * (x4082 * x5 - x4083 * x6))
    )
    result[8, 10] = numpy.sum(x687 * (x3 * x4084 - x4085 * x6))
    result[8, 11] = numpy.sum(x1603 * (x3 * x4086 - x4087 * x6))
    result[8, 12] = numpy.sum(x2751 * (x3 * x4088 - x4089 * x6))
    result[8, 13] = numpy.sum(x1603 * (x3 * x4090 - x4091 * x6))
    result[8, 14] = numpy.sum(x687 * (x3 * x4092 - x4093 * x6))
    result[9, 0] = numpy.sum(
        x318
        * (
            x109 * (x4120 - x4121 + x4133 - x4134)
            + x3 * (x130 * (x4108 - x4110 + x4118 + x4136) + x4120 * x5 - x4135 * x6)
            - x6
            * (
                x130 * (x4119 - x4123 + x4131 + x4139)
                + x4135 * x5
                - x6
                * (
                    x38 * (x4117 - x4124 + x4129)
                    + x4132 * x5
                    - x6 * (x4130 * x5 + x4137 - x6 * (x4128 * x5 - x4138 * x6))
                )
            )
        )
    )
    result[9, 1] = numpy.sum(
        x1428
        * (
            x130 * (x4155 - x4156 - x4157 + x4165)
            + x3 * (x38 * (x4147 - x4148 + x4153) + x4155 * x5 - x4166 * x6)
            - x6
            * (
                x38 * (x4154 - x4158 + x4163)
                + x4166 * x5
                - x6 * (x4164 * x5 + x4167 - x6 * (x4162 * x5 - x4169 * x6))
            )
        )
    )
    result[9, 2] = numpy.sum(
        x1428
        * (
            x130 * (x4182 - x4184 + x4191 + x4195)
            + x3 * (x38 * (x4175 - x4176 + x4180) + x4182 * x5 - x4192 * x6)
            - x6
            * (
                x38 * (x4181 - x4185 + x4189)
                + x4192 * x5
                - x6 * (x4190 * x5 + x4193 - x6 * (x4188 * x5 - x4194 * x6))
            )
        )
    )
    result[9, 3] = numpy.sum(
        x1552
        * (
            x3 * (x4201 + x4204 * x5 - x4211 * x6)
            + x38 * (x4204 - x4205 + x4210)
            - x6 * (x4211 * x5 + x4213 - x6 * (x4209 * x5 - x4215 * x6))
        )
    )
    result[9, 4] = numpy.sum(
        x1603
        * (
            x3 * (x4220 + x4223 * x5 - x4230 * x6)
            + x38 * (x4223 - x4224 + x4229)
            - x6 * (x4230 * x5 + x4231 - x6 * (x4228 * x5 - x4233 * x6))
        )
    )
    result[9, 5] = numpy.sum(
        x1552
        * (
            x3 * (x4239 + x4241 * x5 - x4249 * x6)
            + x38 * (x4241 - x4242 + x4248)
            - x6 * (x4249 * x5 + x4250 - x6 * (x4247 * x5 - x4251 * x6))
        )
    )
    result[9, 6] = numpy.sum(
        x1428 * (x3 * (x4254 * x5 - x4260 * x6) + x4258 - x6 * (x4260 * x5 - x4262 * x6))
    )
    result[9, 7] = numpy.sum(
        x1603 * (x3 * (x4265 * x5 - x4270 * x6) + x4268 - x6 * (x4270 * x5 - x4272 * x6))
    )
    result[9, 8] = numpy.sum(
        x1603 * (x3 * (x4276 * x5 - x4279 * x6) + x4277 - x6 * (x4279 * x5 - x4281 * x6))
    )
    result[9, 9] = numpy.sum(
        x1428 * (x3 * (x4288 * x5 - x4290 * x6) + x4289 - x6 * (x4290 * x5 - x4292 * x6))
    )
    result[9, 10] = numpy.sum(x318 * (x3 * x4294 - x4296 * x6))
    result[9, 11] = numpy.sum(x1428 * (x3 * x4298 - x4300 * x6))
    result[9, 12] = numpy.sum(x1552 * (x3 * x4302 - x4304 * x6))
    result[9, 13] = numpy.sum(x1428 * (x3 * x4306 - x4308 * x6))
    result[9, 14] = numpy.sum(x318 * (x3 * x4309 - x4310 * x6))
    result[10, 0] = numpy.sum(
        x171
        * (
            x130 * (x4324 - x4325 - x4326 + x4334)
            + x5 * (x38 * (x4316 - x4317 + x4322) + x4324 * x5 - x4335 * x6)
            - x6
            * (
                x38 * (x4323 - x4327 + x4332)
                + x4335 * x5
                - x6
                * (
                    x4 * (x4321 - x4328 + x4329 - x4330)
                    + x4333 * x5
                    - x6 * (x4331 * x5 - x6 * (x1261 * x3605 + 3.0 * x2599 - x3615 * x8))
                )
            )
        )
    )
    result[10, 1] = numpy.sum(
        x318
        * (
            x38 * (x4341 - x4342 + x4347)
            + x5
            * (x4 * (x3613 + x4336 - x4337 - x4338 + x4339) + x4341 * x5 - x4348 * x6)
            - x6
            * (
                x4 * (x3616 + x4340 - x4343 + x4344 - x4345)
                + x4348 * x5
                - x6
                * (x4346 * x5 - x6 * (x1261 * x3635 + 3.0 * x2642 + x3614 - x3641 * x8))
            )
        )
    )
    result[10, 2] = numpy.sum(
        x318
        * (
            x38 * (x4354 - x4355 + x4360)
            + x5 * (x4 * (x4349 - x4350 - x4351 + x4352) + x4354 * x5 - x4361 * x6)
            - x6
            * (
                x4 * (x4353 - x4356 + x4357 - x4358)
                + x4361 * x5
                - x6 * (x4359 * x5 - x6 * (x1261 * x3663 + 3.0 * x2685 - x3669 * x8))
            )
        )
    )
    result[10, 3] = numpy.sum(
        x578
        * (
            x4 * (x3722 + x4362 - x4363 - x4364 + x4365)
            + x5 * (x4365 * x5 - x4366 * x6)
            - x6 * (x4366 * x5 - x6 * (x1261 * x3684 + 2.0 * x3640 - x3688 * x8 + x3728))
        )
    )
    result[10, 4] = numpy.sum(
        x687
        * (
            x4 * (x3670 + x4367 - x4368 - x4369 + x4370)
            + x5 * (x4370 * x5 - x4371 * x6)
            - x6 * (x4371 * x5 - x6 * (x1261 * x3698 + 3.0 * x2749 + x3668 - x3702 * x8))
        )
    )
    result[10, 5] = numpy.sum(
        x578
        * (
            x4 * (x4372 - x4373 - x4374 + x4375)
            + x5 * (x4375 * x5 - x4376 * x6)
            - x6 * (x4376 * x5 - x6 * (x1261 * x3714 + 3.0 * x2778 - x3718 * x8))
        )
    )
    result[10, 6] = numpy.sum(
        x318
        * (
            x5 * (x1261 * x3725 + 3.0 * x2793 + 3.0 * x3676 - x3727 * x8)
            - x6 * (x1261 * x3727 + 3.0 * x2795 + 3.0 * x3687 - x3729 * x8)
        )
    )
    result[10, 7] = numpy.sum(
        x687
        * (
            x5 * (x1261 * x3734 + 2.0 * x3692 - x3736 * x8 + x3753)
            - x6 * (x1261 * x3736 + 2.0 * x3701 - x3737 * x8 + x3755)
        )
    )
    result[10, 8] = numpy.sum(
        x687
        * (
            x5 * (x1261 * x3740 + 3.0 * x2829 + x3707 - x3742 * x8)
            - x6 * (x1261 * x3742 + 3.0 * x2831 + x3717 - x3743 * x8)
        )
    )
    result[10, 9] = numpy.sum(
        x318
        * (
            x5 * (x1261 * x3747 + 3.0 * x2844 - x3749 * x8)
            - x6 * (x1261 * x3749 + 3.0 * x2846 - x3750 * x8)
        )
    )
    result[10, 10] = numpy.sum(
        x171 * (x1261 * x3751 + 3.0 * x2852 + 4.0 * x3726 - x3752 * x8)
    )
    result[10, 11] = numpy.sum(
        x318 * (x1261 * x3754 + 3.0 * x2859 + 3.0 * x3735 - x3756 * x8)
    )
    result[10, 12] = numpy.sum(
        x578 * (x1261 * x3757 + 3.0 * x2868 + 2.0 * x3741 - x3758 * x8)
    )
    result[10, 13] = numpy.sum(x318 * (x1261 * x3759 + 3.0 * x2875 + x3748 - x3760 * x8))
    result[10, 14] = numpy.sum(x171 * (x1261 * x3761 + 3.0 * x2881 - x3762 * x8))
    result[11, 0] = numpy.sum(
        x318
        * (
            x130 * (x4390 - x4391 - x4392 + x4400)
            + x5 * (x38 * (x4382 - x4383 + x4388) + x4390 * x5 - x4401 * x6)
            - x6
            * (
                x38 * (x4389 - x4393 + x4398)
                + x4401 * x5
                - x6
                * (
                    x4 * (x4387 - x4394 + x4395 - x4396)
                    + x4399 * x5
                    - x6 * (x4397 * x5 - x6 * (x1261 * x3793 + 2.0 * x2940 - x3803 * x8))
                )
            )
        )
    )
    result[11, 1] = numpy.sum(
        x1428
        * (
            x38 * (x4406 - x4407 + x4411)
            + x5
            * (x4 * (x3801 + x3859 + x4402 - x4403 + x4404) + x4406 * x5 - x4412 * x6)
            - x6
            * (
                x4 * (x3804 + x3872 + x4405 - x4408 + x4409)
                + x4412 * x5
                - x6 * (x4410 * x5 - x6 * (x1261 * x3823 + x3802 - x3829 * x8 + x3874))
            )
        )
    )
    result[11, 2] = numpy.sum(
        x1428
        * (
            x38 * (x4418 - x4419 + x4424)
            + x5 * (x4 * (x4413 - x4414 - x4415 + x4416) + x4418 * x5 - x4425 * x6)
            - x6
            * (
                x4 * (x4417 - x4420 + x4421 - x4422)
                + x4425 * x5
                - x6 * (x4423 * x5 - x6 * (x1261 * x3848 + 2.0 * x3018 - x3854 * x8))
            )
        )
    )
    result[11, 3] = numpy.sum(
        -x1552
        * (
            x4 * (-x4426 + x4427 + x4428 + x4429 - x4430)
            - x5 * (x4430 * x5 - x4431 * x6)
            + x6
            * (x4431 * x5 - x6 * (x1261 * x3869 + 2.0 * x3043 + 2.0 * x3828 - x3875 * x8))
        )
    )
    result[11, 4] = numpy.sum(
        x1603
        * (
            x4 * (x3855 + x3914 + x4432 - x4433 + x4434)
            + x5 * (x4434 * x5 - x4435 * x6)
            - x6 * (x4435 * x5 - x6 * (x1261 * x3885 + x3853 - x3889 * x8 + x3919))
        )
    )
    result[11, 5] = numpy.sum(
        x1552
        * (
            x4 * (x4436 - x4437 - x4438 + x4439)
            + x5 * (x4439 * x5 - x4440 * x6)
            - x6 * (x4440 * x5 - x6 * (x1261 * x3899 + 2.0 * x3093 - x3903 * x8))
        )
    )
    result[11, 6] = numpy.sum(
        x1428
        * (
            x5 * (x1261 * x3907 + 2.0 * x3104 + 3.0 * x3862 - x3909 * x8)
            - x6 * (x1261 * x3909 + 2.0 * x3106 + 3.0 * x3873 - x3910 * x8)
        )
    )
    result[11, 7] = numpy.sum(
        x1603
        * (
            x5 * (x1261 * x3916 + 2.0 * x3117 + 2.0 * x3879 - x3918 * x8)
            - x6 * (x1261 * x3918 + 2.0 * x3119 + 2.0 * x3888 - x3920 * x8)
        )
    )
    result[11, 8] = numpy.sum(
        x1603
        * (
            x5 * (x1261 * x3923 + x3893 - x3925 * x8 + x3937)
            - x6 * (x1261 * x3925 + x3902 - x3926 * x8 + x3939)
        )
    )
    result[11, 9] = numpy.sum(
        x1428
        * (
            x5 * (x1261 * x3929 + 2.0 * x3143 - x3931 * x8)
            - x6 * (x1261 * x3931 + 2.0 * x3145 - x3932 * x8)
        )
    )
    result[11, 10] = numpy.sum(
        x318 * (x1261 * x3933 + 2.0 * x3151 + 4.0 * x3908 - x3934 * x8)
    )
    result[11, 11] = numpy.sum(
        x1428 * (x1261 * x3935 + 2.0 * x3158 + 3.0 * x3917 - x3936 * x8)
    )
    result[11, 12] = numpy.sum(
        x1552 * (x1261 * x3938 + 2.0 * x3165 + 2.0 * x3924 - x3940 * x8)
    )
    result[11, 13] = numpy.sum(x1428 * (x1261 * x3941 + 2.0 * x3171 + x3930 - x3942 * x8))
    result[11, 14] = numpy.sum(x318 * (x1261 * x3943 + 2.0 * x3177 - x3944 * x8))
    result[12, 0] = numpy.sum(
        x578
        * (
            x130 * (x4452 - x4453 - x4454 + x4461)
            + x5 * (x38 * (x4445 - x4446 + x4450) + x4452 * x5 - x4462 * x6)
            - x6
            * (
                x38 * (x4451 - x4455 + x4459)
                + x4462 * x5
                - x6
                * (
                    x4 * (x3243 + x4449 - x4456 + x4457)
                    + x4460 * x5
                    - x6 * (x4458 * x5 - x6 * (x1261 * x3971 + x3241 - x3981 * x8))
                )
            )
        )
    )
    result[12, 1] = numpy.sum(
        x1552
        * (
            x38 * (x4467 - x4468 + x4472)
            + x5
            * (x4 * (x3289 + x3979 + x4463 - x4464 + x4465) + x4467 * x5 - x4473 * x6)
            - x6
            * (
                x4 * (x3293 + x3982 + x4466 - x4469 + x4470)
                + x4473 * x5
                - x6 * (x4471 * x5 - x6 * (x1261 * x3998 + x3290 + x3980 - x4004 * x8))
            )
        )
    )
    result[12, 2] = numpy.sum(
        x1552
        * (
            x38 * (x4478 - x4479 + x4483)
            + x5 * (x4 * (x3334 + x4474 - x4475 + x4476) + x4478 * x5 - x4484 * x6)
            - x6
            * (
                x4 * (x3337 + x4477 - x4480 + x4481)
                + x4484 * x5
                - x6 * (x4482 * x5 - x6 * (x1261 * x4020 + x3335 - x4026 * x8))
            )
        )
    )
    result[12, 3] = numpy.sum(
        x2723
        * (
            x4 * (x3367 + x4485 - x4486 - x4487 + x4488)
            + x5 * (x4488 * x5 - x4489 * x6)
            - x6 * (x4489 * x5 - x6 * (x1261 * x4035 + x3371 + 2.0 * x4003 - x4039 * x8))
        )
    )
    result[12, 4] = numpy.sum(
        x2751
        * (
            x4 * (x3401 + x4027 + x4490 - x4491 + x4492)
            + x5 * (x4492 * x5 - x4493 * x6)
            - x6 * (x4493 * x5 - x6 * (x1261 * x4047 + x3404 + x4025 - x4051 * x8))
        )
    )
    result[12, 5] = numpy.sum(
        x2723
        * (
            x4 * (x3436 + x4494 - x4495 + x4496)
            + x5 * (x4496 * x5 - x4497 * x6)
            - x6 * (x4497 * x5 - x6 * (x1261 * x4059 + x3440 - x4063 * x8))
        )
    )
    result[12, 6] = numpy.sum(
        x1552
        * (
            x5 * (x1261 * x4065 + x3460 + 3.0 * x4030 - x4067 * x8)
            - x6 * (x1261 * x4067 + x3463 + 3.0 * x4038 - x4068 * x8)
        )
    )
    result[12, 7] = numpy.sum(
        x2751
        * (
            x5 * (x1261 * x4070 + x3481 + 2.0 * x4042 - x4072 * x8)
            - x6 * (x1261 * x4072 + x3484 + 2.0 * x4050 - x4073 * x8)
        )
    )
    result[12, 8] = numpy.sum(
        x2751
        * (
            x5 * (x1261 * x4075 + x3501 + x4054 - x4077 * x8)
            - x6 * (x1261 * x4077 + x3503 + x4062 - x4078 * x8)
        )
    )
    result[12, 9] = numpy.sum(
        x1552
        * (
            x5 * (x1261 * x4080 + x3519 - x4082 * x8)
            - x6 * (x1261 * x4082 + x3521 - x4083 * x8)
        )
    )
    result[12, 10] = numpy.sum(x578 * (x1261 * x4084 + x3529 + 4.0 * x4066 - x4085 * x8))
    result[12, 11] = numpy.sum(x1552 * (x1261 * x4086 + x3540 + 3.0 * x4071 - x4087 * x8))
    result[12, 12] = numpy.sum(x2723 * (x1261 * x4088 + x3550 + 2.0 * x4076 - x4089 * x8))
    result[12, 13] = numpy.sum(x1552 * (x1261 * x4090 + x3559 + x4081 - x4091 * x8))
    result[12, 14] = numpy.sum(x578 * (x1261 * x4092 + x3568 - x4093 * x8))
    result[13, 0] = numpy.sum(
        x318
        * (
            x130 * (x4507 - x4508 - x4509 + x4515)
            + x5 * (x38 * (x4501 - x4502 + x4505) + x4507 * x5 - x4516 * x6)
            - x6
            * (
                x38 * (x4506 - x4510 + x4513)
                + x4516 * x5
                - x6
                * (
                    x4 * (x4160 + x4504 - x4511)
                    + x4514 * x5
                    - x6 * (x4512 * x5 - x6 * (x1261 * x4128 + x4168))
                )
            )
        )
    )
    result[13, 1] = numpy.sum(
        x1428
        * (
            x38 * (x4520 - x4521 + x4524)
            + x5 * (x4 * (x4200 - x4517 + x4518) + x4520 * x5 - x4525 * x6)
            - x6
            * (
                x4 * (x4212 + x4519 - x4522)
                + x4525 * x5
                - x6 * (x4523 * x5 - x6 * (x1261 * x4162 + x4214))
            )
        )
    )
    result[13, 2] = numpy.sum(
        x1428
        * (
            x38 * (x4529 - x4530 + x4533)
            + x5 * (x4 * (x4216 - x4526 + x4527) + x4529 * x5 - x4534 * x6)
            - x6
            * (
                x4 * (x4226 + x4528 - x4531)
                + x4534 * x5
                - x6 * (x4532 * x5 - x6 * (x1261 * x4188 + x4232))
            )
        )
    )
    result[13, 3] = numpy.sum(
        x1552
        * (
            x4 * (x4257 - x4535 + x4536)
            + x5 * (x4536 * x5 - x4537 * x6)
            - x6 * (x4537 * x5 - x6 * (x1261 * x4209 + x4261))
        )
    )
    result[13, 4] = numpy.sum(
        x1603
        * (
            x4 * (x4267 - x4538 + x4539)
            + x5 * (x4539 * x5 - x4540 * x6)
            - x6 * (x4540 * x5 - x6 * (x1261 * x4228 + x4271))
        )
    )
    result[13, 5] = numpy.sum(
        x1552
        * (
            x4 * (x4273 - x4541 + x4542)
            + x5 * (x4542 * x5 - x4543 * x6)
            - x6 * (x4543 * x5 - x6 * (x1261 * x4247 + x4280))
        )
    )
    result[13, 6] = numpy.sum(
        x1428 * (x5 * (x1261 * x4254 + x4293) - x6 * (x1261 * x4260 + x4295))
    )
    result[13, 7] = numpy.sum(
        x1603 * (x5 * (x1261 * x4265 + x4297) - x6 * (x1261 * x4270 + x4299))
    )
    result[13, 8] = numpy.sum(
        x1603 * (x5 * (x1261 * x4276 + x4301) - x6 * (x1261 * x4279 + x4303))
    )
    result[13, 9] = numpy.sum(
        x1428 * (x5 * (x1261 * x4288 + x4305) - x6 * (x1261 * x4290 + x4307))
    )
    result[13, 10] = numpy.sum(x318 * (x1261 * x4294 + 4.0 * x4258 - x4296 * x8))
    result[13, 11] = numpy.sum(x1428 * (x1261 * x4298 + 3.0 * x4268 - x4300 * x8))
    result[13, 12] = numpy.sum(x1552 * (x1261 * x4302 + 2.0 * x4277 - x4304 * x8))
    result[13, 13] = numpy.sum(x1428 * (x1261 * x4306 + x4289 - x4308 * x8))
    result[13, 14] = numpy.sum(x318 * (x1261 * x4309 - x4310 * x8))
    result[14, 0] = numpy.sum(
        x171
        * (
            x130 * (x4558 - x4560 + x4568 + x4572)
            + x5 * (x38 * (x4550 - x4551 + x4556) + x4558 * x5 - x4569 * x6)
            - x6
            * (
                x38 * (x4557 - x4561 + x4566)
                + x4569 * x5
                - x6 * (x4567 * x5 + x4570 - x6 * (x4565 * x5 - x4571 * x6))
            )
        )
    )
    result[14, 1] = numpy.sum(
        x318
        * (
            x38 * (x4578 - x4579 + x4583)
            + x5 * (x4576 + x4578 * x5 - x4584 * x6)
            - x6 * (x4584 * x5 + x4585 - x6 * (x4582 * x5 - x4586 * x6))
        )
    )
    result[14, 2] = numpy.sum(
        x318
        * (
            x38 * (x4593 - x4594 + x4599)
            + x5 * (x4591 + x4593 * x5 - x4600 * x6)
            - x6 * (x4600 * x5 + x4601 - x6 * (x4598 * x5 - x4602 * x6))
        )
    )
    result[14, 3] = numpy.sum(
        x578 * (x4606 + x5 * (x4605 * x5 - x4607 * x6) - x6 * (x4607 * x5 - x4608 * x6))
    )
    result[14, 4] = numpy.sum(
        x687 * (x4612 + x5 * (x4611 * x5 - x4613 * x6) - x6 * (x4613 * x5 - x4614 * x6))
    )
    result[14, 5] = numpy.sum(
        x578 * (x4619 + x5 * (x4618 * x5 - x4620 * x6) - x6 * (x4620 * x5 - x4621 * x6))
    )
    result[14, 6] = numpy.sum(x318 * (x4622 * x5 - x4623 * x6))
    result[14, 7] = numpy.sum(x687 * (x4624 * x5 - x4625 * x6))
    result[14, 8] = numpy.sum(x687 * (x4626 * x5 - x4627 * x6))
    result[14, 9] = numpy.sum(x318 * (x4628 * x5 - x4629 * x6))
    result[14, 10] = numpy.sum(x171 * (x174 * x4622 + 3.0 * x4606 - x4623 * x8))
    result[14, 11] = numpy.sum(x318 * (x174 * x4624 + 2.0 * x4612 - x4625 * x8))
    result[14, 12] = numpy.sum(x578 * (x174 * x4626 + x4619 - x4627 * x8))
    result[14, 13] = numpy.sum(x318 * (x174 * x4628 - x4629 * x8))
    result[14, 14] = numpy.sum(
        x171 * (-x10 * x4310 + x1852 * x4309 + 3.0 * x3568 + 4.0 * x4289)
    )
    return result


coulomb3d = {
    (0, 0): coulomb3d_00,
    (0, 1): coulomb3d_01,
    (0, 2): coulomb3d_02,
    (0, 3): coulomb3d_03,
    (0, 4): coulomb3d_04,
    (1, 0): coulomb3d_10,
    (1, 1): coulomb3d_11,
    (1, 2): coulomb3d_12,
    (1, 3): coulomb3d_13,
    (1, 4): coulomb3d_14,
    (2, 0): coulomb3d_20,
    (2, 1): coulomb3d_21,
    (2, 2): coulomb3d_22,
    (2, 3): coulomb3d_23,
    (2, 4): coulomb3d_24,
    (3, 0): coulomb3d_30,
    (3, 1): coulomb3d_31,
    (3, 2): coulomb3d_32,
    (3, 3): coulomb3d_33,
    (3, 4): coulomb3d_34,
    (4, 0): coulomb3d_40,
    (4, 1): coulomb3d_41,
    (4, 2): coulomb3d_42,
    (4, 3): coulomb3d_43,
    (4, 4): coulomb3d_44,
}
