name: release

# build the documentation whenever there are new commits on main
on:
  push:
    tags:
       - 'v*.*.*'
  workflow_dispatch:
    # inputs:
    #    version_suffix:
    #      description: "The version suffix to be used for docs (e.g. v9.1.3)"
    #      required: true
    #      type: string

# security: restrict permissions for CI jobs.
permissions:
  contents: write

jobs:

  deploy_docs:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          persist-credentials: true

      - name: Setup Python 3.13
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install pdoc
        run: |
          pip install -e .
          pip install pdoc

      - name: Create API docs
        run:
          RENDU_VERSION_TAG=$GITHUB_REF_NAME make doc

      - name: Commit new pub doc version
        run: |
          git fetch --all
          git checkout pubdoc
          mv build/doc/rendu_$GITHUB_REF_NAME doc/pub_doc/archive/
          echo $GITHUB_REF_NAME >> doc/pub_doc/api_versions.txt
          ./doc/make_index.py
          git config --global user.email "mborsalino@users.noreply.github.com"
          git config --global user.name "Mattia Borsalino"
          git add doc/pub_doc/api_versions.txt
          git add doc/pub_doc/index.html
          git add doc/pub_doc/archive/rendu_$GITHUB_REF_NAME 
          git commit -am"[AUTO] add version api doc $GITHUB_REF_NAME"
          git push origin pubdoc

      - name: Deploy API docs to Netlify
        uses: nwtgck/actions-netlify@v3.0
        with:
          publish-dir: './doc/pub_doc/'
          production-deploy: true
          production-branch: master 
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: "Deploy version ${{ env.GITHUB_REF_NAME }} from GitHub Actions"
          enable-commit-comment: true
          overwrites-pull-request-comment: true
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        timeout-minutes: 1

  build_package:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Setup Python 3.13
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel build

      - name: Build wheel
        run: make build 

      - name: Store the distribution packages
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: build/

  deploy_package:
    runs-on: ubuntu-latest
    needs: build_package
    environment:
      name: pypi
      url: https://pypi.org/p/rendu
    permissions:
      id-token: write

    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: build/

      - name: Publish package distributions to PyPi
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: build/
