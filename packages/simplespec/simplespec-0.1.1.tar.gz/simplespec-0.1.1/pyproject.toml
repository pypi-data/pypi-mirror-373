[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "simplespec"
version = "0.1.1"
description = "Convert Python typing annotations, Pydantic v2 models, and dataclasses into a compact, human-readable schema"
readme = "README.md"
license = { text = "Apache-2.0" }
authors = [
    { name = "Kenan Deniz", email = "kenan@logistica-os.com" },
]
maintainers = [
    { name = "Kenan Deniz", email = "kenan@logistica-os.com" },
]
keywords = [
    "pydantic",
    "schema",
    "typing",
    "dataclass",
    "specification",
    "type-analysis",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Code Generators",
    "Typing :: Typed",
]
requires-python = ">=3.11"
dependencies = [
    "pydantic>=2.0.0",
    "annotated-types>=0.6.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "mypy>=1.0.0",
    "ruff>=0.1.0",
    "pre-commit>=3.0.0",
]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
]

[project.urls]
Homepage = "https://github.com/denizkenan/simplespec"
Documentation = "https://github.com/denizkenan/simplespec#readme"
Repository = "https://github.com/denizkenan/simplespec.git"
Issues = "https://github.com/denizkenan/simplespec/issues"
Changelog = "https://github.com/denizkenan/simplespec/releases"

[tool.hatch.build.targets.wheel]
packages = ["simplespec"]

[tool.hatch.version]
path = "simplespec/__init__.py"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--cov=simplespec",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

[tool.coverage.run]
source = ["simplespec"]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
pretty = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
# Relaxed settings for now since tests are passing
disallow_untyped_defs = false
ignore_errors = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

[tool.ruff]
target-version = "py311"
line-length = 120

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
    "ARG001", # unused-function-args
    "SIM", # flake8-simplify
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
    "W191",  # indentation contains tabs
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*" = ["ARG001", "SIM"]

[tool.ruff.lint.isort]
known-first-party = ["simplespec"]

[tool.ruff.lint.pyupgrade]
keep-runtime-typing = true

[dependency-groups]
dev = [
    "mypy>=1.17.1",
    "pre-commit>=4.3.0",
    "pytest>=8.4.1",
    "pytest-cov>=6.2.1",
    "ruff>=0.12.11",
    "twine>=6.1.0",
]
