[project]
name = "starui"
version = "0.1.8"
description = "Python-first UI component library for Datastar/StarHTML applications"
readme = "README.md"
requires-python = ">=3.12"
keywords = ["ui", "components", "tailwind", "datastar", "starhtml", "fasthtml"]
authors = [
    {name = "firefly"}
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: User Interfaces",    
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
]

# Core dependencies
dependencies = [
    "typer>=0.9.0,<1.0.0",
    "requests>=2.31.0,<3.0.0",
    "pydantic>=2.5.0,<3.0.0",
    "rich>=13.7.0,<14.0.0",
    "starhtml==0.1.13",
    "websockets>=12.0.0,<13.0.0",
]

# Optional dependencies for development - using dependency-groups below for UV compatibility

# CLI entry point
[project.scripts]
star = "starui.cli.main:app"

# Build system configuration
[build-system]
requires = ["uv_build>=0.8.11,<0.9.0"]
build-backend = "uv_build"

# uv build backend configuration
[tool.uv.build-backend]
module-name = "starui"
module-root = "src"

# Ruff configuration for linting and formatting
[tool.ruff]
target-version = "py312"
line-length = 88
exclude = ["test_sandbox", "docs"]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings  
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501", # line too long, handled by formatter
    "B008", # do not perform function calls in argument defaults
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

# Pytest configuration
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "asyncio: mark test as async",
]
addopts = [
    "--strict-markers",
    "--strict-config", 
    "--verbose",
    "--cov=src/starui",
    "--cov-report=term-missing",
    "--cov-report=html",
]

# Coverage configuration
[tool.coverage.run]
source = ["src/starui"]
omit = [
    "tests/*",
    "src/starui/templates/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
]

# Pyright type checking configuration
[tool.pyright]
include = ["src/starui", "tests"]
exclude = ["**/__pycache__"]
pythonVersion = "3.12"
typeCheckingMode = "basic"  # More pragmatic for component libraries
reportMissingImports = true
reportMissingTypeStubs = false
# Pragmatic ignores for component library patterns
reportUnknownArgumentType = false  # Dynamic HTML attributes are expected
reportUnknownVariableType = false  # StarHTML FT return types
reportPrivateImportUsage = false   # StarHTML exports through star imports
reportUnknownMemberType = false    # Dynamic content handling

[dependency-groups]
dev = [
    "pyright>=1.1.403",
    "pytest>=7.4.4",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.14.1",
    "pytest-asyncio>=0.24.0",
    "ruff>=0.12.8",
    "build>=1.0.0",
    "twine>=4.0.0",
]
