"""Exposes a URL that specifies the behavior of this scalar."""
directive @specifiedBy(
  """The URL that specifies the behavior of this scalar."""
  url: String!
) on SCALAR

type AcceptShareHomeMutation {
  success: Boolean
}

"""An enumeration."""
enum AccountsDeviceTypeChoices {
  """Android"""
  ANDROID

  """Ios"""
  IOS

  """Web"""
  WEB

  """Ubuntu Touch"""
  UBUNTU_TOUCH

  """Api"""
  API

  """Unknown"""
  UNKNOWN
}

"""An enumeration."""
enum AccountsHomeAreaChoices {
  """No1"""
  NO1

  """No2"""
  NO2

  """No3"""
  NO3

  """No4"""
  NO4

  """No5"""
  NO5

  """Unknown"""
  UNKNOWN
}

"""An enumeration."""
enum AccountsHomeConstructionYearChoices {
  """Before 1988"""
  BEFORE_1988

  """Year 1988 1997"""
  YEAR_1988_1997

  """Year 1998 2009"""
  YEAR_1998_2009

  """Year 2010 2017"""
  YEAR_2010_2017

  """After 2018"""
  AFTER_2018
}

"""An enumeration."""
enum AccountsHomeCountryChoices {
  """No"""
  NO
}

"""An enumeration."""
enum AccountsHomeHasElectricChargerChoices {
  """True"""
  TRUE

  """False"""
  FALSE
}

"""An enumeration."""
enum AccountsHomeHousingTypeChoices {
  """Apartment"""
  APARTMENT

  """House"""
  HOUSE

  """Townhouse"""
  TOWNHOUSE

  """Cottage"""
  COTTAGE
}

"""An enumeration."""
enum AccountsHomeNumberOfResidentsChoices {
  """1"""
  A_1

  """2"""
  A_2

  """3"""
  A_3

  """4"""
  A_4

  """5"""
  A_5

  """6"""
  A_6

  """7"""
  A_7

  """8"""
  A_8

  """9"""
  A_9

  """10+"""
  A_10
}

"""An enumeration."""
enum AccountsHomePrimaryHeatingTypeChoices {
  """Panel And Heaters"""
  PANEL_AND_HEATERS

  """Electric Underfloor Heating"""
  ELECTRIC_UNDERFLOOR_HEATING

  """Air To Air Heat Pump"""
  AIR_TO_AIR_HEAT_PUMP

  """Air To Water Heat Pump"""
  AIR_TO_WATER_HEAT_PUMP

  """District Heating"""
  DISTRICT_HEATING

  """Rock Heating"""
  ROCK_HEATING

  """Other"""
  OTHER
}

"""An enumeration."""
enum AccountsHomeTypeChoices {
  """House"""
  HOUSE

  """Cabbin"""
  CABBIN

  """Cabin"""
  CABIN

  """Unknown"""
  UNKNOWN
}

"""An enumeration."""
enum AccountsNotificationSettingTypeChoices {
  """Daily Consumption"""
  DAILY_CONSUMPTION

  """Price"""
  PRICE

  """Cheaper Plan"""
  CHEAPER_PLAN

  """Powerdata Ready"""
  POWERDATA_READY

  """Data Fetch Failed"""
  DATA_FETCH_FAILED

  """Home Share Request"""
  HOME_SHARE_REQUEST

  """Home Share Accepted"""
  HOME_SHARE_ACCEPTED

  """Provider Changed"""
  PROVIDER_CHANGED

  """Plan Changed"""
  PLAN_CHANGED

  """Plan Expiration Reminder"""
  PLAN_EXPIRATION

  """Pending Order Delayed"""
  PENDING_ORDER_DELAYED

  """New Grid Price"""
  NEW_GRID_PRICE

  """Happy Birthday"""
  HAPPY_BIRTHDAY

  """Referral Success"""
  REFERRAL_SUCCESS

  """Referral Created"""
  REFERRAL_CREATED

  """Referral Trial"""
  REFERRAL_TRIAL

  """Referral Cancelled"""
  REFERRAL_CANCELLED

  """Referral Restarted"""
  REFERRAL_RESTARTED

  """Referral Failure"""
  REFERRAL_FAILURE
}

"""An enumeration."""
enum AccountsReferralStatusChoices {
  """Created User"""
  CREATED_USER

  """Active Trial"""
  ACTIVE_TRIAL

  """Cancelled Trial"""
  CANCELLED_TRIAL

  """Successful Referral"""
  SUCCESSFUL_REFERRAL
}

type ArchiveHomeMutation {
  success: Boolean
}

type ChangePlanCustomMutation {
  success: Boolean
}

type ChangePlanMutation {
  success: Boolean
}

type ConfirmPlanMutation {
  success: Boolean
}

"""An enumeration."""
enum ConsumptionConsumptionGranularityChoices {
  """Hourly"""
  HOURLY

  """Daily"""
  DAILY

  """Weekly"""
  WEEKLY

  """Monthly"""
  MONTHLY

  """Yearly"""
  YEARLY

  """Quarter Hourly"""
  QUARTER_HOURLY

  """Six Hourly"""
  SIX_HOURLY
}

"""An enumeration."""
enum ConsumptionConsumptionGroupGranularityChoices {
  """Hourly"""
  HOURLY

  """Daily"""
  DAILY

  """Weekly"""
  WEEKLY

  """Monthly"""
  MONTHLY

  """Yearly"""
  YEARLY

  """Quarter Hourly"""
  QUARTER_HOURLY

  """Six Hourly"""
  SIX_HOURLY
}

"""An enumeration."""
enum ConsumptionConsumptionMeteringTypeChoices {
  """Metered"""
  METERED

  """Estimated"""
  ESTIMATED

  """Temporary"""
  TEMPORARY

  """Calculated"""
  CALCULATED
}

type ConsumptionGroupType {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  granularity: ConsumptionConsumptionGroupGranularityChoices!
  home: HomeType!
  maxConsumption: ConsumptionType
  minConsumption: ConsumptionType
  avgConsumption: Decimal
  avgCost: Decimal
  avgTax: Decimal
  avgHandout: Decimal
  avgTariff: Decimal
  avgPeak: Decimal
  avgPlanAddition: Decimal
  avgTariffTax: Decimal
  avgTariffAddition: Decimal
  avgEnova: Decimal
  totalConsumption: Decimal
  totalCost: Decimal
  totalTax: Decimal
  totalHandout: Decimal
  totalTariff: Decimal
  totalBaseTariff: Decimal
  totalBaseConsumption: Decimal
  totalPlanAddition: Decimal
  totalTariffTax: Decimal
  totalTariffAddition: Decimal
  totalEnova: Decimal
  tariffFixedAddition: PriceAdditionType
  totalTariffFixedAddition: Decimal
  totalTariffFixedAdditionTax: Decimal
  planFixedAddition: Decimal
  planFixedAdditionTax: Decimal
  planFixedAdditionLink: HomePlanType
  tariffGroup: GridAddonGroupType
  date: DateTime!
  group: ConsumptionGroupType
  peaks: [ConsumptionType!]!
  notified: Boolean!
  calculated: Boolean!
  consumptions: [ConsumptionType!]!
  groups: [ConsumptionGroupType!]!
}

type ConsumptionType {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  meterId: String!
  date: DateTime!
  kwh: Decimal!
  granularity: ConsumptionConsumptionGranularityChoices!
  meteringType: ConsumptionConsumptionMeteringTypeChoices!
  cost: Decimal!
  tax: Decimal!
  handout: Decimal!
  tariff: Decimal!
  tariffTax: Decimal!
  enova: Decimal!
  tariffAddition: Decimal!
  tariffExceptionLink: GridCapacityExceptionType
  planAddition: Decimal!
  planAdditionLink: HomePlanType
  home: HomeType!
  group: ConsumptionGroupType
  peakGroups: [ConsumptionGroupType!]!
}

type CreateGiftcardMutation {
  success: Boolean
  message: String
}

"""
The `Date` scalar type represents a Date
value as specified by
[iso8601](https://en.wikipedia.org/wiki/ISO_8601).
"""
scalar Date

"""
The `DateTime` scalar type represents a DateTime
value as specified by
[iso8601](https://en.wikipedia.org/wiki/ISO_8601).
"""
scalar DateTime

"""The `Decimal` scalar type represents a python Decimal."""
scalar Decimal

type DeviceCreateMutation {
  device: DeviceType
}

type DeviceDeleteMutation {
  success: Boolean
}

type DeviceType {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  user: UserType!
  firebaseRegistrationToken: String
  apiKey: String!
  name: String!
  type: AccountsDeviceTypeChoices!
  notificationSettings: [NotificationSettingType!]!
}

type DeviceUpdateMutation {
  success: Boolean
}

type ElectricityPriceAdditionType {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  type: SpotpricesElectricityPriceAdditionTypeChoices!
  granularity: SpotpricesElectricityPriceAdditionGranularityChoices!

  """Select one or more months"""
  months: [Int!]!
  appliesFor: SpotpricesElectricityPriceAdditionAppliesForChoices!
  additionType: SpotpricesElectricityPriceAdditionAdditionTypeChoices!
  addition: Decimal!
  cutOff: Decimal
  maxKwh: Decimal
  areas: [String!]!
  start: DateTime!
  end: DateTime
}

type ElectricityPriceGridAdditionType {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  grid: GridType!
  price: ElectricityPriceType!
  addition: Decimal!
  additionTax: Decimal!
  group: ElectricityPriceGridGroupAdditionType!
}

type ElectricityPriceGridGroupAdditionType {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  grid: GridType!
  priceGroup: ElectricityPriceGroupType!
  avgAddition: Decimal!
  avgAdditionTax: Decimal!
  additions: [ElectricityPriceGridAdditionType!]!
}

type ElectricityPriceGroupType {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  granularity: SpotpricesElectricityPriceGroupGranularityChoices!
  area: SpotpricesElectricityPriceGroupAreaChoices!
  date: DateTime!
  prices(homeId: ID, gridId: ID): [ElectricityPriceType]
  notified: Boolean!
  max: ElectricityPriceType
  min: ElectricityPriceType
  avg: Decimal
  avgTax: Decimal!
  avgHandout: Decimal!
  gridAdditions(gridId: ID, homeId: ID): [ElectricityPriceGridGroupAdditionType]
}

type ElectricityPriceStartOfData {
  startOfData: DateTime
}

type ElectricityPriceType {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  priceKwh: Decimal!
  tax: Decimal!
  handout: Decimal!
  granularity: SpotpricesElectricityPriceGranularityChoices!
  date: DateTime!
  area: SpotpricesElectricityPriceAreaChoices!
  currency: String!
  forcast: Boolean!
  electricitypricegroupSet: [ElectricityPriceGroupType!]!
  gridAdditions: [ElectricityPriceGridAdditionType!]!
  priceKwhTaxHandout: Decimal
  gridAddition(gridId: ID, homeId: ID): ElectricityPriceGridAdditionType
}

type ElhubMutation {
  requestUrl: String
}

"""
The `GenericScalar` scalar type represents a generic
GraphQL scalar value that could be:
String, Boolean, Int, Float, List or Object.
"""
scalar GenericScalar

type GetUpvotyTokenMutation {
  token: String
}

type GridAddonGroupType {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  start: DateTime!
  end: DateTime
  name: String!
  grid: GridType!
  capacity: GridCapacityType
  additions: [PriceAdditionType!]!
}

type GridCapacityExceptionType {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  name: String!
  perKwh: Decimal!
  timeOfDay: [String!]!

  """Select one or more months"""
  months: [Int!]!
  days: [String!]!
  capacity: GridCapacityType!
  nightStartHour: Int!
  nightEndHour: Int!
}

type GridCapacityType {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  perKwh: Decimal!
  group: GridAddonGroupType!
  exceptions: [GridCapacityExceptionType!]!
}

"""An enumeration."""
enum GridGridFixedAdditionTypeChoices {
  """Tree Day Max Month"""
  TREE_DAY_MAX_MONTH

  """Five Weighted Years"""
  FIVE_WEIGHTED_YEARS

  """Ov Three Phase"""
  OV_THREE_PHASE

  """Month Max"""
  MONTH_MAX

  """Unknown"""
  UNKNOWN
}

type GridType {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  name: String!
  gln: String!
  organisationNumber: String!
  updated: DateTime!
  homes: [HomeType!]!
  electricitypricegridadditionSet: [ElectricityPriceGridAdditionType!]!
  electricitypricegridgroupadditionSet: [ElectricityPriceGridGroupAdditionType!]!
  passThroughInvoicingProviders: [ProviderType!]!
  addons: [GridAddonGroupType!]!
}

type HasFullData {
  dates: [DateTime]
}

"""Type to expose home detail field choices"""
type HomeDetailChoice {
  value: String
  label: String
}

"""Type to expose all home detail field choices"""
type HomeDetailChoices {
  numberOfResidentsChoices: [HomeDetailChoice]
  housingTypeChoices: [HomeDetailChoice]
  primaryHeatingTypeChoices: [HomeDetailChoice]
  constructionYearChoices: [HomeDetailChoice]
  hasElectricChargerChoices: [HomeDetailChoice]
}

type HomePlanType {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  plan: PlanType!
  start: DateTime!
  end: DateTime
  bindingEnd: DateTime
  home: HomeType!
  isPending: Boolean!
  pendingStart: DateTime
  fromPlan: HomePlanType
  estimatedCompletion: DateTime
  isInitialDefaultPlan: Boolean!
  hasBeenConfirmed: Boolean
  currentHome: HomeType
}

type HomeProviderType {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  provider: ProviderType!
  start: DateTime!
  end: DateTime
  home: HomeType!
  isPending: Boolean!
  pendingStart: DateTime
  fromProvider: HomeProviderType
}

type HomeType {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  meterId: String!
  meterIdentification: String!
  name: String
  street: String!
  streetNumber: String!
  postalCode: String!
  city: String!
  country: AccountsHomeCountryChoices!
  estimatedYearlyConsumption: Int!
  user: UserType
  grid: GridType
  sharedWith: [UserType!]!
  shareRequests: [UserType!]!
  area: AccountsHomeAreaChoices!
  blocked: Boolean!
  isPlus: Boolean!
  isAutomatic: Boolean!
  maxKwh: Int!
  type: AccountsHomeTypeChoices!
  currentPlan: HomePlanType
  currentProvider: HomeProviderType
  firstOccurrence: DateTime!
  isFetchingData: Boolean!
  hasConsumption: Boolean!
  hasNoProvider: Boolean!
  hasFetchedBackInTime: Boolean!
  archived: Boolean!
  housingType: AccountsHomeHousingTypeChoices

  """Home size in square meters"""
  homeSize: Int

  """Number of residents living in the home"""
  numberOfResidents: AccountsHomeNumberOfResidentsChoices
  primaryHeatingType: AccountsHomePrimaryHeatingTypeChoices
  hasElectricCharger: AccountsHomeHasElectricChargerChoices
  constructionYear: AccountsHomeConstructionYearChoices
  historicalProviders: [HomeProviderType!]!
  historicalPlans: [HomePlanType!]!
  consumptions: [ConsumptionType!]!
  consumptionGroups: [ConsumptionGroupType!]!
  isShared: Boolean
}

"""
Allows use of a JSON String for input / output from the GraphQL schema.

Use of this type is *not recommended* as you lose the benefits of having a defined, static
schema (one of the key benefits of GraphQL).
"""
scalar JSONString

type LastUpdatedInfoType {
  importStrompris: DateTime
}

type Mutation {
  oneClickAttempt(logs: String, oneClickId: ID!, status: String!): OneClickAttemptMutation
  oneClickServerNewCustomer(homeId: ID!, oneClickId: ID!): OneClickServerNewCustomerMutation
  smsLogin(android: Boolean = false, code: Int, lang: String, number: String!, referredByCode: String): SMSLoginMutation
  elhub(redirect: String): ElhubMutation
  referralCodeUpdate(referredByCode: String): ReferralCodeUpdateMutation
  userUpdate(birthDate: Date, email: String, firebaseToken: String, firstName: String, lastName: String, rcId: String): UserUpdateMutation
  userDelete: UserDeleteMutation
  setPending(homeId: ID!, planId: ID!): SetPendingMutation
  simulateChangeProvider(homeId: ID!, providerId: ID!): SimulateChangeProviderMutation
  resetData(homeId: ID!): ResetDataMutation
  sendFeedback(message: String!, os: String, subject: String!, version: String): SendFeedbackMutation
  getUpvotyToken: GetUpvotyTokenMutation
  confirmPlan(end: DateTime, homeId: ID!): ConfirmPlanMutation
  changePlan(end: DateTime, homeId: ID!, planId: ID!): ChangePlanMutation
  changePlanCustom(bindingEnd: DateTime, end: DateTime, fixedFee: Float!, fixedFeeLength: Int, homeId: ID!, name: String!, offerType: String, pricePerKwh: Float!, type: String): ChangePlanCustomMutation
  removeCustomPlan(planId: ID!): RemoveCustomPlanMutation
  shareHome(homeId: ID!, userPhone: String!): ShareHomeMutation
  unshareHome(homeId: ID!, userId: ID!): UnshareHomeMutation
  acceptShareHome(homeId: ID!, reject: Boolean): AcceptShareHomeMutation
  removeShareHome(homeId: ID!): RemoveShareHomeMutation
  createGiftcard: CreateGiftcardMutation
  archiveHome(archived: Boolean!, homeId: ID!): ArchiveHomeMutation
  updateDevice(id: ID!, name: String!): DeviceUpdateMutation
  deleteDevice(id: ID!): DeviceDeleteMutation
  requestDeviceToken(id: ID!): RequestDeviceTokenMutation
  createDevice(apiKey: String!, firebaseRegistrationToken: String!, name: String!, type: String!): DeviceCreateMutation
  updateHome(homeId: ID!, name: String!): UpdateHomeMutation
  updateHomeDetails(constructionYear: String, hasElectricCharger: String, homeId: ID!, homeSize: Int, housingType: String, numberOfResidents: Int, primaryHeatingType: String): UpdateHomeDetailsMutation
  updateNotificationHomeSetting(device: ID!, enabled: Boolean!, home: ID!): NotificationHomeSettingUpdateMutation
  updateNotificationSetting(deliveryMethod: String!, device: ID, enabled: Boolean!, frequency: String, id: ID, notificationType: String!): NotificationSettingUpdateMutation
  updateNotificationUserSetting(device: ID!, enabled: Boolean!): UpdateNotificationUserSettingMutation

  """
  Legacy mutation - redirects to create logic using device-based approach
  """
  addNotificationSetting(deliveryMethod: String!, enabled: Boolean!, frequency: String!, notificationType: String!): NotificationSettingAddMutation

  """Legacy mutation - redirects to device-based deletion"""
  deleteNotificationSetting(id: ID!): NotificationSettingDeleteMutation
  runTaskCheckPendingOrdersDelayed: RunTaskCheckPendingOrdersDelayed
  runTaskMigratePlans: RunTaskMutationMigrate
  runTaskUsersWithPlanExpiering: RunTaskUsersWithPlanExpiering

  """Obtain JSON Web Token mutation"""
  tokenAuth(phoneNumber: String!, password: String!): ObtainJSONWebToken
  verifyToken(token: String): Verify
  refreshToken(token: String): Refresh
}

type NotificationGroupType {
  groupName: String
  notificationTypes: [NotificationToggleType]
}

type NotificationHomeSettingType {
  home: ID
  homeAddress: ID
  enabled: Boolean
  notificationGroups: [NotificationGroupType]
}

type NotificationHomeSettingUpdateMutation {
  success: Boolean
}

"""
Legacy mutation - redirects to create logic using device-based approach
"""
type NotificationSettingAddMutation {
  success: Boolean
}

"""Legacy mutation - redirects to device-based deletion"""
type NotificationSettingDeleteMutation {
  success: Boolean
}

type NotificationSettingsType {
  homes: [NotificationHomeSettingType]
  other: NotificationUserSettingType
}

"""old"""
type NotificationSettingType {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  type: AccountsNotificationSettingTypeChoices!
  device: DeviceType!
  enabled: Boolean!
  frequency: String
  deliveryMethod: String
}

type NotificationSettingUpdateMutation {
  success: Boolean
}

type NotificationToggleType {
  type: String
  enabled: Boolean
}

type NotificationUserSettingType {
  name: String
  enabled: Boolean
  notificationGroups: [NotificationGroupType]
}

"""Obtain JSON Web Token mutation"""
type ObtainJSONWebToken {
  payload: GenericScalar!
  refreshExpiresIn: Int!
  token: String!
}

type OfferCodeType {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  code: String!
  description: String!
  start: DateTime!
  end: DateTime
  type: PaymentOfferCodeTypeChoices!
  value: Decimal!
  offeringId: String
  count: Int!
  maxCount: Int
  subscriptions: [SubscriptionType!]!
}

type OneClickAttemptMutation {
  success: Boolean
  oneClick: OneClickType
}

type OneClickServerNewCustomerMutation {
  success: Boolean
}

type OneClickType {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  enabled: Boolean!
  testMode: Boolean!
  plan: PlanType!
  plans: PlanType
  commands: String

  """
  If client, the url to the one click. If server, the email or url to send the one click to.
  """
  url: String
  script: String
  version: Int!
  type: ProviderOneClickTypeChoices!
  serverType: ProviderOneClickServerTypeChoices!
}

"""An enumeration."""
enum PaymentOfferCodeTypeChoices {
  """Discount"""
  DISCOUNT

  """Fixed"""
  FIXED

  """Free Months"""
  FREE_MONTHS
}

"""An enumeration."""
enum PaymentSubscriptionPlanChoices {
  """Free"""
  FREE

  """Monthly Trial"""
  MONTHLY_TRIAL

  """Yearly Trial"""
  YEARLY_TRIAL

  """Monthly"""
  MONTHLY

  """Yearly"""
  YEARLY

  """Expired"""
  EXPIRED

  """Custom"""
  CUSTOM
}

"""An enumeration."""
enum PaymentSubscriptionSourceChoices {
  """Rc Stripe"""
  RC_STRIPE

  """Rc Apple"""
  RC_APPLE

  """Rc Google"""
  RC_GOOGLE

  """Unknown"""
  UNKNOWN
}

"""An enumeration."""
enum PaymentSubscriptionStateChoices {
  """Active"""
  ACTIVE

  """Cancelled"""
  CANCELLED

  """Paused"""
  PAUSED

  """Expired"""
  EXPIRED

  """Billing Issue"""
  BILLING_ISSUE

  """Transferred"""
  TRANSFERRED

  """Unknown"""
  UNKNOWN
}

type PlanType {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  name: String!
  description: String
  onboardingUrl: String
  termsUrl: String!
  enabled: Boolean!
  versionId: Int
  planId: Int
  markdown: String
  start: DateTime!
  end: DateTime
  provider: ProviderType!
  fixedFee: Decimal!
  fixedFeeMinLength: Int!
  fixedFeeMinLengthUnit: ProviderPlanFixedFeeMinLengthUnitChoices!
  pricePerKwh: Decimal!
  binding: Boolean!
  bindingLength: Int
  bindingLengthUnit: ProviderPlanBindingLengthUnitChoices!
  contractBreakFee: Decimal
  maxConsumption: Int
  billFrequency: String
  billFrequencyUnit: ProviderPlanBillFrequencyUnitChoices!
  billPostalFee: Decimal!
  billHasEInvoice: Boolean!
  newCustomerOffer: Boolean!
  newCustomerOfferCooldown: Int
  offerType: ProviderPlanOfferTypeChoices!
  planType: String
  customerType: ProviderPlanCustomerTypeChoices!
  isCabinPlan: Boolean!
  temptingMaxLength: Int
  temptingMaxLengthUnit: ProviderPlanTemptingMaxLengthUnitChoices!
  migratesTo: PlanType
  isPrivate: Boolean!
  owner: UserType
  homePlans: [HomePlanType!]!
  oneClick: OneClickType
  oneClicks: [OneClickType!]!
  migratedFrom: [PlanType!]!
  supportsOneClick: Boolean
}

type PriceAdditionType {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  type: GridGridFixedAdditionTypeChoices!
  price: Decimal!
  threshold: Decimal!
  group: GridAddonGroupType!

  """Select one or more months"""
  months: [Int!]!
}

"""An enumeration."""
enum ProviderOneClickServerTypeChoices {
  """Email"""
  EMAIL

  """None"""
  NONE
}

"""An enumeration."""
enum ProviderOneClickTypeChoices {
  """Client"""
  CLIENT

  """Server"""
  SERVER
}

"""An enumeration."""
enum ProviderPlanBillFrequencyUnitChoices {
  """Hourly"""
  HOURLY

  """Daily"""
  DAILY

  """Weekly"""
  WEEKLY

  """Monthly"""
  MONTHLY

  """Yearly"""
  YEARLY

  """Quarter Hourly"""
  QUARTER_HOURLY

  """Six Hourly"""
  SIX_HOURLY
}

"""An enumeration."""
enum ProviderPlanBindingLengthUnitChoices {
  """Hourly"""
  HOURLY

  """Daily"""
  DAILY

  """Weekly"""
  WEEKLY

  """Monthly"""
  MONTHLY

  """Yearly"""
  YEARLY

  """Quarter Hourly"""
  QUARTER_HOURLY

  """Six Hourly"""
  SIX_HOURLY
}

"""An enumeration."""
enum ProviderPlanCustomerTypeChoices {
  """All"""
  ALL

  """New"""
  NEW

  """Existing"""
  EXISTING

  """Existing And Members"""
  EXISTING_AND_MEMBERS

  """New And Members"""
  NEW_AND_MEMBERS

  """Members"""
  MEMBERS
}

"""An enumeration."""
enum ProviderPlanFixedFeeMinLengthUnitChoices {
  """Hourly"""
  HOURLY

  """Daily"""
  DAILY

  """Weekly"""
  WEEKLY

  """Monthly"""
  MONTHLY

  """Yearly"""
  YEARLY

  """Quarter Hourly"""
  QUARTER_HOURLY

  """Six Hourly"""
  SIX_HOURLY
}

"""An enumeration."""
enum ProviderPlanOfferTypeChoices {
  """Normal"""
  NORMAL

  """Tempting"""
  TEMPTING

  """Duty"""
  DUTY
}

"""An enumeration."""
enum ProviderPlanTemptingMaxLengthUnitChoices {
  """Hourly"""
  HOURLY

  """Daily"""
  DAILY

  """Weekly"""
  WEEKLY

  """Monthly"""
  MONTHLY

  """Yearly"""
  YEARLY

  """Quarter Hourly"""
  QUARTER_HOURLY

  """Six Hourly"""
  SIX_HOURLY
}

type ProviderType {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  name: String!
  description: String
  url: String
  gln: String!
  organisationNumber: String!
  stromprisId: Int
  start: DateTime
  end: DateTime
  updated: DateTime!
  passThroughInvoicingGrids: [GridType!]!
  defaultPlan: PlanType
  homeProviders: [HomeProviderType!]!
  plans: [PlanType!]!
}

type Query {
  subscription: SubscriptionType
  offerCode(code: String): OfferCodeType
  plans(providerId: ID, active: Boolean, showAll: Boolean): [PlanType]
  plan(id: ID): PlanType
  plansCount: Int
  providers: [ProviderType]
  provider(id: ID): ProviderType
  oneClick(id: ID): OneClickType
  oneClicks: [OneClickType]
  lastUpdated: LastUpdatedInfoType
  electricityGrids: [GridType]
  electricityGrid(id: ID): GridType
  electricityPrices(start: DateTime!, end: DateTime!, granularity: String!, area: String!, forcast: Boolean): [ElectricityPriceType]
  electricityPrice(start: DateTime!, end: DateTime!, granularity: String!, area: String!, forcast: Boolean): ElectricityPriceType
  electricityPriceAdditions: [ElectricityPriceAdditionType]
  electricityPriceAddition(id: ID): ElectricityPriceAdditionType
  electricityPriceGroups(granularity: String, area: String, start: DateTime, end: DateTime, forcast: Boolean): [ElectricityPriceGroupType]
  electricityPriceGroup(date: DateTime, area: String, granularity: String, forcast: Boolean): ElectricityPriceGroupType
  electricityPriceStartOfData(granularity: String, area: String): ElectricityPriceStartOfData
  electricityPriceGridAddition(date: DateTime, area: String, granularity: String, homeId: ID): ElectricityPriceGridAdditionType
  electricityPriceGridGroupAddition(date: DateTime, area: String, granularity: String, homeId: ID): ElectricityPriceGridGroupAdditionType
  users(first: Int, skip: Int): [UserType]
  user(first: Int, skip: Int): UserType
  homes(all: Boolean, first: Int, skip: Int, archived: Boolean): [HomeType]
  home(id: ID!): HomeType
  referral: ReferralType
  referralStatus: [ReferralType]
  referralMoney: ReferralMoneyType
  referralLadder: [Int]
  shortNameFromReferralCode(code: String): String
  encodedReferralCode: String
  notificationSettings(deviceId: ID!, home: ID): NotificationSettingsType
  homeplansEnd(date: Date, n: Int): [HomeType]
  homeDetailChoices: HomeDetailChoices
  consumptions(homeId: ID, start: DateTime = null, end: DateTime = null, granularity: String = null): [ConsumptionType]
  consumptionGroups(homeId: ID, start: DateTime = null, end: DateTime = null, granularity: String = null): [ConsumptionGroupType]
  hasFullConsumptionGrupsData(homeId: ID, start: DateTime = null, end: DateTime = null, granularity: String = null): HasFullData
}

type ReferralCodeUpdateMutation {
  success: Boolean
}

type ReferralMoneyType {
  actualCash: Int
  potentialCash: Int
  historicCash: Int
  nextTotal: Int
  nextStep: Int
  numSuccessful: Int
  total: Int
}

type ReferralType {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  invitedBy: UserType!
  status: AccountsReferralStatusChoices!
  invitedShortName: String
  accessLevel: String
}

type Refresh {
  payload: GenericScalar!
  refreshExpiresIn: Int!
  token: String!
}

type RemoveCustomPlanMutation {
  success: Boolean
}

type RemoveShareHomeMutation {
  success: Boolean
}

type RequestDeviceTokenMutation {
  token: String
}

type ResetDataMutation {
  success: Boolean
}

type RunTaskCheckPendingOrdersDelayed {
  success: Boolean
}

type RunTaskMutationMigrate {
  success: Boolean
}

type RunTaskUsersWithPlanExpiering {
  success: Boolean
}

type SendFeedbackMutation {
  success: Boolean
}

type SetPendingMutation {
  success: Boolean
}

type ShareHomeMutation {
  success: Boolean
}

type SimulateChangeProviderMutation {
  success: Boolean
}

type SMSLoginMutation {
  token: String
  found: Boolean
  hasUser: Boolean
}

"""An enumeration."""
enum SpotpricesElectricityPriceAdditionAdditionTypeChoices {
  """Add"""
  ADD

  """Multiply"""
  MULTIPLY

  """Multiply Kwh"""
  MULTIPLY_KWH
}

"""An enumeration."""
enum SpotpricesElectricityPriceAdditionAppliesForChoices {
  """Spotprice"""
  SPOTPRICE

  """Grid"""
  GRID

  """All"""
  ALL
}

"""An enumeration."""
enum SpotpricesElectricityPriceAdditionGranularityChoices {
  """Hourly"""
  HOURLY

  """Daily"""
  DAILY

  """Weekly"""
  WEEKLY

  """Monthly"""
  MONTHLY

  """Yearly"""
  YEARLY

  """Quarter Hourly"""
  QUARTER_HOURLY

  """Six Hourly"""
  SIX_HOURLY
}

"""An enumeration."""
enum SpotpricesElectricityPriceAdditionTypeChoices {
  """Tax"""
  TAX

  """Fee"""
  FEE

  """Government Handout"""
  GOVERNMENT_HANDOUT

  """Enova"""
  ENOVA

  """Grid Fee"""
  GRID_FEE

  """Other"""
  OTHER
}

"""An enumeration."""
enum SpotpricesElectricityPriceAreaChoices {
  """No1"""
  NO1

  """No2"""
  NO2

  """No3"""
  NO3

  """No4"""
  NO4

  """No5"""
  NO5

  """Unknown"""
  UNKNOWN
}

"""An enumeration."""
enum SpotpricesElectricityPriceGranularityChoices {
  """Hourly"""
  HOURLY

  """Daily"""
  DAILY

  """Weekly"""
  WEEKLY

  """Monthly"""
  MONTHLY

  """Yearly"""
  YEARLY

  """Quarter Hourly"""
  QUARTER_HOURLY

  """Six Hourly"""
  SIX_HOURLY
}

"""An enumeration."""
enum SpotpricesElectricityPriceGroupAreaChoices {
  """No1"""
  NO1

  """No2"""
  NO2

  """No3"""
  NO3

  """No4"""
  NO4

  """No5"""
  NO5

  """Unknown"""
  UNKNOWN
}

"""An enumeration."""
enum SpotpricesElectricityPriceGroupGranularityChoices {
  """Hourly"""
  HOURLY

  """Daily"""
  DAILY

  """Weekly"""
  WEEKLY

  """Monthly"""
  MONTHLY

  """Yearly"""
  YEARLY

  """Quarter Hourly"""
  QUARTER_HOURLY

  """Six Hourly"""
  SIX_HOURLY
}

type SubscriptionType {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  user: UserType!
  plan: PaymentSubscriptionPlanChoices!
  source: PaymentSubscriptionSourceChoices!
  state: PaymentSubscriptionStateChoices!
  rcId: String
  offerCode: OfferCodeType
}

type UnshareHomeMutation {
  success: Boolean
}

type UpdateHomeDetailsMutation {
  success: Boolean
  home: HomeType
}

type UpdateHomeMutation {
  success: Boolean
}

type UpdateNotificationUserSettingMutation {
  success: Boolean
}

type UserDeleteMutation {
  success: Boolean
}

type UserType {
  id: ID!
  password: String!
  lastLogin: DateTime

  """
  Designates that this user has all permissions without explicitly assigning them.
  """
  isSuperuser: Boolean!
  firstName: String!
  lastName: String!
  email: String!

  """Designates whether the user can log into this admin site."""
  isStaff: Boolean!

  """
  Designates whether this user should be treated as active. Unselect this instead of deleting accounts.
  """
  isActive: Boolean!
  dateJoined: DateTime!
  birthDate: Date
  phoneNumber: String!
  legalFirstName: String
  legalLastName: String
  identificationNumber: String
  username: String!
  isFetchingData: Boolean!
  updatedAt: DateTime!
  createdAt: DateTime!
  lastSeen: DateTime
  softBlocked: Boolean!
  hasReferred: Int!
  hasCash: Int!
  referralCode: String!
  firebaseRegistrationTokens: JSONString
  subscription: SubscriptionType
  devices: [DeviceType!]!
  homes: [HomeType!]!
  sharedHomes: [HomeType!]!
  shareRequests: [HomeType!]!
  referrals: [ReferralType!]!
  hasReferral: ReferralType
  ownPlan: [PlanType!]!
  accessLevel: String
}

type UserUpdateMutation {
  user: UserType
}

type Verify {
  payload: GenericScalar!
}

