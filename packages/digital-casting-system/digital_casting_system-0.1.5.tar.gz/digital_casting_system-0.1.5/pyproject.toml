[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "digital_casting_system"
version = "0.1.5"
description = "A digital control package for Digital Control System"
authors = [{ name = "Wei-Ting Chen", email = "chenwei@arch.ethz.ch" }]
license = { file = "LICENSE" }
readme = "README.md"
requires-python = ">=3.10"
classifiers = [
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Developers",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Topic :: Scientific/Engineering",
  "Topic :: Software Development :: Libraries :: Python Modules",
]
keywords = [
  "digital casting",
  "robotics",
  "automation",
  "concrete",
  "manufacturing",
]

dependencies = [
  "numpy>=1.26",
  "ruff>=0.8.2",
  "pyads>=3.3.9",
  "attrs>=17.4",
  "pydantic>=2.10.6",
  "pandas>=2.2.0",
  "compas<=2.9.0",
  "matplotlib>=3.8.4",
]


[project.optional-dependencies]
# pip install git+https://github.com/WeiTing1991/compas_rrc.git@main
robot = []

dev = [
  "build>=1.3.0",
  "hatchling>=1.27.0",
  "setuptools>=75.8.0",
  "wheel>=0.45.1",
  "ruff",
  "pytest",
  "pytest-mock>=3.14.1",
  "pytest-cov",
  "invoke>=0.14",
  "bump-my-version",
  "twine",
]

docs = [
  "mkdocs",
  "mkdocstrings-python",
  "mkdocs-gen-files",
  "mkdocs-autorefs",
  "markdown",
  "mkdocs-include-markdown-plugin",
  "mkdocs-macros-plugin",
  "markdown-exec",
  "mkdocs-literate-nav",
  "mkdocs-material>=9.1.15",
  "pymdown-extensions>=10.14.3",
]

[project.urls]
Changelog = "https://github.com/USI-FMAA/digital_casting_system/blob/master/CHANGELOG.md"
Documentation = "https://usi-fmaa.github.io/digital_casting_system/"
Homepage = "https://usi-fmaa.github.io/digital_casting_system/"
Issues = "https://github.com/USI-FMAA/digital_casting_system/issues"
Repository = "https://github.com/USI-FMAA/digital_casting_system"

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.wheel]
packages = [
  "src/dcs",
  "src/infrastructure",
  "src/robot",
  "src/hal",
  "src/utils",
]

[tool.ruff]
indent-width = 2
line-length = 120
target-version = "py310"
extend-exclude = [
  "__init__.py",
  "__main__.py",
  "*/__init__.py",
  "*/__main__.py",
  "**/__init__.py",
  "**/__main__.py",
  "tests/**",
]

[tool.ruff.format]
docstring-code-format = true
docstring-code-line-length = 120

[tool.ruff.lint]
select = [
  "E",   # pycodestyle errors
  "W",   # pycodestyle warnings
  "F",   # pyflakes
  "I",   # isort
  "UP",  # pyupgrade
  "N",   # pep8-naming
  "RUF", # ruff-specific rules
]
ignore = [
  "D417", # missing parameter documentation
  "N815",
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.isort]
section-order = [
  "future",
  "standard-library",
  "third-party",
  "first-party",
  "local-folder",
]

[tool.pytest.ini_options]
minversion = "6.0"
testpaths = ["tests", "src/dcs"]
python_files = ["test_*.py", "tests.py"]
addopts = "-ra --strict --doctest-modules --doctest-glob=*.rst --tb=short"
doctest_optionflags = "NORMALIZE_WHITESPACE IGNORE_EXCEPTION_DETAIL ALLOW_UNICODE ALLOW_BYTES NUMBER"
filterwarnings = "ignore::DeprecationWarning"

[tool.bumpversion]
current_version = "0.1.5"
commit = true
tag = true

[[tool.bumpversion.files]]
filename = "src/dcs/__init__.py"
search = "__version__ = \"{current_version}\""
replace = "__version__ = \"{new_version}\""

[[tool.bumpversion.files]]
filename = "pyproject.toml"
search = "version = \"{current_version}\""
replace = "version = \"{new_version}\""

[[tool.bumpversion.files]]
filename = "CHANGELOG.md"
search = "## [Unreleased]"
replace = """## [Unreleased]

### Added

### Changed

### Fixed

### Removed

## [{new_version}] - {now:%Y-%m-%d}
"""
