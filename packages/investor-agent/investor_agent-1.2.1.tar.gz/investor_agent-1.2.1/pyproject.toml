[project]
name = "investor-agent"
dynamic = ["version"]
description = "A Model Context Protocol server for an investor agent"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "beautifulsoup4>=4.13.4",
    "hishel>=0.1.3",
    "html5lib>=1.1",
    "httpx>=0.28.1",
    "lxml>=6.0.0",
    "mcp[cli]>=1.9.4",
    "pandas>=2.0.0",
    "pyrate-limiter>=2.10.0",
    "pytrends>=4.9.2",
    # Used implicitly by yfinance for on-disk HTTP response caching
    "requests-cache>=1.2.1",
    "requests-ratelimiter>=0.7.0",
    "tabulate>=0.9.0",
    "yfinance[nospam]>=0.2.54",
]
authors = [
    { name = "Ferdous", email = "ferdous@hey.com" }
]
keywords = ["investment", "finance", "trading", "agent", "mcp", "model context protocol", "broker", "robinhood", "wallstreetbets"]
classifiers = [
    "Intended Audience :: Financial and Insurance Industry",
    "Intended Audience :: End Users/Desktop",
    "Topic :: Office/Business :: Financial",
    "Programming Language :: Python :: 3.12",
    "License :: OSI Approved :: MIT License",
]

[project.optional-dependencies]
ta = ["ta-lib>=0.6.3"]
playwright = [
    "playwright>=1.54.0",
]
test = [
    "pytest>=8.0.0",
    "pytest-mock>=3.14.0",
    "pytest-asyncio>=0.24.0",
    "pytest-cov>=4.0.0",
]

[project.scripts]
investor-agent = "investor_agent.server:mcp.run"

[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["investor_agent"]

[tool.hatch.version]
source = "vcs"

[tool.hatch.build.hooks.vcs]
version-file = "investor_agent/_version.py"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "-v --tb=short --strict-markers"
asyncio_mode = "auto"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests"
]

[tool.coverage.run]
source = ["investor_agent"]
omit = [
    "investor_agent/_version.py",
    "tests/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError"
]

[dependency-groups]
test = [
    "pytest>=8.4.1",
    "pytest-asyncio>=1.1.0",
    "pytest-cov>=6.2.1",
    "pytest-mock>=3.14.1",
]
