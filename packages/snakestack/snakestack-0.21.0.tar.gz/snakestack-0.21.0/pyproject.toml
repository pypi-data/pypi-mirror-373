include = ["snakestack/py.typed"]

[project]
name = "snakestack"
version = "0.21.0"
description = "Uma coleção de utilitários para acelerar o desenvolvimento backend em Python com padrões reutilizáveis e produtivos"
authors = [
    {name = "Bruno Segato",email = "brunosegatoit@gmail.com"}
]
readme = "README.md"
requires-python = ">=3.10,<4.0"
dependencies = [
    "httpx>=0.28.1",
    "orjson>=3.11.2",
    "pydantic-settings>=2.10.1",
]

[project.optional-dependencies]
mongodb = [
    "motor>=3.7.1",
]
redis = [
    "redis>=6.4.0",
]
pubsub = [
    "google-cloud-pubsub>=2.31.1",
]
telemetry = [
    "opentelemetry-api>=1.36.0",
    "opentelemetry-exporter-otlp>=1.36.0",
    "opentelemetry-instrumentation-grpc>=0.57b0",
    "opentelemetry-instrumentation-httpx>=0.57b0",
    "opentelemetry-instrumentation-logging>=0.57b0",
]

[tool.pytest.ini_options]
asyncio_mode = "auto"
env = [
    "SNAKESTACK_LOGGING_LEVEL=DEBUG",
    "SNAKESTACK_PUBSUB_PROJECT_ID=snakestack-project",
    "PUBSUB_EMULATOR_HOST=localhost:8085",
    "SNAKESTACK_MONGODB_HOST=mongodb://",
    "SNAKESTACK_MONGODB_DBNAME=test",
]
markers = [
    "unit: Unit tests with mocks",
    "integration: Integration tests without mocks",
    "logging: Logging domain tests",
    "cache: Cache domain tests",
    "pubsub: Pubsub domain tests",
    "telemetry: Telemetry domain tests",
    "httpx: Httpx domain tests",
    "mongodb: MongoDB domain tests",
    "model: Model domain tests",
    "healthz: HealthCheck domain tests",
]
testpaths = ["tests"]

[tool.ruff]
exclude = ["examples"]
line-length = 88
target-version = "py313"
lint.extend-select = [
    "I",    # isort — ordenação de imports
    "S",    # flake8-bandit - regras de segurança estáticas
    "ANN",  # flake8-annotations - regras de annotations
    "E4",   # pycodestyle - error
    "E7",   # pycodestyle - error
    "E9",   # pycodestyle - error
    "F",    # pyflakes — erros estáticos simples (variáveis não usadas, etc.)
    "W",    # pycodestyle - warning
    "C901"  # mccabe
]
lint.ignore = ["ANN401"]
fix = true

[tool.ruff.lint.per-file-ignores]
"tests/**/*" = ["S101", "ANN", "S108"]

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.ruff.format]
quote-style = "preserve"

[tool.mypy]
exclude = ['^examples/', '^tests/']
strict = true
show_error_codes = true
ignore_missing_imports = true
check_untyped_defs = true
allow_untyped_calls = true
packages = "snakestack"

[tool.commitizen]
name = "cz_conventional_commits"
version = "0.21.0"
version_files = [
  "snakestack/version.py",
  "pyproject.toml:^version"
]
tag_format = "v$version"
update_changelog_on_bump = true
changelog_file = "CHANGELOG.md"
changelog_incremental = true

[dependency-groups]
dev = [
    "commitizen>=4.8.3",
]
lint = [
    "mypy>=1.17.1",
    "pre-commit>=4.3.0",
    "ruff>=0.12.8",
]
security = [
    "bandit>=1.8.6",
    "safety>=3.6.0",
]
test = [
    "factory-boy>=3.3.3",
    "freezegun>=1.5.5",
    "pytest>=8.4.1",
    "pytest-asyncio>=1.1.0",
    "pytest-cov>=6.2.1",
    "pytest-env>=1.1.5",
    "pytest-faker>=2.0.0",
    "pytest-mock>=3.14.1",
]

[[tool.uv.index]]
name = "testpypi"
url = "https://test.pypi.org/simple/"
publish-url = "https://test.pypi.org/legacy/"
explicit = true
