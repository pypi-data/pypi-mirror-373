{
  "template_name": "custom_tag",
  "display_name": "Custom Code",
  "description": "A flexible tag template that allows you to inject custom HTML, JavaScript, or CSS code into your website. This is the most versatile tag type for implementing custom tracking, widgets, or any third-party code snippets that don't have a dedicated template.",
  "ai_usage_guide": {
    "when_to_use": [
      "When you need to add custom JavaScript tracking code",
      "For implementing third-party widgets or scripts not covered by other templates",
      "When adding custom HTML elements or CSS styles",
      "For advanced custom tracking implementations",
      "When integrating with APIs or services that require custom code"
    ],
    "common_use_cases": [
      "Custom analytics tracking scripts",
      "Third-party chat widgets",
      "Social media widgets or buttons",
      "Custom conversion tracking pixels",
      "A/B testing scripts",
      "Heatmap or user behavior tracking tools",
      "Custom CSS for styling",
      "API integrations requiring JavaScript"
    ]
  },
  "mcp_usage": {
    "create_tag": {
      "function_name": "create_tag",
      "description": "Create a new tag using this template",
      "required_parameters": {
        "app_id": {
          "type": "string",
          "description": "The Piwik PRO app ID where you want to create the tag",
          "example": "12345678-1234-1234-1234-123456789012"
        },
        "attributes": {
          "type": "object",
          "description": "Tag attributes object containing all tag configuration"
        }
      },
      "optional_parameters": {
        "triggers": {
          "type": "string",
          "description": "Comma-separated list of trigger UUIDs to attach to this tag",
          "format": "UUID strings separated by commas",
          "examples": [
            "12345678-1234-1234-1234-123456789012",
            "trigger-uuid-1,trigger-uuid-2,trigger-uuid-3",
            ""
          ],
          "default": "",
          "notes": [
            "If not provided or empty, tag will be created without triggers",
            "Triggers determine when and under what conditions the tag fires",
            "You can attach triggers later using update_tag or manage them separately"
          ]
        }
      }
    },
    "update_tag": {
      "function_name": "update_tag",
      "description": "Update an existing tag - only editable fields can be modified",
      "required_parameters": {
        "app_id": {
          "type": "string",
          "description": "The Piwik PRO app ID containing the tag",
          "example": "12345678-1234-1234-1234-123456789012"
        },
        "tag_id": {
          "type": "string",
          "description": "The UUID of the tag to update",
          "example": "87654321-4321-4321-4321-210987654321"
        },
        "attributes": {
          "type": "object",
          "description": "Tag attributes object containing fields to update (only editable fields will be processed)"
        }
      },
      "optional_parameters": {
        "triggers": {
          "type": "string",
          "description": "Comma-separated list of trigger UUIDs to replace current triggers",
          "format": "UUID strings separated by commas",
          "default": "unchanged",
          "notes": [
            "If not provided, existing triggers remain unchanged",
            "If provided (even empty string), replaces ALL existing triggers",
            "Use empty string to remove all triggers from the tag"
          ]
        }
      }
    }
  },
  "required_attributes": {
    "name": {
      "type": "string",
      "description": "A descriptive name for your tag (will be visible in Tag Manager interface)",
      "mutability": "editable",
      "examples": [
        "Custom Analytics Script",
        "Third-party Chat Widget",
        "Custom Conversion Pixel",
        "Social Media Button"
      ],
      "validation": {
        "required": true,
        "min_length": 1,
        "max_length": 255
      }
    },
    "template": {
      "type": "string",
      "description": "Must always be 'custom_tag' for this template",
      "mutability": "create-only",
      "value": "custom_tag",
      "validation": {
        "required": true,
        "fixed_value": "custom_tag"
      },
      "edit_note": "⚠️ Cannot be changed after tag creation"
    },
    "code": {
      "type": "string",
      "description": "The actual HTML, JavaScript, or CSS code to be injected",
      "mutability": "editable",
      "examples": [
        "<script>console.log('Hello from custom tag!');</script>",
        "<script src='https://example.com/widget.js'></script>",
        "<div id='custom-widget'>Custom content</div>",
        "<style>.custom-style { color: red; }</style>",
        "<script>\n  // Custom tracking code\n  gtag('event', 'custom_action', {\n    'custom_parameter': 'value'\n  });\n</script>"
      ],
      "validation": {
        "required": true,
        "min_length": 1,
        "max_length": 65536
      },
      "best_practices": [
        "Always wrap JavaScript in <script> tags",
        "Use proper HTML structure for HTML content",
        "Test your code before deploying",
        "Keep code as lightweight as possible",
        "Use async/defer attributes for external scripts when appropriate"
      ]
    },
    "consent_type": {
      "type": "string",
      "description": "Defines what type of user consent is required before this tag fires",
      "options": {
        "not_require_consent": "Tag doesn't require any consent (e.g., essential functionality)",
        "analytics": "Requires consent for analytics/statistics tracking",
        "ab_testing_and_personalization": "Requires consent for A/B testing and personalization",
        "conversion_tracking": "Requires consent for conversion tracking",
        "marketing_automation": "Requires consent for marketing automation",
        "remarketing": "Requires consent for remarketing/retargeting",
        "user_feedback": "Requires consent for user feedback collection",
        "custom_consent": "Requires custom consent type"
      },
      "validation": {
        "required": true
      },
      "ai_recommendation": "Use 'not_require_consent' for essential functionality, 'analytics' for tracking code, 'marketing_automation' for marketing scripts"
    }
  },
  "optional_attributes": {
    "is_active": {
      "type": "boolean",
      "description": "Whether the tag is active and should fire",
      "mutability": "editable",
      "default": true,
      "recommendation": "Usually leave as true unless you want to temporarily disable the tag"
    },
    "disable_in_debug_mode": {
      "type": "boolean",
      "description": "Whether to disable this tag when Tag Manager is in debug mode",
      "mutability": "editable",
      "default": false,
      "recommendation": "Set to true for production-only tags that shouldn't fire during testing"
    },
    "document_write": {
      "type": "boolean",
      "description": "Whether this tag uses JavaScript's deprecated document.write() method",
      "mutability": "editable",
      "default": false,
      "recommendation": "Only set to true if you're certain your code uses document.write (not recommended for modern code)"
    },
    "priority": {
      "type": "integer",
      "description": "Firing order priority (higher numbers fire earlier)",
      "mutability": "editable",
      "default": 0,
      "range": "0 to 4294967295",
      "recommendation": "Use higher numbers for tags that need to fire before others (e.g., consent managers)"
    },
    "respect_visitors_privacy": {
      "type": "boolean",
      "description": "Whether to respect visitor privacy settings (DNT header, opt-out)",
      "mutability": "editable",
      "default": true,
      "recommendation": "Keep as true to respect user privacy preferences"
    },
    "scheduler": {
      "type": "object",
      "description": "Optional scheduling to control when the tag fires based on date/time",
      "mutability": "editable",
      "structure": {
        "date_ranges": {
          "type": "array",
          "description": "Array of date range objects defining when tag should be active",
          "item_structure": {
            "from": "ISO date string (YYYY-MM-DD)",
            "to": "ISO date string (YYYY-MM-DD)",
            "timezone": "Timezone string (e.g., 'Europe/Warsaw')"
          }
        },
        "times_of_day": {
          "type": "array",
          "description": "Array of time range objects defining daily active hours",
          "item_structure": {
            "from": "Time string (HH:MM)",
            "to": "Time string (HH:MM)",
            "timezone": "Timezone string"
          }
        }
      },
      "example": {
        "date_ranges": [
          {
            "from": "2024-01-01",
            "to": "2024-12-31",
            "timezone": "Europe/Warsaw"
          }
        ],
        "times_of_day": [
          {
            "from": "09:00",
            "to": "17:00",
            "timezone": "Europe/Warsaw"
          }
        ]
      }
    }
  },
  "trigger_management": {
    "overview": "Triggers define when and under what conditions your custom tag will fire. Without triggers, a tag won't execute.",
    "trigger_types": [
      "page_view - Fires when a page loads",
      "click - Fires when user clicks on specific elements",
      "form_submission - Fires when forms are submitted",
      "scroll_depth - Fires when user scrolls to certain depth",
      "custom_event - Fires on custom JavaScript events",
      "timer - Fires after specified time intervals",
      "element_visibility - Fires when elements become visible"
    ],
    "workflow": {
      "step_1": "Use piwik_list_triggers(app_id) to see available triggers",
      "step_2": "Use piwik_get_trigger(app_id, trigger_id) to understand trigger conditions",
      "step_3": "Include trigger UUIDs in the triggers parameter when creating tag",
      "step_4": "Use piwik_get_tag_triggers(app_id, tag_id) to verify trigger attachments"
    },
    "trigger_discovery_tools": [
      "piwik_list_triggers(app_id) - List all available triggers in the app",
      "piwik_get_trigger(app_id, trigger_id) - Get details about a specific trigger",
      "piwik_create_trigger(app_id, attributes) - Create new triggers if needed",
      "piwik_get_tag_triggers(app_id, tag_id) - See which triggers are attached to a tag",
      "piwik_get_trigger_tags(app_id, trigger_id) - See which tags use a specific trigger"
    ],
    "best_practices": [
      "Always attach at least one trigger, otherwise the tag won't fire",
      "Use page_view triggers for tags that should run on every page load",
      "Use click triggers for tags that should fire on user interactions",
      "Test trigger conditions before attaching to important tags",
      "Consider trigger priority and order for complex setups"
    ]
  },
  "complete_examples": {
    "basic_custom_script": {
      "description": "Simple custom JavaScript tracking (without triggers - won't fire)",
      "mcp_call": {
        "function": "create_tag",
        "parameters": {
          "app_id": "12345678-1234-1234-1234-123456789012",
          "attributes": {
            "name": "Custom Analytics Event",
            "template": "custom_tag",
            "code": "<script>\n  // Send custom event to analytics\n  if (typeof gtag !== 'undefined') {\n    gtag('event', 'custom_interaction', {\n      'event_category': 'engagement',\n      'event_label': 'custom_tag_fired'\n    });\n  }\n</script>",
            "consent_type": "analytics"
          }
        }
      },
      "note": "⚠️ This tag won't fire without triggers attached. See examples below for proper trigger usage."
    },
    "custom_script_with_page_view_trigger": {
      "description": "Custom JavaScript that fires on every page load",
      "mcp_call": {
        "function": "create_tag",
        "parameters": {
          "app_id": "12345678-1234-1234-1234-123456789012",
          "attributes": {
            "name": "Custom Analytics Event",
            "template": "custom_tag",
            "code": "<script>\n  // Send custom event to analytics\n  if (typeof gtag !== 'undefined') {\n    gtag('event', 'page_view_custom', {\n      'event_category': 'engagement',\n      'event_label': 'custom_tag_fired',\n      'page_url': window.location.href\n    });\n  }\n</script>",
            "consent_type": "analytics"
          },
          "triggers": "pageview-trigger-uuid-123"
        }
      },
      "prerequisite": "Requires a page view trigger. Use piwik_list_triggers() to find available triggers."
    },
    "third_party_widget": {
      "description": "Loading a third-party widget with multiple triggers",
      "mcp_call": {
        "function": "create_tag",
        "parameters": {
          "app_id": "12345678-1234-1234-1234-123456789012",
          "attributes": {
            "name": "Chat Widget",
            "template": "custom_tag",
            "code": "<script>\n  (function() {\n    var script = document.createElement('script');\n    script.src = 'https://widget.example.com/chat.js';\n    script.async = true;\n    document.head.appendChild(script);\n  })();\n</script>",
            "consent_type": "not_require_consent",
            "priority": 10
          },
          "triggers": "pageview-trigger-uuid,dom-ready-trigger-uuid"
        }
      },
      "explanation": "This widget will load on both page view and DOM ready events, ensuring it works in various scenarios."
    },
    "click_triggered_tag": {
      "description": "Custom tag that fires when user clicks specific elements",
      "mcp_call": {
        "function": "create_tag",
        "parameters": {
          "app_id": "12345678-1234-1234-1234-123456789012",
          "attributes": {
            "name": "Button Click Tracker",
            "template": "custom_tag",
            "code": "<script>\n  // Track button clicks\n  console.log('Button clicked:', event.target.textContent);\n  if (typeof gtag !== 'undefined') {\n    gtag('event', 'button_click', {\n      'event_category': 'engagement',\n      'event_label': event.target.textContent || 'unknown_button'\n    });\n  }\n</script>",
            "consent_type": "analytics"
          },
          "triggers": "button-click-trigger-uuid"
        }
      },
      "prerequisite": "Requires a click trigger configured for button elements. Use piwik_create_trigger() to create one if needed."
    },
    "scheduled_campaign": {
      "description": "Custom tag that only fires during a specific campaign period",
      "mcp_call": {
        "function": "create_tag",
        "parameters": {
          "app_id": "12345678-1234-1234-1234-123456789012",
          "attributes": {
            "name": "Holiday Campaign Banner",
            "template": "custom_tag",
            "code": "<div id='holiday-banner' style='background: red; color: white; text-align: center; padding: 10px;'>\n  🎄 Special Holiday Offer - 50% Off! 🎄\n</div>",
            "consent_type": "marketing_automation",
            "scheduler": {
              "date_ranges": [
                {
                  "from": "2024-12-01",
                  "to": "2024-12-31",
                  "timezone": "Europe/Warsaw"
                }
              ],
              "times_of_day": []
            }
          },
          "triggers": "pageview-trigger-uuid"
        }
      },
      "note": "Scheduled tags still need triggers to fire. The scheduler adds additional time-based conditions."
    },
    "complete_workflow_example": {
      "description": "Complete example showing trigger discovery and tag creation",
      "workflow_steps": {
        "step_1": {
          "action": "piwik_list_triggers(app_id='12345678-1234-1234-1234-123456789012')",
          "purpose": "Find available triggers"
        },
        "step_2": {
          "action": "piwik_get_trigger(app_id='app-id', trigger_id='found-trigger-id')",
          "purpose": "Understand trigger conditions"
        },
        "step_3": {
          "action": "create_tag with triggers",
          "mcp_call": {
            "function": "create_tag",
            "parameters": {
              "app_id": "12345678-1234-1234-1234-123456789012",
              "attributes": {
                "name": "Complete Custom Tag",
                "template": "custom_tag",
                "code": "<script>console.log('Tag fired!');</script>",
                "consent_type": "not_require_consent"
              },
              "triggers": "trigger-uuid-1,trigger-uuid-2"
            }
          }
        },
        "step_4": {
          "action": "piwik_get_tag_triggers(app_id='app-id', tag_id='created-tag-id')",
          "purpose": "Verify triggers were attached correctly"
        }
      }
    }
  },
  "triggers_troubleshooting": {
    "tag_not_firing": [
      "Verify triggers are attached: Use piwik_get_tag_triggers(app_id, tag_id)",
      "Check trigger conditions: Use piwik_get_trigger(app_id, trigger_id)",
      "Ensure triggers are active: Check trigger is_active status",
      "Test trigger conditions manually in browser",
      "Check if tag consent requirements are met"
    ],
    "common_trigger_issues": [
      "No triggers attached - tag will never fire",
      "Trigger conditions don't match website behavior",
      "Trigger is inactive or misconfigured",
      "Multiple conflicting triggers causing unexpected behavior",
      "Trigger timing issues (e.g., firing before required elements load)"
    ]
  },
  "related_mcp_tools": {
    "trigger_management": [
      "piwik_list_triggers(app_id) - List all triggers",
      "piwik_get_trigger(app_id, trigger_id) - Get trigger details",
      "piwik_create_trigger(app_id, attributes) - Create new triggers",
      "piwik_get_tag_triggers(app_id, tag_id) - See tag's triggers",
      "piwik_get_trigger_tags(app_id, trigger_id) - See trigger's tags"
    ],
    "tag_management": [
      "piwik_update_tag(app_id, tag_id, attributes, triggers) - Update tag and its triggers",
      "piwik_get_tag(app_id, tag_id) - Get complete tag information",
      "piwik_list_tags(app_id) - List all tags",
      "piwik_delete_tag(app_id, tag_id) - Delete tag"
    ]
  },
  "common_mistakes": [
    "Forgetting to wrap JavaScript code in <script> tags",
    "Not considering consent requirements for tracking code",
    "Including heavy/blocking code without proper async loading",
    "Not testing the code before creating the tag",
    "Using document.write in modern code (set document_write: true if you must)",
    "Creating tags without triggers - they won't fire!",
    "Not understanding trigger conditions before attaching them",
    "Forgetting to verify trigger attachments after tag creation"
  ],
  "troubleshooting": {
    "tag_not_firing": [
      "🔥 MOST COMMON: Check if triggers are attached using piwik_get_tag_triggers()",
      "Verify triggers are active and conditions are met",
      "Check if tag is active (is_active: true)",
      "Verify consent requirements are met",
      "Check if scheduler restrictions apply",
      "Test trigger conditions manually in browser"
    ],
    "code_not_working": [
      "Validate JavaScript syntax",
      "Check browser console for errors",
      "Verify external script URLs are accessible",
      "Test code in isolation first",
      "Ensure tag is firing first (check triggers)"
    ]
  },
  "field_mutability_guide": {
    "description": "Understanding field editability after tag creation",
    "mutability_types": {
      "editable": {
        "description": "✅ Can be updated anytime after creation",
        "examples": [
          "name",
          "code",
          "priority",
          "is_active",
          "consent_type",
          "respect_visitors_privacy",
          "code_type",
          "is_conversion_tag",
          "triggers"
        ],
        "note": "These fields can be safely modified through update_tag operations"
      },
      "create-only": {
        "description": "⚠️ Set during creation, immutable after creation",
        "examples": [
          "template",
          "tag_type"
        ],
        "note": "These fields are ignored in update operations and cannot be changed once the tag is created"
      },
      "read-only": {
        "description": "🚫 Auto-generated, never user-modifiable",
        "examples": [
          "created_at",
          "updated_at",
          "is_published",
          "tag_id"
        ],
        "note": "These fields are managed by the API and automatically filtered out from update requests"
      }
    },
    "update_workflow": {
      "description": "Best practices for updating custom tags",
      "steps": [
        "1. Use piwik_get_tag() to see current field values and their mutability status",
        "2. Only include editable fields in your update_tag attributes object",
        "3. API automatically filters out create-only and read-only fields",
        "4. Use piwik_get_tag_triggers() to manage trigger relationships separately if needed"
      ],
      "example_update": {
        "valid_fields": {
          "name": "Updated Custom Tag Name",
          "code": "<script>console.log('Updated code');</script>",
          "is_active": true,
          "priority": 100
        },
        "ignored_fields": {
          "template": "custom_tag",
          "tag_type": "synchronous",
          "created_at": "2024-01-01T00:00:00Z"
        }
      }
    }
  }
}