[tox]
minversion = 4.6
isolated_build = true
envlist = format, lint, type, py312-no-pdbfixer, py311-no-pdbfixer, py311, hooks
skip_missing_interpreters = true
requires =
    tox>=4.6
    virtualenv>=20.25.0  # For better PEP-514 handling

[gh-actions]
python =
  3.12: py312-no-pdbfixer, lint, type
  3.11: py311

# ----------------------- Default test environment -----------------------
[testenv]
description = Run unit tests with coverage
package = wheel
deps =
    pytest>=8.2
    pytest-cov>=5.0
    openmm>=8.1
    rdkit>=2023.9
    numpy>=1.24
    mdtraj>=1.9

[testenv:py311]
description = Run tests with Python 3.11
basepython = python3.11
extras = fixer
platform = linux|darwin
commands =
    python -V
    pytest --cov=pmarlo --cov-report=term-missing --cov-fail-under=30

# Remove the 3.12 env that pulled in the fixer extra; use -no-pdbfixer instead

[testenv:py311-no-pdbfixer]
description = Run tests with Python 3.11 without PDBFixer
basepython = python3.11
deps =
    pytest>=8.2
    pytest-cov>=5.0
    openmm>=8.1
    rdkit>=2023.9
    numpy>=1.24
    mdtraj>=1.9
commands =
    python -V
    pytest -v -m "not pdbfixer" --cov=pmarlo --cov-report=term-missing

[testenv:py312-no-pdbfixer]
description = Run tests with Python 3.12 without PDBFixer
basepython = python3.12
deps =
    pytest>=8.2
    pytest-cov>=5.0
    openmm>=8.1
    rdkit>=2023.9
    numpy>=1.24
    mdtraj>=1.9
commands =
    python -V
    pytest -v -m "not pdbfixer" --cov=pmarlo --cov-report=term-missing

# ---------------------------- Linting checks ----------------------------
[testenv:lint]
description = Static style checks (black, isort, flake8)
skip_install = true
deps =
    flake8>=7.0
    black==25.1.0
    isort>=5.13
commands =
    isort --skip src/pmarlo/_version.py .
    black --exclude src/pmarlo/_version.py .
    flake8 src tests

[flake8]
max-line-length = 120
extend-ignore = E203, W503
exclude = .git, .tox, .venv, build, dist, __pycache__
max-complexity = 10
per-file-ignores =
    src/pmarlo/replica_exchange/replica_exchange.py:C901
    src/pmarlo/markov_state_model/markov_state_model.py:E501
    tests/test_simulation.py:E501

[coverage:run]
omit =
    src/pmarlo/_version.py
    src/pmarlo/experiments/cli.py
    tests/*
    setup.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if TYPE_CHECKING:
    raise NotImplementedError
    pass
    raise ImportError

# ----------------------------- Type checks ------------------------------
[testenv:type]
description = Type checking via mypy
skip_install = true
deps =
    mypy==1.17.0
commands =
    mypy src/pmarlo

# --------------------------- Auto-formatting ----------------------------
[testenv:format]
description = Apply code formatting (black, isort)
skip_install = true
deps =
    black==25.1.0
    isort>=5.13
commands =
    black --exclude src/pmarlo/_version.py .
    isort --skip src/pmarlo/_version.py .

# ------------------------- Pre-commit hooks wrap -------------------------
[testenv:hooks]
description = Run pre-commit hooks on all files (mirrors commit gate)
skip_install = true
deps =
    pre-commit>=3.7
commands =
    pre-commit run --all-files
