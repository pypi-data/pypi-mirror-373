[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "paGating"
version = "0.1.0"
description = "Parameterized Activation Gating Framework for Flexible and Efficient Neural Networks"
readme = "README.md"
license = "Apache-2.0"
requires-python = ">=3.8"
authors = [
    {name = "Aaryan Guglani", email = "aaryanguglani.cs21@rvce.edu.in"},
]
maintainers = [
    {name = "Aaryan Guglani", email = "aaryanguglani.cs21@rvce.edu.in"},
]
keywords = [
    "deep-learning",
    "neural-networks",
    "activation-functions",
    "pytorch",
    "gating",
    "transformer",
    "machine-learning",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "torch>=1.9.0",
    "numpy>=1.19.0",
]

[project.urls]
Homepage = "https://github.com/guglxni/paGating"
Documentation = "https://github.com/guglxni/paGating#readme"
Repository = "https://github.com/guglxni/paGating"
Issues = "https://github.com/guglxni/paGating/issues"
Changelog = "https://github.com/guglxni/paGating/blob/master/CHANGELOG.md"

[project.optional-dependencies]
dev = [
    "pytest>=6.0.0",
    "pytest-cov>=2.0.0",
    "black>=21.0.0",
    "flake8>=3.9.0",
    "mypy>=0.900",
]
export = [
    "onnx>=1.14.0",
    "onnxruntime>=1.15.0",
    "coremltools>=7.0",
]
benchmark = [
    "matplotlib>=3.4.0",
    "pandas>=1.3.0",
    "seaborn>=0.11.0",
    "tqdm>=4.61.0",
    "pillow>=8.2.0",
    "pyyaml",
]
ml = [
    "transformers>=4.30.0",
    "datasets>=2.0.0",
    "accelerate>=0.20.0",
    "tf-keras>=2.13.1",
]

[tool.setuptools]
zip-safe = false
include-package-data = true

[tool.setuptools.packages.find]
exclude = ["tests*", "docs*"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
addopts = "-v --cov=paGating"

[tool.coverage.run]
source = ["paGating"]
omit = ["tests/*", "setup.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
] 