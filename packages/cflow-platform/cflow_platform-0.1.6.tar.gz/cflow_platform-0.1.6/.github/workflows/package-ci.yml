name: cflow-platform CI

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
    paths:
      - '**'
  pull_request:
    branches: [ main ]
    paths:
      - '**'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Build sdist/wheel
        run: |
          python -m pip install --upgrade build
          python -m build
      - name: Smoke install from dist
        run: |
          python -m venv .pkgtest
          . .pkgtest/bin/activate
          pip install --upgrade pip
          pip install ./dist/*.whl
          python -c "from cflow_platform.core.public_api import get_stdio_server; assert callable(get_stdio_server())"
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: cflow-platform-dist
          path: dist/*

  publish-testpypi:
    runs-on: ubuntu-latest
    needs: build
    env:
      TEST_PYPI_TOKEN: ${{ secrets.TEST_PYPI_TOKEN }}
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: cflow-platform-dist
          path: dist
      - name: Publish to TestPyPI
        if: ${{ env.TEST_PYPI_TOKEN != '' }}
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          user: __token__
          password: ${{ env.TEST_PYPI_TOKEN }}
          packages-dir: dist
          skip-existing: true

  publish-pypi:
    runs-on: ubuntu-latest
    needs: build
    env:
      PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: cflow-platform-dist
          path: dist
      - name: Publish to PyPI
        if: ${{ env.PYPI_TOKEN != '' }}
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ env.PYPI_TOKEN }}
          packages-dir: dist
          skip-existing: true
