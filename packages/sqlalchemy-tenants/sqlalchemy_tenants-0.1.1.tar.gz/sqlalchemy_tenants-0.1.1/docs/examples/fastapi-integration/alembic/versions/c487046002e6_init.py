"""init

Revision ID: c487046002e6
Revises:
Create Date: 2025-07-29 16:39:16.028316

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "c487046002e6"
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "todo_item",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("tenant", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.execute(
        " CREATE OR REPLACE FUNCTION sqlalchemy_tenants_get_tenant()\n    RETURNS text\n    LANGUAGE sql\n    SECURITY INVOKER\n    STABLE\nAS\n$$\n    SELECT replace(current_user, 'tenant_', '')\n$$;\n"
    )
    op.execute("ALTER TABLE todo_item ENABLE ROW LEVEL SECURITY")
    op.execute(
        "CREATE POLICY sqlalchemy_tenants_all ON todo_item AS PERMISSIVE FOR ALL USING ( tenant = ( select sqlalchemy_tenants_get_tenant()::varchar ) ) WITH CHECK ( tenant = ( select sqlalchemy_tenants_get_tenant()::varchar ) )"
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute("DROP POLICY sqlalchemy_tenants_all ON todo_item")
    op.execute("ALTER TABLE todo_item DISABLE ROW LEVEL SECURITY")
    op.execute("DROP FUNCTION IF EXISTS sqlalchemy_tenants_get_tenant()")
    op.drop_table("todo_item")
    # ### end Alembic commands ###
