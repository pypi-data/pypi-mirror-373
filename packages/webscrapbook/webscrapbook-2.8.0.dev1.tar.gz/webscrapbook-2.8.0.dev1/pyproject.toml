[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "webscrapbook"
requires-python = "~=3.8"
description = "A backend toolkit for management of WebScrapBook collection."
readme = "README.md"

# Skip license metadata since the new format introduced by PEP 639 requires
# setuptools>=77.0.3, which does not support Python 3.8.*. LICENSE.txt will
# still be auto-included as the `License-File` field by setuptools.
# ref: https://packaging.python.org/en/latest/guides/writing-pyproject-toml/#license
#
# license = "MIT"
# license-files = ["LICENSE.*"]

authors = [
    {name = "Danny Lin", email = "danny0838@gmail.com"},
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.14",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content :: Content Management System",
    "Topic :: Internet :: WWW/HTTP :: Indexing/Search",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
    "Topic :: Internet :: WWW/HTTP :: WSGI :: Server",
    "Topic :: Internet :: WWW/HTTP :: WSGI :: Application",
    "Intended Audience :: End Users/Desktop",
    "Intended Audience :: Science/Research",
]
dependencies = [
    "flask>=2.0.0",
    "werkzeug>=2.0.1",
    "jinja2>=2.10.1",
    "lxml>=4.0",
    "commonmark>=0.8",
]
dynamic = ["version"]

[project.urls]
Homepage = "https://github.com/danny0838/PyWebScrapBook"

[project.scripts]
wsb = "webscrapbook.cli:main"

# deprecated since 2.1.0
webscrapbook = "webscrapbook.cli:main"

# deprecated since 2.1.0
wsbview = "webscrapbook.cli:view"

[project.optional-dependencies]
adhoc_ssl = [
    "cryptography",
]

[dependency-groups]
lint = [
    "flake8>=6.1",
    "Flake8-pyproject>=1.2.3",
    "pep8-naming>=0.13.2",
    "flake8-comprehensions>=3.8",
    "flake8-string-format>=0.3",
    "flake8-quotes>=3.4",
    "flake8-bugbear>=22.6.22",
    "flake8-isort>=5.0",
    "isort>=5.9.2",
]
build = [
    "tox>=4.21.2",
]
dev = [
    {include-group = "lint"},
    {include-group = "build"},
]

[tool.setuptools.packages.find]
include = ["webscrapbook*"]

[tool.setuptools.package-data]
webscrapbook = [
    "resources/*.*",
    "themes/default/static/*.*",
    "themes/default/templates/*.*",
    "themes/default/locales/*/*.py",
]

[tool.setuptools.dynamic.version]
attr = "webscrapbook.__version__"

[tool.flake8]
exclude = [
    ".git",
    ".tox",
    ".venv",
    "build",
    "dist",
]
max-line-length = 160

# Flake8 Rules
# https://www.flake8rules.com/
extend-select = [
    # E123: closing bracket does not match indentation of opening bracket's line
    "E123",
]
ignore = [
    # W503: Line break occurred before a binary operator
    "W503",
]
per-file-ignores = [
    "webscrapbook/_polyfill/**: F401, F403, F405, Q000",
    "webscrapbook/themes/default/locales/*: P103, E501",
    "webscrapbook/util/__init__.py: F401, F403",
    "tests/test_cli.py: C408",
    "tests/test_locales/*: P103",
]

[tool.isort]
multi_line_output = 3
include_trailing_comma = true

# skip directories included by default
# ref: https://pycqa.github.io/isort/docs/configuration/options.html
# extend_skip = []

[tool.tox]
env_list = ["py314", "py313", "py312", "py311", "py310", "py39", "py38"]
min_version = "4.22"

[tool.tox.env_run_base]
description = "run unit tests"
use_develop = true
extras = ["adhoc_ssl"]
commands = [
    ["python", "-m", "unittest", {replace = "posargs", extend = true}],

    # ensure that all specified dependencies can be installed without conflict
    ["python", "-m", "pip", "install", "--group", "dev"],
]

[tool.tox.env.build]
description = "build a binary executable"
use_develop = false
deps = [
    "pyinstaller",
]
extras = []
commands = [["python", "tools/build.py", {replace = "posargs", extend = true}]]

[tool.tox.env.release]
description = "build and release to PyPI"
skip_install = true
deps = [
    "build",
    "twine",
]
extras = []
pass_env = [
    "TWINE_USERNAME",
    "TWINE_PASSWORD",
]
commands = [
    # Purge previously built files by bdist (wheel) to prevent deleted files
    # being included in the package.
    ["python", "-c", "import shutil; shutil.rmtree('build', ignore_errors=True)"],

    ["python", "-m", "build", "--sdist", "--wheel"],
    ["python", "-m", "twine", "upload", "--skip-existing", "dist/*"],
]

[tool.tox.env.lint]
description = "lint source code"
skip_install = true
dependency_groups = ["lint"]
extras = []
commands = [["flake8", {replace = "posargs", default = ["."], extend = true}]]

[tool.tox.env.isort]
description = "sort imports for the source code"
skip_install = true
dependency_groups = ["lint"]
extras = []
commands = [["isort", {replace = "posargs", default = ["."], extend = true}]]
