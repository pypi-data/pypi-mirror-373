[build-system]
requires = ["setuptools", "setuptools_scm"]
build-backend = "setuptools.build_meta"

[project]
name = "LbNightlyTools"
dynamic = ["version"]
description = "LHCb Nightly tools"
readme = "README.rst"
authors = [
    { name = "CERN - LHCb Core Software", email = "lhcb-core-soft@cern.ch" },
]
license = "GPL-3.0-or-later"
requires-python = ">=3.9"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Build Tools"
]
dependencies = [
    "LbEnv",
    "LbCommon>=0.0.7",
    "LbDevTools",
    "lbinstall",
    "python-gitlab",
    "CouchDB",
    "tabulate",
    "joblib",
    "GitPython",
    "networkx",
    "pyyaml",
    "decorator",
]

[project.optional-dependencies]
dev = ["build", "pytest", "pytest-cov"]

[project.urls]
Homepage = "https://gitlab.cern.ch/lhcb-core/LbNightlyTools"

[project.scripts]
lbn-ansi2html = "LbNightlyTools.Scripts._entry_points:ansi2html"
lbn-build = "LbNightlyTools.Scripts.Build:run"
lbn-build-legacy = "LbNightlyTools.Scripts.Build:run"
lbn-build-log-to-html = "LbNightlyTools.Scripts._entry_points:build_log_to_html"
lbn-check-config = "LbNightlyTools.Configuration:check_config"
lbn-checkout = "LbNightlyTools.Scripts.Checkout:run"
lbn-checkout-legacy = "LbNightlyTools.Scripts.Checkout:run"
lbn-check-preconditions = "LbNightlyTools.Scripts._entry_points:check_preconditions"
lbn-collect-build-logs = "LbNightlyTools.Scripts._entry_points:collect_build_logs"
lbn-enabled-slots = "LbNightlyTools.Scripts._entry_points:enabled_slots"
lbn-generate-compatspec = "LbNightlyTools.Scripts._entry_points:generate_compatspec"
lbn-generate-do0spec = "LbNightlyTools.Scripts._entry_points:generate_do0spec"
lbn-generate-extspec = "LbNightlyTools.Scripts._entry_points:generate_extspec"
lbn-generate-genericspec = "LbNightlyTools.Scripts._entry_points:generate_genericspec"
lbn-generate-lbscriptsspec = "LbNightlyTools.Scripts._entry_points:generate_lbscriptsspec"
lbn-generate-metaspec = "LbNightlyTools.Scripts._entry_points:generate_metaspec"
lbn-generate-spec = "LbNightlyTools.Scripts._entry_points:generate_spec"
lbn-gen-release-config = "LbNightlyTools.Scripts._entry_points:gen_release_config"
lbn-get-configs = "LbNightlyTools.Scripts._entry_points:get_configs"
lbn-get-new-refs = "LbNightlyTools.GetNightlyRefs:main"
lbn-gitlab-mr = "LbNightlyTools.Scripts.GitlabMR:main"
lbn-index = "LbNightlyTools.Scripts._entry_points:index"
lbn-install = "LbNightlyTools.Scripts._entry_points:install"
lbn-list-platforms = "LbNightlyTools.Scripts._entry_points:list_platforms"
lbn-preconditions = "LbNightlyTools.Scripts._entry_points:preconditions"
lbn-release-poll = "LbNightlyTools.Scripts._entry_points:release_poll"
lbn-release-trigger = "LbNightlyTools.Scripts._entry_points:release_trigger"
lbn-reschedule-tests = "LbNightlyTools.Scripts._entry_points:reschedule_tests"
lbn-rpm = "LbNightlyTools.Scripts._entry_points:rpm"
lbn-rpm-validator = "LbNightlyTools.Scripts._entry_points:rpm_validator"
lbn-test = "LbNightlyTools.Scripts.Test:run"
lbn-test-legacy = "LbNightlyTools.Scripts.Test:run"
lbn-test-poll = "LbNightlyTools.Scripts._entry_points:test_poll"
lbn-wrapcmd = "LbNightlyTools.Scripts.wrapcmd:main"
lbp-check-periodic-tests = "LbPeriodicTools._entry_points:check_periodic_tests"
lbp-check-periodic-tests-msg = "LbPeriodicTools._entry_points:check_periodic_tests_msg"
lbpr-collect = "LbPR._entry_points:collect"
lbpr-get-command = "LbPR._entry_points:get_command"
lbq-builddone = "LbNightlyTools.Scripts._entry_points:lbq_builddone"
lbq-buildnotif = "LbNightlyTools.Scripts._entry_points:lbq_buildnotif"
lbq-getteststorun = "LbNightlyTools.Scripts._entry_points:lbq_getteststorun"

[tool.setuptools]
package-dir = {"" = "python"}

[tool.setuptools.packages.find]
where = ["python"]
exclude = ["*.tests"]

[tool.setuptools_scm]

[tool.isort]
profile = "black"
multi_line_output = 3

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "--doctest-modules --cov=python --cov-report=term --cov-report=html --cov-report=xml --junitxml=pytest.xml"
testpaths = ["python"]
