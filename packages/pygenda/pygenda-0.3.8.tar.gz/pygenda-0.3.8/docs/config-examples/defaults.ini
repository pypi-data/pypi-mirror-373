# Sample Pygenda .ini file listing default values
# Should be saved as [config_dir]/pygenda/user.ini
# (On Linux, [config_dir] is probably ~/.config)

[calendar]
# This section holds information about the calendars used by Pygenda
# (that is, the sources/stores for entry data).

# type = String (not case sensitive)
#        Valid values: icalfile, caldav, evolution
#        Default: icalfile

# enabled = Bool
#        Enable/disable calendar (to make disabling one calendar easy)
#        Default: True

# display_name = String
#        Name of calendar shown in the Pygenda UI
#        Default: calendar (unless the connector supplies a name, as EDS does)

# readonly = Bool
#        True to indicate calendar cannot be edited
#        Default: False

# entry_type = String, values: event, todo, all (case insensitive)
#        Indicates what type of entry this calendar can hold
#        Default: all

# class = String
#        Used to add CSS selector classes to entries according to calendar.
#        Entries will have class "calendar-<this value>".
#        Users can then put something like ".calendar-work > .itemtext
#        { background:Khaki; }" in their user CSS to style these entries.
#        Default: calendar display name, in lower case, with punctuation
#        removed and spaces replaced by hyphens.

# show_in_grid=Bool
#        If True, add styles to display entries in Year View Grid.
#        This allows some calendars to be/not be shown in the Year
#        View grid. The intended use is to not show things like
#        moon phases in the grid so you don't see the icon and
#        wonder what you're doing that day (these entries will
#        still be shown on the individual day).
#        Default: True (i.e. display the entries in the grid)

# If type==icalfile, set the filename of the iCal file with:
# ---------------------------------------------------------
#   filename = string
#       Default: [config_dir]/pygenda/pygenda.ics

# If type==caldav, the following values can be set:
# ------------------------------------------------
#   server = string (url, e.g. http://localhost:5232/ for Radicale server)
#   username = string
#   password = string
#   calendar = string
# Note: Using a calDAV server adds a dependency to pygenda: caldav.

# If type==evolution, the following values must be set:
# ----------------------------------------------------
#   uid = string (to select the calendar, see note below)
#   entry_type = string, one of: event, todo (not 'all')
# Note: to help find the uid of calendars, if uid is not set, then
# a list of calendar uids and corresponding display names will be
# printed to the console.


[calendar1]
[calendar2]
# You can add further calendars in sections named calendarN.
# (Calendar0 is equivalent to Calendar.)


[global]
# 24hr = Boolean
#       Default: False (use 12-hour clock for display and input dialogs)

# hide_titlebar_when_maximized = Boolean
#       Default: False
#       (Note: I've seen setting this to True break the app menu under Phosh)

# language = language string (e.g. en_GB, en_US, fr)
#       UI language. Note: the selected locale must be installed on the
#       operating system, otherwise it will show an error in the console
#       and fall back to the default. (To enable a locale on Debian, edit
#       the /etc/locale.gen file and then run (sudo) locale-gen.)
#       Default: Use operating system locale

# date_sep = string
#       Default: Use operating system locale

# date_ord = string
#       Indicates order of date elements (YMD, MDY, DMY)
#       Default: Use operating system locale

# time_sep = string
#       Default: Use operating system locale

# date_fmt_text = string
#       Formatting string for date in text format, should include year.
#       Example, typical US format: %A %B %-d, %Y -> Monday December 31, 2001
#       Default: Use operating system locale

# date_fmt_text_noyear = string
#       Formatting string for date in text format, without year.
#       Used in Year View to display cursor date.
#       Default: '' - indicates it should be constructed from date_fmt_text.

# date_fmt_textabb' = string
#       Formatting string for date in abbreviated text format, including year.
#       Example, typical US format: %a %b %-d, %Y -> Mon Dec 31, 2001
#       Default: '' - indicates it should be constructed from date_fmt_text.

# date_fmt_textabb_noyear = string
#       Formatting string for date in abbreviated text format, without year.
#       Default: '' - indicates it should be constructed from date_fmt_textabb.

# start_week_day = int (0..6)
#       Default: 0 (Monday)

# tab_elts_datetime = Boolean
#       This indicates if pressing tab moves between elements in
#       date/time entry widgets.
#       Default: False

# plus_minus_zoom = Boolean
#       If True, pressing plus or minus keys (without ctrl) will zoom
#       (ctrl with plus/minus keys will always zoom).
#       Default: True


[startup]
# maximize = Boolean
#       Default: False

# fullscreen = Boolean
#       Default: False

# view = string
#       Default: week


[softkeys]
# display = string
#       Controls display of the soft-key bar (New Entry, View, etc.)
#       'left' => place on left; 'hide' => don't display; else => right
#       Default: '' (=> right)

# show_icons = Boolean
#       True to display icons on the soft keys; False to hide
#       Default: True


[new_event]
# show_alarm_warning = bool
#       Whether to show the annoying warning about Pygenda not sounding
#       or activating alarms. Make sure you understand the warning
#       before disabling it.
#       Default: True

# timed_default_alarm_before = string in format '1h2m3s'
#       When you add an alarm to a timed event, this gives the default
#       time *before* event that alarm activates.
#       Default: 15m

# default_alarm_emailaddr = string
#       When user creates an alarm with Action 'Email', use this value
#       as the email address. If this is None, then (for the moment)
#       new email alarms can't be set.
#       Default: None

# default_alarm_audiofile = string
#       The file path for the audio file played when an audio alarm
#       goes off. (Alarms are currently experimental. This setting is
#       provided as a way to test configuration options.)
#       Default: empty (file is determined by alarm handler)
#       Example value: file:///usr/share/sounds/freedesktop/stereo/alarm-clock-elapsed.oga


[week_view]
# pageleft_datepos = 'left' or 'right'
#       Default: 'left'

# pageright_datepos = 'left' or 'right'
#       Default: 'right'

# show_ongoing_event = 'every_day' or 'first_day'
#       Default: 'first_day'
#       Whether ongoing events should be shown only on their start day
#       or on every day that they span.
#       Note: WORK IN PROGRESS! Currently only works for non-repeating
#       events, or repeating occurrences starting within viewed week.

# show_event_location = 'always' or 'never'
#       Default: 'always'
#       The plan is to have further options in the future, e.g.
#       'first-day' => only show on the first day of multi-day event,
#       'start-of-week' => on first day and also on first day of week.

# location_max_chars = integer>=0
#       Default: 0
#       If entry location is displayed, use this as the maximum number
#       of characters. Zero means unlimited.

# show_todos = Bool
#       Default: True
#       Show todo items with a due date on that date in Week View

# zoom_levels = integer>0
#       Default: 5
#       The number of zoom levels in Week View. The font sizes for
#       each zoom level are set using CSS - see pygenda/css/pygenda.css
#       or gemini.css for examples.

# default_zoom = integer>=0 and <zoom_levels
#       Default: 1
#       The Week View zoom level when Pygenda is started.


[year_view]
# show_event_location = 'always' or 'never'
#       Default: 'always'
#       The plan is to have further options in the future, e.g.
#       'first-day' => only show on the first day of multi-day event.

# location_max_chars = integer>=0
#       Default: 0 (= unlimited)
#       See week_view section for description.

# show_todos = Bool
#       Default: True
#       Show todo items with a due date on that date in Year View

# zoom_levels = integer>0
#       Default: 5
#       The number of zoom levels in Year View.
#       (See zoom_levels for Week View above.)

# default_zoom = integer>=0 and <zoom_levels
#       Default: 2
#       The Year View zoom level when Pygenda is started.


[todo_view]
# list0_title = string
#       Default: 'To-do' (or localized equivalent)
#       The displayed name of the to-do list.

# listN_title = string (where N is an integer>0)
#       Default: undefined for N>0 (so there is only one to-do list)
#       These also allow the user to set the number of to-do lists:
#       keep adding titles until you have enough.
#       NB: to set width of lists, try CSS: .todoview_list {min-width:x}

# listN_filter = string (where N is an integer>=0)
#       Default: undefined for N>=0
#       These are used to filter to-do items according to categories.
#       Typically a filter will be the name of a possible category.
#       Undefined (the default) means that all to-do items are shown
#       (so the default behaviour is for a to-do list to show all items).
#       A special value 'UNCATEGORIZED' will show only to-do items with
#       no categories.

# zoom_levels = integer>0
#       Default: 5
#       The number of zoom levels in Todo View.
#       (See zoom_levels for Week View above.)

# default_zoom = integer>=0 and <zoom_levels
#       Default: 2
#       The Todo View zoom level when Pygenda is started.
