# Generated by Django 5.2.5 on 2025-09-01 20:37

import django.db.models.deletion
import wagtail_newsletter_django_backend.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("wagtailcore", "0095_groupsitepermission"),
    ]

    operations = [
        migrations.CreateModel(
            name="Audience",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.SlugField()),
                ("description", models.TextField(blank=True)),
                (
                    "smtp_user",
                    models.CharField(
                        blank=True,
                        default=None,
                        help_text="The SMTP login user.  If absent, this will not be supplied to send_mail, and EMAIL_HOST_USER will be used instead",
                        max_length=256,
                        null=True,
                    ),
                ),
                (
                    "smtp_password",
                    models.CharField(
                        blank=True,
                        default=None,
                        help_text="The SMTP login password.  If absent, this will not be supplied to send_mail, and EMAIL_HOST_PASSWORD will be used instead",
                        max_length=256,
                        null=True,
                    ),
                ),
                (
                    "from_email_address",
                    models.EmailField(
                        blank=True,
                        default=None,
                        help_text="The From address for the email.  If not present, this will not be supplied to send_mail, and DEFAULT_FROM_EMAIL will be used instead",
                        max_length=254,
                        null=True,
                    ),
                ),
                (
                    "from_email_name",
                    models.CharField(
                        blank=True,
                        default=None,
                        help_text="The display name portion of the from email.  This will be wrapped around the from email address.",
                        max_length=256,
                        null=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "site",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="wagtailcore.site",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="AudienceSegment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.SlugField(unique=True)),
                ("description", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "audience",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="audience_segment_set",
                        related_query_name="audience_segment",
                        to="wagtail_newsletter_django_backend.audience",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Campaign",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("send_at", models.DateTimeField(blank=True, default=None, null=True)),
                ("sent_at", models.DateTimeField(blank=True, default=None, null=True)),
                ("subject", models.TextField()),
                ("html", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "audience_segment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="wagtail_newsletter_django_backend.audiencesegment",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Subscriber",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "key",
                    models.CharField(
                        default=wagtail_newsletter_django_backend.models.generate_subscriber_key,
                        help_text="The subscriber's lookup key for managing subscriptions",
                        max_length=64,
                        unique=True,
                    ),
                ),
                ("email_address", models.EmailField(max_length=254)),
                (
                    "email_name",
                    models.CharField(
                        blank=True,
                        default=None,
                        help_text="The display name portion of the email address.",
                        max_length=256,
                        null=True,
                    ),
                ),
                ("verified", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "audience",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="wagtail_newsletter_django_backend.audience",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SentMessage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("subscriber_hash", models.CharField(db_index=True, max_length=64)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "campaign",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sent_message_set",
                        related_query_name="sent_message",
                        to="wagtail_newsletter_django_backend.campaign",
                    ),
                ),
                (
                    "subscriber",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="sent_message_set",
                        related_query_name="sent_message",
                        to="wagtail_newsletter_django_backend.subscriber",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Subscription",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "audience_segment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="wagtail_newsletter_django_backend.audiencesegment",
                    ),
                ),
                (
                    "subscriber",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="wagtail_newsletter_django_backend.subscriber",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="subscriber",
            name="audience_segments",
            field=models.ManyToManyField(
                related_name="+",
                through="wagtail_newsletter_django_backend.Subscription",
                to="wagtail_newsletter_django_backend.audiencesegment",
            ),
        ),
        migrations.AddField(
            model_name="audiencesegment",
            name="subscribers",
            field=models.ManyToManyField(
                related_name="+",
                through="wagtail_newsletter_django_backend.Subscription",
                to="wagtail_newsletter_django_backend.subscriber",
            ),
        ),
        migrations.AddConstraint(
            model_name="audience",
            constraint=models.UniqueConstraint(
                fields=("site", "name"), name="unique_site_name"
            ),
        ),
        migrations.AddConstraint(
            model_name="subscription",
            constraint=models.UniqueConstraint(
                fields=("audience_segment", "subscriber"),
                name="unique_audience_segment_subscriber",
            ),
        ),
        migrations.AddConstraint(
            model_name="subscriber",
            constraint=models.UniqueConstraint(
                fields=("audience", "email_address"),
                name="unique_audience_email_address",
            ),
        ),
        migrations.AddConstraint(
            model_name="audiencesegment",
            constraint=models.UniqueConstraint(
                fields=("audience", "name"), name="unique_audience_name"
            ),
        ),
    ]
