[tool.poetry]
name = "sincpro-py-compiler"
version = "0.2.1"
description = "Herramienta simple para compilar proyectos Python (.py → .pyc) y distribuir código compilado con protección por contraseña"
authors = ["Sincpro SRL <dev@sincpro.com>"]
readme = "README.md"
license = "MIT"
homepage = "https://github.com/Sincpro-SRL/sincpro_py_compiler"
repository = "https://github.com/Sincpro-SRL/sincpro_py_compiler"
documentation = "https://github.com/Sincpro-SRL/sincpro_py_compiler/tree/main/docs"
keywords = ["python", "compiler", "pyc", "build", "packaging", "distribution", "security", "encryption", "password-protection"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Build Tools",
    "Topic :: Software Development :: Compilers",
]
packages = [
    {include = "sincpro_py_compiler"},
]
include = [
    "sincpro_py_compiler/resources/*.txt",
]

[tool.poetry.scripts]
sincpro-compile = "sincpro_py_compiler.cli:main"
sincpro-decrypt = "sincpro_py_compiler.decrypt_cli:main"

[[tool.poetry.source]]
name = "fury"
url = "https://pypi.fury.io/sincpro/"
priority = "supplemental"

[tool.poetry.dependencies]
python = "^3.10"
cryptography = "^43.0.0"

[tool.poetry.extras]
encryption = ["cryptography"]

[tool.poetry.group.dev.dependencies]
isort = "^6.0.1"
black = "^25.1.0"
autoflake = "^2.3.1"
pyright = "^1.1.399"
pytest = "^8.3.5"
pytest-cov = "^6.0.0"
jupyterlab = "^4.4.5"

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 94
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 94
multi_line_output = 3

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = [
    "tests",
]
python_files = [
    "test_*.py",
    "*_test.py",
]

[tool.pyright]
include = ["sincpro_py_compiler"]
exclude = [
    "**/node_modules",
    "**/__pycache__",
    "**/.*",
]
defineConstant = { DEBUG = true }
reportMissingImports = true
reportMissingTypeStubs = false
pythonVersion = "3.10"
pythonPlatform = "Linux"
