[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "pypricklybird"
dynamic = ["version"]
description = 'Python library to encode and decode pricklybird.'
readme = "README.md"
requires-python = ">=3.12"
license = "MIT"
keywords = []
authors = [
  { name = "ndornseif", email = "5382403+ndornseif@users.noreply.github.com" },
]
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: Implementation :: CPython",

  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Natural Language :: English",
  "Operating System :: OS Independent",
  "Topic :: Scientific/Engineering :: Human Machine Interfaces",
  "Topic :: Software Development :: User Interfaces",
]
dependencies = []

[project.urls]
Documentation = "https://github.com/ndornseif/pypricklybird#readme"
Issues = "https://github.com/ndornseif/pypricklybird/issues"
Source = "https://github.com/ndornseif/pypricklybird"

[tool.hatch.version]
path = "src/pypricklybird/__init__.py"

[tool.hatch.envs.default]
extra-dependencies = [
  "pytest",
  "pytest-cov",
  "ruff",
  "pyright",
  "pdoc",
]
[tool.hatch.envs.default.scripts]
fmt = [
  "ruff format {args:.}",
  "ruff check {args:.}",
]
types = [
  "pyright {args:.}",
]
tests = "pytest --cov=pypricklybird --cov-report=term --doctest-modules {args:.}"
docs = "pdoc -t ./docs/templates/ -o ./docs/html/ pypricklybird"
fullbuild = ["fmt", "types", "tests", "docs", "hatch build"]

[tool.hatch.build.targets.wheel]
packages = ["src/pypricklybird"]

[tool.hatch.build.targets.sdist]
packages = ["src/pypricklybird"]

[tool.pytest.ini_options]
addopts = "--doctest-modules"

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

# Same as Black.
line-length = 88
indent-width = 4

target-version = "py312"

[tool.ruff.lint]
select = ["ALL"]
ignore = ["T20", "S", "TRY003", "EM101", "PLR2004", "COM812", "FBT", "D203", "D213", "PT009", "PT027", "D415", "ISC001"]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
quote-style = "double"

indent-style = "space"

skip-magic-trailing-comma = false

line-ending = "auto"

docstring-code-format = false

docstring-code-line-length = "dynamic"