# examples/basic_usage.py
"""
üé¨ –ë–∞–∑–æ–≤–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ django-hlsfield

–≠—Ç–æ—Ç –ø—Ä–∏–º–µ—Ä –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–∞–∫ –±—ã—Å—Ç—Ä–æ –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å django-hlsfield
–¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∞–¥–∞–ø—Ç–∏–≤–Ω–æ–≥–æ –≤–∏–¥–µ–æ —Å—Ç—Ä–∏–º–∏–Ω–≥–∞ –≤ Django –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏.
"""

# ============================================================================
# 1. –ù–ê–°–¢–†–û–ô–ö–ê –ú–û–î–ï–õ–ò
# ============================================================================

from django.db import models
from hlsfield import VideoField, HLSVideoField, AdaptiveVideoField


class Movie(models.Model):
    """–ü—Ä–∏–º–µ—Ä –º–æ–¥–µ–ª–∏ —Ñ–∏–ª—å–º–∞ —Å –∞–¥–∞–ø—Ç–∏–≤–Ω—ã–º –≤–∏–¥–µ–æ"""

    title = models.CharField(max_length=200)
    description = models.TextField(blank=True)

    # –û—Å–Ω–æ–≤–Ω–æ–µ –≤–∏–¥–µ–æ —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–µ–π HLS
    video = HLSVideoField(
        upload_to="movies/",
        # –ü–æ–ª–µ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –ø—É—Ç–∏ –∫ master.m3u8
        hls_playlist_field="hls_playlist",
        # –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –±—É–¥—É—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏–∑–≤–ª–µ—á–µ–Ω—ã
        duration_field="duration",
        width_field="width",
        height_field="height",
        preview_field="preview_image"
    )

    # –ü–æ–ª—è –¥–ª—è –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö (–∑–∞–ø–æ–ª–Ω—è—é—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏)
    duration = models.DurationField(null=True, blank=True)
    width = models.PositiveIntegerField(null=True, blank=True)
    height = models.PositiveIntegerField(null=True, blank=True)
    preview_image = models.CharField(max_length=500, null=True, blank=True)
    hls_playlist = models.CharField(max_length=500, null=True, blank=True)

    created_at = models.DateTimeField(auto_now_add=True)

    def __str__(self):
        return self.title


class VideoTutorial(models.Model):
    """–ü—Ä–∏–º–µ—Ä –¥–ª—è –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞"""

    title = models.CharField(max_length=200)

    # –ò—Å–ø–æ–ª—å–∑—É–µ–º AdaptiveVideoField –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
    video = AdaptiveVideoField(
        upload_to="tutorials/",
        hls_playlist_field="hls_url",
        dash_manifest_field="dash_url",
        # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∫–∞—á–µ—Å—Ç–≤–∞ –ø–æ–¥ –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç
        ladder=[
            {"height": 360, "v_bitrate": 600, "a_bitrate": 96},   # –ú–æ–±–∏–ª—å–Ω—ã–µ
            {"height": 720, "v_bitrate": 1800, "a_bitrate": 128}, # –î–µ—Å–∫—Ç–æ–ø
            {"height": 1080, "v_bitrate": 3500, "a_bitrate": 160}, # HD
        ]
    )

    hls_url = models.CharField(max_length=500, null=True, blank=True)
    dash_url = models.CharField(max_length=500, null=True, blank=True)


# ============================================================================
# 2. VIEWS –î–õ–Ø –†–ê–ë–û–¢–´ –° –í–ò–î–ï–û
# ============================================================================

from django.shortcuts import render, get_object_or_404
from django.http import JsonResponse
from django.views.generic import CreateView, DetailView
from django.contrib import messages


class MovieCreateView(CreateView):
    """View –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∏–ª—å–º–∞"""
    model = Movie
    fields = ['title', 'description', 'video']
    template_name = 'movies/upload.html'

    def form_valid(self, form):
        response = super().form_valid(form)
        messages.success(
            self.request,
            '–§–∏–ª—å–º –∑–∞–≥—Ä—É–∂–µ–Ω! HLS –æ–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞—á–∞–ª–∞—Å—å –≤ —Ñ–æ–Ω–µ.'
        )
        return response


class MovieDetailView(DetailView):
    """View –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ñ–∏–ª—å–º–∞"""
    model = Movie
    template_name = 'movies/detail.html'
    context_object_name = 'movie'

    def get_context_data(self, **kwargs):
        context = super().get_context_data(**kwargs)
        movie = self.object

        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–∏–¥–µ–æ –¥–ª—è –ø–ª–µ–µ—Ä–∞
        context['video_info'] = {
            'hls_url': movie.video.master_url(),
            'preview_url': movie.video.preview_url(),
            'duration': movie.duration.total_seconds() if movie.duration else 0,
            'resolution': f"{movie.width}x{movie.height}" if movie.width and movie.height else None,
        }

        return context


def video_status_api(request, movie_id):
    """API –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–∏–¥–µ–æ"""
    movie = get_object_or_404(Movie, id=movie_id)

    status = {
        'ready': bool(movie.hls_playlist),
        'hls_url': movie.video.master_url() if movie.hls_playlist else None,
        'preview_url': movie.video.preview_url(),
        'metadata': {
            'duration': movie.duration.total_seconds() if movie.duration else None,
            'width': movie.width,
            'height': movie.height,
        }
    }

    return JsonResponse(status)


# ============================================================================
# 3. –§–û–†–ú–´ –î–õ–Ø –ó–ê–ì–†–£–ó–ö–ò
# ============================================================================

from django import forms


class MovieUploadForm(forms.ModelForm):
    """–§–æ—Ä–º–∞ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∏–ª—å–º–∞ —Å –≤–∞–ª–∏–¥–∞—Ü–∏–µ–π"""

    class Meta:
        model = Movie
        fields = ['title', 'description', 'video']
        widgets = {
            'title': forms.TextInput(attrs={
                'class': 'form-control',
                'placeholder': '–ù–∞–∑–≤–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞'
            }),
            'description': forms.Textarea(attrs={
                'class': 'form-control',
                'rows': 4,
                'placeholder': '–û–ø–∏—Å–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞'
            }),
            'video': forms.FileInput(attrs={
                'class': 'form-control',
                'accept': 'video/*'
            })
        }

    def clean_video(self):
        """–í–∞–ª–∏–¥–∞—Ü–∏—è –∑–∞–≥—Ä—É–∂–∞–µ–º–æ–≥–æ –≤–∏–¥–µ–æ"""
        video = self.cleaned_data.get('video')

        if video:
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–º–µ—Ä–∞ (–º–∞–∫—Å–∏–º—É–º 1GB)
            if video.size > 1024 * 1024 * 1024:  # 1GB
                raise forms.ValidationError(
                    '–§–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π. –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä: 1GB'
                )

            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–∞ —Ñ–∞–π–ª–∞
            allowed_types = [
                'video/mp4', 'video/avi', 'video/mov',
                'video/wmv', 'video/flv', 'video/webm'
            ]

            if hasattr(video, 'content_type') and video.content_type not in allowed_types:
                raise forms.ValidationError(
                    f'–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ç–∏–ø —Ñ–∞–π–ª–∞: {video.content_type}'
                )

        return video


# ============================================================================
# 4. –®–ê–ë–õ–û–ù–´
# ============================================================================

# templates/movies/upload.html
UPLOAD_TEMPLATE = """
<!DOCTYPE html>
<html>
<head>
    <title>–ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∏–ª—å–º–∞</title>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>
    <div class="container mt-5">
        <div class="row justify-content-center">
            <div class="col-md-8">
                <h2>üé¨ –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∏–ª—å–º–∞</h2>

                {% if messages %}
                    {% for message in messages %}
                        <div class="alert alert-{{ message.tags }}">{{ message }}</div>
                    {% endfor %}
                {% endif %}

                <form method="post" enctype="multipart/form-data" id="upload-form">
                    {% csrf_token %}

                    <div class="mb-3">
                        {{ form.title.label_tag }}
                        {{ form.title }}
                        {{ form.title.errors }}
                    </div>

                    <div class="mb-3">
                        {{ form.description.label_tag }}
                        {{ form.description }}
                        {{ form.description.errors }}
                    </div>

                    <div class="mb-3">
                        {{ form.video.label_tag }}
                        {{ form.video }}
                        {{ form.video.errors }}
                        <div class="form-text">
                            –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã: MP4, AVI, MOV, WMV, FLV, WebM<br>
                            –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä: 1GB
                        </div>
                    </div>

                    <button type="submit" class="btn btn-primary" id="submit-btn">
                        <span id="submit-text">–ó–∞–≥—Ä—É–∑–∏—Ç—å</span>
                        <span id="submit-spinner" class="spinner-border spinner-border-sm ms-2" style="display: none;"></span>
                    </button>
                </form>
            </div>
        </div>
    </div>

    <script>
        document.getElementById('upload-form').addEventListener('submit', function() {
            document.getElementById('submit-text').textContent = '–ó–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è...';
            document.getElementById('submit-spinner').style.display = 'inline-block';
            document.getElementById('submit-btn').disabled = true;
        });
    </script>
</body>
</html>
"""

# templates/movies/detail.html
DETAIL_TEMPLATE = """
<!DOCTYPE html>
<html>
<head>
    <title>{{ movie.title }}</title>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>
    <div class="container mt-4">
        <div class="row">
            <div class="col-md-8">
                <h1>{{ movie.title }}</h1>

                {% if video_info.hls_url %}
                    <!-- –ò—Å–ø–æ–ª—å–∑—É–µ–º –≥–æ—Ç–æ–≤—ã–π –ø–ª–µ–µ—Ä –æ—Ç django-hlsfield -->
                    {% include "hlsfield/players/hls_player.html" with hls_url=video_info.hls_url %}
                {% else %}
                    <!-- –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–µ–≤—å—é –∏ —Å—Ç–∞—Ç—É—Å –æ–±—Ä–∞–±–æ—Ç–∫–∏ -->
                    <div class="alert alert-info">
                        <h5>üé¨ –í–∏–¥–µ–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è...</h5>
                        <p>–°–æ–∑–¥–∞–µ—Ç—Å—è –∞–¥–∞–ø—Ç–∏–≤–Ω—ã–π —Å—Ç—Ä–∏–º. –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç.</p>

                        {% if video_info.preview_url %}
                            <img src="{{ video_info.preview_url }}" alt="–ü—Ä–µ–≤—å—é" class="img-thumbnail" style="max-width: 300px;">
                        {% endif %}

                        <div id="processing-status" class="mt-3">
                            <button class="btn btn-sm btn-outline-primary" onclick="checkStatus()">
                                –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å
                            </button>
                        </div>
                    </div>
                {% endif %}

                {% if movie.description %}
                    <div class="mt-4">
                        <h5>–û–ø–∏—Å–∞–Ω–∏–µ</h5>
                        <p>{{ movie.description }}</p>
                    </div>
                {% endif %}

                <div class="mt-4">
                    <h6>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–∏–¥–µ–æ</h6>
                    <ul class="list-unstyled">
                        {% if video_info.duration %}
                            <li><strong>–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:</strong> {{ video_info.duration|floatformat:0 }} —Å–µ–∫</li>
                        {% endif %}
                        {% if video_info.resolution %}
                            <li><strong>–†–∞–∑—Ä–µ—à–µ–Ω–∏–µ:</strong> {{ video_info.resolution }}</li>
                        {% endif %}
                        <li><strong>–ó–∞–≥—Ä—É–∂–µ–Ω–æ:</strong> {{ movie.created_at }}</li>
                    </ul>
                </div>
            </div>
        </div>
    </div>

    <script>
        async function checkStatus() {
            try {
                const response = await fetch(`/api/movies/{{ movie.id }}/status/`);
                const data = await response.json();

                if (data.ready) {
                    location.reload(); // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –µ—Å–ª–∏ –≤–∏–¥–µ–æ –≥–æ—Ç–æ–≤–æ
                } else {
                    document.getElementById('processing-status').innerHTML = `
                        <div class="progress mb-2">
                            <div class="progress-bar progress-bar-striped progress-bar-animated"
                                 style="width: 60%"></div>
                        </div>
                        <small class="text-muted">–û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç—Å—è...</small>
                    `;
                }
            } catch (error) {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞:', error);
            }
        }

        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∫–∞–∂–¥—ã–µ 10 —Å–µ–∫—É–Ω–¥
        {% if not video_info.hls_url %}
            setInterval(checkStatus, 10000);
        {% endif %}
    </script>
</body>
</html>
"""


# ============================================================================
# 5. URL –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø
# ============================================================================

from django.urls import path

urlpatterns = [
    path('movies/upload/', MovieCreateView.as_view(), name='movie_upload'),
    path('movies/<int:pk>/', MovieDetailView.as_view(), name='movie_detail'),
    path('api/movies/<int:movie_id>/status/', video_status_api, name='movie_status_api'),
]


# ============================================================================
# 6. DJANGO ADMIN –ù–ê–°–¢–†–û–ô–ö–ê
# ============================================================================

from django.contrib import admin
from hlsfield.widgets import AdminVideoWidget


@admin.register(Movie)
class MovieAdmin(admin.ModelAdmin):
    list_display = ['title', 'created_at', 'duration', 'width', 'height', 'has_hls']
    list_filter = ['created_at']
    search_fields = ['title', 'description']
    readonly_fields = ['duration', 'width', 'height', 'preview_image', 'hls_playlist', 'created_at']

    fieldsets = (
        ('–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', {
            'fields': ('title', 'description', 'video')
        }),
        ('–ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ (–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏)', {
            'fields': ('duration', 'width', 'height', 'preview_image'),
            'classes': ('collapse',)
        }),
        ('–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', {
            'fields': ('hls_playlist', 'created_at'),
            'classes': ('collapse',)
        }),
    )

    def has_hls(self, obj):
        return bool(obj.hls_playlist)
    has_hls.boolean = True
    has_hls.short_description = 'HLS –≥–æ—Ç–æ–≤'

    # –ö–∞—Å—Ç–æ–º–Ω—ã–π –≤–∏–¥–∂–µ—Ç –¥–ª—è –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤–∏–¥–µ–æ
    formfield_overrides = {
        VideoField: {'widget': AdminVideoWidget},
    }


# ============================================================================
# 7. CELERY –ó–ê–î–ê–ß–ò (–û–ü–¶–ò–û–ù–ê–õ–¨–ù–û)
# ============================================================================

try:
    from celery import shared_task

    @shared_task
    def notify_video_ready(movie_id):
        """–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –≤–∏–¥–µ–æ"""
        try:
            movie = Movie.objects.get(id=movie_id)
            if movie.hls_playlist:
                # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å email, push-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∏ —Ç.–¥.
                print(f"–í–∏–¥–µ–æ '{movie.title}' –≥–æ—Ç–æ–≤–æ –∫ –ø—Ä–æ—Å–º–æ—Ç—Ä—É!")

                # –ü—Ä–∏–º–µ—Ä –æ—Ç–ø—Ä–∞–≤–∫–∏ email
                from django.core.mail import send_mail
                send_mail(
                    subject=f'–í–∏–¥–µ–æ "{movie.title}" –≥–æ—Ç–æ–≤–æ!',
                    message='–í–∞—à–µ –≤–∏–¥–µ–æ –±—ã–ª–æ —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ –∏ –≥–æ—Ç–æ–≤–æ –∫ –ø—Ä–æ—Å–º–æ—Ç—Ä—É.',
                    from_email='noreply@example.com',
                    recipient_list=['user@example.com'],
                    fail_silently=True
                )
        except Movie.DoesNotExist:
            pass

    # –ü–æ–¥–∫–ª—é—á–∞–µ–º –∑–∞–¥–∞—á—É –∫ —Å–∏–≥–Ω–∞–ª—É —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
    from django.db.models.signals import post_save
    from django.dispatch import receiver

    @receiver(post_save, sender=Movie)
    def movie_hls_ready_handler(sender, instance, **kwargs):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ HLS"""
        if instance.hls_playlist and not getattr(instance, '_hls_notification_sent', False):
            notify_video_ready.delay(instance.id)
            instance._hls_notification_sent = True

except ImportError:
    # Celery –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
    pass


# ============================================================================
# 8. –ü–†–ò–ú–ï–† –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Ø –í –ö–û–î–ï
# ============================================================================

def example_usage():
    """–ü—Ä–∏–º–µ—Ä –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è"""

    # –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞
    from django.core.files import File

    with open('my_video.mp4', 'rb') as video_file:
        movie = Movie.objects.create(
            title='–ú–æ–π —Ñ–∏–ª—å–º',
            description='–û–ø–∏—Å–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞',
            video=File(video_file)
        )

    # –°—Ä–∞–∑—É –ø–æ—Å–ª–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–Ω—ã –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –∏ –ø—Ä–µ–≤—å—é
    print(f"–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {movie.duration}")
