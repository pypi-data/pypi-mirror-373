# coding: utf-8

"""
    QAnswer 2.0

    QAnswer 2.0 API

    The version of the OpenAPI document: 2.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from freetext-sdk.models.check_mode_response import CheckModeResponse

class TestCheckModeResponse(unittest.TestCase):
    """CheckModeResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CheckModeResponse:
        """Test CheckModeResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CheckModeResponse`
        """
        model = CheckModeResponse()
        if include_optional:
            return CheckModeResponse(
                mode = 'rag',
                prompt_token_count_details = freetext-sdk.models.prompt_token_count_details.PromptTokenCountDetails(
                    question = 56, 
                    instruction = 56, 
                    input_data = 56, 
                    chat_history = 56, 
                    training_examples = 56, 
                    bot_name = 56, 
                    bot_description = 56, )
            )
        else:
            return CheckModeResponse(
                mode = 'rag',
                prompt_token_count_details = freetext-sdk.models.prompt_token_count_details.PromptTokenCountDetails(
                    question = 56, 
                    instruction = 56, 
                    input_data = 56, 
                    chat_history = 56, 
                    training_examples = 56, 
                    bot_name = 56, 
                    bot_description = 56, ),
        )
        """

    def testCheckModeResponse(self):
        """Test CheckModeResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
