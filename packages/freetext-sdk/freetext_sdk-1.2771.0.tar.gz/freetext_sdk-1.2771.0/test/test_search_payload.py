# coding: utf-8

"""
    QAnswer 2.0

    QAnswer 2.0 API

    The version of the OpenAPI document: 2.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from freetext-sdk.models.search_payload import SearchPayload

class TestSearchPayload(unittest.TestCase):
    """SearchPayload unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SearchPayload:
        """Test SearchPayload
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SearchPayload`
        """
        model = SearchPayload()
        if include_optional:
            return SearchPayload(
                question = '',
                username = '',
                dataset = '',
                auto_apply_filters = True,
                text_fragmentation = True,
                limit = 56,
                offset = 56,
                oauth_token = '',
                conversation_id = '',
                filters = [
                    [
                        freetext-sdk.models.search_metadata_filter.SearchMetadataFilter(
                            key = '', 
                            value = null, )
                        ]
                    ],
                index_hashes = [
                    null
                    ],
                conversation_has_clip = True,
                dataset_id = 56
            )
        else:
            return SearchPayload(
                question = '',
                username = '',
                dataset = '',
        )
        """

    def testSearchPayload(self):
        """Test SearchPayload"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
