# coding: utf-8

"""
    QAnswer 2.0

    QAnswer 2.0 API

    The version of the OpenAPI document: 2.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from freetext-sdk.models.rag_payload import RAGPayload

class TestRAGPayload(unittest.TestCase):
    """RAGPayload unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RAGPayload:
        """Test RAGPayload
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RAGPayload`
        """
        model = RAGPayload()
        if include_optional:
            return RAGPayload(
                question = '',
                username = '',
                dataset = '',
                image_urls = [
                    ''
                    ],
                parent_message_id = '',
                conversation_id = '',
                is_regenerate = True,
                auto_filters = True,
                origin = '',
                text_fragmentation = True,
                interface_origin = 'search',
                system_prompt = '',
                prompt = '',
                additional_fields = freetext-sdk.models.additional_fields.Additional Fields(),
                bypass_guardrail = True,
                talk_to_web = True,
                original_question = '',
                oauth_token = '',
                filters = [
                    [
                        freetext-sdk.models.search_metadata_filter.SearchMetadataFilter(
                            key = '', 
                            value = null, )
                        ]
                    ],
                index_hashes = [
                    null
                    ],
                agentic_chatbot_enabled = True,
                conversation_has_clip = True,
                current_time = ''
            )
        else:
            return RAGPayload(
                question = '',
                username = '',
                dataset = '',
        )
        """

    def testRAGPayload(self):
        """Test RAGPayload"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
