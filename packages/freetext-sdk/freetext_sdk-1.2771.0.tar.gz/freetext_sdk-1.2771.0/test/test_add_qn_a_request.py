# coding: utf-8

"""
    QAnswer 2.0

    QAnswer 2.0 API

    The version of the OpenAPI document: 2.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from freetext-sdk.models.add_qn_a_request import AddQnARequest

class TestAddQnARequest(unittest.TestCase):
    """AddQnARequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AddQnARequest:
        """Test AddQnARequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AddQnARequest`
        """
        model = AddQnARequest()
        if include_optional:
            return AddQnARequest(
                qna_pairs = [
                    freetext-sdk.models.qn_a_pair_model.QnAPairModel(
                        question = '', 
                        answer = '', 
                        source = '', 
                        source_type = 'qna', )
                    ],
                username = '',
                dataset = '',
                connector_id = 56,
                quota = 56
            )
        else:
            return AddQnARequest(
                qna_pairs = [
                    freetext-sdk.models.qn_a_pair_model.QnAPairModel(
                        question = '', 
                        answer = '', 
                        source = '', 
                        source_type = 'qna', )
                    ],
                username = '',
                dataset = '',
                connector_id = 56,
                quota = 56,
        )
        """

    def testAddQnARequest(self):
        """Test AddQnARequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
