[build-system]
requires = ["hatchling>=1.25"]
build-backend = "hatchling.build"

[project]
name = "omero_quay"
authors = [
  { name = "Guillaume Gay", email = "guillaume.gay@france-bioimaging.org" },
]
description = "Omero Data Import Export Queue"
readme = "README.md"
requires-python = ">=3.10,<3.13"
classifiers = [
  "Development Status :: 1 - Planning",
  "Intended Audience :: Science/Research",
  "Intended Audience :: Developers",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Topic :: Scientific/Engineering",
  "Typing :: Typed",
]
dynamic = ["version"]
dependencies = [
  "pyarrow",
  "pillow",
  "pandas",
  "openpyxl",
  "python-irodsclient",
  "requests",
  "xsdata",
  "linkml-runtime",
  "jinja2",
  "aicsimageio",
  "scikit-image",
  "ffmpeg",
  "imageio",
  "ezomero==3.1.1",
  "roc-validator",
  "omero-py",
  "omero-cli-transfer",
]
license = "MPL-2.0"

[project.optional-dependencies]
dev = [
  "pymongo",
  "motor",
  "pyzmq",
  "tornado",
  "pytest",
  "pytest-cov",
  "pre-commit",
  "pytest_asyncio",
  "zeroc-ice==3.6.5",
  "linkml",
  "ezomero",
  "mkdocs",
  "mkdocstrings[python]"
]
server = [
  "pymongo",
  "motor",
  "pyzmq",
  "tornado",
  "zeroc-ice==3.6.5",
  "ezomero",
]

[project.urls]
Homepage = "https://gitlab.in2p3.fr/fbi-data/omero-quay"
"Bug Tracker" = "https://gitlab.in2p3.fr/fbi-data/omero-quay/issues"
Discussions = "https://gitlab.in2p3.fr/fbi-data/omero-quay/discussions"
Changelog = "https://gitlab.in2p3.fr/fbi-data/omero-quay/releases"

[tool.hatch]
version.path = "src/_quay_version.py"
envs.default.dependencies = [
  "pytest",
  "pytest-cov",
]
metadata.allow-direct-references = true

[tool.hatch.build.targets.wheel]
only-include = ["src"]
sources = ["src"]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = [
  "-ra",
  "--showlocals",
  "--strict-markers",
  "--strict-config",
  #"--docker-compose=tests/omero/docker-compose.yml",
 ]
xfail_strict = true
filterwarnings = [
  # "error",
  # "ignore::DeprecationWarning",
  "default::ResourceWarning"
]
log_cli_level = "INFO"
testpaths = [
  "tests",
]

[tool.mypy]
files = "src"
python_version = "3.10"
warn_unused_configs = true
strict = true
show_error_codes = true
enable_error_code = ["ignore-without-code", "redundant-expr", "truthy-bool"]
warn_unreachable = true

[tool.ruff]
select = [
  "E", "F", "W", # flake8
  "B",  "B904",  # flake8-bugbear
  "I",           # isort
  "ARG",         # flake8-unused-arguments
  "C4",          # flake8-comprehensions
  "EM",          # flake8-errmsg
  "ICN",         # flake8-import-conventions
  "ISC",         # flake8-implicit-str-concat
  "PGH",         # pygrep-hooks
  "PIE",         # flake8-pie
  "PL",          # pylint
  "PT",          # flake8-pytest-style
  "PTH",         # flake8-use-pathlib
  "RET",         # flake8-return
  "RUF",         # Ruff-specific
  "SIM",         # flake8-simplify
  "T20",         # flake8-print
  "UP",          # pyupgrade
  "YTT",         # flake8-2020
]
lint.extend-ignore = ["PLR", "E501", "PLC0415"]
target-version = "py310"
lint.typing-modules = ["omero_quay._compat.typing"]
src = ["src"]
lint.unfixable = ["T20", "F841"]
lint.exclude = ["manifest.py", "*.ipynb"]
lint.isort.required-imports = ["from __future__ import annotations"]

[tool.ruff.per-file-ignores]
"tests/**" = ["T20"]
"noxfile.py" = ["T20"]

[tool.pylint]
py-version = "3.12"
ignore-paths= ["src/omero_quay/_version.py"]
reports.output-format = "colorized"
similarities.ignore-imports = "yes"
messages_control.disable = [
  "design",
  "fixme",
  "line-too-long",
  "missing-module-docstring",
  "wrong-import-position",
]
