name: Rust Cross-Platform Release

on:
  push:
    tags:
      - 'v*'

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            ext: ""
            archive: tar.gz
          - target: x86_64-unknown-linux-musl
            os: ubuntu-latest
            ext: ""
            archive: tar.gz
          - target: x86_64-pc-windows-msvc
            os: windows-latest
            ext: .exe
            archive: zip

    steps:
    - uses: actions/checkout@v4

    - name: Install Rust target
      run: rustup target add ${{ matrix.target }}

    - name: Install musl tools (for musl target)
      if: matrix.target == 'x86_64-unknown-linux-musl'
      run: sudo apt-get update && sudo apt-get install -y musl-tools

    - name: Build release binary
      run: cargo build --release --target ${{ matrix.target }} --features snapshots

    - name: Upload binary artifact (no compression)
      uses: actions/upload-artifact@v4
      with:
        name: spinmc-${{ matrix.target }}
        path: target/${{ matrix.target }}/release/spinmc${{ matrix.ext }}

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
    - uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts


    - name: Package binaries
      shell: bash
      run: |
        mkdir -p release
        for dir in artifacts/*; do
          target=$(basename "$dir")
          if [[ "$target" == *"windows"* ]]; then
            ext=".exe"
            archive="zip"
          else
            ext=""
            archive="tar.gz"
          fi
      
          cp "$dir/spinmc$ext" "release/spinmc$ext"

          chmod +x "release/spinmc$ext"
      
          if [[ "$archive" == "zip" ]]; then
            (cd release && zip "../spinmc-$target.zip" "spinmc$ext")
          else
            (cd release && tar czf "../spinmc-$target.tar.gz" "spinmc$ext")
          fi
      
          rm "release/spinmc$ext"
        done
        rmdir release

    - name: Create GitHub Release
      id: create_release
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        name: Release ${{ github.ref_name }}
        files: |
          spinmc-*.tar.gz
          spinmc-*.zip


