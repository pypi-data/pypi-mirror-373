# coding: utf-8

"""
Fireblocks API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: 1.6.2
Contact: support@fireblocks.com
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""  # noqa: E501


import unittest

from fireblocks.models.swap_operations_paginated_response import (
    SwapOperationsPaginatedResponse,
)


class TestSwapOperationsPaginatedResponse(unittest.TestCase):
    """SwapOperationsPaginatedResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SwapOperationsPaginatedResponse:
        """Test SwapOperationsPaginatedResponse
        include_optional is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # uncomment below to create an instance of `SwapOperationsPaginatedResponse`
        """
        model = SwapOperationsPaginatedResponse()
        if include_optional:
            return SwapOperationsPaginatedResponse(
                data = [
                    fireblocks.models.swap_operation.SwapOperation(
                        id = '51cfb2c1-126d-4ff6-8512-ffba48f4b296', 
                        account_id = '1', 
                        provider_id = '3e2efee1-0d69-4276-a6e6-711531185e4f', 
                        category = 'DEX', 
                        protocol = 'UNISWAP_CLASSIC', 
                        status = 'CREATED', 
                        input_amount = '10', 
                        input_asset = 'WETH', 
                        slippage_tolerance = 0.5, 
                        output_min_amount = '10', 
                        output_max_amount = '20', 
                        output_asset = 'DAI', 
                        output_final_amount = '15', 
                        required_actions = [
                            fireblocks.models.swap_required_action.SwapRequiredAction(
                                type = 'APPROVE', 
                                status = 'PENDING', 
                                tx_id = 'fc69381c-1e35-48c2-8415-484d1c2f55cx', )
                            ], 
                        error = expired, 
                        created_at = '2023-07-13T15:55:34.256Z', 
                        updated_at = '2023-07-13T15:55:34.256Z', 
                        created_by = '15a8f89f-f562-46ca-bcd3-56f8dd124816', )
                    ],
                next = 'MjAyMy0xMi0xMyA====TNjowOC4zMDI=:MTEwMA=='
            )
        else:
            return SwapOperationsPaginatedResponse(
                data = [
                    fireblocks.models.swap_operation.SwapOperation(
                        id = '51cfb2c1-126d-4ff6-8512-ffba48f4b296', 
                        account_id = '1', 
                        provider_id = '3e2efee1-0d69-4276-a6e6-711531185e4f', 
                        category = 'DEX', 
                        protocol = 'UNISWAP_CLASSIC', 
                        status = 'CREATED', 
                        input_amount = '10', 
                        input_asset = 'WETH', 
                        slippage_tolerance = 0.5, 
                        output_min_amount = '10', 
                        output_max_amount = '20', 
                        output_asset = 'DAI', 
                        output_final_amount = '15', 
                        required_actions = [
                            fireblocks.models.swap_required_action.SwapRequiredAction(
                                type = 'APPROVE', 
                                status = 'PENDING', 
                                tx_id = 'fc69381c-1e35-48c2-8415-484d1c2f55cx', )
                            ], 
                        error = expired, 
                        created_at = '2023-07-13T15:55:34.256Z', 
                        updated_at = '2023-07-13T15:55:34.256Z', 
                        created_by = '15a8f89f-f562-46ca-bcd3-56f8dd124816', )
                    ],
        )
        """

    def testSwapOperationsPaginatedResponse(self):
        """Test SwapOperationsPaginatedResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == "__main__":
    unittest.main()
