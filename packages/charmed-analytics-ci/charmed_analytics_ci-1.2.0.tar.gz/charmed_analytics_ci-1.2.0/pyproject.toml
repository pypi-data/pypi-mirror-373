# Copyright 2025 Canonical Ltd.
# See LICENSE file for licensing details.
[tool.poetry]
name = "charmed-analytics-ci"
version = "1.2.0"
description = "A CLI tool for automating CI tasks across Charmed Operator repositories"
authors = ["Charmed Kubeflow"]
license = "Apache-2.0"
readme = "README.md"
homepage = "https://github.com/canonical/charmed-analytics-ci"
repository = "https://github.com/canonical/charmed-analytics-ci"
packages = [{ include = "charmed_analytics_ci", from = "src" }]

keywords = ["charm", "ci", "rock", "automation", "github", "charmed-kubeflow"]

classifiers = [
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Build Tools",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent"
]

include = ["src/charmed_analytics_ci/templates/*.j2"]

[tool.poetry.scripts]
charmed-analytics-ci = "charmed_analytics_ci.main:main"
chaci = "charmed_analytics_ci.main:main"

[tool.poetry.dependencies]
python = ">=3.12,<4.0"
click = "^8.2.1"
PyYAML = "^6.0.2"
pydantic = "^2.11.7"
"ruamel.yaml" = "^0.18.14"
GitPython = "^3.1.44"
PyGithub = "^2.6.1"
Jinja2 = "^3.1.6"
jsonpath-ng = "^1.7.0"

# Testing tools configuration
[tool.coverage.run]
branch = true

[tool.coverage.report]
show_missing = true

[tool.pytest.ini_options]
minversion = "6.0"
log_cli_level = "INFO"

# Formatting tools configuration
[tool.black]
line-length = 99
target-version = ["py38"]

[tool.isort]
line_length = 99
profile = "black"

# Linting tools configuration
[tool.flake8]
max-line-length = 99
max-doc-length = 99
max-complexity = 10
exclude = [".git", "__pycache__", ".tox", "build", "dist", "*.egg_info", "venv"]
select = ["E", "W", "F", "C", "N", "R", "D", "H"]
# Ignore W503, E501 because using black creates errors with this
# Ignore D107 Missing docstring in __init__
ignore = ["W503", "E501", "D107"]
# D100, D101, D102, D103: Ignore missing docstrings in tests
per-file-ignores = ["tests/*:D100,D101,D102,D103,D104"]
docstring-convention = "google"
# Check for properly formatted copyright header in each file
copyright-check = "True"
copyright-author = "Canonical Ltd."
copyright-regexp = "Copyright\\s\\d{4}([-,]\\d{4})*\\s+%(author)s"

[tool.poetry.group.fmt]
optional = true

[tool.poetry.group.fmt.dependencies]
black = "^24.8.0"
isort = "^5.13.2"

[tool.poetry.group.lint]
optional = true

[tool.poetry.group.lint.dependencies]
black = "^24.8.0"
codespell = "^2.3.0"
flake8 = "^7.0.0"
flake8-builtins = "^2.5.0"
flake8-copyright = "^0.2.4"
isort = "^5.13.2"
pep8-naming = "^0.14.1"
pyproject-flake8 = "^7.0.0"

[tool.poetry.group.unit]
optional = true

[tool.poetry.group.unit.dependencies]
click = "^8.2.1"
coverage = "^7.6.1"
GitPython = "^3.1.44"
PyGithub = "^2.6.1"
Jinja2 = "^3.1.6"
pydantic = "^2.11.7"
pytest = "^8.3.4"
pytest-mock = "^3.14.0"
pyyaml = "^6.0.2"
"ruamel.yaml" = "^0.18.14"
jsonpath-ng = "^1.7.0"

[tool.poetry.group.integration]
optional = true

[tool.poetry.group.integration.dependencies]
pytest = "^8.3.4"
tenacity = "^9.0.0"
python = ">=3.12,<4.0"
click = "^8.2.1"
pydantic = "^2.11.7"
PyYAML = "^6.0.2"
"ruamel.yaml" = "^0.18.14"
GitPython = "^3.1.44"
PyGithub = "^2.6.1"
Jinja2 = "^3.1.6"
jsonpath-ng = "^1.7.0"
