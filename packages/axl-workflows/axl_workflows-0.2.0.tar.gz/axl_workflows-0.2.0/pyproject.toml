[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "axl-workflows"
version = "0.2.0"
description = "Lightweight framework for building data and ML workflows with class-based Python syntax"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "AXL Workflows Contributors", email = "contributors@axl-workflows.dev"}
]
maintainers = [
    {name = "AXL Workflows Contributors", email = "contributors@axl-workflows.dev"}
]
keywords = ["workflow", "ml", "data", "dagster", "argo", "kubeflow", "kubernetes"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Distributed Computing",
]
requires-python = ">=3.10"
dependencies = [
    "pydantic>=2.0.0",
    "typer>=0.9.0",
    "rich>=13.0.0",
    "cloudpickle>=3.0.0",
    "pyyaml>=6.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "ruff>=0.1.0",
    "black>=23.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
    "types-PyYAML>=6.0.0",
    "twine>=4.0.0",
    "scikit-learn>=1.3.0",
]
dagster = [
    "dagster>=1.5.0",
    "dagster-graphql>=1.5.0",
]
argo = [
    "kubernetes>=28.0.0",
    "pyyaml>=6.0.0",
]
all = [
    "axl-workflows[dagster,argo]",
]

[project.urls]
Homepage = "https://github.com/pedrospinosa/axl-workflows"
Documentation = "https://axl-workflows.readthedocs.io/"
Repository = "https://github.com/pedrospinosa/axl-workflows"
"Bug Tracker" = "https://github.com/pedrospinosa/axl-workflows/issues"
Changelog = "https://github.com/pedrospinosa/axl-workflows/blob/main/CHANGELOG.md"
"Release Notes" = "https://github.com/pedrospinosa/axl-workflows/releases"

[project.scripts]
axl = "axl.cli:app"
axl-workflows = "axl.cli:app"

[tool.hatch.build.targets.wheel]
packages = ["axl"]

[tool.hatch.build.targets.sdist]
include = [
    "/axl",
    "/examples",
    "/tests",
    "/README.md",
    "/LICENSE",
    "/MILESTONES.md",
]

# uv configuration
[tool.uv]
dev-dependencies = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "ruff>=0.1.0",
    "black>=23.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
    "types-pyyaml>=6.0.12.20250809",
    "twine>=4.0.0",
    "scikit-learn>=1.3.0",
]

# Ruff configuration
[tool.ruff]
target-version = "py310"
line-length = 88

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

# Black configuration
[tool.black]
target-version = ['py310']
line-length = 88
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# MyPy configuration
[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "pytest.*",
    "pytest_mock.*",
]
ignore_missing_imports = true

# Pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=axl",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-fail-under=85",
]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

# Coverage configuration
[tool.coverage.run]
source = ["axl"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
