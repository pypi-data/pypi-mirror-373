# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities
from . import outputs

__all__ = [
    'GetNdbSlasResult',
    'AwaitableGetNdbSlasResult',
    'get_ndb_slas',
    'get_ndb_slas_output',
]

@pulumi.output_type
class GetNdbSlasResult:
    """
    A collection of values returned by getNdbSlas.
    """
    def __init__(__self__, id=None, slas=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if slas and not isinstance(slas, list):
            raise TypeError("Expected argument 'slas' to be a list")
        pulumi.set(__self__, "slas", slas)

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def slas(self) -> Sequence['outputs.GetNdbSlasSlaResult']:
        """
        - list of slas
        """
        return pulumi.get(self, "slas")


class AwaitableGetNdbSlasResult(GetNdbSlasResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetNdbSlasResult(
            id=self.id,
            slas=self.slas)


def get_ndb_slas(opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetNdbSlasResult:
    """
    Lists all SLAs in Nutanix Database Service

    ## Example Usage

    ```python
    import pulumi
    import pulumi_nutanix as nutanix

    slas = nutanix.get_ndb_slas()
    pulumi.export("sla", slas)
    ```
    """
    __args__ = dict()
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('nutanix:index/getNdbSlas:getNdbSlas', __args__, opts=opts, typ=GetNdbSlasResult).value

    return AwaitableGetNdbSlasResult(
        id=pulumi.get(__ret__, 'id'),
        slas=pulumi.get(__ret__, 'slas'))
def get_ndb_slas_output(opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetNdbSlasResult]:
    """
    Lists all SLAs in Nutanix Database Service

    ## Example Usage

    ```python
    import pulumi
    import pulumi_nutanix as nutanix

    slas = nutanix.get_ndb_slas()
    pulumi.export("sla", slas)
    ```
    """
    __args__ = dict()
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('nutanix:index/getNdbSlas:getNdbSlas', __args__, opts=opts, typ=GetNdbSlasResult)
    return __ret__.apply(lambda __response__: GetNdbSlasResult(
        id=pulumi.get(__response__, 'id'),
        slas=pulumi.get(__response__, 'slas')))
