# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities
from . import outputs

__all__ = [
    'GetNdbMaintenanceWindowsResult',
    'AwaitableGetNdbMaintenanceWindowsResult',
    'get_ndb_maintenance_windows',
    'get_ndb_maintenance_windows_output',
]

@pulumi.output_type
class GetNdbMaintenanceWindowsResult:
    """
    A collection of values returned by getNdbMaintenanceWindows.
    """
    def __init__(__self__, id=None, maintenance_windows=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if maintenance_windows and not isinstance(maintenance_windows, list):
            raise TypeError("Expected argument 'maintenance_windows' to be a list")
        pulumi.set(__self__, "maintenance_windows", maintenance_windows)

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="maintenanceWindows")
    def maintenance_windows(self) -> Sequence['outputs.GetNdbMaintenanceWindowsMaintenanceWindowResult']:
        """
        List of maintenance windows
        """
        return pulumi.get(self, "maintenance_windows")


class AwaitableGetNdbMaintenanceWindowsResult(GetNdbMaintenanceWindowsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetNdbMaintenanceWindowsResult(
            id=self.id,
            maintenance_windows=self.maintenance_windows)


def get_ndb_maintenance_windows(opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetNdbMaintenanceWindowsResult:
    """
    List of maintenance windows in Nutanix Database Service

    ## Example Usage

    ```python
    import pulumi
    import pulumi_nutanix as nutanix

    windows = nutanix.get_ndb_maintenance_windows()
    ```
    """
    __args__ = dict()
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('nutanix:index/getNdbMaintenanceWindows:getNdbMaintenanceWindows', __args__, opts=opts, typ=GetNdbMaintenanceWindowsResult).value

    return AwaitableGetNdbMaintenanceWindowsResult(
        id=pulumi.get(__ret__, 'id'),
        maintenance_windows=pulumi.get(__ret__, 'maintenance_windows'))
def get_ndb_maintenance_windows_output(opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetNdbMaintenanceWindowsResult]:
    """
    List of maintenance windows in Nutanix Database Service

    ## Example Usage

    ```python
    import pulumi
    import pulumi_nutanix as nutanix

    windows = nutanix.get_ndb_maintenance_windows()
    ```
    """
    __args__ = dict()
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('nutanix:index/getNdbMaintenanceWindows:getNdbMaintenanceWindows', __args__, opts=opts, typ=GetNdbMaintenanceWindowsResult)
    return __ret__.apply(lambda __response__: GetNdbMaintenanceWindowsResult(
        id=pulumi.get(__response__, 'id'),
        maintenance_windows=pulumi.get(__response__, 'maintenance_windows')))
