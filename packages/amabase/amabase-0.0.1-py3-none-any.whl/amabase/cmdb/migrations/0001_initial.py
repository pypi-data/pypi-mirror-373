# Generated by Django 5.2.5 on 2025-08-27 15:47

import django.db.models.deletion
import django.db.models.functions.datetime
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True)),
                ('fullname', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('ref', models.CharField(blank=True, max_length=30, null=True)),
                ('public_url', models.CharField(blank=True, max_length=255)),
                ('comments', models.TextField(blank=True, db_default='')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_default=django.db.models.functions.datetime.Now())),
                ('updated_at', models.DateTimeField(auto_now=True, db_default=django.db.models.functions.datetime.Now())),
                ('created_by', models.ForeignKey(editable=False, on_delete=models.SET(-1), related_name='+', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(editable=False, on_delete=models.SET(-1), related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'product',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Cluster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True)),
                ('serial', models.CharField(blank=True, max_length=30, null=True)),
                ('comments', models.TextField(blank=True, db_default='')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_default=django.db.models.functions.datetime.Now())),
                ('updated_at', models.DateTimeField(auto_now=True, db_default=django.db.models.functions.datetime.Now())),
                ('created_by', models.ForeignKey(editable=False, on_delete=models.SET(-1), related_name='+', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(editable=False, on_delete=models.SET(-1), related_name='+', to=settings.AUTH_USER_MODEL)),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, to='cmdb.product')),
            ],
            options={
                'verbose_name': 'cluster',
                'ordering': ['name'],
                'unique_together': {('product', 'serial')},
            },
        ),
        migrations.CreateModel(
            name='Site',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(help_text='Trigramme du site.', max_length=3, unique=True)),
                ('name', models.CharField(max_length=30, unique=True)),
                ('num', models.SmallIntegerField(db_default=100, default=100, help_text="Numéro d'ordre du site, notamment dans l'adressage IP des équipements multi-site.")),
                ('comments', models.TextField(blank=True, db_default='')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_default=django.db.models.functions.datetime.Now())),
                ('updated_at', models.DateTimeField(auto_now=True, db_default=django.db.models.functions.datetime.Now())),
                ('created_by', models.ForeignKey(editable=False, on_delete=models.SET(-1), related_name='+', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(editable=False, on_delete=models.SET(-1), related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'site',
                'ordering': ['num', 'code'],
            },
        ),
        migrations.CreateModel(
            name='Vendor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True)),
                ('fullname', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('public_url', models.CharField(blank=True, max_length=255)),
                ('comments', models.TextField(blank=True, db_default='')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_default=django.db.models.functions.datetime.Now())),
                ('updated_at', models.DateTimeField(auto_now=True, db_default=django.db.models.functions.datetime.Now())),
                ('created_by', models.ForeignKey(editable=False, on_delete=models.SET(-1), related_name='+', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(editable=False, on_delete=models.SET(-1), related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'vendor',
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='product',
            name='vendor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='cmdb.vendor'),
        ),
        migrations.CreateModel(
            name='HostDisk',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pos', models.SmallIntegerField(blank=True, null=True)),
                ('mountpoint', models.CharField(blank=True, max_length=30, null=True)),
                ('serial', models.CharField(blank=True, max_length=30, null=True)),
                ('volume_nature', models.CharField(blank=True, max_length=30)),
                ('capacity_gib', models.DecimalField(blank=True, decimal_places=2, help_text='Capacity in GiB provided to the host.', max_digits=9, null=True)),
                ('comments', models.TextField(blank=True, db_default='')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_default=django.db.models.functions.datetime.Now())),
                ('updated_at', models.DateTimeField(auto_now=True, db_default=django.db.models.functions.datetime.Now())),
                ('created_by', models.ForeignKey(editable=False, on_delete=models.SET(-1), related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent_volume', models.ForeignKey(blank=True, help_text='Parent volume.', null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='child_set', to='cmdb.hostdisk')),
                ('updated_by', models.ForeignKey(editable=False, on_delete=models.SET(-1), related_name='+', to=settings.AUTH_USER_MODEL)),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, to='cmdb.product')),
                ('host', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='cmdb.site')),
            ],
            options={
                'verbose_name': 'disk',
                'ordering': ['host', 'pos'],
                'unique_together': {('host', 'mountpoint'), ('host', 'pos'), ('product', 'serial')},
            },
        ),
        migrations.CreateModel(
            name='Host',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True)),
                ('slug', models.SlugField(max_length=30, unique=True)),
                ('nature', models.CharField(choices=[('S', 'Server'), ('W', 'Workstation'), ('C', 'Chassis'), ('H', 'Switch'), ('R', 'Router'), ('F', 'Firewall')], help_text='Main nature of the host.', max_length=1)),
                ('location', models.CharField(blank=True, help_text='Location of the host within the site.', max_length=30)),
                ('serial', models.CharField(blank=True, max_length=30, null=True)),
                ('management_url', models.CharField(blank=True, max_length=255)),
                ('cpu_cores', models.SmallIntegerField(blank=True, help_text='Number of CPU cores.', null=True)),
                ('ram_gib', models.DecimalField(blank=True, decimal_places=2, help_text='Random access memory in GiB.', max_digits=9, null=True)),
                ('comments', models.TextField(blank=True, db_default='')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_default=django.db.models.functions.datetime.Now())),
                ('updated_at', models.DateTimeField(auto_now=True, db_default=django.db.models.functions.datetime.Now())),
                ('cluster', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, to='cmdb.cluster')),
                ('created_by', models.ForeignKey(editable=False, on_delete=models.SET(-1), related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, help_text='Parent chassis/frame.', null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='child_set', to='cmdb.host')),
                ('updated_by', models.ForeignKey(editable=False, on_delete=models.SET(-1), related_name='+', to=settings.AUTH_USER_MODEL)),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, to='cmdb.product')),
                ('site', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, to='cmdb.site')),
            ],
            options={
                'verbose_name': 'host',
                'ordering': ['name'],
                'unique_together': {('product', 'serial')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='product',
            unique_together={('vendor', 'ref')},
        ),
    ]
