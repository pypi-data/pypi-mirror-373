[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "pytest-deepassert"
version = "0.1.3"
description = "A pytest plugin for enhanced assertion reporting with detailed diffs"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "Alexander Kuzmik", email = "alexander.kuzmik99@gmail.com"},
]
keywords = ["pytest", "plugin", "testing", "assertions", "diff", "debugging"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Framework :: Pytest",
    "Topic :: Software Development :: Testing",
    "Topic :: Software Development :: Debuggers",
]
dependencies = [
    "typing-extensions>=4.0.0",
    "deepdiff>=6.0.0",
    "pytest>=7.0.0",
]

[project.optional-dependencies]
dev = [
    "pre-commit>=3.0.0",
    "pytest>=6.0.0",
    "pytest-cov>=4.0.0",
    "pytest-xdist>=3.0.0",
]

[project.urls]
Homepage = "https://github.com/alexkuzmik/pytest-deepassert"
Repository = "https://github.com/alexkuzmik/pytest-deepassert"
Issues = "https://github.com/alexkuzmik/pytest-deepassert/issues"

[project.entry-points."pytest11"]
pytest-deepassert = "pytest_deepassert.plugin.hook"

[tool.hatch.build.targets.wheel]
packages = ["src/pytest_deepassert"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["pytest_deepassert"]

[tool.mypy]
follow_imports = "skip"
ignore_missing_imports = true
disallow_untyped_defs = true
disallow_untyped_calls = true
check_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

[tool.coverage.run]
source = ["src"]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
