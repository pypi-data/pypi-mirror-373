{"version":3,"file":"lib_index_js.524424c91ed66a277230.js","mappings":"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","sources":["webpack://odh-jupyter-trash-cleanup/./src/TrashIcon.tsx","webpack://odh-jupyter-trash-cleanup/./src/emptyTrashCommand.ts","webpack://odh-jupyter-trash-cleanup/./src/handler.ts","webpack://odh-jupyter-trash-cleanup/./src/index.ts"],"sourcesContent":["import { LabIcon } from '@jupyterlab/ui-components';\nimport trashIconSvg from '../style/icons/trash.svg';\n\nexport const trashIcon = new LabIcon({\n  name: 'odh-jupyter-trash-cleanup:trash',\n  svgstr: trashIconSvg\n});\n","import { requestAPI } from './handler';\nimport { showDialog, Dialog, Notification } from '@jupyterlab/apputils';\nimport { trashIcon } from './TrashIcon';\nimport { ITranslator } from '@jupyterlab/translation';\n\nexport const emptyTrashCommand = (translator: ITranslator) => {\n  const trans = translator.load('odh_jupyter_trash_cleanup');\n  return {\n    label: trans.__('Empty Trash'),\n    caption: trans.__('Empty Trash'),\n    icon: trashIcon,\n    execute: async () => {\n      const result = await showDialog({\n        title: trans.__('Empty all items from Trash?'),\n        body: trans.__('All items in the Trash will be permanently deleted.'),\n        buttons: [\n          Dialog.cancelButton({ label: trans.__('Cancel') }),\n          Dialog.okButton({ label: trans.__('Empty Trash') })\n        ]\n      });\n      if (!result.button.accept) {\n        return;\n      }\n      Notification.promise(requestAPI<any>('empty-trash', { method: 'POST' }), {\n        pending: {\n          message: trans.__('Emptying Trash...'),\n          options: { autoClose: false }\n        },\n        success: {\n          message: () => trans.__('Files successfully removed from trash.')\n        },\n        error: { message: () => trans.__('Error removing files from trash') }\n      });\n    }\n  };\n};\n","import { URLExt } from '@jupyterlab/coreutils';\n\nimport { ServerConnection } from '@jupyterlab/services';\n\n/**\n * Call the API extension\n *\n * @param endPoint API REST end point for the extension\n * @param init Initial values for the request\n * @returns The response body interpreted as JSON\n */\nexport async function requestAPI<T>(\n  endPoint = '',\n  init: RequestInit = {}\n): Promise<T> {\n  // Make request to Jupyter API\n  const settings = ServerConnection.makeSettings();\n  const requestUrl = URLExt.join(\n    settings.baseUrl,\n    'odh-jupyter-trash-cleanup', // API Namespace\n    endPoint\n  );\n\n  let response: Response;\n  try {\n    response = await ServerConnection.makeRequest(requestUrl, init, settings);\n  } catch (error) {\n    throw new ServerConnection.NetworkError(error as any);\n  }\n\n  let data: any = await response.text();\n\n  if (data.length > 0) {\n    try {\n      data = JSON.parse(data);\n    } catch (error) {\n      console.log('Not a JSON response body.', response);\n    }\n  }\n\n  if (!response.ok) {\n    throw new ServerConnection.ResponseError(response, data.message || data);\n  }\n\n  return data;\n}\n","import {\n  JupyterFrontEnd,\n  JupyterFrontEndPlugin\n} from '@jupyterlab/application';\n\nimport { ICommandPalette } from '@jupyterlab/apputils';\nimport { ITranslator } from '@jupyterlab/translation';\nimport { emptyTrashCommand } from './emptyTrashCommand';\n\nconst ODH_IDE_CLEAR_TRASH_COMMAND = 'odh-ide:clear-trash';\nconst ODH_IDE_CATEGORY = 'ODH IDE';\n/**\n * Initialization data for the odh-jupyter-trash-cleanup extension.\n */\nconst plugin: JupyterFrontEndPlugin<void> = {\n  id: 'odh-jupyter-trash-cleanup:plugin',\n  description:\n    'A JupyterLab extension to allow users to clean the trash from the JupyterLab UI',\n  autoStart: true,\n  requires: [ICommandPalette, ITranslator],\n  activate: (\n    app: JupyterFrontEnd,\n    commandPalette: ICommandPalette,\n    translator: ITranslator\n  ) => {\n    console.log('JupyterLab extension odh-jupyter-trash-cleanup is activated!');\n    const { commands } = app;\n\n    commands.addCommand(\n      ODH_IDE_CLEAR_TRASH_COMMAND,\n      emptyTrashCommand(translator)\n    );\n    commandPalette.addItem({\n      command: ODH_IDE_CLEAR_TRASH_COMMAND,\n      category: ODH_IDE_CATEGORY,\n      args: { origin: 'from palette' }\n    });\n  }\n};\n\nexport default plugin;\n"],"names":[],"sourceRoot":""}