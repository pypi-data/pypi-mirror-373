[project]
name = "px_processor"
version = "0.2.4"
description = "Process and validate JSON and CSV data with ease."
readme = "README.md"
license = "MIT"


authors = [
    { name = "pratheesh-prakash", email = "pratheesh.prakash@cognext.ai" },
]
maintainers = [
    { name = "pratheesh-prakash", email = "pratheesh.prakash@cognext.ai" },
]
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Development Status :: 4 - Beta",
    "Operating System :: OS Independent",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "Intended Audience :: Science/Research",
    "Topic :: Software Development :: Pre-processors",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: File Formats :: JSON",
]
keywords = [
    "json",
    "csv",
    "data",
    "processor",
    "validation",
    "pre-processing",
    "data-processing",
    "data-validation",
    "data-pre-processing",
    "data-processor",
    "json-processor",
    "csv-processor",
    "json-validation",
    "csv-validation",
    "json-pre-processing",
    "csv-pre-processing",
    "json-data-processing",
    "csv-data-processing",
    "json-data-validation",
    "csv-data-validation",
    "json-data-pre-processing",
    "csv-data-pre-processing",
    "json-data-processor",
    "csv-data",
]
requires-python = ">=3.10.15"
dependencies = [
    "numba>=0.61.0",
    "orjson>=3.10.12",
    "polars>=1.32.1",
    "pyarrow>=19.0.0",
    "pydantic>=2.10.1",
    "pydantic-settings>=2.8.1",
]

[project.optional-dependencies]
pandas = ["pandas>=2.2.3"]
polars = ["polars>=1.20.0"]


[tool.uv]
compile-bytecode = true
upgrade = true

[build-system]
requires = ["uv_build>=0.8.0,<0.9.0"]
build-backend = "uv_build"

[dependency-groups]
dev = [
    "git-cliff",
    "isort>=6.0.1",
    "jupyterlab>=4.4.4",
    "mypy>=1.14.1",
    "pandas-stubs>=2.3.0.250703",
    "pytest>=8.4.1",
    "pytest-mock>=3.14.0",
    "refurb>=2.0.0",
    "ruff>=0.12.1",
]

[tool.pytest.ini_options]

console_output_style = "progress"
markers = ["integration: Integration tests.", "unit: Unit tests."]

[tool.mypy]

strict = true
plugins = ["pydantic.mypy"]
follow_imports = "normal"
exclude = ["(?x)(.*/tests/.*)", "^test_*.py$"]
python_version = "3.10"

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true
warn_untyped_fields = false


[tool.isort]

profile = "black"
py_version = "310"
line_length = 116


[tool.pylama]

linters = ["pycodestyle", "pydocstyle", "pep8", "pyflakes", "mccabe"]
async = true


[tool.pycodestyle]

statistics = true
max-line-length = 100

[tool.pydocstyle]

convention = "numpy"

[tool.refurb]

enable_all = true
python_version = "3.10"

[tool.ruff]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "main.yml",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    ".vscode",
    ".pytest_cache",
    "*/schema/",
    "**/tests/**",
    "test_*.py",
]
line-length = 100
target-version = "py310"
fix = true

[tool.ruff.lint]
preview = true
select = ["ALL"]
ignore = [
    "D203",
    "D213",
    "E402",
    "SIM115",
    "C416",
    "C419",
    "DTZ011",
    "CPY001",
    "COM812",
    "ISC001",
    "EXE002",
]
fixable = ["ALL"]
unfixable = []
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
exclude = ["*.pyi"]
preview = true

[tool.ruff.lint.isort]
case-sensitive = true

[tool.ruff.lint.pylint]
max-args = 25
max-statements = 75
max-public-methods = 30

[tool.bandit]
exclude_dirs = ["tests/"]

[tool.ruff.lint.pycodestyle]
ignore-overlong-task-comments = true

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.bumpversion]
current_version = "0.2.0"
parse = "(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)"
serialize = ["{major}.{minor}.{patch}"]
search = "version = \"{current_version}\""
replace = "version = \"{new_version}\""
commit = true
tag = true

[[tool.bumpversion.files]]
filename = "pyproject.toml"
allow_dirty = true

[tool.git-cliff]
repository = "https://github.com/cognext/processor/"
tag-filter = "^v"
unreleased-label = "Unreleased"
sections = [
    { type = "feat", title = "Features" },
    { type = "fix", title = "Bug Fixes" },
    { type = "docs", title = "Documentation" },
    { type = "style", title = "Styles" },
    { type = "refactor", title = "Refactors" },
    { type = "perf", title = "Performance Improvements" },
    { type = "test", title = "Tests" },
    { type = "build", title = "Build System" },
    { type = "ci", title = "Continuous Integration" },
    { type = "chore", title = "Chores" },
]
