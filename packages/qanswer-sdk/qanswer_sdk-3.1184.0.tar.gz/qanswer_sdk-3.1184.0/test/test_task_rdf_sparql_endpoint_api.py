# coding: utf-8

"""
    QAnswer: Api Documentation

    APIs provided by QAnswer

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from qanswer-sdk.api.task_rdf_sparql_endpoint_api import TaskRDFSparqlEndpointApi


class TestTaskRDFSparqlEndpointApi(unittest.TestCase):
    """TaskRDFSparqlEndpointApi unit test stubs"""

    def setUp(self) -> None:
        self.api = TaskRDFSparqlEndpointApi()

    def tearDown(self) -> None:
        pass

    def test_format(self) -> None:
        """Test case for format

        API to pretty format a SPARQL query.
        """
        pass

    def test_has_index(self) -> None:
        """Test case for has_index

        API to check if the lucene index is generated
        """
        pass

    def test_is_merging(self) -> None:
        """Test case for is_merging

        API to check if the store is in a merge state or not.
        """
        pass

    def test_load_data(self) -> None:
        """Test case for load_data

        API to load RDF data into the endpoint.
        """
        pass

    def test_merge_store(self) -> None:
        """Test case for merge_store

        API to trigger a merge. All triples in the delta are merged into the main store
        """
        pass

    def test_prefixes(self) -> None:
        """Test case for prefixes

        API to get the default prefixes used over a dataset
        """
        pass

    def test_rdf_expansion(self) -> None:
        """Test case for rdf_expansion

        text2RDF endpoint over a dataset
        """
        pass

    def test_reindex(self) -> None:
        """Test case for reindex

        API to reindex the lucene index
        """
        pass

    def test_set_prefixes(self) -> None:
        """Test case for set_prefixes

        API to set the default prefixes used over a dataset
        """
        pass

    def test_sparql_endpoint(self) -> None:
        """Test case for sparql_endpoint

        SPARQL endpoint over a dataset
        """
        pass

    def test_sparql_endpoint1(self) -> None:
        """Test case for sparql_endpoint1

        SPARQL endpoint over a dataset
        """
        pass


if __name__ == '__main__':
    unittest.main()
