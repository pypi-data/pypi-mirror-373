# coding: utf-8

"""
    QAnswer: Api Documentation

    APIs provided by QAnswer

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from qanswer-sdk.models.g_drive_download_request import GDriveDownloadRequest

class TestGDriveDownloadRequest(unittest.TestCase):
    """GDriveDownloadRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GDriveDownloadRequest:
        """Test GDriveDownloadRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GDriveDownloadRequest`
        """
        model = GDriveDownloadRequest()
        if include_optional:
            return GDriveDownloadRequest(
                username = '',
                dataset = '',
                account_id = '',
                connector_id = 56,
                quota = 56,
                ids = qanswer-sdk.models.g_drive_download_by_ids.GDriveDownloadByIds(
                    files = [
                        ''
                        ], 
                    folders = [
                        ''
                        ], )
            )
        else:
            return GDriveDownloadRequest(
                username = '',
                dataset = '',
                connector_id = 56,
                ids = qanswer-sdk.models.g_drive_download_by_ids.GDriveDownloadByIds(
                    files = [
                        ''
                        ], 
                    folders = [
                        ''
                        ], ),
        )
        """

    def testGDriveDownloadRequest(self):
        """Test GDriveDownloadRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
