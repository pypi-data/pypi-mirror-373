# coding: utf-8

"""
    QAnswer: Api Documentation

    APIs provided by QAnswer

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from qanswer-sdk.models.dataset_schema import DatasetSchema

class TestDatasetSchema(unittest.TestCase):
    """DatasetSchema unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DatasetSchema:
        """Test DatasetSchema
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DatasetSchema`
        """
        model = DatasetSchema()
        if include_optional:
            return DatasetSchema(
                id = 56,
                dataset = '',
                username = '',
                index_hash = '',
                do_ocr = True,
                language = '',
                is_updating = True,
                use_reader = True,
                use_ranker = True,
                use_fallback = True,
                top_k_retriever = 56,
                top_k_reader = 56,
                top_k_ranker = 56,
                return_no_ans = True,
                no_ans_boost = 1.337,
                max_seq_len = 56,
                doc_stride = 56,
                max_ans_len = 56,
                weight_title = 1.337,
                weight_text = 1.337,
                split_by = '',
                split_len = 56,
                split_overlap = 56,
                llm_choice = '',
                bot_name = '',
                bot_description = '',
                bot_mode = '',
                bot_knowledge = '',
                bot_answer_length = '',
                bot_seed = 56,
                bot_temperature = 1.337,
                prompt = '',
                number_of_references = 56,
                stream_speed = 1.337,
                initial_message = '',
                track_geo = True,
                creation_date = '',
                use_training = True,
                embedding_model = '',
                data_storage_preference = 'store_all',
                logs_visibility_policy = 'show_all',
                dataset_type = 'default',
                widget_configs = qanswer-sdk.models.widget_configs.WidgetConfigs(
                    init_msg = '', 
                    theme = '', 
                    open_default = True, 
                    font = '', 
                    color_primary = '', 
                    color_secondary = '', 
                    align = '', 
                    offset_x = 56, 
                    offset_y = 56, 
                    show_powered_by = True, ),
                n_tokens = 56
            )
        else:
            return DatasetSchema(
                id = 56,
                dataset = '',
                username = '',
                widget_configs = qanswer-sdk.models.widget_configs.WidgetConfigs(
                    init_msg = '', 
                    theme = '', 
                    open_default = True, 
                    font = '', 
                    color_primary = '', 
                    color_secondary = '', 
                    align = '', 
                    offset_x = 56, 
                    offset_y = 56, 
                    show_powered_by = True, ),
        )
        """

    def testDatasetSchema(self):
        """Test DatasetSchema"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
