# coding: utf-8

"""
    QAnswer: Api Documentation

    APIs provided by QAnswer

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from qanswer-sdk.models.search_task_settings import SearchTaskSettings

class TestSearchTaskSettings(unittest.TestCase):
    """SearchTaskSettings unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SearchTaskSettings:
        """Test SearchTaskSettings
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SearchTaskSettings`
        """
        model = SearchTaskSettings()
        if include_optional:
            return SearchTaskSettings(
                prompt = '',
                llm_choice = '',
                bot_seed = 56,
                bot_temperature = 1.337,
                bot_answer_length = 'short',
                number_of_references = 56,
                stream_speed = 1.337,
                context_window = 56,
                max_tokens = 56,
                bot_name = '',
                bot_description = '',
                llm_details = qanswer-sdk.models.llm_details.LLMDetails(
                    onpremise = True, 
                    description = '', 
                    display_name = '', 
                    name = '', 
                    sensitivity_label = '', 
                    min_context_window = 56, 
                    max_context_window = 56, 
                    modality = 'text', ),
                query_expansion_prompt = '',
                show_date_in_sources = True,
                slots_values = {
                    'key' : ''
                    },
                selected_aggregations = [
                    ''
                    ]
            )
        else:
            return SearchTaskSettings(
                llm_details = qanswer-sdk.models.llm_details.LLMDetails(
                    onpremise = True, 
                    description = '', 
                    display_name = '', 
                    name = '', 
                    sensitivity_label = '', 
                    min_context_window = 56, 
                    max_context_window = 56, 
                    modality = 'text', ),
        )
        """

    def testSearchTaskSettings(self):
        """Test SearchTaskSettings"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
