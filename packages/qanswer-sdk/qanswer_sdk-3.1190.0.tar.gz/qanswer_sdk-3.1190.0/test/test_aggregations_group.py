# coding: utf-8

"""
    QAnswer: Api Documentation

    APIs provided by QAnswer

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from qanswer-sdk.models.aggregations_group import AggregationsGroup

class TestAggregationsGroup(unittest.TestCase):
    """AggregationsGroup unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AggregationsGroup:
        """Test AggregationsGroup
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AggregationsGroup`
        """
        model = AggregationsGroup()
        if include_optional:
            return AggregationsGroup(
                group_name = '',
                aggregations = {
                    'key' : qanswer-sdk.models.aggregation.Aggregation(
                        display_name = '', 
                        type = 'keyword', 
                        applied_filters = qanswer-sdk.models.applied_metadata_filter.AppliedMetadataFilter(
                            key = '', 
                            value = qanswer-sdk.models.value.value(), 
                            type = 'auto_filter', ), 
                        buckets = [
                            qanswer-sdk.models.terms_bucket.TermsBucket(
                                doc_count = 56, 
                                key = qanswer-sdk.models.key.key(), )
                            ], )
                    }
            )
        else:
            return AggregationsGroup(
                group_name = '',
                aggregations = {
                    'key' : qanswer-sdk.models.aggregation.Aggregation(
                        display_name = '', 
                        type = 'keyword', 
                        applied_filters = qanswer-sdk.models.applied_metadata_filter.AppliedMetadataFilter(
                            key = '', 
                            value = qanswer-sdk.models.value.value(), 
                            type = 'auto_filter', ), 
                        buckets = [
                            qanswer-sdk.models.terms_bucket.TermsBucket(
                                doc_count = 56, 
                                key = qanswer-sdk.models.key.key(), )
                            ], )
                    },
        )
        """

    def testAggregationsGroup(self):
        """Test AggregationsGroup"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
