# coding: utf-8

"""
    QAnswer: Api Documentation

    APIs provided by QAnswer

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from qanswer-sdk.api.ai_assistant_access_rights_api import AiAssistantAccessRightsApi


class TestAiAssistantAccessRightsApi(unittest.TestCase):
    """AiAssistantAccessRightsApi unit test stubs"""

    def setUp(self) -> None:
        self.api = AiAssistantAccessRightsApi()

    def tearDown(self) -> None:
        pass

    def test_check_api_key(self) -> None:
        """Test case for check_api_key

        Can be used to check if an API key is valid
        """
        pass

    def test_create_access_controll_origin(self) -> None:
        """Test case for create_access_controll_origin

        Sets a new access control origin header to access the dataset from the widget
        """
        pass

    def test_create_api_key1(self) -> None:
        """Test case for create_api_key1

        Creates a new API key
        """
        pass

    def test_delete_api_key1(self) -> None:
        """Test case for delete_api_key1

        Deletes an API key
        """
        pass

    def test_delete_share(self) -> None:
        """Test case for delete_share

        Delete the access of a user to the AI assistant.
        """
        pass

    def test_delete_share_organization(self) -> None:
        """Test case for delete_share_organization

        Delete the access of an organization to the AI assistant.
        """
        pass

    def test_delete_share_team(self) -> None:
        """Test case for delete_share_team

        Delete the access of a team to the AI assistant.
        """
        pass

    def test_get_access(self) -> None:
        """Test case for get_access

        To check if the AI assistant can be accessed publicly.
        """
        pass

    def test_get_access_right(self) -> None:
        """Test case for get_access_right

        Returns the access right on the Ai Assistant
        """
        pass

    def test_get_api_keys1(self) -> None:
        """Test case for get_api_keys1

        Retrieves all API keys
        """
        pass

    def test_get_share(self) -> None:
        """Test case for get_share

        To check by which users the AI assistant can be accessed.
        """
        pass

    def test_get_share_organization(self) -> None:
        """Test case for get_share_organization

        To check by which organizations the AI assistant can be accessed.
        """
        pass

    def test_get_share_team(self) -> None:
        """Test case for get_share_team

        To check by which teams the AI assistant can be accessed.
        """
        pass

    def test_set_access(self) -> None:
        """Test case for set_access

        To set if the AI assistant can be accessed publicly (by everyone or only to logged in users).
        """
        pass

    def test_set_share(self) -> None:
        """Test case for set_share

        To share the dataset to a new user
        """
        pass

    def test_set_share_organization(self) -> None:
        """Test case for set_share_organization

        To share the dataset with a new organization.
        """
        pass

    def test_set_share_team(self) -> None:
        """Test case for set_share_team

        To share the dataset with a new team
        """
        pass


if __name__ == '__main__':
    unittest.main()
