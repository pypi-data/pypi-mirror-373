# coding: utf-8

"""
    QAnswer: Api Documentation

    APIs provided by QAnswer

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from qanswer-sdk.api.admin_api import AdminApi


class TestAdminApi(unittest.TestCase):
    """AdminApi unit test stubs"""

    def setUp(self) -> None:
        self.api = AdminApi()

    def tearDown(self) -> None:
        pass

    def test_activate(self) -> None:
        """Test case for activate

        Confirm key of a user send by e-mail on registration
        """
        pass

    def test_admin_all(self) -> None:
        """Test case for admin_all

        Get a list of all users
        """
        pass

    def test_admin_remove(self) -> None:
        """Test case for admin_remove

        Remove a user
        """
        pass

    def test_admin_signup(self) -> None:
        """Test case for admin_signup

        Create a new user
        """
        pass

    def test_block(self) -> None:
        """Test case for block

        Set the blocking status of a user
        """
        pass

    def test_change_password_admin(self) -> None:
        """Test case for change_password_admin

        Change the password for a user
        """
        pass

    def test_change_pricing_plan(self) -> None:
        """Test case for change_pricing_plan

        Change the pricing plan for a user
        """
        pass

    def test_change_quota(self) -> None:
        """Test case for change_quota

        Change the quota for all datasets
        """
        pass

    def test_change_role_admin(self) -> None:
        """Test case for change_role_admin

        Change the the role of a user
        """
        pass

    def test_create_embedding_endpoint(self) -> None:
        """Test case for create_embedding_endpoint

        Create a new embedder endpoint
        """
        pass

    def test_create_llm_endpoint(self) -> None:
        """Test case for create_llm_endpoint

        Create a new LLM endpoint
        """
        pass

    def test_default_branding_data(self) -> None:
        """Test case for default_branding_data

        Reset the default branding data (such as app title) that is used across the application
        """
        pass

    def test_default_logo(self) -> None:
        """Test case for default_logo

        Reset the default logo brand across the application
        """
        pass

    def test_delete_embedding_endpoint(self) -> None:
        """Test case for delete_embedding_endpoint

        Delete an embedder endpoint
        """
        pass

    def test_delete_llm_endpoint(self) -> None:
        """Test case for delete_llm_endpoint

        Delete an LLM endpoint
        """
        pass

    def test_get_ai_assistant(self) -> None:
        """Test case for get_ai_assistant

        Get details of an ai assistant
        """
        pass

    def test_get_branding_data(self) -> None:
        """Test case for get_branding_data

        Retrieves the branding data (such as app title) that is used across the application
        """
        pass

    def test_get_branding_system_prompt(self) -> None:
        """Test case for get_branding_system_prompt

        Get the branding system prompt
        """
        pass

    def test_get_embedding_endpoint_by_id(self) -> None:
        """Test case for get_embedding_endpoint_by_id

        Get an embedder endpoint by id
        """
        pass

    def test_get_embedding_endpoint_by_name(self) -> None:
        """Test case for get_embedding_endpoint_by_name

        Get an embedder endpoint by name
        """
        pass

    def test_get_embedding_endpoints(self) -> None:
        """Test case for get_embedding_endpoints

        Get the list of embedder endpoints
        """
        pass

    def test_get_llm_endpoint_by_id(self) -> None:
        """Test case for get_llm_endpoint_by_id

        Get an LLM endpoint by id
        """
        pass

    def test_get_llm_endpoint_by_name1(self) -> None:
        """Test case for get_llm_endpoint_by_name1

        Get an LLM endpoint by name
        """
        pass

    def test_get_llm_endpoint_default_prompts(self) -> None:
        """Test case for get_llm_endpoint_default_prompts

        Get the default prompts for an LLM endpoint
        """
        pass

    def test_get_llm_endpoints(self) -> None:
        """Test case for get_llm_endpoints

        Get the list of LLM endpoints
        """
        pass

    def test_get_logo2(self) -> None:
        """Test case for get_logo2

        Retrieves the logo that is used across the application
        """
        pass

    def test_get_logo3(self) -> None:
        """Test case for get_logo3

        Get the logo of the ai assistant
        """
        pass

    def test_get_statistics_of_conversation_over_time(self) -> None:
        """Test case for get_statistics_of_conversation_over_time

        Get the conversation statistics of all users/datasets over time
        """
        pass

    def test_get_statistics_of_count_info(self) -> None:
        """Test case for get_statistics_of_count_info

        Get the total count of users, datasets, conversations and messages
        """
        pass

    def test_get_statistics_of_dataset_over_time(self) -> None:
        """Test case for get_statistics_of_dataset_over_time

        Get the dataset statistics of all users over time
        """
        pass

    def test_get_statistics_of_message_over_time(self) -> None:
        """Test case for get_statistics_of_message_over_time

        Get the message statistics of all users/datasets over time
        """
        pass

    def test_get_statistics_of_user_over_time(self) -> None:
        """Test case for get_statistics_of_user_over_time

        Get the user statistics over time
        """
        pass

    def test_reset_branding_system_prompt(self) -> None:
        """Test case for reset_branding_system_prompt

        Reset the branding system prompt
        """
        pass

    def test_reset_token_quota(self) -> None:
        """Test case for reset_token_quota

        Reset the token usage for the user
        """
        pass

    def test_search_users1(self) -> None:
        """Test case for search_users1

        Search over all users
        """
        pass

    def test_set_branding_data(self) -> None:
        """Test case for set_branding_data

        Set the branding data (such as app title) that is used across the application
        """
        pass

    def test_set_branding_system_prompt(self) -> None:
        """Test case for set_branding_system_prompt

        Set the branding system prompt
        """
        pass

    def test_update_embedding_endpoint(self) -> None:
        """Test case for update_embedding_endpoint

        Update an embedder endpoint
        """
        pass

    def test_update_llm_endpoint(self) -> None:
        """Test case for update_llm_endpoint

        Update an LLM endpoint
        """
        pass

    def test_upload_logo(self) -> None:
        """Test case for upload_logo

        Set the logo across the application
        """
        pass

    def test_validate_embedding_endpoint_by_id(self) -> None:
        """Test case for validate_embedding_endpoint_by_id

        Validate an embedder endpoint by id
        """
        pass

    def test_validate_llm_endpoint_by_id(self) -> None:
        """Test case for validate_llm_endpoint_by_id

        Validate an LLM endpoint by id
        """
        pass


if __name__ == '__main__':
    unittest.main()
