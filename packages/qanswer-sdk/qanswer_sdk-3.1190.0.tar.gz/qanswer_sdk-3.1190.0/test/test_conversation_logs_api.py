# coding: utf-8

"""
    QAnswer: Api Documentation

    APIs provided by QAnswer

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from qanswer-sdk.api.conversation_logs_api import ConversationLogsApi


class TestConversationLogsApi(unittest.TestCase):
    """ConversationLogsApi unit test stubs"""

    def setUp(self) -> None:
        self.api = ConversationLogsApi()

    def tearDown(self) -> None:
        pass

    def test_delete(self) -> None:
        """Test case for delete

        To delete a specific conversation by its ID and username
        """
        pass

    def test_delete_all_chatbot_conversations(self) -> None:
        """Test case for delete_all_chatbot_conversations

        To delete all conversations of chatbot playground
        """
        pass

    def test_delete_by_conversation_id(self) -> None:
        """Test case for delete_by_conversation_id

        To delete a specific conversation by its ID and username
        """
        pass

    def test_delete_by_username(self) -> None:
        """Test case for delete_by_username

        To delete a specific conversation by its ID and username
        """
        pass

    def test_export_conversation_stats_per_user(self) -> None:
        """Test case for export_conversation_stats_per_user

        Export conversation statistics about users
        """
        pass

    def test_export_conversations(self) -> None:
        """Test case for export_conversations

        Export Conversations As CSV
        """
        pass

    def test_export_conversations_as_pdf(self) -> None:
        """Test case for export_conversations_as_pdf

        Export Conversations As PDF
        """
        pass

    def test_export_feedbacks(self) -> None:
        """Test case for export_feedbacks

        Export feedback given in a specific dataset
        """
        pass

    def test_export_response_audits_by_username_and_dataset(self) -> None:
        """Test case for export_response_audits_by_username_and_dataset

        Export statistics about questions that had no response to CSV
        """
        pass

    def test_free_text_suggestion_list(self) -> None:
        """Test case for free_text_suggestion_list

        Get a list of suggestions for a dataset
        """
        pass

    def test_get(self) -> None:
        """Test case for get

        To get a specific conversation by its ID and username
        """
        pass

    def test_get_conversation_stats(self) -> None:
        """Test case for get_conversation_stats

        To get conversation statistics on a specific dataset
        """
        pass

    def test_get_conversation_stats_per_day(self) -> None:
        """Test case for get_conversation_stats_per_day

        To get conversation statistics over time
        """
        pass

    def test_get_conversation_statsper_user(self) -> None:
        """Test case for get_conversation_statsper_user

        To get conversation statistics about users
        """
        pass

    def test_get_list_chatbot_conversations(self) -> None:
        """Test case for get_list_chatbot_conversations

        To get all conversations on the general chatbot
        """
        pass

    def test_get_list_conversations_by_username_and_dataset(self) -> None:
        """Test case for get_list_conversations_by_username_and_dataset

        To get all conversations on a specific dataset
        """
        pass

    def test_get_message_stats_per_day(self) -> None:
        """Test case for get_message_stats_per_day

        To get message statistics over time
        """
        pass

    def test_get_response_audits_by_username_and_dataset(self) -> None:
        """Test case for get_response_audits_by_username_and_dataset

        To get statistics about questions that had no response
        """
        pass

    def test_list_feedbacks(self) -> None:
        """Test case for list_feedbacks

        To list feedbacks given in specific dataset
        """
        pass

    def test_modify_title(self) -> None:
        """Test case for modify_title

        To update title of a specific conversation by its ID and username
        """
        pass

    def test_send_feedback(self) -> None:
        """Test case for send_feedback

        To send feedback about a specific Question and AI response pair in a conversation
        """
        pass


if __name__ == '__main__':
    unittest.main()
