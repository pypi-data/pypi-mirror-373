[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "morphcards"
version = "0.1.0"
description = "Spaced Spatial Repetition software with AI-generated sentence variations for language learning"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "Felipe Campos Penha", email = "felipe.penha@alumni.usp.br"}
]
maintainers = [
    {name = "Felipe Campos Penha", email = "felipe.penha@alumni.usp.br"}
]
keywords = ["spaced-repetition", "language-learning", "flashcards", "ai", "fsrs"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Education",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Education",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
requires-python = ">=3.8"
dependencies = [
    "fsrs==4.0.0",
    "duckdb>=0.9.0",
    "requests>=2.31.0",
    "openai>=1.0.0",
    "google-generativeai>=0.3.0",
    "pydantic>=2.0.0",
    "python-dotenv>=1.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "mypy>=1.0.0",
    "isort>=5.0.0",
    "pre-commit>=3.0.0",
    "pip-audit",
    "setuptools>=78.1.1",
]
demo = [
    "gradio>=4.0.0",
    "streamlit>=1.28.0",
    "websockets>=10.0",
]

[project.urls]
Homepage = "https://github.com/felipepenha/morphcards"
Documentation = "https://github.com/felipepenha/morphcards#readme"
Repository = "https://github.com/felipepenha/morphcards.git"
Issues = "https://github.com/felipepenha/morphcards/issues"
Changelog = "https://github.com/felipepenha/morphcards/blob/main/CHANGELOG.md"

[project.scripts]
morphcards = "morphcards.cli:main"

[tool.hatch.build.targets.wheel]
packages = ["src/morphcards"]

[tool.black]
line-length = 88
target-version = ["py38"]
include = ".\\.pyi?"

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "fsrs.*",
    "duckdb.*",
    "openai.*",
    "google.generativeai.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=morphcards",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["src/morphcards"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/env/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
]

[tool.ruff]
target-version = "py38"
line-length = 88
select = [
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
