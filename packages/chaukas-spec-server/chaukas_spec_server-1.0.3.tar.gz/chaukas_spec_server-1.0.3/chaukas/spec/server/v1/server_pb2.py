# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: chaukas/spec/server/v1/server.proto
# Protobuf Python Version: 6.32.0
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import runtime_version as _runtime_version
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
_runtime_version.ValidateProtobufRuntimeVersion(
    _runtime_version.Domain.PUBLIC,
    6,
    32,
    0,
    '',
    'chaukas/spec/server/v1/server.proto'
)
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from chaukas.spec.common.v1 import events_pb2 as chaukas_dot_spec_dot_common_dot_v1_dot_events__pb2
from chaukas.spec.common.v1 import query_pb2 as chaukas_dot_spec_dot_common_dot_v1_dot_query__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n#chaukas/spec/server/v1/server.proto\x12\x16\x63haukas.spec.server.v1\x1a#chaukas/spec/common/v1/events.proto\x1a\"chaukas/spec/common/v1/query.proto\"k\n\x13IngestEventResponse\x12\x19\n\x08\x65vent_id\x18\x01 \x01(\tR\x07\x65ventId\x12\x16\n\x06status\x18\x02 \x01(\tR\x06status\x12!\n\x0cprocessed_at\x18\x03 \x01(\x03R\x0bprocessedAt\"\xb1\x01\n\x18IngestEventBatchResponse\x12\x19\n\x08\x62\x61tch_id\x18\x01 \x01(\tR\x07\x62\x61tchId\x12%\n\x0e\x61\x63\x63\x65pted_count\x18\x02 \x01(\x05R\racceptedCount\x12%\n\x0erejected_count\x18\x03 \x01(\x05R\rrejectedCount\x12,\n\x12rejected_event_ids\x18\x04 \x03(\tR\x10rejectedEventIds\"\x94\x01\n\x14GetEventStatsRequest\x12\x1b\n\ttenant_id\x18\x01 \x01(\tR\x08tenantId\x12\x1d\n\nproject_id\x18\x02 \x01(\tR\tprojectId\x12@\n\ntime_range\x18\x03 \x01(\x0b\x32!.chaukas.spec.common.v1.TimeRangeR\ttimeRange\"\xc0\x02\n\x15GetEventStatsResponse\x12!\n\x0ctotal_events\x18\x01 \x01(\x03R\x0btotalEvents\x12%\n\x0etotal_sessions\x18\x02 \x01(\x03R\rtotalSessions\x12\x65\n\x0e\x65vents_by_type\x18\x03 \x03(\x0b\x32?.chaukas.spec.server.v1.GetEventStatsResponse.EventsByTypeEntryR\x0c\x65ventsByType\x12\x35\n\x17\x61vg_session_duration_ms\x18\x04 \x01(\x01R\x14\x61vgSessionDurationMs\x1a?\n\x11\x45ventsByTypeEntry\x12\x10\n\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n\x05value\x18\x02 \x01(\x03R\x05value:\x02\x38\x01\"\x10\n\x0eHealthzRequest\"\x11\n\x0fHealthzResponse\"\x18\n\x16GetCapabilitiesRequest\"c\n\x17GetCapabilitiesResponse\x12H\n\x0c\x63\x61pabilities\x18\x01 \x01(\x0b\x32$.chaukas.spec.common.v1.CapabilitiesR\x0c\x63\x61pabilities\"I\n\x12IngestEventRequest\x12\x33\n\x05\x65vent\x18\x01 \x01(\x0b\x32\x1d.chaukas.spec.common.v1.EventR\x05\x65vent\"^\n\x17IngestEventBatchRequest\x12\x43\n\x0b\x65vent_batch\x18\x01 \x01(\x0b\x32\".chaukas.spec.common.v1.EventBatchR\neventBatch\"P\n\x12QueryEventsRequest\x12:\n\x05query\x18\x01 \x01(\x0b\x32$.chaukas.spec.common.v1.QueryRequestR\x05query\"X\n\x13QueryEventsResponse\x12\x41\n\x08response\x18\x01 \x01(\x0b\x32%.chaukas.spec.common.v1.QueryResponseR\x08response2\x9b\x05\n\x14\x43haukasServerService\x12Z\n\x07Healthz\x12&.chaukas.spec.server.v1.HealthzRequest\x1a\'.chaukas.spec.server.v1.HealthzResponse\x12r\n\x0fGetCapabilities\x12..chaukas.spec.server.v1.GetCapabilitiesRequest\x1a/.chaukas.spec.server.v1.GetCapabilitiesResponse\x12\x66\n\x0bIngestEvent\x12*.chaukas.spec.server.v1.IngestEventRequest\x1a+.chaukas.spec.server.v1.IngestEventResponse\x12u\n\x10IngestEventBatch\x12/.chaukas.spec.server.v1.IngestEventBatchRequest\x1a\x30.chaukas.spec.server.v1.IngestEventBatchResponse\x12\x66\n\x0bQueryEvents\x12*.chaukas.spec.server.v1.QueryEventsRequest\x1a+.chaukas.spec.server.v1.QueryEventsResponse\x12l\n\rGetEventStats\x12,.chaukas.spec.server.v1.GetEventStatsRequest\x1a-.chaukas.spec.server.v1.GetEventStatsResponseB5Z3github.com/chaukasai/spec/chaukas/spec/server/v1;v1b\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'chaukas.spec.server.v1.server_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  _globals['DESCRIPTOR']._loaded_options = None
  _globals['DESCRIPTOR']._serialized_options = b'Z3github.com/chaukasai/spec/chaukas/spec/server/v1;v1'
  _globals['_GETEVENTSTATSRESPONSE_EVENTSBYTYPEENTRY']._loaded_options = None
  _globals['_GETEVENTSTATSRESPONSE_EVENTSBYTYPEENTRY']._serialized_options = b'8\001'
  _globals['_INGESTEVENTRESPONSE']._serialized_start=136
  _globals['_INGESTEVENTRESPONSE']._serialized_end=243
  _globals['_INGESTEVENTBATCHRESPONSE']._serialized_start=246
  _globals['_INGESTEVENTBATCHRESPONSE']._serialized_end=423
  _globals['_GETEVENTSTATSREQUEST']._serialized_start=426
  _globals['_GETEVENTSTATSREQUEST']._serialized_end=574
  _globals['_GETEVENTSTATSRESPONSE']._serialized_start=577
  _globals['_GETEVENTSTATSRESPONSE']._serialized_end=897
  _globals['_GETEVENTSTATSRESPONSE_EVENTSBYTYPEENTRY']._serialized_start=834
  _globals['_GETEVENTSTATSRESPONSE_EVENTSBYTYPEENTRY']._serialized_end=897
  _globals['_HEALTHZREQUEST']._serialized_start=899
  _globals['_HEALTHZREQUEST']._serialized_end=915
  _globals['_HEALTHZRESPONSE']._serialized_start=917
  _globals['_HEALTHZRESPONSE']._serialized_end=934
  _globals['_GETCAPABILITIESREQUEST']._serialized_start=936
  _globals['_GETCAPABILITIESREQUEST']._serialized_end=960
  _globals['_GETCAPABILITIESRESPONSE']._serialized_start=962
  _globals['_GETCAPABILITIESRESPONSE']._serialized_end=1061
  _globals['_INGESTEVENTREQUEST']._serialized_start=1063
  _globals['_INGESTEVENTREQUEST']._serialized_end=1136
  _globals['_INGESTEVENTBATCHREQUEST']._serialized_start=1138
  _globals['_INGESTEVENTBATCHREQUEST']._serialized_end=1232
  _globals['_QUERYEVENTSREQUEST']._serialized_start=1234
  _globals['_QUERYEVENTSREQUEST']._serialized_end=1314
  _globals['_QUERYEVENTSRESPONSE']._serialized_start=1316
  _globals['_QUERYEVENTSRESPONSE']._serialized_end=1404
  _globals['_CHAUKASSERVERSERVICE']._serialized_start=1407
  _globals['_CHAUKASSERVERSERVICE']._serialized_end=2074
# @@protoc_insertion_point(module_scope)
