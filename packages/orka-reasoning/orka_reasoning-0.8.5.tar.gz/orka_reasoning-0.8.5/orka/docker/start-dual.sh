#!/bin/bash

# Orka Dual Backend Startup Script
# This script starts Orka with both Redis and Kafka backends for testing

set -e  # Exit on any error

echo "üöÄ Starting Orka with Dual Backend (Redis + Kafka)..."
echo "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"

# Stop any existing services
echo "üõë Stopping any existing services..."
docker-compose --profile dual down 2>/dev/null || true

# Build and start all services
echo "üîß Building and starting all services..."
docker-compose --profile dual up --build -d

# Wait for services to be ready
echo "‚è≥ Waiting for services to initialize..."
sleep 15

# Check Redis
echo "üîç Testing Redis connection..."
if docker-compose exec redis redis-cli ping > /dev/null 2>&1; then
    echo "‚úÖ Redis is ready!"
else
    echo "‚ùå Redis connection failed"
    exit 1
fi

# Check Kafka
echo "üîç Testing Kafka connection..."
sleep 5
if docker-compose exec kafka kafka-topics --bootstrap-server localhost:29092 --list > /dev/null 2>&1; then
    echo "‚úÖ Kafka is ready!"
else
    echo "‚ùå Kafka connection failed, trying again..."
    sleep 10
    if docker-compose exec kafka kafka-topics --bootstrap-server localhost:29092 --list > /dev/null 2>&1; then
        echo "‚úÖ Kafka is now ready!"
    else
        echo "‚ùå Kafka connection still failing"
        exit 1
    fi
fi

# Create initial Orka topics
echo "üìù Creating Orka topics..."
docker-compose exec kafka kafka-topics --bootstrap-server localhost:29092 --create --topic orka-memory-events --partitions 3 --replication-factor 1 --if-not-exists 2>/dev/null || true

# Show running services
echo "üìã Services Status:"
docker-compose --profile dual ps

echo ""
echo "‚úÖ Orka Dual Backend is now running!"
echo ""
echo "üìç Service Endpoints:"
echo "   ‚Ä¢ Orka API (Dual): http://localhost:8002"
echo "   ‚Ä¢ Redis:           localhost:6380"
echo "   ‚Ä¢ Kafka:           localhost:9092"
echo "   ‚Ä¢ Zookeeper:       localhost:2181"
echo ""
echo "üõ†Ô∏è  Management Commands:"
echo "   ‚Ä¢ View logs:        docker-compose --profile dual logs -f"
echo "   ‚Ä¢ Stop services:    docker-compose --profile dual down"
echo "   ‚Ä¢ Redis CLI:        docker-compose exec redis redis-cli"
echo "   ‚Ä¢ List topics:      docker-compose exec kafka kafka-topics --bootstrap-server localhost:29092 --list"
echo ""
echo "üîß Environment Variables (Default):"
echo "   ‚Ä¢ ORKA_MEMORY_BACKEND=redis (can be changed to kafka)"
echo "   ‚Ä¢ REDIS_URL=redis://redis:6380/0"
echo "   ‚Ä¢ KAFKA_BOOTSTRAP_SERVERS=kafka:29092"
echo "   ‚Ä¢ KAFKA_TOPIC_PREFIX=orka-memory"
echo ""
echo "üí° Switch backend by setting ORKA_MEMORY_BACKEND environment variable"
echo "" 