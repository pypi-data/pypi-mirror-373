Root:
        component*=Component
;

Component:  Task;

Task:
    'task' name=ID '{'
        elements*=Element
    '}'
;

Element:  InputData | OutputData | Metric | Implementation | Dependency | VirtualEnv |  PythonVersion | Type | Parameter | Comment;

InputData: 'define input data' name=ID ';' ;

OutputData: 'define output data' name=ID ';' ;

Metric: 'define metric' name=ID '{'
        ('semanticType' semantic_type=METRIC_SEMANTIC_TYPE ';')?
        'kind' kind=METRIC_KIND ';'
        'type' data_type=ID ';'
    '}';

METRIC_SEMANTIC_TYPE: 'ML_Accuracy' | 'ML_Recall' | 'ML_Precision' | 'ML_F1Score' | 'Model_TrainingTime';

METRIC_KIND: 'single-value' | 'series';

Implementation: 'implementation' filename=STRING';' ;

Dependency: 'dependency' dependency=STRING';' ;

VirtualEnv: 'venv' requirements_file_path=STRING';' ;

PythonVersion: 'python_version' python_version=STRING';' ;

Type: 'type' taskType=ID';' ;

Parameter:
    'define param' name=ID '{'
        'type' type=ID ';'
        'default' (default=FLOAT | default=INT | default=STRING) ';'
        parameter_domain
    '}';

parameter_domain:
    'range' '(' param_range_int_min=INT ',' param_range_int_max=INT ')' ';' |
    'range' '(' param_range_int_min=INT ',' param_range_int_max=INT ',' param_range_int_step=INT ')' ';' |
    'range' '(' param_range_float_min=FLOAT ',' param_range_float_max=FLOAT ')' ';' |
    'range' '(' param_range_float_min=FLOAT ',' param_range_float_max=FLOAT ',' param_range_float_step=FLOAT ')' ';' |
    'enum' '(' values+=INT [','] ')' ';' |
    'enum' '(' values+=FLOAT [','] ')' ';' |
    'enum' '(' values+=STRING [','] ')' ';'
;

Comment: /\/\/.*$/;
