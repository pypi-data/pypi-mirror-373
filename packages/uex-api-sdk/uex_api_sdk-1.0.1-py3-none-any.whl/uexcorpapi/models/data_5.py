# -*- coding: utf-8 -*-

"""
uexcorpapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from uexcorpapi.api_helper import APIHelper


class Data5(object):

    """Implementation of the 'Data5' model.

    Attributes:
        date_added (str): The model property of type str.
        date_modified (str): The model property of type str.
        id (str): The model property of type str.
        ids_factions_friendly (str): The model property of type str.
        ids_factions_hostile (str): The model property of type str.
        ids_star_systems (str): The model property of type str.
        is_bounty_hunting (str): The model property of type str.
        is_piracy (str): The model property of type str.
        name (str): The model property of type str.
        wiki (str): The model property of type str.
        additional_properties (Dict[str, Any]): The additional properties for
            the model.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "date_added": 'date_added',
        "date_modified": 'date_modified',
        "id": 'id',
        "ids_factions_friendly": 'ids_factions_friendly',
        "ids_factions_hostile": 'ids_factions_hostile',
        "ids_star_systems": 'ids_star_systems',
        "is_bounty_hunting": 'is_bounty_hunting',
        "is_piracy": 'is_piracy',
        "name": 'name',
        "wiki": 'wiki'
    }

    def __init__(self,
                 date_added=None,
                 date_modified=None,
                 id=None,
                 ids_factions_friendly=None,
                 ids_factions_hostile=None,
                 ids_star_systems=None,
                 is_bounty_hunting=None,
                 is_piracy=None,
                 name=None,
                 wiki=None,
                 additional_properties=None):
        """Constructor for the Data5 class"""

        # Initialize members of the class
        self.date_added = date_added 
        self.date_modified = date_modified 
        self.id = id 
        self.ids_factions_friendly = ids_factions_friendly 
        self.ids_factions_hostile = ids_factions_hostile 
        self.ids_star_systems = ids_star_systems 
        self.is_bounty_hunting = is_bounty_hunting 
        self.is_piracy = is_piracy 
        self.name = name 
        self.wiki = wiki 

        # Add additional model properties to the instance
        if additional_properties is None:
            additional_properties = {}
        self.additional_properties = additional_properties

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        date_added = dictionary.get("date_added") if dictionary.get("date_added") else None
        date_modified = dictionary.get("date_modified") if dictionary.get("date_modified") else None
        id = dictionary.get("id") if dictionary.get("id") else None
        ids_factions_friendly = dictionary.get("ids_factions_friendly") if dictionary.get("ids_factions_friendly") else None
        ids_factions_hostile = dictionary.get("ids_factions_hostile") if dictionary.get("ids_factions_hostile") else None
        ids_star_systems = dictionary.get("ids_star_systems") if dictionary.get("ids_star_systems") else None
        is_bounty_hunting = dictionary.get("is_bounty_hunting") if dictionary.get("is_bounty_hunting") else None
        is_piracy = dictionary.get("is_piracy") if dictionary.get("is_piracy") else None
        name = dictionary.get("name") if dictionary.get("name") else None
        wiki = dictionary.get("wiki") if dictionary.get("wiki") else None
        additional_properties = APIHelper.get_additional_properties(
            dictionary={k: v for k, v in dictionary.items() if k not in cls._names.values()},
            unboxing_function=lambda value: value)
        # Return an object of this model
        return cls(date_added,
                   date_modified,
                   id,
                   ids_factions_friendly,
                   ids_factions_hostile,
                   ids_star_systems,
                   is_bounty_hunting,
                   is_piracy,
                   name,
                   wiki,
                   additional_properties)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'date_added={self.date_added!r}, '
                f'date_modified={self.date_modified!r}, '
                f'id={self.id!r}, '
                f'ids_factions_friendly={self.ids_factions_friendly!r}, '
                f'ids_factions_hostile={self.ids_factions_hostile!r}, '
                f'ids_star_systems={self.ids_star_systems!r}, '
                f'is_bounty_hunting={self.is_bounty_hunting!r}, '
                f'is_piracy={self.is_piracy!r}, '
                f'name={self.name!r}, '
                f'wiki={self.wiki!r}, '
                f'additional_properties={self.additional_properties!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'date_added={self.date_added!s}, '
                f'date_modified={self.date_modified!s}, '
                f'id={self.id!s}, '
                f'ids_factions_friendly={self.ids_factions_friendly!s}, '
                f'ids_factions_hostile={self.ids_factions_hostile!s}, '
                f'ids_star_systems={self.ids_star_systems!s}, '
                f'is_bounty_hunting={self.is_bounty_hunting!s}, '
                f'is_piracy={self.is_piracy!s}, '
                f'name={self.name!s}, '
                f'wiki={self.wiki!s}, '
                f'additional_properties={self.additional_properties!s})')
