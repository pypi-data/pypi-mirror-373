# -*- coding: utf-8 -*-

"""
uexcorpapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from uexcorpapi.api_helper import APIHelper


class Data27(object):

    """Implementation of the 'Data27' model.

    Attributes:
        city_name (Any): The model property of type Any.
        date_added (str): The model property of type str.
        date_modified (str): The model property of type str.
        faction_name (Any): The model property of type Any.
        has_cargo_center (str): The model property of type str.
        has_clinic (str): The model property of type str.
        has_docking_port (str): The model property of type str.
        has_food (str): The model property of type str.
        has_freight_elevator (str): The model property of type str.
        has_gravity (str): The model property of type str.
        has_habitation (str): The model property of type str.
        has_loading_dock (str): The model property of type str.
        has_quantum_marker (str): The model property of type str.
        has_refinery (str): The model property of type str.
        has_refuel (str): The model property of type str.
        has_repair (str): The model property of type str.
        has_shops (str): The model property of type str.
        has_trade_terminal (str): The model property of type str.
        id (str): The model property of type str.
        id_city (str): The model property of type str.
        id_faction (str): The model property of type str.
        id_jurisdiction (str): The model property of type str.
        id_moon (str): The model property of type str.
        id_orbit (str): The model property of type str.
        id_outpost (str): The model property of type str.
        id_planet (str): The model property of type str.
        id_space_station (str): The model property of type str.
        id_star_system (str): The model property of type str.
        is_armistice (str): The model property of type str.
        is_available (str): The model property of type str.
        is_available_live (str): The model property of type str.
        is_decommissioned (str): The model property of type str.
        is_default (str): The model property of type str.
        is_landable (str): The model property of type str.
        is_monitored (str): The model property of type str.
        is_visible (str): The model property of type str.
        jurisdiction_name (Any): The model property of type Any.
        moon_name (Any): The model property of type Any.
        name (str): The model property of type str.
        nickname (str): The model property of type str.
        orbit_name (str): The model property of type str.
        outpost_name (Any): The model property of type Any.
        pad_types (Any): The model property of type Any.
        planet_name (str): The model property of type str.
        space_station_name (Any): The model property of type Any.
        star_system_name (str): The model property of type str.
        subtype (str): The model property of type str.
        mtype (str): The model property of type str.
        additional_properties (Dict[str, Any]): The additional properties for
            the model.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "city_name": 'city_name',
        "date_added": 'date_added',
        "date_modified": 'date_modified',
        "faction_name": 'faction_name',
        "has_cargo_center": 'has_cargo_center',
        "has_clinic": 'has_clinic',
        "has_docking_port": 'has_docking_port',
        "has_food": 'has_food',
        "has_freight_elevator": 'has_freight_elevator',
        "has_gravity": 'has_gravity',
        "has_habitation": 'has_habitation',
        "has_loading_dock": 'has_loading_dock',
        "has_quantum_marker": 'has_quantum_marker',
        "has_refinery": 'has_refinery',
        "has_refuel": 'has_refuel',
        "has_repair": 'has_repair',
        "has_shops": 'has_shops',
        "has_trade_terminal": 'has_trade_terminal',
        "id": 'id',
        "id_city": 'id_city',
        "id_faction": 'id_faction',
        "id_jurisdiction": 'id_jurisdiction',
        "id_moon": 'id_moon',
        "id_orbit": 'id_orbit',
        "id_outpost": 'id_outpost',
        "id_planet": 'id_planet',
        "id_space_station": 'id_space_station',
        "id_star_system": 'id_star_system',
        "is_armistice": 'is_armistice',
        "is_available": 'is_available',
        "is_available_live": 'is_available_live',
        "is_decommissioned": 'is_decommissioned',
        "is_default": 'is_default',
        "is_landable": 'is_landable',
        "is_monitored": 'is_monitored',
        "is_visible": 'is_visible',
        "jurisdiction_name": 'jurisdiction_name',
        "moon_name": 'moon_name',
        "name": 'name',
        "nickname": 'nickname',
        "orbit_name": 'orbit_name',
        "outpost_name": 'outpost_name',
        "pad_types": 'pad_types',
        "planet_name": 'planet_name',
        "space_station_name": 'space_station_name',
        "star_system_name": 'star_system_name',
        "subtype": 'subtype',
        "mtype": 'type'
    }

    def __init__(self,
                 city_name=None,
                 date_added=None,
                 date_modified=None,
                 faction_name=None,
                 has_cargo_center=None,
                 has_clinic=None,
                 has_docking_port=None,
                 has_food=None,
                 has_freight_elevator=None,
                 has_gravity=None,
                 has_habitation=None,
                 has_loading_dock=None,
                 has_quantum_marker=None,
                 has_refinery=None,
                 has_refuel=None,
                 has_repair=None,
                 has_shops=None,
                 has_trade_terminal=None,
                 id=None,
                 id_city=None,
                 id_faction=None,
                 id_jurisdiction=None,
                 id_moon=None,
                 id_orbit=None,
                 id_outpost=None,
                 id_planet=None,
                 id_space_station=None,
                 id_star_system=None,
                 is_armistice=None,
                 is_available=None,
                 is_available_live=None,
                 is_decommissioned=None,
                 is_default=None,
                 is_landable=None,
                 is_monitored=None,
                 is_visible=None,
                 jurisdiction_name=None,
                 moon_name=None,
                 name=None,
                 nickname=None,
                 orbit_name=None,
                 outpost_name=None,
                 pad_types=None,
                 planet_name=None,
                 space_station_name=None,
                 star_system_name=None,
                 subtype=None,
                 mtype=None,
                 additional_properties=None):
        """Constructor for the Data27 class"""

        # Initialize members of the class
        self.city_name = city_name 
        self.date_added = date_added 
        self.date_modified = date_modified 
        self.faction_name = faction_name 
        self.has_cargo_center = has_cargo_center 
        self.has_clinic = has_clinic 
        self.has_docking_port = has_docking_port 
        self.has_food = has_food 
        self.has_freight_elevator = has_freight_elevator 
        self.has_gravity = has_gravity 
        self.has_habitation = has_habitation 
        self.has_loading_dock = has_loading_dock 
        self.has_quantum_marker = has_quantum_marker 
        self.has_refinery = has_refinery 
        self.has_refuel = has_refuel 
        self.has_repair = has_repair 
        self.has_shops = has_shops 
        self.has_trade_terminal = has_trade_terminal 
        self.id = id 
        self.id_city = id_city 
        self.id_faction = id_faction 
        self.id_jurisdiction = id_jurisdiction 
        self.id_moon = id_moon 
        self.id_orbit = id_orbit 
        self.id_outpost = id_outpost 
        self.id_planet = id_planet 
        self.id_space_station = id_space_station 
        self.id_star_system = id_star_system 
        self.is_armistice = is_armistice 
        self.is_available = is_available 
        self.is_available_live = is_available_live 
        self.is_decommissioned = is_decommissioned 
        self.is_default = is_default 
        self.is_landable = is_landable 
        self.is_monitored = is_monitored 
        self.is_visible = is_visible 
        self.jurisdiction_name = jurisdiction_name 
        self.moon_name = moon_name 
        self.name = name 
        self.nickname = nickname 
        self.orbit_name = orbit_name 
        self.outpost_name = outpost_name 
        self.pad_types = pad_types 
        self.planet_name = planet_name 
        self.space_station_name = space_station_name 
        self.star_system_name = star_system_name 
        self.subtype = subtype 
        self.mtype = mtype 

        # Add additional model properties to the instance
        if additional_properties is None:
            additional_properties = {}
        self.additional_properties = additional_properties

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        city_name = dictionary.get("city_name") if dictionary.get("city_name") else None
        date_added = dictionary.get("date_added") if dictionary.get("date_added") else None
        date_modified = dictionary.get("date_modified") if dictionary.get("date_modified") else None
        faction_name = dictionary.get("faction_name") if dictionary.get("faction_name") else None
        has_cargo_center = dictionary.get("has_cargo_center") if dictionary.get("has_cargo_center") else None
        has_clinic = dictionary.get("has_clinic") if dictionary.get("has_clinic") else None
        has_docking_port = dictionary.get("has_docking_port") if dictionary.get("has_docking_port") else None
        has_food = dictionary.get("has_food") if dictionary.get("has_food") else None
        has_freight_elevator = dictionary.get("has_freight_elevator") if dictionary.get("has_freight_elevator") else None
        has_gravity = dictionary.get("has_gravity") if dictionary.get("has_gravity") else None
        has_habitation = dictionary.get("has_habitation") if dictionary.get("has_habitation") else None
        has_loading_dock = dictionary.get("has_loading_dock") if dictionary.get("has_loading_dock") else None
        has_quantum_marker = dictionary.get("has_quantum_marker") if dictionary.get("has_quantum_marker") else None
        has_refinery = dictionary.get("has_refinery") if dictionary.get("has_refinery") else None
        has_refuel = dictionary.get("has_refuel") if dictionary.get("has_refuel") else None
        has_repair = dictionary.get("has_repair") if dictionary.get("has_repair") else None
        has_shops = dictionary.get("has_shops") if dictionary.get("has_shops") else None
        has_trade_terminal = dictionary.get("has_trade_terminal") if dictionary.get("has_trade_terminal") else None
        id = dictionary.get("id") if dictionary.get("id") else None
        id_city = dictionary.get("id_city") if dictionary.get("id_city") else None
        id_faction = dictionary.get("id_faction") if dictionary.get("id_faction") else None
        id_jurisdiction = dictionary.get("id_jurisdiction") if dictionary.get("id_jurisdiction") else None
        id_moon = dictionary.get("id_moon") if dictionary.get("id_moon") else None
        id_orbit = dictionary.get("id_orbit") if dictionary.get("id_orbit") else None
        id_outpost = dictionary.get("id_outpost") if dictionary.get("id_outpost") else None
        id_planet = dictionary.get("id_planet") if dictionary.get("id_planet") else None
        id_space_station = dictionary.get("id_space_station") if dictionary.get("id_space_station") else None
        id_star_system = dictionary.get("id_star_system") if dictionary.get("id_star_system") else None
        is_armistice = dictionary.get("is_armistice") if dictionary.get("is_armistice") else None
        is_available = dictionary.get("is_available") if dictionary.get("is_available") else None
        is_available_live = dictionary.get("is_available_live") if dictionary.get("is_available_live") else None
        is_decommissioned = dictionary.get("is_decommissioned") if dictionary.get("is_decommissioned") else None
        is_default = dictionary.get("is_default") if dictionary.get("is_default") else None
        is_landable = dictionary.get("is_landable") if dictionary.get("is_landable") else None
        is_monitored = dictionary.get("is_monitored") if dictionary.get("is_monitored") else None
        is_visible = dictionary.get("is_visible") if dictionary.get("is_visible") else None
        jurisdiction_name = dictionary.get("jurisdiction_name") if dictionary.get("jurisdiction_name") else None
        moon_name = dictionary.get("moon_name") if dictionary.get("moon_name") else None
        name = dictionary.get("name") if dictionary.get("name") else None
        nickname = dictionary.get("nickname") if dictionary.get("nickname") else None
        orbit_name = dictionary.get("orbit_name") if dictionary.get("orbit_name") else None
        outpost_name = dictionary.get("outpost_name") if dictionary.get("outpost_name") else None
        pad_types = dictionary.get("pad_types") if dictionary.get("pad_types") else None
        planet_name = dictionary.get("planet_name") if dictionary.get("planet_name") else None
        space_station_name = dictionary.get("space_station_name") if dictionary.get("space_station_name") else None
        star_system_name = dictionary.get("star_system_name") if dictionary.get("star_system_name") else None
        subtype = dictionary.get("subtype") if dictionary.get("subtype") else None
        mtype = dictionary.get("type") if dictionary.get("type") else None
        additional_properties = APIHelper.get_additional_properties(
            dictionary={k: v for k, v in dictionary.items() if k not in cls._names.values()},
            unboxing_function=lambda value: value)
        # Return an object of this model
        return cls(city_name,
                   date_added,
                   date_modified,
                   faction_name,
                   has_cargo_center,
                   has_clinic,
                   has_docking_port,
                   has_food,
                   has_freight_elevator,
                   has_gravity,
                   has_habitation,
                   has_loading_dock,
                   has_quantum_marker,
                   has_refinery,
                   has_refuel,
                   has_repair,
                   has_shops,
                   has_trade_terminal,
                   id,
                   id_city,
                   id_faction,
                   id_jurisdiction,
                   id_moon,
                   id_orbit,
                   id_outpost,
                   id_planet,
                   id_space_station,
                   id_star_system,
                   is_armistice,
                   is_available,
                   is_available_live,
                   is_decommissioned,
                   is_default,
                   is_landable,
                   is_monitored,
                   is_visible,
                   jurisdiction_name,
                   moon_name,
                   name,
                   nickname,
                   orbit_name,
                   outpost_name,
                   pad_types,
                   planet_name,
                   space_station_name,
                   star_system_name,
                   subtype,
                   mtype,
                   additional_properties)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'city_name={self.city_name!r}, '
                f'date_added={self.date_added!r}, '
                f'date_modified={self.date_modified!r}, '
                f'faction_name={self.faction_name!r}, '
                f'has_cargo_center={self.has_cargo_center!r}, '
                f'has_clinic={self.has_clinic!r}, '
                f'has_docking_port={self.has_docking_port!r}, '
                f'has_food={self.has_food!r}, '
                f'has_freight_elevator={self.has_freight_elevator!r}, '
                f'has_gravity={self.has_gravity!r}, '
                f'has_habitation={self.has_habitation!r}, '
                f'has_loading_dock={self.has_loading_dock!r}, '
                f'has_quantum_marker={self.has_quantum_marker!r}, '
                f'has_refinery={self.has_refinery!r}, '
                f'has_refuel={self.has_refuel!r}, '
                f'has_repair={self.has_repair!r}, '
                f'has_shops={self.has_shops!r}, '
                f'has_trade_terminal={self.has_trade_terminal!r}, '
                f'id={self.id!r}, '
                f'id_city={self.id_city!r}, '
                f'id_faction={self.id_faction!r}, '
                f'id_jurisdiction={self.id_jurisdiction!r}, '
                f'id_moon={self.id_moon!r}, '
                f'id_orbit={self.id_orbit!r}, '
                f'id_outpost={self.id_outpost!r}, '
                f'id_planet={self.id_planet!r}, '
                f'id_space_station={self.id_space_station!r}, '
                f'id_star_system={self.id_star_system!r}, '
                f'is_armistice={self.is_armistice!r}, '
                f'is_available={self.is_available!r}, '
                f'is_available_live={self.is_available_live!r}, '
                f'is_decommissioned={self.is_decommissioned!r}, '
                f'is_default={self.is_default!r}, '
                f'is_landable={self.is_landable!r}, '
                f'is_monitored={self.is_monitored!r}, '
                f'is_visible={self.is_visible!r}, '
                f'jurisdiction_name={self.jurisdiction_name!r}, '
                f'moon_name={self.moon_name!r}, '
                f'name={self.name!r}, '
                f'nickname={self.nickname!r}, '
                f'orbit_name={self.orbit_name!r}, '
                f'outpost_name={self.outpost_name!r}, '
                f'pad_types={self.pad_types!r}, '
                f'planet_name={self.planet_name!r}, '
                f'space_station_name={self.space_station_name!r}, '
                f'star_system_name={self.star_system_name!r}, '
                f'subtype={self.subtype!r}, '
                f'mtype={self.mtype!r}, '
                f'additional_properties={self.additional_properties!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'city_name={self.city_name!s}, '
                f'date_added={self.date_added!s}, '
                f'date_modified={self.date_modified!s}, '
                f'faction_name={self.faction_name!s}, '
                f'has_cargo_center={self.has_cargo_center!s}, '
                f'has_clinic={self.has_clinic!s}, '
                f'has_docking_port={self.has_docking_port!s}, '
                f'has_food={self.has_food!s}, '
                f'has_freight_elevator={self.has_freight_elevator!s}, '
                f'has_gravity={self.has_gravity!s}, '
                f'has_habitation={self.has_habitation!s}, '
                f'has_loading_dock={self.has_loading_dock!s}, '
                f'has_quantum_marker={self.has_quantum_marker!s}, '
                f'has_refinery={self.has_refinery!s}, '
                f'has_refuel={self.has_refuel!s}, '
                f'has_repair={self.has_repair!s}, '
                f'has_shops={self.has_shops!s}, '
                f'has_trade_terminal={self.has_trade_terminal!s}, '
                f'id={self.id!s}, '
                f'id_city={self.id_city!s}, '
                f'id_faction={self.id_faction!s}, '
                f'id_jurisdiction={self.id_jurisdiction!s}, '
                f'id_moon={self.id_moon!s}, '
                f'id_orbit={self.id_orbit!s}, '
                f'id_outpost={self.id_outpost!s}, '
                f'id_planet={self.id_planet!s}, '
                f'id_space_station={self.id_space_station!s}, '
                f'id_star_system={self.id_star_system!s}, '
                f'is_armistice={self.is_armistice!s}, '
                f'is_available={self.is_available!s}, '
                f'is_available_live={self.is_available_live!s}, '
                f'is_decommissioned={self.is_decommissioned!s}, '
                f'is_default={self.is_default!s}, '
                f'is_landable={self.is_landable!s}, '
                f'is_monitored={self.is_monitored!s}, '
                f'is_visible={self.is_visible!s}, '
                f'jurisdiction_name={self.jurisdiction_name!s}, '
                f'moon_name={self.moon_name!s}, '
                f'name={self.name!s}, '
                f'nickname={self.nickname!s}, '
                f'orbit_name={self.orbit_name!s}, '
                f'outpost_name={self.outpost_name!s}, '
                f'pad_types={self.pad_types!s}, '
                f'planet_name={self.planet_name!s}, '
                f'space_station_name={self.space_station_name!s}, '
                f'star_system_name={self.star_system_name!s}, '
                f'subtype={self.subtype!s}, '
                f'mtype={self.mtype!s}, '
                f'additional_properties={self.additional_properties!s})')
