# -*- coding: utf-8 -*-

"""
uexcorpapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from uexcorpapi.api_helper import APIHelper


class Data36(object):

    """Implementation of the 'Data36' model.

    Attributes:
        avatar (str): The model property of type str.
        bio (str): The model property of type str.
        date_added (str): The model property of type str.
        date_modified (str): The model property of type str.
        date_rsi_verified (str): The model property of type str.
        date_twitch_verified (str): The model property of type str.
        day_availability (str): The model property of type str.
        discord_username (str): The model property of type str.
        email (str): The model property of type str.
        id (str): The model property of type str.
        ids_factions (str): The model property of type str.
        ids_star_systems (str): The model property of type str.
        language (str): The model property of type str.
        languages (str): The model property of type str.
        name (str): The model property of type str.
        specializations (str): The model property of type str.
        time_availability (str): The model property of type str.
        timezone (str): The model property of type str.
        twitch_username (Any): The model property of type Any.
        username (str): The model property of type str.
        website_url (str): The model property of type str.
        additional_properties (Dict[str, Any]): The additional properties for
            the model.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "avatar": 'avatar',
        "bio": 'bio',
        "date_added": 'date_added',
        "date_modified": 'date_modified',
        "date_rsi_verified": 'date_rsi_verified',
        "date_twitch_verified": 'date_twitch_verified',
        "day_availability": 'day_availability',
        "discord_username": 'discord_username',
        "email": 'email',
        "id": 'id',
        "ids_factions": 'ids_factions',
        "ids_star_systems": 'ids_star_systems',
        "language": 'language',
        "languages": 'languages',
        "name": 'name',
        "specializations": 'specializations',
        "time_availability": 'time_availability',
        "timezone": 'timezone',
        "twitch_username": 'twitch_username',
        "username": 'username',
        "website_url": 'website_url'
    }

    def __init__(self,
                 avatar=None,
                 bio=None,
                 date_added=None,
                 date_modified=None,
                 date_rsi_verified=None,
                 date_twitch_verified=None,
                 day_availability=None,
                 discord_username=None,
                 email=None,
                 id=None,
                 ids_factions=None,
                 ids_star_systems=None,
                 language=None,
                 languages=None,
                 name=None,
                 specializations=None,
                 time_availability=None,
                 timezone=None,
                 twitch_username=None,
                 username=None,
                 website_url=None,
                 additional_properties=None):
        """Constructor for the Data36 class"""

        # Initialize members of the class
        self.avatar = avatar 
        self.bio = bio 
        self.date_added = date_added 
        self.date_modified = date_modified 
        self.date_rsi_verified = date_rsi_verified 
        self.date_twitch_verified = date_twitch_verified 
        self.day_availability = day_availability 
        self.discord_username = discord_username 
        self.email = email 
        self.id = id 
        self.ids_factions = ids_factions 
        self.ids_star_systems = ids_star_systems 
        self.language = language 
        self.languages = languages 
        self.name = name 
        self.specializations = specializations 
        self.time_availability = time_availability 
        self.timezone = timezone 
        self.twitch_username = twitch_username 
        self.username = username 
        self.website_url = website_url 

        # Add additional model properties to the instance
        if additional_properties is None:
            additional_properties = {}
        self.additional_properties = additional_properties

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        avatar = dictionary.get("avatar") if dictionary.get("avatar") else None
        bio = dictionary.get("bio") if dictionary.get("bio") else None
        date_added = dictionary.get("date_added") if dictionary.get("date_added") else None
        date_modified = dictionary.get("date_modified") if dictionary.get("date_modified") else None
        date_rsi_verified = dictionary.get("date_rsi_verified") if dictionary.get("date_rsi_verified") else None
        date_twitch_verified = dictionary.get("date_twitch_verified") if dictionary.get("date_twitch_verified") else None
        day_availability = dictionary.get("day_availability") if dictionary.get("day_availability") else None
        discord_username = dictionary.get("discord_username") if dictionary.get("discord_username") else None
        email = dictionary.get("email") if dictionary.get("email") else None
        id = dictionary.get("id") if dictionary.get("id") else None
        ids_factions = dictionary.get("ids_factions") if dictionary.get("ids_factions") else None
        ids_star_systems = dictionary.get("ids_star_systems") if dictionary.get("ids_star_systems") else None
        language = dictionary.get("language") if dictionary.get("language") else None
        languages = dictionary.get("languages") if dictionary.get("languages") else None
        name = dictionary.get("name") if dictionary.get("name") else None
        specializations = dictionary.get("specializations") if dictionary.get("specializations") else None
        time_availability = dictionary.get("time_availability") if dictionary.get("time_availability") else None
        timezone = dictionary.get("timezone") if dictionary.get("timezone") else None
        twitch_username = dictionary.get("twitch_username") if dictionary.get("twitch_username") else None
        username = dictionary.get("username") if dictionary.get("username") else None
        website_url = dictionary.get("website_url") if dictionary.get("website_url") else None
        additional_properties = APIHelper.get_additional_properties(
            dictionary={k: v for k, v in dictionary.items() if k not in cls._names.values()},
            unboxing_function=lambda value: value)
        # Return an object of this model
        return cls(avatar,
                   bio,
                   date_added,
                   date_modified,
                   date_rsi_verified,
                   date_twitch_verified,
                   day_availability,
                   discord_username,
                   email,
                   id,
                   ids_factions,
                   ids_star_systems,
                   language,
                   languages,
                   name,
                   specializations,
                   time_availability,
                   timezone,
                   twitch_username,
                   username,
                   website_url,
                   additional_properties)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'avatar={self.avatar!r}, '
                f'bio={self.bio!r}, '
                f'date_added={self.date_added!r}, '
                f'date_modified={self.date_modified!r}, '
                f'date_rsi_verified={self.date_rsi_verified!r}, '
                f'date_twitch_verified={self.date_twitch_verified!r}, '
                f'day_availability={self.day_availability!r}, '
                f'discord_username={self.discord_username!r}, '
                f'email={self.email!r}, '
                f'id={self.id!r}, '
                f'ids_factions={self.ids_factions!r}, '
                f'ids_star_systems={self.ids_star_systems!r}, '
                f'language={self.language!r}, '
                f'languages={self.languages!r}, '
                f'name={self.name!r}, '
                f'specializations={self.specializations!r}, '
                f'time_availability={self.time_availability!r}, '
                f'timezone={self.timezone!r}, '
                f'twitch_username={self.twitch_username!r}, '
                f'username={self.username!r}, '
                f'website_url={self.website_url!r}, '
                f'additional_properties={self.additional_properties!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'avatar={self.avatar!s}, '
                f'bio={self.bio!s}, '
                f'date_added={self.date_added!s}, '
                f'date_modified={self.date_modified!s}, '
                f'date_rsi_verified={self.date_rsi_verified!s}, '
                f'date_twitch_verified={self.date_twitch_verified!s}, '
                f'day_availability={self.day_availability!s}, '
                f'discord_username={self.discord_username!s}, '
                f'email={self.email!s}, '
                f'id={self.id!s}, '
                f'ids_factions={self.ids_factions!s}, '
                f'ids_star_systems={self.ids_star_systems!s}, '
                f'language={self.language!s}, '
                f'languages={self.languages!s}, '
                f'name={self.name!s}, '
                f'specializations={self.specializations!s}, '
                f'time_availability={self.time_availability!s}, '
                f'timezone={self.timezone!s}, '
                f'twitch_username={self.twitch_username!s}, '
                f'username={self.username!s}, '
                f'website_url={self.website_url!s}, '
                f'additional_properties={self.additional_properties!s})')
