[project]
name = "threedi-modelchecker"
dynamic = ["version"]
description = "Checks validity of a 3Di schematisation"
readme = "README.rst"
license = {text = "MIT"}
requires-python = ">=3.9"
authors = [
    { name = "Nelen & Schuurmans", email = "info@nelen-schuurmans.nl" },
]
keywords = []
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
]
dependencies = [
    "Click",
    "GeoAlchemy2>=0.9,!=0.11.*",
    "SQLAlchemy>=1.4",
    "pyproj",
    "threedi-schema==0.300.*,>=0.300.23",
]

[project.optional-dependencies]
rasterio = [
    "rasterio>=1.3.10",
]
test = [
    "factory_boy",
    "pytest",
    "pytest-asyncio",
    "pytest-cov",
]

[project.scripts]
threedi_modelchecker = "threedi_modelchecker.scripts:cli"

[project.urls]
Repository = "https://github.com/nens/threedi-modelchecker"

[tool.setuptools]
packages = ["threedi_modelchecker"]

[tool.setuptools.dynamic]
version = {attr = "threedi_modelchecker.__version__"}

[tool.isort]
profile = "black"
force_alphabetical_sort_within_sections = true

[tool.pytest.ini_options]
norecursedirs = [
    ".venv",
    "data",
    "doc",
    "etc",
    "*.egg-info",
    "misc",
    "var",
    "build",
    "lib",
    "include",
]
python_files = ["test_*.py"]
testpaths = ["threedi_modelchecker"]

[tool.zest-releaser]
release = false
python-file-with-version = "threedi_modelchecker/__init__.py"
