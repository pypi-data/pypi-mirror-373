[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "whom-integration"
version = "1.0.2"
description = "Python library for Whom API integration, supporting multiple systems and web automation drivers"
readme = "README.md"
license = "MIT"
authors = [
    {name = "Doc9", email = "cloud@doc9.com.br"}
]
maintainers = [
    {name = "Doc9", email = "cloud@doc9.com.br"}
]
keywords = [
    "whom", "api", "integration", "automation", "selenium", "playwright", 
    "ecac", "pje", "receita-federal", "judiciary", "web-scraping", "browser-automation"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.8"
dependencies = [
    "requests>=2.28.0",
    "typing-extensions>=4.0.0",
]

[tool.setuptools.packages.find]
include = ["app", "app.*"]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "flake8>=5.0.0",
    "mypy>=1.0.0",
    "pre-commit>=2.20.0",
    "build>=0.10.0",
    "twine>=4.0.0",
]
selenium = [
    "selenium>=4.0.0",
    "webdriver-manager>=3.8.0",
]
playwright = [
    "playwright>=1.30.0",
    "patchright>=0.1.0",
]
all = [
    "selenium>=4.0.0",
    "webdriver-manager>=3.8.0",
    "playwright>=1.30.0",
    "patchright>=0.1.0",
]

[project.urls]
Homepage = "https://github.com/doc9/whom-integration"
Documentation = "https://github.com/doc9/whom-integration#readme"
Repository = "https://github.com/doc9/whom-integration"
"Bug Tracker" = "https://github.com/doc9/whom-integration/issues"
Changelog = "https://github.com/doc9/whom-integration/blob/main/CHANGELOG.md"

[project.scripts]
whom-integration = "app.cli:main"

# Version is managed in app/__init__.py

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".venv",
    ".eggs",
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["whom_integration"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/.venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
] 
