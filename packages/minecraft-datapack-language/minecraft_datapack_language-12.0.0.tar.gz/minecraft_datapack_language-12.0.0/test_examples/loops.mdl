// loops.mdl - While loops with different methods
pack "loops" "While loops test" 82;

namespace "test";

// Simple number variables
var num counter = 0;
var num max_count = 10;
var num step = 1;

function "main" {
    // Reset counter
    counter = 0;
    
    // Simple while loop (default recursion method)
    while "$counter$ < 5" {
        counter = $counter$ + 1;
        say "Counter: $counter$";
    }
    
    // While loop with variable condition
    counter = 0;
    while "$counter$ < $max_count$" {
        counter = $counter$ + $step$;
        say "Step: $counter$";
    }
    
    // While loop with explicit recursion method
    counter = 0;
    while "$counter$ < 8" method="recursion" {
        counter = $counter$ + 1;
        say "Recursion loop: $counter$";
    }
    
    // While loop with schedule method (better for long loops)
    counter = 0;
    while "$counter$ < 12" method="schedule" {
        counter = $counter$ + 1;
        say "Schedule loop: $counter$";
    }
    
    // Nested loops
    counter = 0;
    while "$counter$ < 3" {
        say "Outer loop: $counter$";
        
        var num inner = 0;
        while "$inner$ < 2" {
            inner = $inner$ + 1;
            say "  Inner: $inner$";
        }
        
        counter = $counter$ + 1;
    }
}

function "countdown" {
    var num count = 10;
    
    while "$count$ > 0" {
        say "Countdown: $count$";
        count = $count$ - 1;
    }
    
    say "Blast off!";
}

function "long_loop" {
    // Example of when to use schedule method
    var num i = 0;
    while "$i$ < 1000" method="schedule" {
        i = $i$ + 1;
        if "$i$ % 100 == 0" {
            say "Progress: $i$ / 1000";
        }
    }
    say "Long loop completed!";
}

on_tick "test:main";
on_tick "test:countdown";
