// adventure_pack.mdl - Complete adventure pack demonstrating all MDL features
pack "adventure_pack" description "Complete adventure pack with all MDL features" pack_format 82;

namespace "adventure";

// Global state variables
var num player_level = 1;
var num player_experience = 0;
var str player_class = "warrior";
var list player_inventory = ["wooden_sword", "leather_armor"];
var list completed_quests = [];

function "initialize_player" {
    say [adventure:initialize_player] Initializing player;
    player_level = 1;
    player_experience = 0;
    player_class = "warrior";
    player_inventory.clear();
    player_inventory.append("wooden_sword");
    player_inventory.append("leather_armor");
    completed_quests.clear();
    
    tellraw @s {"text":"Welcome to the Adventure Pack!","color":"gold"};
    tellraw @s {"text":"You are a level ", "extra":[{"score":{"name":"player_level","objective":"player_level"}}, {"text":" "}, {"nbt":"player_class","storage":"mdl:variables"}],"color":"green"};
}

function "gain_experience" {
    var num exp_gained = 10;
    player_experience = player_experience + exp_gained;
    
    // Level up logic
    var num exp_needed = player_level * 100;
    if "score @s player_experience >= exp_needed" {
        player_level = player_level + 1;
        player_experience = player_experience - exp_needed;
        
        tellraw @s {"text":"Level Up! You are now level ", "extra":[{"score":{"name":"player_level","objective":"player_level"}}],"color":"yellow"};
        effect give @s minecraft:glowing 10 0;
        
        // Class-specific level up bonuses
        if "score @s player_class == 'warrior'" {
            effect give @s minecraft:strength 30 0;
            player_inventory.append("iron_sword");
        } else if "score @s player_class == 'mage'" {
            effect give @s minecraft:night_vision 30 0;
            player_inventory.append("magic_staff");
        } else if "score @s player_class == 'archer'" {
            effect give @s minecraft:speed 30 0;
            player_inventory.append("enhanced_bow");
        }
    }
}

function "check_combat" {
    if "entity @s[type=minecraft:player,nbt={SelectedItem:{id:'minecraft:diamond_sword'}}]" {
        say Diamond sword combat detected;
        effect give @s minecraft:strength 10 1;
        effect give @s minecraft:glowing 10 0;
        
        // Check for nearby enemies
        if "entity @e[type=minecraft:zombie,distance=..5]" {
            say Enemy nearby - combat mode activated;
            effect give @s minecraft:resistance 10 0;
        }
    } else if "entity @s[type=minecraft:player,nbt={SelectedItem:{id:'minecraft:bow'}}]" {
        say Bow combat detected;
        effect give @s minecraft:speed 10 1;
        effect give @s minecraft:jump_boost 10 0;
    }
}

function "quest_system" {
    var list available_quests = ["kill_zombies", "collect_iron", "explore_cave"];
    var num quest_index = 0;
    
    while "score @s quest_index < length(available_quests)" {
        var str current_quest = available_quests[quest_index];
        
        // Check if quest is completed
        var num is_completed = 0;
        var num completed_index = 0;
        while "score @s completed_index < length(completed_quests)" {
            if "score @s completed_quests[completed_index] == current_quest" {
                is_completed = 1;
                break;
            }
            completed_index = completed_index + 1;
        }
        
        if "score @s is_completed == 0" {
            // Quest not completed - check completion conditions
            if "score @s current_quest == 'kill_zombies'" {
                if "entity @e[type=minecraft:zombie,distance=..10]" {
                    say Zombie quest completed!;
                    completed_quests.append("kill_zombies");
                    function adventure:gain_experience;
                }
            } else if "score @s current_quest == 'collect_iron'" {
                if "entity @s[type=minecraft:player,nbt={Inventory:[{id:'minecraft:iron_ingot'}]}]" {
                    say Iron collection quest completed!;
                    completed_quests.append("collect_iron");
                    function adventure:gain_experience;
                }
            }
        }
        
        quest_index = quest_index + 1;
    }
}

function "inventory_management" {
    var num inventory_size = length(player_inventory);
    var str status_message = "Inventory: " + inventory_size + " items";
    
    if "score @s inventory_size > 10" {
        status_message = status_message + " (Full!)";
        tellraw @s {"text":status_message,"color":"red"};
    } else if "score @s inventory_size > 5" {
        status_message = status_message + " (Getting full)";
        tellraw @s {"text":status_message,"color":"yellow"};
    } else {
        tellraw @s {"text":status_message,"color":"green"};
    }
    
    // Auto-organize inventory
    if "score @s inventory_size > 8" {
        say Auto-organizing inventory;
        // Remove duplicate items
        var num i = 0;
        while "score @s i < length(player_inventory)" {
            var str current_item = player_inventory[i];
            var num j = i + 1;
            while "score @s j < length(player_inventory)" {
                if "score @s player_inventory[j] == current_item" {
                    player_inventory.remove(current_item);
                    j = j - 1;
                }
                j = j + 1;
            }
            i = i + 1;
        }
    }
}

function "class_specialization" {
    if "score @s player_level >= 5" {
        if "score @s player_class == 'warrior'" {
            say Warrior specialization available;
            effect give @s minecraft:resistance 10 0;
            effect give @s minecraft:strength 10 0;
        } else if "score @s player_class == 'mage'" {
            say Mage specialization available;
            effect give @s minecraft:levitation 5 0;
            effect give @s minecraft:night_vision 10 0;
        } else if "score @s player_class == 'archer'" {
            say Archer specialization available;
            effect give @s minecraft:speed 10 0;
            effect give @s minecraft:jump_boost 10 0;
        }
    }
}

function "save_progress" {
    say Saving player progress;
    // In a real implementation, this would save to persistent storage
    tellraw @s {"text":"Progress saved!","color":"blue"};
}

// Main game loop
function "game_tick" {
    function adventure:check_combat;
    function adventure:quest_system;
    function adventure:inventory_management;
    function adventure:class_specialization;
    
    // Periodic save
    var num save_counter = 0;
    save_counter = save_counter + 1;
    if "score @s save_counter >= 100" {
        function adventure:save_progress;
        save_counter = 0;
    }
}

// Hooks
on_load "adventure:initialize_player";
on_tick "adventure:game_tick";
