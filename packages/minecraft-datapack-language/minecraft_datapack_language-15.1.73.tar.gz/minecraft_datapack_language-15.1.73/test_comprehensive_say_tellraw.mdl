pack "comprehensive_say_tellraw_test" "Comprehensive say/tellraw testing" 82;
namespace "say_tellraw_test";

// Variables for testing
var num playerScore = 100;
var num playerHealth = 20;
var num globalTimer scope<global> = 0;
var num teamScore scope<@a[team=red]> = 50;

// Test 1: Basic say commands
function "test_basic_say" {
    say Hello, Minecraft!;
    say "Hello, World!";
    say Welcome to my datapack!;
    say "Welcome to my datapack!";
    
    say "Basic say commands complete";
}

// Test 2: Say commands with variable substitution
function "test_say_with_variables" {
    say Counter: $playerScore$;
    say "Score: $playerScore$";
    say Health: $playerHealth$;
    say "Health: $playerHealth$";
    say Timer: $globalTimer$;
    say "Timer: $globalTimer$";
    say Team Score: $teamScore$;
    say "Team Score: $teamScore$";
    
    say "Say with variables complete";
}

// Test 3: Basic tellraw commands
function "test_basic_tellraw" {
    tellraw @a {"text":"Welcome!","color":"green"};
    tellraw @a {"text":"Hello, World!","color":"blue"};
    tellraw @a {"text":"Test message","color":"red"};
    tellraw @a {"text":"Another test","color":"yellow"};
    
    say "Basic tellraw commands complete";
}

// Test 4: Tellraw commands with variable substitution
function "test_tellraw_with_variables" {
    tellraw @a {"text":"Score: $playerScore$","color":"gold"};
    tellraw @a {"text":"Counter: $playerScore$","color":"green"};
    tellraw @a {"text":"Health: $playerHealth$","color":"red"};
    tellraw @a {"text":"Timer: $globalTimer$","color":"blue"};
    tellraw @a {"text":"Team Score: $teamScore$","color":"yellow"};
    
    say "Tellraw with variables complete";
}

// Test 5: Complex tellraw commands with multiple components
function "test_complex_tellraw" {
    // Multiple text components
    tellraw @a [
        {"text":"Score: ","color":"green"},
        {"text":"$playerScore$","color":"gold"},
        {"text":" / 100","color":"gray"}
    ];
    
    // Health display with color coding
    tellraw @a [
        {"text":"Health: ","color":"white"},
        {"text":"$playerHealth$","color":"red"},
        {"text":" / 20","color":"gray"}
    ];
    
    // Timer with formatting
    tellraw @a [
        {"text":"Timer: ","color":"blue"},
        {"text":"$globalTimer$","color":"cyan"},
        {"text":" seconds","color":"gray"}
    ];
    
    say "Complex tellraw commands complete";
}

// Test 6: Tellraw with hover and click events
function "test_tellraw_events" {
    // With hover event
    tellraw @a {
        "text":"Hover over me!",
        "color":"blue",
        "hoverEvent":{"action":"show_text","contents":{"text":"This is hover text!"}}
    };
    
    // With click event
    tellraw @a {
        "text":"Click me!",
        "color":"green",
        "clickEvent":{"action":"run_command","value":"/say clicked"}
    };
    
    // With both hover and click
    tellraw @a {
        "text":"Interactive text!",
        "color":"purple",
        "hoverEvent":{"action":"show_text","contents":{"text":"Hover information"}},
        "clickEvent":{"action":"run_command","value":"/say interactive"}
    };
    
    say "Tellraw events complete";
}

// Test 7: Tellraw with different selectors
function "test_tellraw_selectors" {
    // All players
    tellraw @a {"text":"Message to all players","color":"green"};
    
    // Current player
    tellraw @s {"text":"Message to current player","color":"blue"};
    
    // Red team
    tellraw @a[team=red] {"text":"Message to red team","color":"red"};
    
    // Blue team
    tellraw @a[team=blue] {"text":"Message to blue team","color":"blue"};
    
    // Players with specific tag
    tellraw @a[tag=admin] {"text":"Admin message","color":"gold"};
    
    say "Tellraw selectors complete";
}

// Test 8: Tellraw with complex JSON structures
function "test_complex_json_tellraw" {
    // Nested JSON with multiple components
    tellraw @a [
        {"text":"Welcome to ","color":"white"},
        {"text":"MDL","color":"gold","bold":true},
        {"text":" testing!","color":"white"},
        {"text":"\n","color":"white"},
        {"text":"Score: ","color":"gray"},
        {"text":"$playerScore$","color":"yellow","italic":true}
    ];
    
    // Complex object with multiple properties
    tellraw @a {
        "text":"Complex message",
        "color":"purple",
        "bold":true,
        "italic":true,
        "underlined":true,
        "strikethrough":false,
        "obfuscated":false
    };
    
    say "Complex JSON tellraw complete";
}

// Test 9: Tellraw with score components
function "test_tellraw_score" {
    // Using score component
    tellraw @a {"score":{"name":"@s","objective":"playerScore"},"color":"yellow"};
    
    // Score with prefix
    tellraw @a [
        {"text":"Your score: ","color":"white"},
        {"score":{"name":"@s","objective":"playerScore"},"color":"gold"}
    ];
    
    // Score with suffix
    tellraw @a [
        {"score":{"name":"@s","objective":"playerScore"},"color":"green"},
        {"text":" points","color":"gray"}
    ];
    
    say "Tellraw score complete";
}

// Test 10: Tellraw with entity names
function "test_tellraw_entity" {
    // Using entity selector
    tellraw @a {"text":"@s","color":"blue"};
    
    // Entity with formatting
    tellraw @a [
        {"text":"Player: ","color":"white"},
        {"text":"@s","color":"green","bold":true}
    ];
    
    say "Tellraw entity complete";
}

// Test 11: Tellraw with keybind components
function "test_tellraw_keybind" {
    // Using keybind
    tellraw @a {"keybind":"key.jump","color":"yellow"};
    
    // Keybind with context
    tellraw @a [
        {"text":"Press ","color":"white"},
        {"keybind":"key.jump","color":"yellow"},
        {"text":" to jump!","color":"white"}
    ];
    
    say "Tellraw keybind complete";
}

// Test 12: Tellraw with translation components
function "test_tellraw_translation" {
    // Using translation
    tellraw @a {"translate":"chat.type.text","color":"gray"};
    
    // Translation with arguments
    tellraw @a {
        "translate":"commands.scoreboard.objectives.list.success",
        "color":"green"
    };
    
    say "Tellraw translation complete";
}

// Test 13: Tellraw with selector components
function "test_tellraw_selector" {
    // Using selector
    tellraw @a {"selector":"@s","color":"blue"};
    
    // Selector with formatting
    tellraw @a [
        {"text":"Selected: ","color":"white"},
        {"selector":"@a[team=red]","color":"red","bold":true}
    ];
    
    say "Tellraw selector complete";
}

// Test 14: Tellraw with NBT components
function "test_tellraw_nbt" {
    // Using NBT
    tellraw @a {"nbt":"CustomName","entity":"@s","color":"purple"};
    
    // NBT with formatting
    tellraw @a [
        {"text":"Name: ","color":"white"},
        {"nbt":"CustomName","entity":"@s","color":"gold"}
    ];
    
    say "Tellraw NBT complete";
}

// Test 15: Tellraw with block NBT
function "test_tellraw_block_nbt" {
    // Using block NBT
    tellraw @a {"nbt":"Items","block":"~ ~ ~","color":"cyan"};
    
    // Block NBT with formatting
    tellraw @a [
        {"text":"Block data: ","color":"white"},
        {"nbt":"Items","block":"~ ~ ~","color":"yellow"}
    ];
    
    say "Tellraw block NBT complete";
}

// Test 16: Tellraw with storage NBT
function "test_tellraw_storage_nbt" {
    // Using storage NBT
    tellraw @a {"nbt":"data","storage":"test:storage","color":"green"};
    
    // Storage NBT with formatting
    tellraw @a [
        {"text":"Storage: ","color":"white"},
        {"nbt":"data","storage":"test:storage","color":"blue"}
    ];
    
    say "Tellraw storage NBT complete";
}

// Test 17: Tellraw with interpret component
function "test_tellraw_interpret" {
    // Using interpret
    tellraw @a {"nbt":"CustomName","entity":"@s","interpret":true,"color":"orange"};
    
    // Interpret with formatting
    tellraw @a [
        {"text":"Interpreted: ","color":"white"},
        {"nbt":"CustomName","entity":"@s","interpret":true,"color":"pink"}
    ];
    
    say "Tellraw interpret complete";
}

// Test 18: Tellraw with separator
function "test_tellraw_separator" {
    // Using separator
    tellraw @a {"separator":{"text":" | ","color":"gray"}};
    
    // Separator with context
    tellraw @a [
        {"text":"Item 1","color":"red"},
        {"separator":{"text":" | ","color":"gray"}},
        {"text":"Item 2","color":"blue"},
        {"separator":{"text":" | ","color":"gray"}},
        {"text":"Item 3","color":"green"}
    ];
    
    say "Tellraw separator complete";
}

// Test 19: Tellraw with insertion
function "test_tellraw_insertion" {
    // Using insertion
    tellraw @a {"text":"Click to insert","color":"blue","insertion":"inserted text"};
    
    // Insertion with formatting
    tellraw @a {
        "text":"Click me!",
        "color":"green",
        "insertion":"say Hello, World!",
        "hoverEvent":{"action":"show_text","contents":{"text":"Click to insert command"}}
    };
    
    say "Tellraw insertion complete";
}

// Test 20: Tellraw with font
function "test_tellraw_font" {
    // Using custom font
    tellraw @a {"text":"Custom font","color":"purple","font":"minecraft:uniform"};
    
    // Font with formatting
    tellraw @a {
        "text":"Styled text",
        "color":"gold",
        "font":"minecraft:uniform",
        "bold":true
    };
    
    say "Tellraw font complete";
}

// Test 21: Mixed say and tellraw commands
function "test_mixed_commands" {
    say "Starting mixed commands test";
    
    tellraw @a {"text":"This is tellraw","color":"blue"};
    say "This is say";
    
    tellraw @a {"text":"Score: $playerScore$","color":"gold"};
    say "Score: $playerScore$";
    
    tellraw @a {"text":"Health: $playerHealth$","color":"red"};
    say "Health: $playerHealth$";
    
    say "Mixed commands complete";
}

// Test 22: Tellraw with complex variable combinations
function "test_complex_variable_tellraw" {
    // Multiple variables in one message
    tellraw @a [
        {"text":"Player: ","color":"white"},
        {"text":"@s","color":"green"},
        {"text":" | Score: ","color":"gray"},
        {"text":"$playerScore$","color":"gold"},
        {"text":" | Health: ","color":"gray"},
        {"text":"$playerHealth$","color":"red"},
        {"text":" | Timer: ","color":"gray"},
        {"text":"$globalTimer$","color":"blue"}
    ];
    
    // Complex variable display
    tellraw @a {
        "text":"Status Report",
        "color":"purple",
        "bold":true,
        "hoverEvent":{
            "action":"show_text",
            "contents":[
                {"text":"Score: $playerScore$","color":"gold"},
                {"text":"\nHealth: $playerHealth$","color":"red"},
                {"text":"\nTimer: $globalTimer$","color":"blue"}
            ]
        }
    };
    
    say "Complex variable tellraw complete";
}

// Main test function that runs all say/tellraw tests
function "run_all_say_tellraw_tests" {
    say "Starting comprehensive say/tellraw testing";
    
    // Initialize variables
    playerScore = 100;
    playerHealth = 20;
    globalTimer = 0;
    teamScore = 50;
    
    say "Variables initialized";
    
    // Run all tests
    function "say_tellraw_test:test_basic_say";
    function "say_tellraw_test:test_say_with_variables";
    function "say_tellraw_test:test_basic_tellraw";
    function "say_tellraw_test:test_tellraw_with_variables";
    function "say_tellraw_test:test_complex_tellraw";
    function "say_tellraw_test:test_tellraw_events";
    function "say_tellraw_test:test_tellraw_selectors";
    function "say_tellraw_test:test_complex_json_tellraw";
    function "say_tellraw_test:test_tellraw_score";
    function "say_tellraw_test:test_tellraw_entity";
    function "say_tellraw_test:test_tellraw_keybind";
    function "say_tellraw_test:test_tellraw_translation";
    function "say_tellraw_test:test_tellraw_selector";
    function "say_tellraw_test:test_tellraw_nbt";
    function "say_tellraw_test:test_tellraw_block_nbt";
    function "say_tellraw_test:test_tellraw_storage_nbt";
    function "say_tellraw_test:test_tellraw_interpret";
    function "say_tellraw_test:test_tellraw_separator";
    function "say_tellraw_test:test_tellraw_insertion";
    function "say_tellraw_test:test_tellraw_font";
    function "say_tellraw_test:test_mixed_commands";
    function "say_tellraw_test:test_complex_variable_tellraw";
    
    say "All say/tellraw tests complete!";
}

// Hook to run tests on load
on_load "say_tellraw_test:run_all_say_tellraw_tests";
