name: CI

on:
  push:
    branches: [ "**" ]
  pull_request:
  workflow_dispatch:

jobs:
  build-test:
    name: build & test (${{ matrix.os }} / py${{ matrix.python-version }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.10", "3.11", "3.12"]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Upgrade pip & install build deps
        run: |
          python -m pip install --upgrade pip
          python -m pip install build

      - name: Install package (editable)
        run: |
          python -m pip install -e .

      - name: Build sdist & wheel
        run: |
          python -m build

      - name: Test MDL Parser Import
        run: |
          echo "Testing MDL parser import..."
          python -c "from minecraft_datapack_language.mdl_parser_js import parse_mdl_js; print('[+] MDL parser imported successfully')"

      - name: Test MDL Lexer Import
        run: |
          echo "Testing MDL lexer import..."
          python -c "from minecraft_datapack_language.mdl_lexer_js import MDLLexer; print('[+] MDL lexer imported successfully')"

      - name: Test MDL Linter Import
        run: |
          echo "Testing MDL linter import..."
          python -c "from minecraft_datapack_language.mdl_linter import MDLLinter; print('[+] MDL linter imported successfully')"

      - name: Test Expression Processor Import
        run: |
          echo "Testing expression processor import..."
          python -c "from minecraft_datapack_language.expression_processor import ExpressionProcessor; print('[+] Expression processor imported successfully')"

      - name: Test Python API
        run: |
          echo "Testing Python API functionality..."
          python -c "
          from minecraft_datapack_language import Pack
          p = Pack('test', 'Test pack', 82)
          ns = p.namespace('test')
          ns.function('test_func', 'say Hello World')
          print('[+] Python API test passed')
          "

      - name: Test MDL Parsing
        run: |
          echo "Testing MDL parsing..."
          python -c "from minecraft_datapack_language.mdl_parser_js import parse_mdl_js; print('[+] MDL parser imported successfully')"

      - name: Test Variable System
        run: |
          echo "Testing variable system..."
          python -c "
          from minecraft_datapack_language.mdl_parser_js import parse_mdl_js
          test_code = 'var num test_var = 0;'
          ast = parse_mdl_js(test_code)
          print('[+] Variable system test passed')
          "

      - name: Test Control Flow
        run: |
          echo "Testing control flow..."
          python -c "
          from minecraft_datapack_language.mdl_parser_js import parse_mdl_js
          test_code = 'if \"$test$ > 0\" { say \"test\"; }'
          ast = parse_mdl_js(test_code)
          print('[+] Control flow test passed')
          "

      - name: Test While Loops
        run: |
          echo "Testing while loops..."
          python -c "
          from minecraft_datapack_language.mdl_parser_js import parse_mdl_js
          test_code = 'while \"$counter$ < 10\" { counter = $counter$ + 1; }'
          ast = parse_mdl_js(test_code)
          print('[+] While loops test passed')
          "

      - name: Test Error Handling
        run: |
          echo "Testing error handling..."
          python -c "
          from minecraft_datapack_language.mdl_parser_js import parse_mdl_js
          try:
              parse_mdl_js('invalid syntax {')
              print('[-] Should have failed')
          except:
              print('[+] Error handling test passed')
          "

      - name: Test CLI Module Import
        run: |
          echo "Testing CLI module import..."
          python -c "from minecraft_datapack_language.cli import main; print('[+] CLI module imported successfully')"

      - name: Test Basic MDL File
        run: |
          echo "Testing basic MDL file parsing..."
          python -c "
          from minecraft_datapack_language.mdl_parser_js import parse_mdl_js
          test_code = '''
          pack \"test\" \"Test pack\" 82;
          namespace \"test\";
          var num counter = 0;
          function \"main\" {
              counter = 0;
              while \"$counter$ < 5\" {
                  counter = $counter$ + 1;
                  say \"Counter: $counter$\";
              }
          }
          on_tick \"test:main\";
          '''
          ast = parse_mdl_js(test_code)
          print('[+] Basic MDL file test passed')
          "

      - name: Upload dist artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ matrix.os }}-py${{ matrix.python-version }}
          path: dist/*
          if-no-files-found: error
