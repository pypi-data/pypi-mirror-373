[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "google-search-mcp"
description = "Google Search MCP Server - A Python implementation using FastMCP for Google Custom Search API integration"
readme = "README.md"
requires-python = ">=3.10"
license = {text = "MIT"}
version = "0.1.1"
authors = [
    {name = "Google Search MCP"}
]
maintainers = [
    {name = "Google Search MCP"}
]
keywords = ["mcp", "google-search", "api", "search", "fastmcp"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Internet :: WWW/HTTP :: Indexing/Search",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "fastmcp>=2.11.3",
    "httpx[socks]>=0.25.0",
    "beautifulsoup4>=4.12.0",
    "lxml>=4.9.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.5.0",
    "flake8>=6.0.0",
]

[project.scripts]
google-search-mcp = "google_search_mcp:main"

[tool.hatch.build.targets.wheel]
packages = ["src"]

[tool.hatch.build.targets.wheel.sources]
"src" = ""

[tool.hatch.build.targets.sdist]
include = [
    "src/",
    "README.md",
    "LICENSE",
    "requirements.txt",
]

[tool.hatch.version]
path = "src/google_search_mcp/__init__.py"

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.envs.default]
dependencies = [
    "pytest",
    "pytest-asyncio",
    "black",
    "isort",
    "mypy",
    "flake8",
]

[tool.hatch.envs.default.scripts]
test = "pytest {args:tests}"
test-cov = "pytest --cov=google_search_mcp {args:tests}"
lint = "flake8 src/google_search_mcp"
format = "black src/google_search_mcp"
type-check = "mypy src/google_search_mcp"

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'

[tool.isort]
profile = "black"
line_length = 88

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q"
testpaths = [
    "tests",
]
