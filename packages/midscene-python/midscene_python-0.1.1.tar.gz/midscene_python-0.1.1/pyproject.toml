[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "midscene-python"
description = "基于AI的Web和Android自动化框架，支持自然语言驱动的UI操作"
readme = "README.md"
license = "MIT"
authors = [
    { name = "Midscene Team" },
]
keywords = ["automation", "AI", "web", "android", "testing", "ui", "selenium", "playwright"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Testing",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.9"
dependencies = [
    "pydantic>=2.0,<3.0",
    "selenium>=4.15.0,<5.0",
    "playwright>=1.40.0,<2.0",
    "opencv-python>=4.8.0,<5.0",
    "pillow>=10.0.0,<11.0",
    "numpy>=1.24.0,<2.0",
    "aiohttp>=3.9.0,<4.0",
    "loguru>=0.7.0,<1.0",
    "typer>=0.9.0,<1.0",
    "jinja2>=3.1.0,<4.0",
    "pyyaml>=6.0,<7.0",
    "httpx>=0.25.0,<1.0",
    "asyncio-mqtt",
    "pure-python-adb>=0.3.0dev0",
    "openai>=1.3.0,<2.0",
    "anthropic>=0.7.0,<1.0",
    "google-generativeai",
    "dashscope",
]
version = "0.1.1"

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.5.0",
    "pre-commit>=3.4.0",
    "ruff>=0.1.0",
]
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.4.0",
    "mkdocstrings[python]>=0.23.0",
]

[project.urls]
Homepage = "https://github.com/Python51888/midscene-python.git"
Repository = "https://github.com/Python51888/midscene-python.git"
Documentation = "https://github.com/Python51888/Midscene-Python/blob/master/README.md"
"Bug Tracker" = "https://github.com/Python51888/midscene-python.git/issues"

[project.scripts]
midscene = "midscene.cli:main"

[tool.hatch.build.targets.wheel]
packages = ["midscene"]



[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.ruff]
target-veersion = "py39"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--strict-markers",
    "--strict-config",
    "--cov=midscene",
    "--cov-report=term-missing",
    "--cov-report=html",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]