Metadata-Version: 2.4
Name: krevoniz_unique_img_proc_pkg
Version: 0.1.0
Summary: Pacote de processamento de imagens usando Python
Home-page: https://github.com/krevoniz/image_processing_pkg
Author: Krevoniz
Author-email: krevoniz@gmail.com
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Natural Language :: Portuguese (Brazilian)
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Topic :: Scientific/Engineering :: Image Processing
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: numpy>=1.20.0
Requires-Dist: Pillow>=8.0.0
Requires-Dist: scipy>=1.6.0
Requires-Dist: matplotlib>=3.3.0
Requires-Dist: scikit-image>=0.18.0
Requires-Dist: opencv-python>=4.5.0
Dynamic: author
Dynamic: author-email
Dynamic: classifier
Dynamic: description
Dynamic: description-content-type
Dynamic: home-page
Dynamic: license-file
Dynamic: requires-dist
Dynamic: requires-python
Dynamic: summary

# Image Processing Package

## DescriÃ§Ã£o
O pacote `image_processing_pkg` Ã© uma biblioteca Python para processamento de imagens que oferece:
- Processamento bÃ¡sico: redimensionamento, rotaÃ§Ã£o, corte e conversÃ£o entre formatos
- AplicaÃ§Ã£o de filtros: blur, sharpen, grayscale, sepia, etc.
- Processamento avanÃ§ado: detecÃ§Ã£o de bordas, segmentaÃ§Ã£o, histograma
- UtilitÃ¡rios para manipulaÃ§Ã£o de metadados de imagens

## InstalaÃ§Ã£o

Use o gerenciador de pacotes [pip](https://pip.pypa.io/en/stable/) para instalar o pacote:

```bash
pip install image_processing_pkg
```

## Uso

### Processamento BÃ¡sico
```python
from image_processing_pkg.processing import basic

# Redimensionar uma imagem
basic.resize("input.jpg", "output.jpg", width=800, height=600)

# Converter para escala de cinza
basic.to_grayscale("input.jpg", "output_gray.jpg")

# Aplicar rotaÃ§Ã£o
basic.rotate("input.jpg", "output_rotated.jpg", angle=90)
```

### AplicaÃ§Ã£o de Filtros
```python
from image_processing_pkg.processing import filters

# Aplicar filtro de desfoque
filters.blur("input.jpg", "output_blur.jpg", radius=5)

# Aplicar filtro de nitidez
filters.sharpen("input.jpg", "output_sharp.jpg", amount=1.5)

# Aplicar filtro sÃ©pia
filters.sepia("input.jpg", "output_sepia.jpg")
```

### Processamento AvanÃ§ado
```python
from image_processing_pkg.processing import advanced

# Detectar bordas
advanced.detect_edges("input.jpg", "output_edges.jpg", method="canny")

# SegmentaÃ§Ã£o de imagem
advanced.segment("input.jpg", "output_segmented.jpg", clusters=5)

# Gerar histograma
histogram = advanced.histogram("input.jpg")
```

## Autor
Python Developer

## LicenÃ§a
[MIT](https://choosealicense.com/licenses/mit/)
