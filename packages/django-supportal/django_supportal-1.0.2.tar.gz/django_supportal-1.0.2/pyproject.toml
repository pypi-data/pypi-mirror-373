[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "django_supportal"
version = "1.0.2"
description = "AI-Powered business support chat system for django"
authors = ["Amin Dehghan Dehnavi <amin.dehghandehnavi@gmail.com>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/mrsins02/django_supportal"
repository = "https://github.com/mrsins02/django_supportal"
keywords = ["django", "ai", "chat", "support", "openai", "rag"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Web Environment",
    "Framework :: Django",
    "Framework :: Django :: 4.2",
    "Framework :: Django :: 5.0",
    "Framework :: Django :: 5.1",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Communications :: Chat",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
]
packages = [{include = "django_supportal"}]
include = [
    "django_supportal/templates/**/*",
    "django_supportal/static/**/*",
]

[tool.poetry.dependencies]
python = "^3.10"
django = "^4.2,<6.0"
channels = "^4.0.0"
channels-redis = "^4.2.0"
djangorestframework = "^3.14.0"
openai = "^1.0.0"
faiss-cpu = "^1.7.4"
numpy = "^1.24.0"
python-docx = "^1.1.0"
PyPDF2 = "^3.0.1"
tiktoken = "^0.5.0"
celery = "^5.3.0"
redis = "^5.0.0"
python-decouple = "^3.8"
mysqlclient = "^2.2.0"
build = "^1.3.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
pytest-django = "^4.5.2"
pytest-asyncio = "^0.21.0"
black = "^23.7.0"
flake8 = "^6.0.0"
isort = "^5.12.0"
coverage = "^7.2.0"
ruff = "^0.12.3"

[tool.black]
line-length = 100
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  migrations
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
skip_glob = ["*/migrations/*"]

[tool.coverage.run]
source = "django_supportal"
omit = ["*/migrations/*", "*/tests/*", "*/venv/*"]

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "test_settings"
python_files = ["test_*.py", "*_test.py", "tests.py"]
addopts = "--tb=short -v"

include = ["*.py", "**/*.py"]
exclude = [
    ".venv",
    "venv",
    "migrations",
    "__pycache__",
    "node_modules",
    "static",
    "build",
    "dist"
]

line-length = 88          
target-version = "py310" 

select = [
    "E",    # pycodestyle errors
    "F",    # pyflakes
    "B",    # bugbear
    "I",    # isort (import sorting)
    "UP",   # pyupgrade 
    "DJ",   # Django-specific linting rules
    "SIM",  # simplify code (flake8-simplify)
    "N",    # pep8-naming
    "C4",   # flake8-comprehensions
    "RUF",  # ruff
]

ignore = [
    "B008",   # Do not perform function calls in argument defaults
    "DJ001",  # Avoid using `null=True` on string-based fields such as `CharField` and `TextField`
]

[tool.ruff.isort]
combine-as-imports = true
force-single-line = false
known-first-party = ["django_supportal"]
lines-between-types = 1

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"

[tool.ruff.pep8-naming]
classmethod-decorators = ["classmethod", "django.utils.decorators.classonlymethod"]
staticmethod-decorators = ["staticmethod"]