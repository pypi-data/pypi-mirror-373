---
# The JSONSchema for the 'JobDefinition' (JD) YAML files.
#
# See https://json-schema.org/understanding-json-schema/index.html

$schema: http://json-schema.org/draft-07/schema#

title: Data Manager Job Definition
description: >-
  Defines one or more jobs that can be executed
  by the Data manager Job Operator, and tests that can be automated
  by the Job Tester (jote)

type: object
properties:
  kind:
    const: DataManagerJobDefinition
  kind-version:
    enum:
    - '2021.1'
  name:
    type: string
    maxLength: 80
  description:
    type: string
  collection:
    type: string
    minLength: 1
    maxLength: 80
    pattern: '^[a-z]{1}[a-z0-9-]*$'
  jobs:
    $ref: '#/definitions/job-identity'
  test-groups:
    $ref: '#/definitions/test-groups'
required:
- kind
- kind-version
- collection
- jobs

# Sub-object definitions ------------------------------------------------------
# Things like the Job structure, Image structure etc.

definitions:

  # A Job.
  # Consists of an identity (i.e. 'filter-molecules')
  # followed by a Job object.
  job-identity:
    type: object
    patternProperties:
      '^[a-z]{1}[a-z0-9-]{0,79}$':
        $ref: '#/definitions/job'
    additionalProperties: false
    minProperties: 1

  # An individual Job
  job:
    type: object
    properties:
      name:
        type: string
        minLength: 1
        maxLength: 80
      description:
        type: string
      version:
        type: string
        minLength: 1
        maxLength: 24
      category:
        type: string
      # The doc-url must either start 'https', or with a letter.
      # It cannot end with '/'.
      #Â If it starts 'https' it will be used verbatim, and is expected
      # to refer to a documentation file, e.g. 'https://example.com/job-doc.md'
      # Otherwise it is assumed to be relative to the URL used for the Manifest
      # that loaded this file, where all documents are expected to reside in
      # 'docs'. If the doc-url is not set the decoder will expect documentation for the
      # job to be found in 'docs/{collection}/{job}.md'. If doc-url is not null
      # (and does not start 'https') the decoder will expect the documentation
      # to be found in 'docs/{doc-url}'.
      doc-url:
        type: string
        pattern: '^(https|[a-z]).+(?<!/)$'
      keywords:
        type: array
        items:
          type: string
      image:
        $ref: '#/definitions/image'
      command-encoding:
        const: JINJA2_3_0
      command:
        type: string
        minLength: 1
        maxLength: 4096
      variables:
        $ref: '#/definitions/job-variables'
      tests:
        $ref: '#/definitions/job-test'
      replaces:
        $ref: '#/definitions/replace-list'
    required:
    - name
    - version
    - image
    - command

  # A Job container image
  # The 'type' is optional and is used to indicate
  # a single job _image_ (the default) or a workflow image like _nextflow_
  image:
    type: object
    additionalProperties: false
    properties:
      name:
        type: string
        minLength: 1
        maxLength: 120
      tag:
        type: string
        minLength: 1
        maxLength: 24
      project-directory:
        type: string
        minLength: 1
        maxLength: 255
        pattern: '^(/[a-zA-Z0-9_-]+)+$'
      working-directory:
        type: string
        minLength: 1
        maxLength: 255
        pattern: '^(/[a-zA-Z0-9_-]+)+$'
      type:
        type: string
        enum:
        - simple
        - nextflow
        default: simple
      fix-permissions:
        type: boolean
      pull-secret:
        $ref: '#/definitions/rfc-1035-name'
      memory:
        $ref: '#/definitions/memory'
      cores:
        $ref: '#/definitions/cores'
      environment:
        $ref: '#/definitions/environment'
      file:
        $ref: '#/definitions/file'
    required:
    - name
    - tag
    - project-directory
    - working-directory

  # A kubernetes CPU (cores) declaration (minimum of 10m).
  # Here we allow an up-to 4-digit 'm' value or a 2-digit integer.
  # The value is used by the Data Manager to set the corresponding Job
  # resource request and limit values. By providing this value you
  # essentially define a "guaranteed" minimum CPU allocation for the Job.
  # If you do not specify a value, the Data Manager will use a default.
  cores:
    oneOf:
    - type: string
      pattern: '^[1-9][0-9]{1,3}m$'
    - type: integer
      minimum: 1
      maximum: 99

  # A kubernetes memory declaration.
  # Here we allow an up-to 4-digit Mi value (minimum of 100Mi)
  # or a 2-digit Gi value (minimum of 1G).
  # The value is used by the Data Manager to set the corresponding Job
  # resource request and limit values. By providing this value you
  # essentially define a "guaranteed" minimum memory budget for the Job.
  # If you do not specify a value, the Data Manager will use a default.
  memory:
    type: string
    pattern: '^([1-9][0-9]{2,3}Mi|[1-9][0-9]{0,1}Gi)$'

  # Image environment definitions.
  environment:
    type: array
    items:
      $ref: '#/definitions/environment-value-from'

  # An Image environment from something else.
  environment-value-from:
    type: object
    additionalProperties: false
    properties:
      name:
        $ref: '#/definitions/env-var-name'
      value-from:
        oneOf:
        - $ref: '#/definitions/environment-value-from-api-token'
        - $ref: '#/definitions/environment-value-from-constant'
        - $ref: '#/definitions/environment-value-from-secret'
        - $ref: '#/definitions/environment-value-from-account-server-asset'
    required:
    - name
    - value-from

  # Declaration for value-from 'api-token'.
  # User provides a list of roles (which can be empty).
  # Here, we limit the number of roles to 1.
  environment-value-from-api-token:
    type: object
    additionalProperties: false
    properties:
      api-token:
        type: object
        properties:
          roles:
            type: array
            items:
              type: string
              pattern: '^[a-z]{1,}[a-z-_]{0,}$'
            minItems: 0
            maxItems: 1
            uniqueItems: true
        required:
        - roles
    required:
    - api-token

  # An Image environment from a constant.
  environment-value-from-constant:
    type: object
    additionalProperties: false
    properties:
      constant:
        type: object
        properties:
          # The hard-coded value (constant)
          value:
            type: string
        required:
        - value
    required:
    - constant

  # An Image environment from a Kubernetes 'secret'.
  # At the moment we expect the secret to be unencrypted,
  # just 'opaque', so it can be read by the DM without special actions.
  environment-value-from-secret:
    type: object
    additionalProperties: false
    properties:
      secret:
        type: object
        properties:
          # The name of the secret object,
          # i.e. its metadata->name.
          name:
            $ref: '#/definitions/rfc-1035-name'
          # The name of the key in the secret.
          # - Begins with lowercase letter
          # - Then lower-case alphanumeric including '-', '_' and '.'
          # - Ends begins with lower-case alphanumeric
          key:
            type: string
            minLength: 1
            maxLength: 63
            pattern: '^[a-z]([a-z0-9-_.]*[a-z0-9])?$'
        required:
        - name
        - key
    required:
    - secret

  # An Image environment from an Account Server 'asset'.
  # At the moment we expect the secret to be unencrypted,
  # just 'opaque', so it can be read by the DM without special actions.
  environment-value-from-account-server-asset:
    type: object
    additionalProperties: false
    properties:
      account-server-asset:
        type: object
        properties:
          # The name of the secret object,
          # i.e. its metadata->name.
          name:
            $ref: '#/definitions/rfc-1035-name'
        required:
        - name
    required:
    - account-server-asset

  # Image file definitions
  file:
    type: array
    items:
      $ref: '#/definitions/file-content-from'

  # An Image file from something else
  file-content-from:
    type: object
    additionalProperties: false
    properties:
      name:
        $ref: '#/definitions/path-and-file-name'
      content-from:
        oneOf:
        - $ref: '#/definitions/file-content-from-account-server-asset'
    required:
    - name
    - content-from

  # An Image file-from an account-server-asset declaration
  file-content-from-account-server-asset:
    type: object
    additionalProperties: false
    properties:
      account-server-asset:
        type: object
        properties:
          name:
            $ref: '#/definitions/rfc-1035-name'
        required:
        - name
    required:
    - account-server-asset

  # The pattern for Image file names.
  path-and-file-name:
    type: string
    minLength: 2
    maxLength: 256
    pattern: '^/.{1,255}$'

  # The pattern for Image environment names.
  # Classic linux/shell,
  # i.e. letters, digits and '_' and must begin letter or '_'
  env-var-name:
    type: string
    minLength: 1
    pattern: '^[a-zA-Z_]{1,}[a-zA-Z0-9_]{0,}$'

  # The pattern for RFC 1035 label names.
  rfc-1035-name:
    type: string
    minLength: 1
    maxLength: 63
    pattern: '^[a-z]([a-z0-9-]*[a-z0-9])?$'

  # A 'replaces' object.
  # A job definition can include this 'replaces' list
  # to identify a Job (and collection) it replaces.
  # A job can replace more than one Job, but each jab that's replaced
  # must include the job and collection it belongs to.
  replace-list:
    type: array
    items:
      type: object
      additionalProperties: false
      properties:
        collection:
          type: string
          minLength: 1
          maxLength: 80
          pattern: '^[a-z]{1}[a-z0-9-]*$'
        job:
          type: string
          minLength: 1
          maxLength: 80
          pattern: '^[a-z]{1}[a-z0-9-]*$'
      required:
      - collection
      - job

  # Test groups.
  # A list of groups that have a name and optional compose-file.
  test-groups:
    type: array
    items:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 63
          pattern: '^[a-z]{1}[a-z0-9-]*$'
        compose:
          type: object
          additionalProperties: false
          properties:
            file:
              type: string
              pattern: '^docker-compose(-[a-z0-9-]{1,})?.yaml$'
            delay-seconds:
              type: integer
              minimum: 1
          required:
          - file
        environment:
          type: array
          additionalProperties: false
          items:
            $ref: '#/definitions/test-group-environment-entry'
      required:
      - name
    additionalProperties: false

  test-group-environment-entry:
    type: object
    patternProperties:
      '^[a-zA-Z_]{1,}[a-zA-Z0-9_]{0,}$':
        oneOf:
        - type: string
        - type: number
        - type: boolean
    additionalProperties: false

  # Job Variables.
  # Consists of inputs, options and variables (not are required)
  job-variables:
    type: object
    additionalProperties: false
    properties:
      inputs:
        $ref: '#/definitions/job-input-variables'
      options:
        $ref: '#/definitions/job-option-variables'
      order:
        $ref: '#/definitions/job-order-variables'
      outputs:
        $ref: '#/definitions/job-output-variables'

  # Variable ordering (inputs, options, outputs)
  job-order-variables:
    type: object
    additionalProperties: false
    properties:
      inputs:
        type: array
        items:
          type: string
      options:
        type: array
        items:
          type: string
      outputs:
        type: array
        items:
          type: string

  # Variables (inputs)
  job-input-variables:
    type: object
    additionalProperties: false
    properties:
      type:
        type: string
        enum:
        - object
      required:
        type: array
        items:
          type: string
      properties:
        $ref: '#/definitions/job-input-properties'
    required:
    - type
    - properties

  job-input-properties:
    type: object
    additionalProperties: false
    patternProperties:
      '^[a-zA-Z]{1}[a-zA-Z0-9-_]{0,79}$':
        $ref: '#/definitions/job-input-property'

  job-input-property:
    type: object
    additionalProperties: false
    properties:
      title:
        type: string
      mime-types:
        type: array
        items:
          type: string
      type:
        type: string
        enum:
        - file
        - files
        - molecules-smi
      multiple:
        type: boolean
    required:
    - title
    - type

  # Variables (outputs)
  job-output-variables:
    type: object
    additionalProperties: false
    properties:
      type:
        type: string
        enum:
        - object
      properties:
        $ref: '#/definitions/job-output-properties'
    required:
    - type
    - properties

  job-output-properties:
    type: object
    additionalProperties: false
    patternProperties:
      '^[a-zA-Z]{1}[a-zA-Z0-9-_]{0,79}$':
        $ref: '#/definitions/job-output-property'

  job-output-property:
    type: object
    additionalProperties: false
    properties:
      title:
        type: string
      mime-types:
        type: array
        items:
          type: string
      creates:
        type: string
      type:
        type: string
        enum:
        - file
        - files
      annotation-properties:
        type: object
        additionalProperties: true
    required:
    - title
    - creates
    - type

  # Variables (options)
  job-option-variables:
    type: object
    additionalProperties: false
    properties:
      type:
        type: string
        enum:
        - object
      required:
        type: array
        items:
          type: string
      properties:
        $ref: '#/definitions/job-option-properties'
    required:
    - type
    - properties

  job-option-properties:
    type: object
    additionalProperties: false
    patternProperties:
      '^[a-zA-Z]{1}[a-zA-Z0-9-_]{0,79}$':
        $ref: '#/definitions/job-option-property'

  job-option-property:
    type: object
    additionalProperties: false
    properties:
      title:
        type: string
      type:
        type: string
        enum:
        - string
        - integer
        - number
        - boolean
        - array
      multiple:
        type: boolean
      pattern:
        type: string
      minimum:
        type: number
      maximum:
        type: number
      default:
        oneOf:
        - type: string
        - type: number
        - type: boolean
      enum:
        type: array
        items:
          anyOf:
          - type: string
          - type: number
          - type: boolean
      items:
        type: object
        additionalProperties: true
    required:
    - title
    - type

  # An individual Test.
  # Consists of a identity (i.e. 'test-filter-molecules')
  # followed by a Test object.
  job-test:
    type: object
    additionalProperties: false
    patternProperties:
      '^[a-z]{1}[a-z0-9-]{0,79}$':
        $ref: '#/definitions/test'
    minProperties: 1

  # An individual Test.
  # The user defines inputs and options
  # along with environment variables (that have to exist)
  # and will be injected into the running Job. For each
  # environment variable defined jote will ensure that it exists.
  # The user can also define a series of 'checks'
  # that are used to check files expected to be created
  # by the job under test.
  test:
    type: object
    additionalProperties: false
    properties:
      nextflow-config-file:
        type: string
      run-groups:
        type: array
        items:
          $ref: '#/definitions/run-group'
      run-level:
        type: integer
        minimum: 1
        maximum: 100
      timeout-minutes:
        type: integer
        minimum: 1
      ignore:
        type: 'null'
      inputs:
        $ref: '#/definitions/test-input'
      options:
        $ref: '#/definitions/test-option'
      environment:
        type: array
        items:
          $ref: '#/definitions/env-var-name'
      checks:
        type: object
        properties:
          exitCode:
            type: integer
          outputs:
            type: array
            items:
              $ref: '#/definitions/test-checks-output'
        required:
        - exitCode

  run-group:
    type: object
    additionalProperties: false
    properties:
      name:
        type: string
        minLength: 1
        maxLength: 63
        pattern: '^[a-z]{1}[a-z0-9-]*$'
      ordinal:
        type: integer
        minimum: 1
    required:
    - name
    - ordinal

  # A test input, a string or array of strings
  test-input:
    type: object
    additionalProperties: false
    patternProperties:
      '^[a-zA-Z]{1}[a-zA-Z0-9_-]{0,31}$':
        oneOf:
        - type: string
        - type: array
          items:
            type: string

  # A test option
  # Arrays are assumed to be arrays of strings.
  test-option:
    type: object
    additionalProperties: false
    patternProperties:
      '^[a-zA-Z]{1}[a-zA-Z0-9_-]{0,31}$':
        oneOf:
        - type: string
        - type: number
        - type: boolean
        - type: array

  # Test output checks
  test-checks-output:
    type: object
    properties:
      name:
        type: string
      checks:
        type: array
        items:
          anyOf:
          - $ref: '#/definitions/test-checks-output-exists'
          - $ref: '#/definitions/test-checks-output-linecount'
    required:
    - name

  # A test output check (for a file existing or not existing)
  test-checks-output-exists:
    type: object
    additionalProperties: false
    properties:
      exists:
        type: boolean
    required:
    - exists

  # A test output check (for a file length)
  test-checks-output-linecount:
    type: object
    additionalProperties: false
    properties:
      lineCount:
        type: integer
        minimum: 0
    required:
    - lineCount
