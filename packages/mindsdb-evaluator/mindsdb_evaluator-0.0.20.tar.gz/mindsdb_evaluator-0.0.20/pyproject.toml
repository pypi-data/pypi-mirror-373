[tool.poetry]
name = "mindsdb-evaluator"
version = "0.0.20"
description = "Model evaluation for Machine Learning pipelines."
authors = ["MindsDB Inc. <hello@mindsdb.com>"]
license = "GPL-3.0"
readme = "README.md"
packages = [{include = "mindsdb_evaluator"}]

[tool.poetry.dependencies]
python = ">=3.10,<3.14"
type-infer = "0.0.25"
numpy = "^1"
pandas = "^2"
scikit-learn = "1.5.2"
dataprep-ml = "0.0.25"
# indirect dependency (from ragas). Set strict version to fix vulnerability, while it is not fixed in other dependencies.
h11 = ">=0.16.0"

# dependencies for optional packages
datasets = {version = "^2.20.0", optional = true}
ragas = {version = "^0.1.13", optional = true}    # see note about this at the bottom of this file
langchain = {version = "0.2.17", optional = true}
langchain-community = {version = "0.2.19", optional = true}

[tool.poetry.extras]
rag = [
    "ragas",
    "datasets",
    "h11",
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


# Note on RAGAS:
# RAGAS requires `langchain-openai`, which asks for python>=3.8.1
# this means when doing `poetry lock`, it will fail due to the >= 3.8 constraint
# poetry has no easy fix for this (see poetry issue #697)
# the following workaround is useful:
#   1. temporally bump mindsdb_evaluator in version range to `>=3.8.1,<3.12`
#   2. generate `poetry.lock` file via `poetry lock`
#   3. undo the version range bump to the original: `>=3.8,<3.12`
#   4. push, everything works as normal (3.8.0 is not really used anywhere)
# However, we have discussed internally that we'd rather keep RAGAS optional for now
# while we deprecate 3.8 support in our broader ecosystem. Once that happens, we can
# bump this library to >=3.9 and move `rag` dependencies into core list.
