# autogenerated module
from typing import ClassVar

from ..core import resource as res
from ..models import networking_v1beta1 as m_networking_v1beta1


class IPAddress(res.GlobalResource, m_networking_v1beta1.IPAddress):
    """* **Extends**: ``models.networking_v1beta1.IPAddress``
       * **Type**: Global Resource
       * **Accepted client methods**: `delete`, `deletecollection`, `get`, `list`, `patch`, `create`, `replace`, `watch`
    """
    _api_info = res.ApiInfo(
        resource=res.ResourceDef('networking.k8s.io', 'v1beta1', 'IPAddress'),
        plural='ipaddresses',
        verbs=['delete', 'deletecollection', 'get', 'list', 'patch', 'post', 'put', 'watch'],
    )


class ServiceCIDRStatus(res.GlobalSubResource, m_networking_v1beta1.ServiceCIDR):
    """* **Extends**: ``models.networking_v1beta1.ServiceCIDR``
       * **Type**: Global Resource
       * **Accepted client methods**: `get`, `patch`, `replace`
    """
    _api_info = res.ApiInfo(
        resource=res.ResourceDef('networking.k8s.io', 'v1beta1', 'ServiceCIDR'),
        parent=res.ResourceDef('networking.k8s.io', 'v1beta1', 'ServiceCIDR'),
        plural='servicecidrs',
        verbs=['get', 'patch', 'put'],
        action='status',
    )


class ServiceCIDR(res.GlobalResource, m_networking_v1beta1.ServiceCIDR):
    """* **Extends**: ``models.networking_v1beta1.ServiceCIDR``
       * **Type**: Global Resource
       * **Accepted client methods**: `delete`, `deletecollection`, `get`, `list`, `patch`, `create`, `replace`, `watch`

       **Subresources**:

       * **Status**: ``ServiceCIDRStatus``
    """
    _api_info = res.ApiInfo(
        resource=res.ResourceDef('networking.k8s.io', 'v1beta1', 'ServiceCIDR'),
        plural='servicecidrs',
        verbs=['delete', 'deletecollection', 'get', 'list', 'patch', 'post', 'put', 'watch'],
    )

    Status: ClassVar = ServiceCIDRStatus

