# autogenerated module
from typing import ClassVar

from ..core import resource as res
from ..models import resource_v1beta1 as m_resource_v1beta1


class DeviceClass(res.GlobalResource, m_resource_v1beta1.DeviceClass):
    """* **Extends**: ``models.resource_v1beta1.DeviceClass``
       * **Type**: Global Resource
       * **Accepted client methods**: `delete`, `deletecollection`, `get`, `list`, `patch`, `create`, `replace`, `watch`
    """
    _api_info = res.ApiInfo(
        resource=res.ResourceDef('resource.k8s.io', 'v1beta1', 'DeviceClass'),
        plural='deviceclasses',
        verbs=['delete', 'deletecollection', 'get', 'list', 'patch', 'post', 'put', 'watch'],
    )


class ResourceClaimStatus(res.NamespacedSubResource, m_resource_v1beta1.ResourceClaim):
    """* **Extends**: ``models.resource_v1beta1.ResourceClaim``
       * **Type**: Namespaced Resource
       * **Accepted client methods**: `get`, `patch`, `replace`
    """
    _api_info = res.ApiInfo(
        resource=res.ResourceDef('resource.k8s.io', 'v1beta1', 'ResourceClaim'),
        parent=res.ResourceDef('resource.k8s.io', 'v1beta1', 'ResourceClaim'),
        plural='resourceclaims',
        verbs=['get', 'patch', 'put'],
        action='status',
    )


class ResourceClaim(res.NamespacedResourceG, m_resource_v1beta1.ResourceClaim):
    """* **Extends**: ``models.resource_v1beta1.ResourceClaim``
       * **Type**: Namespaced Resource
       * **Accepted client methods**: `delete`, `deletecollection`, `get`, `list` all, `watch` all, `list`, `patch`, `create`, `replace`, `watch`

       **Subresources**:

       * **Status**: ``ResourceClaimStatus``
    """
    _api_info = res.ApiInfo(
        resource=res.ResourceDef('resource.k8s.io', 'v1beta1', 'ResourceClaim'),
        plural='resourceclaims',
        verbs=['delete', 'deletecollection', 'get', 'global_list', 'global_watch', 'list', 'patch', 'post', 'put', 'watch'],
    )

    Status: ClassVar = ResourceClaimStatus


class ResourceClaimTemplate(res.NamespacedResourceG, m_resource_v1beta1.ResourceClaimTemplate):
    """* **Extends**: ``models.resource_v1beta1.ResourceClaimTemplate``
       * **Type**: Namespaced Resource
       * **Accepted client methods**: `delete`, `deletecollection`, `get`, `list` all, `watch` all, `list`, `patch`, `create`, `replace`, `watch`
    """
    _api_info = res.ApiInfo(
        resource=res.ResourceDef('resource.k8s.io', 'v1beta1', 'ResourceClaimTemplate'),
        plural='resourceclaimtemplates',
        verbs=['delete', 'deletecollection', 'get', 'global_list', 'global_watch', 'list', 'patch', 'post', 'put', 'watch'],
    )


class ResourceSlice(res.GlobalResource, m_resource_v1beta1.ResourceSlice):
    """* **Extends**: ``models.resource_v1beta1.ResourceSlice``
       * **Type**: Global Resource
       * **Accepted client methods**: `delete`, `deletecollection`, `get`, `list`, `patch`, `create`, `replace`, `watch`
    """
    _api_info = res.ApiInfo(
        resource=res.ResourceDef('resource.k8s.io', 'v1beta1', 'ResourceSlice'),
        plural='resourceslices',
        verbs=['delete', 'deletecollection', 'get', 'list', 'patch', 'post', 'put', 'watch'],
    )

