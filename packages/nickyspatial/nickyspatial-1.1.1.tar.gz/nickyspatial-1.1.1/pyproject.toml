[project]
name = "nickyspatial"
version = "1.1.1"
description = "An open-source object-based image analysis library for remote sensing."
readme = "README.md"
authors = [
    {name = "Kshitij Raj Sharma", email = "krschap@duck.com"},
]
license = {text = "MIT"}
classifiers = [
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: GIS",
]
keywords = ["remote-sensing", "obia", "object", "segmentation"]
requires-python = ">=3.10"
dependencies = [
    "geopandas>=1.0.1",
    "matplotlib>=3.10.1",
    "numexpr>=2.10.2",
    "pandas>=2.2.3",
    "rasterio>=1.4.3",
    "scikit-image>=0.25.2",
    "scipy>=1.15.2",
    "seaborn>=0.13.2",
    "scikit-learn>=1.6.1",
    "folium>=0.19.5",
    "streamlit-folium>=0.24.1",
    "ipywidgets>=8.1.7",
    "ipympl>=0.9.7",
    "plotly>=6.0.1",
    "nbformat>=5.10.4",
]

[project.urls]
documentation = "https://kshitijrajsharma.github.io/nickyspatial"
repository = "https://github.com/kshitijrajsharma/nickyspatial"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[dependency-groups]
dev = [
    "commitizen>=4.4.1",
    "pre-commit>=4.2.0",
    "pytest>=8.3.5",
    "ruff>=0.11.3",
    "nbqa>=1.8.7",
    "nbstripout>=0.7.1",
    "ipykernel>=6.29.5",
]

ui = [
    "streamlit>=1.44.1",
]

cnn = [
    "tensorflow>=2.19.0",
]

[project.optional-dependencies]

docs = [
    "mdx-truly-sane-lists>=1.3",
    "mkdocs>=1.6.1",
    "mkdocs-git-revision-date-localized-plugin>=1.4.5",
    "mkdocs-jupyter>=0.25.1",
    "mkdocs-material>=9.6.11",
    "mkdocstrings-python>=1.16.10",
]


[tool.commitizen]
name = "cz_conventional_commits"
tag_format = "v$version"
version_scheme = "pep440"
version_provider = "pep621"
update_changelog_on_bump = true
version_files = [
    "pyproject.toml:version",
    "nickyspatial/__init__.py:__version__",
]

[tool.ruff]
fix = true
line-length = 132
target-version = "py310"
exclude = [
    ".git",
    ".ruff_cache",
    ".vscode",
    "__pypackages__",
    "build",
    "dist",
    "nickyspatial/__init__.py",
]

[tool.ruff.lint]
ignore = [
    "D100",
    "D103",
    "E402",
    "F401",
    "F811",
    "F841",
    "N816",
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.per-file-ignores]
"*.ipynb" = [
    "D100", "D103",
    "E402",
    "F401", "F811", "F841",
    "N816",
    "E501",
]
"docs/examples/*.ipynb" = ["E402", "F403", "D100", "D103", "F841", "N816", "E501"]
"class_samples/*.ipynb" = ["E402", "F403", "D100", "D103", "F841", "N816", "E501", "F811"]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers"
testpaths = [
    "tests",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "cnn: marks tests that require TensorFlow/CNN functionality",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]
python_files = [
    "test_*.py",
    "*_test.py",
]
python_classes = [
    "Test*",
]
python_functions = [
    "test_*",
]
