[project]
name = "cpln-py"
dynamic = []
description = "A Python library for the Control Plane API"
authors = [
    { name = "dave6892", email = "dave6892@gmail.com" },
]
readme = "README.md"
classifiers = [
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
requires-python = "<3.14,>=3.9"
dependencies = [
    "python-dotenv>=1.0.1",
    "requests>=2.32.3",
    "websocket-client>=1.8.0",
    "urllib3<2.0.0",
    "inflection>=0.5.1",
]
version = "1.2.1"

[project.license]
text = "Apache License 2.0"

[project.optional-dependencies]
test = [
    "pytest>=8.4.0",
    "pytest-cov>=6.1.1",
    "requests-mock>=1.12.1",
]
docs = [
    "mkdocs>=1.6.1",
    "mkdocstrings[python]>=0.29.1",
]
lint = [
    "flake8>=7.2.0",
    "black>=25.1.0",
    "mypy>=1.9.0",
    "types-requests>=2.31.0.1",
]

[tool.mypy]
disallow_untyped_defs = true
check_untyped_defs = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
strict_optional = true

[tool.pdm]
distribution = true
package-dir = "src/cpln"
include = [
    "py.typed",
]

[tool.pdm.version]
source = "scm"
write_to = "cpln/_version.py"
write_template = "__version__ = '{}'"
version_format = "src.version:format_version"

[tool.ruff]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]
line-length = 88
indent-width = 4
target-version = "py39"

[tool.ruff.lint]
select = [
    "E4",
    "E7",
    "E9",
    "F",
    "I",
    "UP",
    "B",
    "C4",
    "SIM",
]
ignore = [
    "E501",
]
fixable = [
    "ALL",
]
unfixable = []
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.isort]
known-first-party = [
    "your_package_name",
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.coverage.run]
source = [
    "src/cpln",
]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/.*",
    "*/examples/*",
    "*/example_*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
show_missing = true
skip_covered = false
ignore_errors = true

[build-system]
requires = [
    "pdm-backend",
]
build-backend = "pdm.backend"

[dependency-groups]
dev = [
    "pytest>=8.4.0",
    "pytest-cov>=6.1.1",
    "requests-mock>=1.12.1",
    "black>=25.1.0",
    "flake8>=7.2.0",
    "mkdocs>=1.6.1",
    "mkdocstrings-python>=1.16.12",
    "mkdocs-autorefs>=1.4.2",
    "mypy>=1.9.0",
    "types-requests>=2.31.0.1",
    "ruff>=0.11.12",
    "pre-commit>=4.2.0",
    "ipython>=8.18.1",
]
