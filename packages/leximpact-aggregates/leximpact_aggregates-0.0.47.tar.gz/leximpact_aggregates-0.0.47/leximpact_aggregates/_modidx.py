# Autogenerated by nbdev

d = {
    "settings": {
        "branch": "master",
        "doc_baseurl": "/leximpact_aggregates/",
        "doc_host": "https://documentation.leximpact.dev/",
        "git_url": "https://git.leximpact.dev/leximpact/leximpact-aggregates/tree/master/",
        "lib_path": "leximpact_aggregates",
    },
    "syms": {
        "leximpact_aggregates.aggregate": {
            "leximpact_aggregates.aggregate.Aggregate": (
                "aggregate.html#aggregate",
                "leximpact_aggregates/aggregate.py",
            ),
            "leximpact_aggregates.aggregate.Aggregate.merge_with": (
                "aggregate.html#aggregate.merge_with",
                "leximpact_aggregates/aggregate.py",
            ),
            "leximpact_aggregates.aggregate.AggregateManager": (
                "aggregate.html#aggregatemanager",
                "leximpact_aggregates/aggregate.py",
            ),
            "leximpact_aggregates.aggregate.AggregateManager.__init__": (
                "aggregate.html#aggregatemanager.__init__",
                "leximpact_aggregates/aggregate.py",
            ),
            "leximpact_aggregates.aggregate.AggregateManager._save_to_yaml": (
                "aggregate.html#aggregatemanager._save_to_yaml",
                "leximpact_aggregates/aggregate.py",
            ),
            "leximpact_aggregates.aggregate.AggregateManager.get_aggregate_from_dataframe": (
                "aggregate.html#aggregatemanager.get_aggregate_from_dataframe",
                "leximpact_aggregates/aggregate.py",
            ),
            "leximpact_aggregates.aggregate.AggregateManager.get_aggregate_from_df": (
                "aggregate.html#aggregatemanager.get_aggregate_from_df",
                "leximpact_aggregates/aggregate.py",
            ),
            "leximpact_aggregates.aggregate.AggregateManager.get_aggregate_value": (
                "aggregate.html#aggregatemanager.get_aggregate_value",
                "leximpact_aggregates/aggregate.py",
            ),
            "leximpact_aggregates.aggregate.AggregateManager.get_aggregats_from_json": (
                "aggregate.html#aggregatemanager.get_aggregats_from_json",
                "leximpact_aggregates/aggregate.py",
            ),
            "leximpact_aggregates.aggregate.AggregateManager.get_aggregats_from_row": (
                "aggregate.html#aggregatemanager.get_aggregats_from_row",
                "leximpact_aggregates/aggregate.py",
            ),
            "leximpact_aggregates.aggregate.AggregateManager.get_all_aggregate_for_a_year": (
                "aggregate.html#aggregatemanager.get_all_aggregate_for_a_year",
                "leximpact_aggregates/aggregate.py",
            ),
            "leximpact_aggregates.aggregate.AggregateManager.get_key_value_aggregate_from_csv": (
                "aggregate.html#aggregatemanager.get_key_value_aggregate_from_csv",
                "leximpact_aggregates/aggregate.py",
            ),
            "leximpact_aggregates.aggregate.AggregateManager.get_key_value_aggregates": (
                "aggregate.html#aggregatemanager.get_key_value_aggregates",
                "leximpact_aggregates/aggregate.py",
            ),
            "leximpact_aggregates.aggregate.AggregateManager.get_path": (
                "aggregate.html#aggregatemanager.get_path",
                "leximpact_aggregates/aggregate.py",
            ),
            "leximpact_aggregates.aggregate.AggregateManager.list_aggregates": (
                "aggregate.html#aggregatemanager.list_aggregates",
                "leximpact_aggregates/aggregate.py",
            ),
            "leximpact_aggregates.aggregate.AggregateManager.load_aggregate": (
                "aggregate.html#aggregatemanager.load_aggregate",
                "leximpact_aggregates/aggregate.py",
            ),
            "leximpact_aggregates.aggregate.AggregateManager.load_from_yaml": (
                "aggregate.html#aggregatemanager.load_from_yaml",
                "leximpact_aggregates/aggregate.py",
            ),
            "leximpact_aggregates.aggregate.AggregateManager.process_all_json": (
                "aggregate.html#aggregatemanager.process_all_json",
                "leximpact_aggregates/aggregate.py",
            ),
            "leximpact_aggregates.aggregate.AggregateManager.row_to_dict": (
                "aggregate.html#aggregatemanager.row_to_dict",
                "leximpact_aggregates/aggregate.py",
            ),
            "leximpact_aggregates.aggregate.AggregateManager.save_agg_from_list": (
                "aggregate.html#aggregatemanager.save_agg_from_list",
                "leximpact_aggregates/aggregate.py",
            ),
            "leximpact_aggregates.aggregate.AggregateManager.save_agg_to_yaml_and_json": (
                "aggregate.html#aggregatemanager.save_agg_to_yaml_and_json",
                "leximpact_aggregates/aggregate.py",
            ),
            "leximpact_aggregates.aggregate.AggregateManager.save_to_json": (
                "aggregate.html#aggregatemanager.save_to_json",
                "leximpact_aggregates/aggregate.py",
            ),
            "leximpact_aggregates.aggregate.AggregateManager.save_to_yaml": (
                "aggregate.html#aggregatemanager.save_to_yaml",
                "leximpact_aggregates/aggregate.py",
            ),
            "leximpact_aggregates.aggregate.Data": (
                "aggregate.html#data",
                "leximpact_aggregates/aggregate.py",
            ),
            "leximpact_aggregates.aggregate.DataStructure": (
                "aggregate.html#datastructure",
                "leximpact_aggregates/aggregate.py",
            ),
            "leximpact_aggregates.aggregate.FileFormat": (
                "aggregate.html#fileformat",
                "leximpact_aggregates/aggregate.py",
            ),
            "leximpact_aggregates.aggregate.LabelKey": (
                "aggregate.html#labelkey",
                "leximpact_aggregates/aggregate.py",
            ),
            "leximpact_aggregates.aggregate.Perimeter": (
                "aggregate.html#perimeter",
                "leximpact_aggregates/aggregate.py",
            ),
            "leximpact_aggregates.aggregate.Reference": (
                "aggregate.html#reference",
                "leximpact_aggregates/aggregate.py",
            ),
            "leximpact_aggregates.aggregate.get_openfisca_variables": (
                "aggregate.html#get_openfisca_variables",
                "leximpact_aggregates/aggregate.py",
            ),
        }
    },
}
