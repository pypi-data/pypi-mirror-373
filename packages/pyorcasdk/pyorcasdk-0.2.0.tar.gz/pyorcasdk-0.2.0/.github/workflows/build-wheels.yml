name: Build

on: [pull_request]

jobs:

  build_sdist:
    name: Build SDist
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Build SDist
      run: pipx run build --sdist

    - name: Check metadata
      run: pipx run twine check dist/*

    - uses: actions/upload-artifact@v4
      with:
        name: cibw-sdist
        path: dist/*.tar.gz

  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, ubuntu-24.04-arm, windows-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true  # Ensure submodules are checked out

      - name: Update submodules (if needed)
        run: git submodule update --init --recursive

      - name: Set up QEMU
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all
          
      # Used to host cibuildwheel
      - uses: actions/setup-python@v5

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install cibuildwheel==2.22.0
          python -m pip install pybind11  # Ensures pybind11 is available

      - name: Install latest CMake
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake
        if: runner.os == 'Linux'

      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse
        # to supply options, put them in 'env', like:
        # env:
        #   CIBW_SOME_OPTION: value

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl