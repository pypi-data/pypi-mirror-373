{"version":3,"file":"static/js/295.a7ebdded.chunk.js","mappings":"gMAoDA,QA1CA,SAAqBA,GACnB,MAAMC,EAAYC,EAAAA,OAAgC,MAC5CC,EAAaD,EAAAA,SAmBnB,OAjBAE,EAAAA,EAAAA,YAAU,KACJH,EAAUI,SAAWL,EAAMM,IAAIC,WAAW,QAC5CJ,EAAWE,QAAU,IAAIG,IAAAA,QAAcR,EAAMM,IAAK,CAChDG,OAAQR,EAAUI,QAClBK,gBAAiB,QACjBC,OAAO,EACPC,UAAW,MAGR,KACDT,EAAWE,UACbF,EAAWE,QAAQQ,UACnBV,EAAWE,aAAUS,EACvB,IAED,CAACd,EAAMM,OAGRS,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACIjB,EAAMM,IAAIC,WAAW,QACrBW,EAAAA,EAAAA,KAAA,OACEC,UAAU,eACVC,MAAO,CAAEC,MAAO,QAChBC,IAAKtB,EAAMM,IACXiB,IAAKvB,EAAMM,MAGdN,EAAMM,IAAIC,WAAW,QACpBW,EAAAA,EAAAA,KAAA,UACEC,UAAU,eACVC,MAAO,CAAEC,MAAO,QAChBG,IAAKvB,MAKf,EC9Ce,SAASwB,EAAKzB,GAC3B,MAAM,UAAE0B,EAAS,SAAEC,EAAQ,IAAErB,KAAQsB,GAAmB5B,EAGxD,OAFA6B,EAAAA,GAAyBF,EAAU,MAAOrB,GAC1CuB,EAAAA,GAAgCF,EAAUC,IACnCV,EAAAA,EAAAA,KAACY,EAAW,CAACxB,IAAKA,GAC3B,C","sources":["components/general/VideoStream.tsx","components/yaml-layout/components/VideoStream.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\n\nimport type { Player } from '@cycjimmy/jsmpeg-player';\nimport JSMpeg from '@cycjimmy/jsmpeg-player';\n\ninterface Props {\n  /** Url to the video stream, either websocket ws(s):// or mjpeg http(s)://  */\n  url: string;\n}\n\nfunction VideoStream(props: Props) {\n  const canvasRef = React.useRef<HTMLCanvasElement>(null);\n  const mplayerRef = React.useRef<Player>();\n\n  useEffect(() => {\n    if (canvasRef.current && props.url.startsWith('ws')) {\n      mplayerRef.current = new JSMpeg.Player(props.url, {\n        canvas: canvasRef.current,\n        videoBufferSize: 1024 * 1024 * 4,\n        audio: false,\n        protocols: [],\n      });\n    }\n    return () => {\n      if (mplayerRef.current) {\n        mplayerRef.current.destroy();\n        mplayerRef.current = undefined;\n      }\n    };\n  }, [props.url]);\n\n  return (\n    <>\n      {!props.url.startsWith('ws') && (\n        <img\n          className=\"video-stream\"\n          style={{ width: '100%' }}\n          src={props.url}\n          alt={props.url}\n        />\n      )}\n      {props.url.startsWith('ws') && (\n        <canvas\n          className=\"video-stream\"\n          style={{ width: '100%' }}\n          ref={canvasRef}\n        />\n      )}\n    </>\n  );\n}\n\nexport default VideoStream;\n","import type { YamlComponent } from '@esrf/daiquiri-lib';\nimport { YamlAsserts } from '@esrf/daiquiri-lib';\nimport VideoStream from 'components/general/VideoStream';\n\nexport default function Yaml(props: YamlComponent) {\n  const { providers, yamlNode, url, ...unknownOptions } = props;\n  YamlAsserts.assertString(yamlNode, 'url', url);\n  YamlAsserts.assertNoUnknownKeys(yamlNode, unknownOptions);\n  return <VideoStream url={url} />;\n}\n"],"names":["props","canvasRef","React","mplayerRef","useEffect","current","url","startsWith","JSMpeg","canvas","videoBufferSize","audio","protocols","destroy","undefined","_jsxs","_Fragment","children","_jsx","className","style","width","src","alt","ref","Yaml","providers","yamlNode","unknownOptions","YamlAsserts","VideoStream"],"sourceRoot":""}