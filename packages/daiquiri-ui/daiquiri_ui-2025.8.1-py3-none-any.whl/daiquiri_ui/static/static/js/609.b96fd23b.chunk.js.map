{"version":3,"file":"static/js/609.b96fd23b.chunk.js","mappings":"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","sources":["components/editor/FileEditor.tsx","connect/FileEditor.ts","components/yaml-layout/components/Editor.tsx"],"sourcesContent":["import { useState, useRef, useEffect, useCallback } from 'react';\n\nimport { map, values } from 'lodash';\n\nimport AceEditor from 'react-ace';\n\nimport 'ace-builds/src-noconflict/mode-yaml';\nimport 'ace-builds/src-noconflict/mode-python';\nimport 'ace-builds/src-noconflict/theme-monokai';\nimport 'ace-builds/src-min-noconflict/ext-language_tools';\nimport 'ace-builds/src-noconflict/snippets/python';\nimport 'ace-builds/src-min-noconflict/ext-searchbox';\nimport 'ace-builds/src-min-noconflict/ext-statusbar';\n\nimport { Tabs, Tab, Button, Alert } from 'react-bootstrap';\nimport { FullSizer } from '@esrf/daiquiri-lib';\n\nimport Confirm from 'helpers/Confirm';\n\ninterface FileDescription {\n  path: string;\n  contents: string;\n  ext: string;\n}\n\nfunction TabTitle(props: {\n  title: string;\n  close: () => void;\n  dirty?: boolean;\n}) {\n  return (\n    <>\n      <div className=\"title-wrap\">{props.title}</div>\n      {props.dirty && '*'}\n      {props.dirty && (\n        <Confirm\n          title=\"File Modified\"\n          message=\"This file has been modified, are you sure you want to close without saving?\"\n        >\n          {(confirm) => (\n            <Button size=\"sm\" className=\"ms-1\" onClick={confirm(props.close)}>\n              <i className=\"fa fa-times\" />\n            </Button>\n          )}\n        </Confirm>\n      )}\n      {!props.dirty && (\n        <Button size=\"sm\" className=\"ms-1\" onClick={props.close}>\n          <i className=\"fa fa-times\" />\n        </Button>\n      )}\n    </>\n  );\n}\n\nfunction EditorTab(props: {\n  file: FileDescription;\n  name: string;\n  save: (args: { path: string; contents: string }) => Promise<void>;\n  setDirty: (dirty: boolean) => void;\n}) {\n  const { name, setDirty, file } = props;\n  const [contents, setContents] = useState(file.contents);\n  const [dimensions, setDimensions] = useState<{\n    width: string;\n    height: string;\n  }>({ width: '', height: '' });\n  const ref = useRef(contents);\n\n  const types: Record<string, string> = {\n    yml: 'yaml',\n    py: 'python',\n  };\n\n  const onChange = useCallback(\n    (value: any) => {\n      ref.current = value;\n      setDirty(value !== file.contents);\n      setContents(value);\n    },\n    [setDirty, file]\n  );\n\n  const setTabRef = (el: AceEditor | null) => {\n    const node = el?.refEditor?.parentNode?.parentNode;\n    if (node && !dimensions.width) {\n      const html = node as HTMLBaseElement;\n      if (!html.clientWidth || !html.clientHeight) {\n        console.error('No client size defined');\n        return;\n      }\n      setDimensions({\n        width: `${html.clientWidth}px`,\n        height: `${html.clientHeight}px`,\n      });\n    }\n  };\n\n  const onSave = useCallback(() => {\n    props\n      .save({\n        path: file.path,\n        contents: ref.current,\n      })\n      .then(() => {\n        setDirty(false);\n      });\n  }, [ref, file]);\n\n  return (\n    <AceEditor\n      ref={(el) => setTabRef(el)}\n      width={dimensions.width}\n      height={dimensions.height}\n      mode={types[file.ext]}\n      theme=\"monokai\"\n      value={contents}\n      onChange={onChange}\n      name={name}\n      editorProps={{ $blockScrolling: true }}\n      enableBasicAutocompletion\n      enableLiveAutocompletion\n      enableSnippets\n      commands={[\n        {\n          name: 'save',\n          bindKey: { win: 'Ctrl-S', mac: 'Command-S' },\n          exec: onSave,\n        },\n      ]}\n    />\n  );\n}\n\nfunction FileEditor(props: {\n  error?: string;\n  selectedFile?: string;\n  files: Record<string, FileDescription>;\n  actions: {\n    selectFile: (fileName: string | null) => void;\n    closeFile: (fileName: string) => void;\n    updateFile: (args: { path: string; contents: string }) => Promise<void>;\n  };\n}) {\n  const { files, selectedFile = '', actions } = props;\n  const [dirty, setDirty] = useState<Record<string, boolean>>({});\n\n  useEffect(() => {\n    if (!(selectedFile in files)) {\n      const filesValues = values(files);\n      if (values(filesValues).length > 0) {\n        setTimeout(() => {\n          props.actions.selectFile(filesValues[filesValues.length - 1].path);\n        }, 200);\n      }\n    }\n  }, [files, selectedFile, actions]);\n\n  return (\n    <FullSizer className=\"editor\">\n      {props.error && (\n        <Alert variant=\"danger\">\n          <i className=\"fa fa-warning\" /> Could not open file\n          <div className=\"description\">{props.error}</div>\n        </Alert>\n      )}\n      {values(props.files).length === 0 && (\n        <p>Select a file from the tree to edit it</p>\n      )}\n      {values(props.files).length > 0 && (\n        <Tabs\n          activeKey={props.selectedFile}\n          onSelect={(k) => props.actions.selectFile(k)}\n          transition={false}\n        >\n          {map(props.files, (file, name) => (\n            <Tab\n              key={name.replace('/', '')}\n              title={\n                <TabTitle\n                  title={name}\n                  close={() => props.actions.closeFile(name)}\n                  dirty={dirty[name]}\n                />\n              }\n              eventKey={name}\n            >\n              <EditorTab\n                name={name}\n                file={file}\n                save={props.actions.updateFile}\n                setDirty={(d) => setDirty({ ...dirty, [name]: d })}\n              />\n            </Tab>\n          ))}\n        </Tabs>\n      )}\n    </FullSizer>\n  );\n}\n\nFileEditor.defaultProps = {\n  selectedFile: undefined,\n  error: undefined,\n};\n\nexport default FileEditor;\n","import { connect } from 'react-redux';\nimport { withNamespace } from 'providers/namespace';\nimport editor from 'providers/editor';\nimport FileEditor from 'components/editor/FileEditor';\n\nfunction mapStateToProps(state: any, own: any) {\n  const { providers } = own;\n  return {\n    selectedFile: editor.selector('selectedFile', state),\n    files: providers.editor.files.selector('results', state),\n    error: providers.editor.files.selector('error', state),\n  };\n}\n\nfunction mapDispatchToProps(dispatch: any, own: any) {\n  return {\n    actions: {\n      selectFile: (payload: any) => editor.dispatch('SELECT_FILE', payload),\n      updateFile: (payload: any) => own.providers.editor.files.update(payload),\n      closeFile: (payload: any) =>\n        own.providers.editor.files.deleteLocal(payload),\n    },\n  };\n}\n\nexport default withNamespace({ editor })(\n  connect(mapStateToProps, mapDispatchToProps)(FileEditor)\n);\n","import type { YamlComponent } from '@esrf/daiquiri-lib';\nimport { YamlAsserts } from '@esrf/daiquiri-lib';\nimport FileEditor from 'connect/FileEditor';\n\nexport default function Yaml(props: YamlComponent) {\n  const { providers, yamlNode, ...unknownOptions } = props;\n  YamlAsserts.assertNoUnknownKeys(yamlNode, unknownOptions);\n  return <FileEditor providers={providers} />;\n}\n"],"names":["TabTitle","props","_jsxs","_Fragment","children","_jsx","className","title","dirty","Confirm","message","confirm","Button","size","onClick","close","EditorTab","name","setDirty","file","contents","setContents","useState","dimensions","setDimensions","width","height","ref","useRef","onChange","useCallback","value","current","onSave","save","path","then","AceEditor","el","_el$refEditor","_el$refEditor$parentN","node","refEditor","parentNode","html","clientWidth","clientHeight","console","error","setTabRef","mode","yml","py","ext","theme","editorProps","$blockScrolling","enableBasicAutocompletion","enableLiveAutocompletion","enableSnippets","commands","bindKey","win","mac","exec","FileEditor","files","selectedFile","actions","useEffect","filesValues","values","length","setTimeout","selectFile","FullSizer","Alert","variant","Tabs","activeKey","onSelect","k","transition","map","Tab","closeFile","eventKey","updateFile","d","replace","defaultProps","undefined","withNamespace","editor","connect","state","own","providers","selector","dispatch","payload","update","deleteLocal","Yaml","yamlNode","unknownOptions","YamlAsserts"],"sourceRoot":""}