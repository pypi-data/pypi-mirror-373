{"version":3,"file":"static/js/508.4fcb8fe4.chunk.js","mappings":"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","sources":["connect/samples/SampleDCList.ts","components/samples/SampleDCList.tsx","components/yaml-layout/components/SampleDCList.tsx","components/2dview/SavingButton.jsx","connect/2dview/SavingButton.js"],"sourcesContent":["import { connect } from 'react-redux';\nimport { withNamespace } from 'providers/namespace';\nimport metadata from 'providers/metadata';\nimport session from 'providers/session';\nimport SampleDCList from 'components/samples/SampleDCList';\n\nfunction mapStateToProps(state: any, own: any) {\n  const { datacollections, samples } = own.providers.metadata;\n  return {\n    operator: session.selector('operator', state),\n    currentSample: metadata.selector('currentSample', state),\n    sample: samples.selector('results', state)[\n      metadata.selector('currentSample', state)\n    ],\n    datacollections: datacollections.selector('ordered', state),\n    dcnamespace: own.providers.metadata.datacollections.getNamespace(),\n    namespace: datacollections.getNamespace(),\n    params: datacollections.selector('params', state),\n    per_page: datacollections.selector('per_page', state),\n    page: datacollections.selector('page', state),\n    total: datacollections.selector('total', state),\n    fetching: datacollections.selector('fetching', state),\n    selected: metadata.selector('selectedDataCollections', state),\n  };\n}\n\nfunction mapDispatchToProps(dispatch: any, own: any) {\n  const { datacollections } = own.providers.metadata;\n  return {\n    actions: {\n      fetch: () => datacollections.fetch(),\n      setParams: (payload: any) => datacollections.setParams(payload, true),\n      setPage: (payload: any) => datacollections.setPage(payload),\n      setPageSize: (payload: any) => datacollections.setPageSize(payload),\n      addSelection: (payload: any) =>\n        metadata.dispatch('SELECT_DATA_COLLECTION', payload),\n      removeSelection: (payload: any) =>\n        metadata.dispatch('UNSELECT_DATA_COLLECTION', payload),\n      resetSelection: () =>\n        metadata.dispatch('RESET_DATA_COLLECTION_SELECTION'),\n    },\n  };\n}\n\nexport default withNamespace({ metadata })(\n  connect(mapStateToProps, mapDispatchToProps)(SampleDCList)\n);\n","import { useEffect } from 'react';\nimport { FullSizer } from '@esrf/daiquiri-lib';\n\nimport RemountOnResize from 'components/utils/RemountOnResize';\n\nimport DCList from 'components/dc/DCList';\nimport NewScanButtonSample from 'components/samples/NewScanButtonSample';\nimport SavingButton from 'connect/2dview/SavingButton';\n\nimport type { DataCollection } from 'types/DataCollection';\nimport type { Sample } from 'types/Sample';\n\ninterface ISampleDCList {\n  currentSample: number;\n  operator: boolean;\n  datacollections: DataCollection[];\n  dcnamespace: string;\n  sample: Sample;\n  /** Whether to allow selection of a datacollection */\n  selectable: boolean;\n  actions: {\n    setParams: (payload: any) => Promise<any>;\n  };\n}\n\nexport default function SampleDCList(props: ISampleDCList) {\n  useEffect(() => {\n    props.actions.setParams({ sampleid: props.currentSample });\n  }, [props.currentSample, props.actions]);\n\n  const { operator, currentSample, sample, ...dcProps } = props;\n\n  return (\n    <RemountOnResize>\n      <FullSizer>\n        <div className=\"object\">\n          <h5>\n            Sample:{' '}\n            {props.currentSample ? props.sample.name : 'Create a sample first'}\n            <NewScanButtonSample\n              sampleid={props.currentSample}\n              disabled={!props.operator}\n            />\n            <SavingButton />\n          </h5>\n\n          <DCList\n            pages={0}\n            page={0}\n            fetching={false}\n            per_page={0}\n            total={0}\n            filter\n            scan\n            {...dcProps}\n            createScalarMap={false}\n            namespace={`sampledc${props.dcnamespace}`}\n          />\n        </div>\n      </FullSizer>\n    </RemountOnResize>\n  );\n}\n","import type { YamlComponent } from '@esrf/daiquiri-lib';\nimport { YamlAsserts } from '@esrf/daiquiri-lib';\nimport SampleDCList from 'connect/samples/SampleDCList';\n\nexport default function Yaml(props: YamlComponent) {\n  const { providers, yamlNode, selectable, ...unknownOptions } = props;\n  YamlAsserts.assertNoUnknownKeys(yamlNode, unknownOptions);\n  YamlAsserts.assertOptionalBoolean(yamlNode, 'selectable', selectable);\n  return <SampleDCList providers={providers} selectable={selectable} />;\n}\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { map } from 'lodash';\n\nimport { Form, Row, Col } from 'react-bootstrap';\n\nimport ButtonTriggerModalStore from 'connect/layout/ButtonTriggerModalStore';\n\nexport default class SavingButton extends Component {\n  static defaultProps = {\n    disabled: false\n  };\n\n  static propTypes = {\n    actions: PropTypes.shape({\n      fetchSaving: PropTypes.func.isRequired\n    }).isRequired,\n    saving: PropTypes.shape({\n      arguments: PropTypes.shape({})\n    }).isRequired,\n    disabled: PropTypes.bool\n  };\n\n  onSubmit = (formData, e, doSubmit) =>\n    doSubmit(formData).then(() => {\n      this.props.actions.fetchSaving();\n    });\n\n  render() {\n    return (\n      <ButtonTriggerModalStore\n        id=\"saving\"\n        button={<i className=\"fa fa-cog\" />}\n        buttonProps={{\n          className: 'me-1 float-end',\n          disabled: this.props.disabled\n        }}\n        title=\"Saving Configuration\"\n      >\n        <Form>\n          {map(this.props.saving.arguments, (v, k) => (\n            <Form.Group as={Row} key={k}>\n              <Form.Label column sm={3}>\n                {k}\n              </Form.Label>\n              <Col>{v}</Col>\n            </Form.Group>\n          ))}\n        </Form>\n      </ButtonTriggerModalStore>\n    );\n  }\n}\n","import { connect } from 'react-redux';\n\nimport { withNamespace } from 'providers/namespace';\nimport SavingButton from 'components/2dview/SavingButton';\n\nimport app from 'providers/app';\n\nconst mapStateToProps = (state, own) => ({\n  saving: own.providers.app.saving.selector('results', state)\n});\n\nconst mapDispatchToProps = (dispatch, own) => ({\n  actions: {\n    fetchSaving: () => own.providers.app.saving.fetch()\n  }\n});\n\nexport default withNamespace({ app })(\n  connect(mapStateToProps, mapDispatchToProps)(SavingButton)\n);\n"],"names":["withNamespace","metadata","connect","state","own","datacollections","samples","providers","operator","session","currentSample","sample","selector","dcnamespace","getNamespace","namespace","params","per_page","page","total","fetching","selected","dispatch","actions","fetch","setParams","payload","setPage","setPageSize","addSelection","removeSelection","resetSelection","props","useEffect","sampleid","dcProps","_jsx","RemountOnResize","children","FullSizer","_jsxs","className","name","NewScanButtonSample","disabled","SavingButton","DCList","pages","filter","scan","createScalarMap","Yaml","yamlNode","selectable","unknownOptions","YamlAsserts","SampleDCList","Component","constructor","arguments","onSubmit","formData","e","doSubmit","then","this","fetchSaving","render","ButtonTriggerModalStore","id","button","buttonProps","title","Form","map","saving","v","k","as","Row","column","sm","Col","defaultProps","app","mapStateToProps","mapDispatchToProps"],"sourceRoot":""}