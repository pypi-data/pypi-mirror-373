{"version":3,"file":"static/js/659.08131576.chunk.js","mappings":"6KAIe,SAASA,EAAKC,GAC3B,MAAM,UACJC,EAAS,SACTC,EAAQ,OACRC,EAAM,IACNC,EAAG,gBACHC,EAAe,WACfC,KACGC,GACDP,EAUJ,OATAQ,EAAAA,GAAyBN,EAAU,SAAUC,GAC7CK,EAAAA,GAAyBN,EAAU,MAAOE,GAC1CI,EAAAA,GACEN,EACA,kBACAG,GAEFG,EAAAA,GAAiCN,EAAU,aAAcI,GACzDE,EAAAA,GAAgCN,EAAUK,IAExCE,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CACTT,UAAWA,EACXU,QAAS,CACPR,SACAC,MACAC,kBACAC,eAIR,C","sources":["components/yaml-layout/components/SchemaForm.tsx"],"sourcesContent":["import type { YamlComponent } from '@esrf/daiquiri-lib';\nimport { YamlAsserts } from '@esrf/daiquiri-lib';\nimport SchemaForm from 'connect/SchemaForm';\n\nexport default function Yaml(props: YamlComponent) {\n  const {\n    providers,\n    yamlNode,\n    schema,\n    url,\n    requireOperator,\n    submitText,\n    ...unknownOptions\n  } = props;\n  YamlAsserts.assertString(yamlNode, 'schema', schema);\n  YamlAsserts.assertString(yamlNode, 'url', url);\n  YamlAsserts.assertOptionalBoolean(\n    yamlNode,\n    'requireOperator',\n    requireOperator\n  );\n  YamlAsserts.assertOptionalString(yamlNode, 'submitText', submitText);\n  YamlAsserts.assertNoUnknownKeys(yamlNode, unknownOptions);\n  return (\n    <SchemaForm\n      providers={providers}\n      options={{\n        schema,\n        url,\n        requireOperator,\n        submitText,\n      }}\n    />\n  );\n}\n"],"names":["Yaml","props","providers","yamlNode","schema","url","requireOperator","submitText","unknownOptions","YamlAsserts","_jsx","SchemaForm","options"],"sourceRoot":""}