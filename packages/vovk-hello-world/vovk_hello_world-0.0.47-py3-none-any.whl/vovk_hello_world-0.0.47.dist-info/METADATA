Metadata-Version: 2.4
Name: vovk_hello_world
Version: 0.0.47
Summary: A showcase for Next.js + Vovk.ts + Zod, demonstrating its capabilities with TypeScript, Rust, and Python RPC.
License: MIT
Requires-Python: >=3.8
Requires-Dist: jsonschema
Requires-Dist: requests
Requires-Dist: rfc3987
Requires-Dist: urllib3==1.26.15
Provides-Extra: dev
Requires-Dist: types-jsonschema; extra == 'dev'
Requires-Dist: types-requests; extra == 'dev'
Description-Content-Type: text/markdown

<!-- auto-generated by vovk-cli v0.0.1-draft.346 at 2025-08-30T11:29:31.557Z -->
# vovk_hello_world v0.0.47 [![Checked with mypy](http://www.mypy-lang.org/static/mypy_badge.svg)](http://mypy-lang.org/) ![Vovk.ts](https://badgen.net/badge/Built%20with/Vovk.ts/333333?icon=https://vovk.dev/icon-white.svg)


> A showcase for Next.js + Vovk.ts + Zod, demonstrating its capabilities with TypeScript, Rust, and Python RPC.

License: **MIT**

```bash
# Install the package
pip install vovk_hello_world
```



## UserRPC
        
### UserRPC.update_user





`POST https://vovk-hello-world.vercel.app/api/users/{id}`

```py
from vovk_hello_world import UserRPC

response = UserRPC.update_user(
    body={
        # User email
        "email": "john@example.com",
        # User profile object
        "profile": {
            # User full name
            "name": "John Doe",
            # User age
            "age": 25
        }
    },
    query={
        # Notification type
        "notify": "email"
    },
    params={
        # User ID
        "id": "123e4567-e89b-12d3-a456-426614174000"
    },
)

print(response)
{
    # -----
    # Response object
    # -----
    # Success status
    "success": true
}
```
        
    

## StreamRPC
        
### StreamRPC.stream_tokens





`GET https://vovk-hello-world.vercel.app/api/streams/tokens`

```py
from vovk_hello_world import StreamRPC

response = StreamRPC.stream_tokens()

for i, item in enumerate(response):
    print(f"iteration #{i}:\n {item}")
    # iteration #0:
    {
        # Message from the token
        "message": "string"
    }
```
        
    


## OpenApiRPC
        
### OpenApiRPC.get_spec





`GET https://vovk-hello-world.vercel.app/api/static/openapi/spec.json`

```py
from vovk_hello_world import OpenApiRPC

response = OpenApiRPC.get_spec()
```
        
    

