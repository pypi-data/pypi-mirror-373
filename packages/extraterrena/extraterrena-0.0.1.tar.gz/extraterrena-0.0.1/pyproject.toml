[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "extraterrena"
dynamic = ["version"]
description = ''
readme = "README.md"
requires-python = ">=3.8"
license = "MIT"
keywords = []
authors = [
  { name = "Justin Smallwood", email = "justin.d.smallwood@gmail.com" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = [
  "numpy",
  "pytest",
  "black",
  "ruff",
  "hypothesis",
  "matplotlib",
  "jupyterlab",
  "polars",
  "fastexcel",
  "openpyxl",
  "isort",
  "scipy",
  "xlsxwriter",
  "skyfield",
  "astropy",
  "plotly",
  "tqdm",
  "loguru",
  "streamlit",
]

[project.urls]
Documentation = "https://github.com/jdgsmallwood/extraterrena#readme"
Issues = "https://github.com/jdgsmallwood/extraterrena/issues"
Source = "https://github.com/jdgsmallwood/extraterrena"

[tool.hatch.version]
path = "src/extraterrena/__about__.py"

[tool.hatch.envs.types]
extra-dependencies = [
  "mypy>=1.0.0",
]
[tool.hatch.envs.types.scripts]
check = "mypy --install-types --non-interactive {args:src/extraterrena tests}"

[tool.hatch.envs.docs]
dependencies = [
  "sphinx",
  "myst-parser",
  "sphinx-autobuild",
  "sphinx-math-dollar",
]

[tool.hatch.envs.docs.scripts]
build = "sphinx-build -b html docs docs/_build"
autobuild = "sphinx-autobuild docs docs/_build"

[tool.hatch.envs.manim]
dependencies = [
  "manim",
]

[tool.hatch.envs.manim.scripts]
render = "manim -pql scenes/van_trees_matlab.py VectorProjection3D"



[tool.coverage.run]
source_pkgs = ["extraterrena", "tests"]
branch = true
parallel = true
omit = [
  "src/extraterrena/__about__.py",
]

[tool.coverage.paths]
spatial_filtering = ["src/extraterrena", "*/spatial-filtering/src/extraterrena"]
tests = ["tests", "*/spatial-filtering/tests"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]
