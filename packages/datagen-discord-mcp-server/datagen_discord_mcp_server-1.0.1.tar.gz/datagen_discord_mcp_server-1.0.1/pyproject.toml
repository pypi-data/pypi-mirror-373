[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "datagen-discord-mcp-server"
version = "1.0.1"
description = "A Model Context Protocol server for Discord integration"
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.8,<3.13"
authors = [
    {name = "Your Name", email = "your.email@example.com"},
]
keywords = ["discord", "mcp", "model-context-protocol", "claude", "ai"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3 :: Only",
    "Topic :: Communications :: Chat",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

dependencies = [
    "discord.py>=2.3.2",
    "python-dotenv>=1.0.0",
    "mcp>=1.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.0.0",
    "build>=0.10.0",
    "twine>=4.0.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/discord-mcp-server"
Repository = "https://github.com/yourusername/discord-mcp-server.git"
Documentation = "https://github.com/yourusername/discord-mcp-server#readme"
"Bug Tracker" = "https://github.com/yourusername/discord-mcp-server/issues"

[project.scripts]
datagen-discord-mcp-server = "discord_mcp_server.cli:main"

[tool.hatch.build.targets.wheel]
packages = ["src/discord_mcp_server"]

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/README.md",
    "/LICENSE",
    "/pyproject.toml",
]

[tool.black]
line-length = 100
target-version = ['py38']

[tool.isort]
profile = "black"
line_length = 100

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
ignore_missing_imports = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = ["test_*.py"]
