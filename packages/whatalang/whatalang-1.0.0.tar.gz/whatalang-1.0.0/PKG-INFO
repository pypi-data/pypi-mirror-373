Metadata-Version: 2.4
Name: whatalang
Version: 1.0.0
Summary: A reactive programming language
Author-email: Whatalang Team <team@whatalang.dev>
License: MIT
Project-URL: Homepage, https://github.com/whatalang/whatalang
Project-URL: Repository, https://github.com/whatalang/whatalang
Project-URL: Documentation, https://whatalang.dev
Project-URL: Issues, https://github.com/whatalang/whatalang/issues
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Classifier: Topic :: Software Development :: Interpreters
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Requires-Python: >=3.8
Description-Content-Type: text/markdown
Provides-Extra: dev
Requires-Dist: pytest>=7.0.0; extra == "dev"
Requires-Dist: pytest-cov>=4.0.0; extra == "dev"

# Whatalang

A programming language built around a single global state with reactive updates.

## Features
- Single global state management
- Reactive programming
- Functional operations
- Simple, readable syntax

## Development Status
ðŸš§ In Development - Basic parser and state management

## Getting Started
```bash
pip install -e .
whatalang example.wa      # With .wa extension
whatalang example.what    # With .what extension  
whatalang example         # Without extension
```

## Syntax Examples
```wa
state {
  counter: 0,
  user: { name: "John", age: 30 }
}

set counter = 1
print state
```

## Project Structure
```
whatalang/      # Main package
â”œâ”€â”€ lexer.py    # Tokenizer
â”œâ”€â”€ parser.py   # Parser and AST
â”œâ”€â”€ state.py    # State management
â”œâ”€â”€ reactive.py # Reactive engine
â”œâ”€â”€ grammar.py  # Language grammar
â””â”€â”€ cli.py      # Command-line interface

tests/          # Test suite
```
