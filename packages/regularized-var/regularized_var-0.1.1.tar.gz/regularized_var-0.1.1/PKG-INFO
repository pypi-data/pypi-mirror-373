Metadata-Version: 2.4
Name: regularized-var
Version: 0.1.1
Summary: Regularized Vector Autoregression (VAR) with ridge shrinkage, Minnesota prior, metrics, and walk-forward validation.
Project-URL: Homepage, https://github.com/RachelDoehr/regularized-var
Project-URL: Issues, https://github.com/RachelDoehr/regularized-var/issues
Author: Rachel Doehr
License: The MIT License (MIT)
        Copyright (c) 2025, Rachel Doehr
        
        Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
License-File: LICENSE
Keywords: VAR,econometrics,forecasting,ridge,time series
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Topic :: Scientific/Engineering :: Information Analysis
Classifier: Topic :: Scientific/Engineering :: Mathematics
Requires-Python: >=3.8
Requires-Dist: numpy>=1.22
Requires-Dist: pandas>=1.4
Requires-Dist: tqdm>=4.60
Provides-Extra: dev
Requires-Dist: black>=24.0; extra == 'dev'
Requires-Dist: mypy>=1.8; extra == 'dev'
Requires-Dist: pytest-cov>=4; extra == 'dev'
Requires-Dist: pytest>=7; extra == 'dev'
Requires-Dist: ruff>=0.5; extra == 'dev'
Description-Content-Type: text/markdown

[![PyPI - Version](https://img.shields.io/pypi/v/regularized-var.svg)](https://pypi.org/project/regularized-var/)
[![Python Versions](https://img.shields.io/pypi/pyversions/regularized-var.svg)](https://pypi.org/project/regularized-var/)

# regularized-var

Vector Autoregression (VAR) with l2 regularization, optional Minnesota prior, error metrics, and walk-forward validation.

## Install
```bash
pip install regularized-var
```

## Quickstart

```python
import pandas as pd
from regularized_var.var import VAR, MinnesotaVAR
from regularized_var.metrics import mse
from regularized_var.model_selection import WalkForward, WalkForwardValidator

# Data
df = pd.DataFrame(...)

# VAR
model = VAR(n_lags=2, alpha=0.1).fit(df)
print(model.predict(steps=5))

# MinnesotaVAR
mvar = MinnesotaVAR(n_lags=3, alpha_own=1.0, alpha_cross=2.0).fit(df)
print(mvar.predict(steps=3))

# Walk-forward validation
splitter = WalkForward(train_size=1000, min_train_size=500, horizon=5)
wf = WalkForwardValidator(VAR, {"n_lags": 2, "alpha": 0.1}, splitter, metric=mse)
wf.run(df)
print(wf.overall_score_)
```

## Mathematical Formulation

### Ridge-regularized VAR
The baseline `VAR` class solves a ridge-penalized least squares problem:

![Equation 0](https://raw.githubusercontent.com/RachelDoehr/regularized-var/main/images/equation0.jpg)

where Y are the responses, Z is the lagged design matrix,
and the intercept (if present) is excluded from the penalty.

This is equivalent to multivariate ridge regression (scikit-learn’s `Ridge`) applied equation-by-equation, but solved in closed form for all equations at once.

### MinnesotaVAR as Weighted Ridge
The *Minnesota prior* (see [Litterman, 1986: "Forecasting with Bayesian Vector Autoregressions — Five Years of Experience"](https://www.jstor.org/stable/1391384)) is a Bayesian shrinkage approach that imposes beliefs about how coefficients in a VAR should behave:

- Own-lag coefficients are shrunk toward 0 (for stationary/differenced data: growth rates, returns, etc.)
- Cross-lag coefficients (other variables) are shrunk more heavily toward 0
- Higher lags are shrunk more strongly than shorter lags

In practice, this leads to a **ridge-style penalty** on the coefficient matrix:

![Equation 1](https://raw.githubusercontent.com/RachelDoehr/regularized-var/main/images/equation1.jpg)

with weights

![Equation 2](https://raw.githubusercontent.com/RachelDoehr/regularized-var/main/images/equation2.jpg)

- `i`: target equation index
- `j`: predictor variable index
- `ℓ`: lag index

This weighted ℓ₂ penalty reproduces a structure similar to the **Minnesota prior**, where:
- own lags are shrunk mildly,
- cross-variable lags are shrunk more heavily,
- higher-order lags are shrunk progressively more.

Thus, `MinnesotaVAR` can be seen as a **structured ridge regression** equivalent of the Minnesota Bayesian prior.
