[build-system]
build-backend = "uv_build"
requires = ["uv_build>=0.8.12,<0.9.0"]

[project]
authors = [
  {name = "Florian Peschke", email = "florian.peschke@hyand.com"}
]
classifiers = [
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.13",
  "Topic :: Scientific/Engineering :: Artificial Intelligence",
  "Typing :: Typed"
]
dependencies = [
  "aeroai>=0.1.0",
  "openai>=1.0.0"  # Official OpenAI Python client
]
description = "OpenAI integration for AeroAI"
keywords = ["ai", "openai", "llm", "aeroai"]
name = "aeroai-openai"
readme = "README.md"
requires-python = ">=3.13"
version = "0.0.2"

[project.urls]
Homepage = "https://github.com/florianpeschke/aeroai"
Issues = "https://github.com/florianpeschke/aeroai/issues"
Repository = "https://github.com/florianpeschke/aeroai"

# === Python Semantic Release Configuration ===
[tool.semantic_release]
allow_zero_version = true
# Build configuration for openai package
build_command = """
    (cd ../../ && uv lock --upgrade-package "aeroai-openai" && git add uv.lock)
    uv build --package aeroai-openai
"""
commit_message = "chore(openai): release {version}"
commit_parser = "conventional"
major_on_zero = true
# Package-specific tags
tag_format = "openai-v{version}"
# OpenAI package files only
version_toml = ["pyproject.toml:project.version"]
version_variables = ["src/aeroai_openai/__init__.py:__version__"]

[tool.semantic_release.changelog]
# Only include openai-related changes
include_commit_patterns = ['''.*openai.*''']
exclude_commit_patterns = [
  '''chore(?:\([^)]*?\))?: (?!release).+''',
  '''ci(?:\([^)]*?\))?: .+''',
  '''style(?:\([^)]*?\))?: .+''',
  '''test(?:\([^)]*?\))?: .+'''
]
mode = "update"

[tool.semantic_release.changelog.default_templates]
changelog_file = "CHANGELOG.md"

[tool.semantic_release.publish]
upload_to_pypi = false
upload_to_vcs_release = false

# Use local git only, no remote operations
[tool.semantic_release.remote]
type = "github"
upload_to_repository = false
