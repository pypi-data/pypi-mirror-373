[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "sibylline-skald"
version = "0.2.0"
description = "Universal Execution Monitoring & Feedback Library for Python applications, supporting MCP servers, functions, shell commands, and more"
authors = [
    { name = "Nathan Rice", email = "nathan.alexander.rice@gmail.com" }
]
license = { text = "MIT" }
readme = "README.md"
requires-python = ">=3.9"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Networking",
]
keywords = ["mcp", "feedback", "ai", "agent", "tools"]

dependencies = [
    "pydantic>=2.5.0",
    "asyncio-mqtt>=0.16.0",
    "aiosqlite>=0.19.0",
    "aiohttp>=3.9.0",
    "fastapi>=0.104.0",
    "uvicorn>=0.24.0",
    "uvloop>=0.19.0; sys_platform != 'win32'",
    "pyarrow>=15.0.0",
    "fastparquet>=2024.2.0",
    "structlog>=23.2.0",
    "click>=8.1.0",
    "psutil>=5.9.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.0.0",
    "pytest-asyncio>=0.23.0",
    "pytest-cov>=4.1.0",
    "black>=24.0.0",
    "isort>=5.13.0",
    "mypy>=1.8.0",
    "ruff>=0.3.0",
]
docs = [
    "sphinx>=7.2.0",
    "sphinx-rtd-theme>=2.0.0",
    "myst-parser>=2.0.0",
]
test = [
    "pytest>=8.0.0",
    "pytest-asyncio>=0.23.0",
    "pytest-cov>=4.1.0",
    "hypothesis>=6.98.0",
]

[project.urls]
Homepage = "https://github.com/sibyllinesoft/skald"
Repository = "https://github.com/sibyllinesoft/skald.git"
Documentation = "https://github.com/sibyllinesoft/skald#readme"
Issues = "https://github.com/sibyllinesoft/skald/issues"

[project.scripts]
skald = "skald.cli:main"

[tool.hatch.build.targets.wheel]
packages = ["skald"]

[tool.hatch.build.targets.sdist]
include = [
    "/skald",
    "/README.md",
    "/LICENSE", 
    "/CHANGELOG.md",
    "/CONTRIBUTING.md",
    "/pyproject.toml",
    "/MANIFEST.in",
]
exclude = [
    "/tests",
    "/scripts", 
    "/.github",
    "/.serena",
    "/debug_*.py",
    "/demo.py",
    "/TODO.md",
    "/TESTING-KNOWN-ISSUES.md",
    "/IMPLEMENTATION_SUMMARY.md", 
    "/SCHEMA_DOCUMENTATION.md",
    "/conftest.py",
    "*.cue",
    "/surface.json",
]

[tool.black]
line-length = 100
target-version = ["py39", "py310", "py311", "py312"]

[tool.isort]
profile = "black"
line_length = 100

[tool.mypy]
python_version = "3.9"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true

[tool.ruff]
line-length = 100
target-version = "py39"
select = ["E", "F", "I", "N", "UP", "S", "B", "A", "C", "PT"]
ignore = ["E501", "S101"]

[tool.ruff.isort]
known-first-party = ["skald"]
force-sort-within-sections = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-config",
    "--strict-markers",
    "--cov=skald",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-fail-under=20"
]
asyncio_mode = "auto"