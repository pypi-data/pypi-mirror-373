Metadata-Version: 2.4
Name: pymine-edu
Version: 0.1.0
Summary: An interpretable, transparent, and educational data mining library built from scratch in pure Python.
Home-page: https://github.com/fashjr/pymine
Author: Fash & Chubike
Author-email: fashjr@icloud.com
License: MIT
Project-URL: Documentation, https://github.com/fashjr/pymine/wiki
Project-URL: Source, https://github.com/fashjr/pymine
Project-URL: Bug Tracker, https://github.com/fashjr/pymine/issues
Keywords: data mining,machine learning,education,explainable ai,classification,clustering,association rules,preprocessing,python from scratch,interpretable ml,pure python
Classifier: Programming Language :: Python :: 3
Classifier: Intended Audience :: Education
Classifier: Intended Audience :: Science/Research
Classifier: Topic :: Scientific/Engineering :: Artificial Intelligence
Classifier: Topic :: Education
Classifier: License :: OSI Approved :: MIT License
Requires-Python: >=3.7
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: numpy>=1.21
Requires-Dist: pandas>=1.3
Dynamic: author
Dynamic: author-email
Dynamic: classifier
Dynamic: description
Dynamic: description-content-type
Dynamic: home-page
Dynamic: keywords
Dynamic: license
Dynamic: license-file
Dynamic: project-url
Dynamic: requires-dist
Dynamic: requires-python
Dynamic: summary

# PyMine

**Educational, Explainable, and Pure-Python Data Mining Library**

---

### 📘 Description

**PyMine** is a lightweight, dependency-free Python library built for learning, teaching, and exploring core data mining algorithms. Developed entirely from scratch using pure Python, PyMine prioritizes **transparency**, **explainability**, and **educational clarity** — making it a perfect fit for students, educators, and enthusiasts who want to understand *how* algorithms work under the hood.

---

### ⚙️ Features

- 📊 **Classification**: Decision Tree, Naive Bayes, Logistic Regression, K-Nearest Neighbors  
- 🔍 **Clustering**: K-Means, DBSCAN, Hierarchical Clustering  
- 🔁 **Association Rule Mining**: Apriori algorithm with support thresholds  
- ⚠️ **Anomaly Detection**: Z-Score, Local Outlier Factor  
- 🛠 **Preprocessing**: Scalers, Imputers, Label and One-Hot Encoders  
- 📏 **Evaluation Metrics**: Accuracy, Precision, Recall, F1, Confusion Matrix, Silhouette Score  
- 💬 **Explainability**: All models support `.explain()` and "what-if" transformation introspection  
- 🔬 **No Dependencies**: Pure Python. No NumPy, pandas, or scikit-learn required

---

### 📦 Installation

```bash
pip install pymine-fashjr
