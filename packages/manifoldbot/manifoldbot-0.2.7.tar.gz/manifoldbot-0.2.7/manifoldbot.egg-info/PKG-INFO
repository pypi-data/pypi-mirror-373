Metadata-Version: 2.4
Name: manifoldbot
Version: 0.2.7
Summary: A comprehensive Python package for creating intelligent trading bots that interact with Manifold Markets
Home-page: https://github.com/petercotton/manifoldbot
Author: ManifoldBot Contributors
Author-email: 
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Financial and Insurance Industry
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Topic :: Office/Business :: Financial :: Investment
Classifier: Topic :: Scientific/Engineering :: Artificial Intelligence
Requires-Python: >=3.9
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: requests>=2.31.0
Requires-Dist: beautifulsoup4>=4.12.0
Requires-Dist: feedparser>=6.0.10
Requires-Dist: pydantic>=2.5.0
Requires-Dist: pyyaml>=6.0.1
Requires-Dist: openai>=1.3.0
Requires-Dist: python-dotenv>=1.0.0
Requires-Dist: pytest>=7.4.0
Requires-Dist: pytest-cov>=4.1.0
Provides-Extra: test
Requires-Dist: pytest>=7.0.0; extra == "test"
Requires-Dist: pytest-cov>=4.0.0; extra == "test"
Requires-Dist: pytest-mock>=3.10.0; extra == "test"
Provides-Extra: dev
Requires-Dist: black>=22.0.0; extra == "dev"
Requires-Dist: isort>=5.0.0; extra == "dev"
Requires-Dist: flake8>=5.0.0; extra == "dev"
Requires-Dist: mypy>=1.0.0; extra == "dev"
Dynamic: author
Dynamic: classifier
Dynamic: description
Dynamic: description-content-type
Dynamic: home-page
Dynamic: license-file
Dynamic: provides-extra
Dynamic: requires-dist
Dynamic: requires-python
Dynamic: summary

# ManifoldBot

A Python package for creating intelligent trading bots for Manifold Markets.

## Quick Start

### 1. Installation

```bash
pip install manifoldbot
```

### 2. Set API Keys

```bash
export MANIFOLD_API_KEY="your_manifold_api_key"
export OPENAI_API_KEY="your_openai_key"
```
(or place these in .env)

### 3. Run the LLM Trading Bot

Trade all markets with AI:

```bash
python -m manifoldbot.examples.bot.llm_trading_bot --all
```

Or trade recent markets only:

```bash
python -m manifoldbot.examples.bot.llm_trading_bot
```

## What It Does

The LLM trading bot:
- Analyzes market questions using GPT
- Compares AI probability vs current market probability  
- Places bets when there's a significant difference (≥5%)
- Only bets when confidence is high (≥60%)

## More Examples

See `manifoldbot/examples/` for additional examples:
- `manifold/basic_reader.py` - Read market data (no API key needed)
- `manifold/basic_writer.py` - Place bets manually
- `bot/ai_optimist_trading_bot.py` - Simple rule-based bot

## Documentation

- [Full Documentation](docs/README.md)
- [Tutorial](docs/TUTORIAL.md)
- [API Reference](docs/API_REFERENCE.md)

## License

MIT License - see [LICENSE](LICENSE) file for details.
