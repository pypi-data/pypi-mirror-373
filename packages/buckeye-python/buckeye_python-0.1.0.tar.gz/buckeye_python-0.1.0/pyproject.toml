[project]
name = "buckeye-python"
version = "0.1.0"
description = "Buckeye platform for sdk."
readme = "README.md"
requires-python = ">=3.11, <3.14"
dependencies = [ "httpx>=0.23.0,<1", "pydantic>=2,<3", "pydantic-settings>=2,<3", "mcp>=1.13.1", "fastmcp>=2.12.0", "pathspec>=0.12.1", "wrapt>=1.14.0", "python-dotenv>=1.0.0", "typer>=0.9.0", "rich>=13.0.0", "toml>=0.10.2", "watchfiles>=0.21.0", "questionary==2.1.0", "prompt-toolkit==3.0.51", "opentelemetry-instrumentation-mcp>=0.44.1", "opentelemetry-api>=1.34.1", "opentelemetry-sdk>=1.34.1", "opentelemetry-exporter-otlp-proto-http>=1.34.1", "verifiers>=0.1.3",]
classifiers = [ "Development Status :: 4 - Beta", "Intended Audience :: Developers", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.11", "Programming Language :: Python :: 3.12", "Programming Language :: Python :: 3.13",]
[[project.authors]]
name = "Jahid Hasan"
email = "you@example.com"

[build-system]
requires = [ "hatchling",]
build-backend = "hatchling.build"

[project.license]
file = "LICENSE"

[project.urls]
Homepage = "https://github.com/buckeye/buckeye-python"
"Bug Tracker" = "https://github.com/buckeye/buckeye-python/issues"
Documentation = "https://doc.buckeye.ai"

[project.scripts]
buckeye = "buckeyelabs.cli:main"
buckeye-python = "buckeyelabs.cli:main"

[project.optional-dependencies]
agent = [ "anthropic", "openai", "langchain", "langchain-openai", "langchain-anthropic", "datasets>=4.0.0", "numpy>=1.24.0", "ipykernel", "ipython <9", "jupyter_client", "jupyter_core", "mcp-use>=1.3.10" ,"dotenv>=0.9.9",]
agents = [ "buckeye-python[agent]",]
dev = [ "buckeye-python[agent]", "ruff >=0.11.8", "pytest >=8.1.1,<9", "pytest-asyncio", "pytest-mock", "pytest-cov", "pyright==1.1.401", "playwright", "pyautogui>=0.9.54", "pillow>=11.1.0", "textdistance>=4.5.0,<5", "inspect-ai>=0.3.80", "aiodocker>=0.24.0", "setuptools",]

[tool.ruff]
target-version = "py311"
line-length = 100

[tool.pyright]
include = [ "buckeyelabs",]
exclude = [ "**/node_modules", "**/__pycache__", "**/venv","buckeyelabs/misc/claude_plays_pokemon.py",]
pythonVersion = "3.11"
typeCheckingMode = "basic"
reportMissingImports = "warning"

[tool.buckeye]
image = "buckeye-buckeye-python:dev"

[tool.hatch.build]
exclude = [ "environments/", "docs/", "examples/", "/rl/",]

[tool.hatch.metadata]
allow-direct-references = true

[tool.ruff.lint]
extend-select = [ "I", "F", "ANN", "Q", "ASYNC", "TID", "RSE", "G", "B", "E", "W", "PIE", "S", "PERF", "PLC", "UP", "SIM", "INP", "T20", "PYI", "TCH", "T10", "RUF",]
ignore = [ "ANN401", "W293", "PLC0415",]

[tool.ruff.format]
docstring-code-format = true

[tool.coverage.run]
source = [ "buckeyelabs",]
omit = [ "*/tests/*", "*/examples/*",]

[tool.coverage.report]
exclude_lines = [ "pragma: no cover", "raise AssertionError", "raise NotImplementedError", "pass", "pytest.mark.skip", "@(typing\\.)?overload", "if TYPE_CHECKING:", "if typing.TYPE_CHECKING:", "class .*x08Protocol\\):", "@(abc\\.)?abstractmethod",]
show_missing = true
omit = [ "*/tests/*", "*/examples/*",]

[tool.pytest.ini_options]
asyncio_default_fixture_loop_scope = "function"
testpaths = [ "buckeyelabs", "examples",]
addopts = "--ignore=dev --ignore=ref --ignore=test_env --ignore=environments"

[dependency-groups]
dev = [
    "build>=1.3.0",
    "twine>=6.1.0",
]

[tool.ruff.lint.extend-per-file-ignores]
"**/tests/**/*.py" = [ "PYI", "B", "S", "ANN",]
"*.ipynb" = [ "ALL",]
"**/examples/**/*.py" = [ "ALL",]
"**/environments/**/*.py" = [ "ALL",]

[tool.ruff.lint.isort]
required-imports = [ "from __future__ import annotations",]

[tool.ruff.lint.flake8-type-checking]
runtime-evaluated-base-classes = [ "pydantic.BaseModel",]

[tool.hatch.build.targets.sdist]
include = [ "buckeyelabs/**", "README.md", "LICENSE", "pyproject.toml",]
exclude = [ "*/tests/", "*/__pycache__/", "*.pyc", "*.pyo", "*~", ".DS_Store",]

[tool.hatch.build.targets.wheel]
packages = [ "buckeyelabs", "rl/buckeye-vf-gym/src",]

[tool.hatch.build.targets.wheel.force-include]
"buckeyelabs/py.typed" = "buckeyelabs/py.typed"
