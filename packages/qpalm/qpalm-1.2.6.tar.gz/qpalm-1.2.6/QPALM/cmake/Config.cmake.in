@PACKAGE_INIT@

set(QPALM_AVAILABLE_COMPONENTS "core" "cxx" "fortran")
# Always require "core"
list(PREPEND QPALM_FIND_COMPONENTS "core")
if (QPALM_FIND_REQUIRED)
    set(QPALM_FIND_REQUIRED_core True)
endif()

foreach(COMP IN LISTS QPALM_AVAILABLE_COMPONENTS)
    set(QPALM_component_${COMP}_DIR ${CMAKE_CURRENT_LIST_DIR})
endforeach()

foreach(COMP IN LISTS QPALM_FIND_COMPONENTS)
    if (NOT COMP IN_LIST QPALM_AVAILABLE_COMPONENTS)
        set(QPALM_NOT_FOUND_MESSAGE "Invalid component: ${COMP}")
        set(QPALM_FOUND False)
        return()
    endif()
    set(QPALM_FIND_REQUIRED_ARG)
    if(QPALM_FIND_REQUIRED_${COMP})
        set(QPALM_FIND_REQUIRED_ARG REQUIRED)
    endif()
    find_package(QPALM_component_${COMP} QUIET ${QPALM_FIND_REQUIRED_ARG})
    if (NOT QPALM_component_${COMP}_FOUND)
        if (QPALM_FIND_REQUIRED_${COMP})
            set(QPALM_NOT_FOUND_MESSAGE "Missing required components: ${COMP} (find_package(QPALM_component_${COMP}) failed)")
            set(QPALM_FOUND False)
            return()
        endif()
        set(QPALM_${COMP}_FOUND False)
    else()
        set(QPALM_${COMP}_FOUND True)
    endif()
endforeach()

set(QPALM_NONCONVEX @QPALM_NONCONVEX@ CACHE INTERNAL "")
set(QPALM_TIMING @QPALM_TIMING@ CACHE INTERNAL "")
set(QPALM_PRINTING @QPALM_PRINTING@ CACHE INTERNAL "")

if (NOT _@PROJECT_NAME@_PRINTED AND QPALM_core_FOUND)
    get_target_property(QPALM_CONFIGS QPALM::qpalm IMPORTED_CONFIGURATIONS)
    message(STATUS "Found @PROJECT_NAME@ @PROJECT_VERSION@: ${CMAKE_CURRENT_LIST_DIR} (available configs: ${QPALM_CONFIGS})")
    set(_@PROJECT_NAME@_PRINTED On CACHE INTERNAL "")
endif()

check_required_components(QPALM)
