{"name":"parameter_hallucination_check","jsonschema":{"title":"parameter_hallucination_check","description":"GROUNDING REQUIREMENT: You must evaluate whether the SPECIFIC parameter value named in \"parameter_name\" is grounded in evidence or hallucinated. Base your assessment EXCLUSIVELY on the provided conversation history and tool specifications. DO NOT introduce assumptions or knowledge not explicitly present in these sources.\n\nYou are evaluating ONE SPECIFIC PARAMETER VALUE, not the entire tool call or other parameters.\n\nPARAMETER VALUE ASSESSMENT CRITERIA:\n1. GROUNDED VALUES (Output=4-5) must originate from one of these sources ONLY:\n   - Explicitly mentioned by the user in conversation\n   - Implicitly but clearly indicated by user (requires minimal inference)\n   - Documented default value in tool specification\n   - Output from previous tool calls in the conversation\n   - Assistant statements that user has confirmed\n\n2. UNGROUNDED VALUES (Output=1-3) include any of the following:\n   - Values invented without evidence in conversation or tool specification\n   - Values that require information not available in the conversation (e.g., user mentioned day but parameter requires full date)\n   - Values with incorrect format or units compared to what's specified or implied\n   - Values that contradict constraints or relationships with other parameters\n   - Values that transform user input incorrectly (e.g., wrong translation of a location)\n\n3. FORMAT AND TYPE COMPLIANCE:\n   - Check if the value conforms to required data types (string, integer, boolean, etc.)\n   - Verify format requirements (ISO dates, timestamps, currency notations, etc.)\n   - Confirm presence/absence of unit suffixes as required by specification\n   - Ensure consistent formats and units across related parameters\n   - Validate that the value meets any enumeration constraints or pattern requirements\n\n4. PARAMETER VALUE RELATIONSHIPS:\n   - Check if this parameter value contradicts any constraints with other parameter values\n   - Example: if add_day=false but day=\"Sunday\" is provided, and specification indicates add_day must be true to use day value\n\n5. DEFAULT AND OPTIONAL PARAMETERS:\n   - For optional parameters using default values, verify the default is explicitly documented\n   - Judge default values against conversation context - a default might be inappropriate for the specific request\n   - If a default value contradicts user intent, flag it as ungrounded\n\nRATE PARAMETER VALUES ON THIS SCALE:\n5 - PERFECTLY GROUNDED: Value is explicitly mentioned or precisely implied in conversation, or is a documented default that fits the context perfectly\n4 - MOSTLY GROUNDED: Value requires minimal inference but reasonably follows from conversation or is a documented default with minor contextual mismatch\n3 - AMBIGUOUSLY GROUNDED: Value is related to conversation but requires substantial inference or transformation\n2 - MOSTLY UNGROUNDED: Value has tenuous connection to conversation or significantly deviates from required format/type\n1 - COMPLETELY UNGROUNDED: Value is entirely hallucinated with no basis in conversation or specifications\n\nBe conservative in your assessment: if there is clear evidence of hallucination or contradiction, give a lower score (1-3). However, do not invent problems - if the value reasonably follows from conversation and specifications, give a higher score (4-5).\n\nYOUR EVALUATION IS CRITICALLY IMPORTANT: LLMs often hallucinate parameter values, creating false information or using inappropriate defaults. Your careful assessment helps prevent these errors.","type":"object","properties":{"explanation":{"type":"string","description":"Explain in one or two sentences why the specific parameter value is grounded or ungrounded. Reference exact sources from the conversation or tool specification that either support or contradict the parameter value. Address: 1) Where the value originated from, 2) Whether this source is sufficient for grounding, 3) Any format or type compliance issues, 4) Any contradictions with other parameters or specifications, and 5) For default values, whether they're documented and appropriate for this context."},"evidence":{"type":"string","description":"Provide a short sentence or two with EXACT quotes from the conversation history (user messages, assistant responses, previous tool outputs) or tool specification that directly support your assessment. For grounded values, cite the specific text where this value originates. For ungrounded values, demonstrate the absence of supporting evidence or cite contradictory information."},"output":{"type":"integer","minimum":1,"maximum":5,"threshold_low":4,"threshold_high":5,"description":"Parameter grounding score: 5=perfectly grounded, 4=mostly grounded, 3=ambiguously grounded, 2=mostly ungrounded, 1=completely ungrounded."},"confidence":{"type":"number","minimum":0,"maximum":1,"threshold_low":0.7,"threshold_high":1,"description":"Your confidence in this assessment (0.0-1.0). Use lower confidence when evidence is ambiguous or requires significant inference. Use high confidence when evidence is clear and direct."},"correction":{"type":"object","properties":{"reason_types":{"type":"array","description":"A short sentence or two with types of issues with the parameter value, if any. Use one or more of these values: HALLUCINATION (invented value), FORMAT_ERROR (wrong format or type), MISSING_INFORMATION (needs more data), PARAMETER_CONTRADICTION (conflicts with other parameters), DEFAULT_ISSUE (inappropriate default), OTHER (explain in reasons).","items":{"type":"string","enum":["HALLUCINATION","FORMAT_ERROR","MISSING_INFORMATION","PARAMETER_CONTRADICTION","DEFAULT_ISSUE","OTHER"]}},"reasons":{"type":"string","description":"Concise explanation of the specific issues with the parameter value."},"parameter":{"type":"object","description":"Object containing parameter name as key and corrected value as value. Use null if unknown or need_more_information if user input is required.","additionalProperties":true}},"description":"For well-grounded values (output ≥ 4): Provide an empty object {}. For ungrounded values (output ≤ 3): Provide an object with reason_types, reasons, and parameter correction.","required":[]}},"required":["explanation","evidence","output","confidence","correction"]},"examples":[{"user_kwargs":{"conversation_context":[{"role":"user","content":"Translate 'hello' to Spanish."}],"tools_inventory":[{"name":"translate_text","description":"Translate given text","parameters":{"text":"string","target_lang":"string"}}],"tool_call":{"name":"translate_text","parameters":{"text":"hello","target_lang":"es"}},"parameter_name":"target_lang","parameter_value":"es"},"output":{"explanation":"The parameter target_lang='es' is properly grounded, as the user requested translation to Spanish and the agent correctly converted it to the standard ISO code, as expected by the tool specification.","evidence":"User request: \"Translate 'hello' to Spanish.\" Tool specification for translate_text includes parameter target_lang of type string.","output":5,"confidence":0.96,"correction":{}}},{"user_kwargs":{"conversation_context":[{"role":"user","content":"Fetch my latest tweets."}],"tools_inventory":[{"name":"get_tweets","description":"Retrieve recent tweets","parameters":{"username":"string","count":"integer"}}],"tool_call":{"name":"get_tweets","parameters":{"username":"elonmusk","count":20}},"parameter_name":"count","parameter_value":20},"output":{"explanation":"The parameter count=20 is ungrounded and likely hallucinated, as the user did not specify a quantity and the tool provides no default, making the agent's choice unsupported by conversation or specification.","evidence":"User request: \"Fetch my latest tweets.\" - contains no mention of any specific count or number of tweets. Tool specification does not document a default value for the count parameter.","output":1,"confidence":0.95,"correction":{"reason_types":["HALLUCINATION","MISSING_INFORMATION"],"reasons":"Count value 20 is invented without user specification or documented default","parameter":{"count":"need_more_information"}}}}]}
{"name":"value_format_alignment","jsonschema":{"title":"value_format_alignment","description":"GROUNDING REQUIREMENT: You must evaluate whether the SPECIFIC parameter value named in \"parameter_name\" exactly conforms to the required type, format, and unit conventions specified in the API documentation. Base your assessment EXCLUSIVELY on the provided API specification and the actual parameter value. DO NOT introduce assumptions about acceptable formats that aren't explicitly documented.\n\nYou are evaluating ONE SPECIFIC PARAMETER VALUE, not the entire tool call or other parameters.\n\nFORMAT ALIGNMENT ASSESSMENT CRITERIA:\n1. DATA TYPE COMPLIANCE (Output=4-5):\n   - Check if the value matches the required data type (string, integer, boolean, object, array, etc.)\n   - Verify that numeric values are provided as numbers (not strings) when the type is integer/number\n   - Confirm strings are properly formatted as strings when the type requires it\n   - Validate boolean values are true/false (not \"true\"/\"false\" strings) when boolean type is required\n\n2. FORMAT SPECIFICATION COMPLIANCE:\n   - Assess alignment with specific format requirements:\n     - Date formats (ISO 8601, YYYY-MM-DD, etc.)\n     - Time formats (24-hour, 12-hour with AM/PM, timezone inclusion)\n     - Currency formats (symbol position, decimal separator, etc.)\n     - Special patterns (phone numbers, postal codes, etc.)\n   - Verify compliance with any regex or pattern requirements in the spec\n\n3. UNIT COMPLIANCE:\n   - Check for required unit suffixes or prefixes (e.g., \"seconds\", \"$\", \"kg\")\n   - Verify absence of units when the spec requires raw values\n   - Confirm correct unit type is used when multiple are possible\n\n4. CONSISTENCY REQUIREMENTS:\n   - Ensure consistent formats across related parameters (e.g., same timezone in start/end times)\n   - Validate that the value works correctly with other parameter values\n\nRATE FORMAT ALIGNMENT ON THIS SCALE:\n5 - PERFECT ALIGNMENT: Value exactly matches the required type, format, and units as specified\n4 - MINOR DEVIATION: Value has the correct fundamental type but minor formatting issues that likely won't affect function\n3 - MODERATE DEVIATION: Value has either incorrect type or significant format issues that might affect function\n2 - MAJOR DEVIATION: Value has both type and format issues that will likely cause function failure\n1 - COMPLETE MISMATCH: Value bears no resemblance to the required format and will certainly cause function failure\n\nBe conservative in your assessment: if the specification is ambiguous but the value seems reasonable, give a higher score (4-5). If the specification is clear and the value clearly deviates, give a lower score (1-3).\n\nYOUR EVALUATION IS CRITICALLY IMPORTANT: Incorrect parameter formats often cause tool call failures, leading to poor user experiences. Your careful assessment helps prevent these errors.","type":"object","properties":{"explanation":{"type":"string","description":"Explain in one or two sentence precisely why the parameter value does or does not match the specification's type, format, and unit requirements. Reference specific details from the parameter specification including data type, format requirements, unit conventions, and any pattern constraints. For non-conforming values, explain exactly what is incorrect and how it deviates from requirements."},"evidence":{"type":"string","description":"Give a short sentence or two with quotes of the spec's type/format definition and the actual provided value that supports your judgment. Include EXACT text from the tool specification regarding this parameter's requirements."},"output":{"type":"integer","minimum":1,"maximum":5,"threshold_low":4,"threshold_high":5,"description":"Format alignment score: 5=perfect alignment, 4=minor deviation, 3=moderate deviation, 2=major deviation, 1=complete mismatch."},"confidence":{"type":"number","minimum":0,"maximum":1,"threshold_low":0.7,"threshold_high":1,"description":"Your confidence in this format assessment (0.0-1.0). Use lower confidence when specification is ambiguous. Use high confidence when requirements are clearly defined."},"correction":{"type":"object","properties":{"reason_types":{"type":"array","description":"A short sentence or two with types of format issues with the parameter value, if any. Use one or more of these values: TYPE_ERROR (wrong data type), FORMAT_ERROR (incorrect format), UNIT_ERROR (wrong/missing units), PATTERN_ERROR (doesn't match required pattern), CONSISTENCY_ERROR (inconsistent with related parameters), OTHER (explain in reasons).","items":{"type":"string","enum":["TYPE_ERROR","FORMAT_ERROR","UNIT_ERROR","PATTERN_ERROR","CONSISTENCY_ERROR","OTHER"]}},"reasons":{"type":"string","description":"Concise explanation of the specific format issues with the parameter value."},"parameter":{"type":"object","description":"Object containing parameter name as key and correctly formatted value as value.","additionalProperties":true}},"description":"For correctly formatted values (output ≥ 4): Provide an empty object {}. For format issues (output ≤ 3): Provide an object with reason_types, reasons, and parameter correction.","required":[]}},"required":["explanation","evidence","output","confidence","correction"]},"examples":[{"user_kwargs":{"conversation_context":[{"role":"user","content":"Start a countdown for 5 minutes."}],"tools_inventory":[{"name":"set_timer","description":"Set a countdown timer","parameters":{"duration":"string"}}],"tool_call":{"name":"set_timer","parameters":{"duration":"5 minutes"}},"parameter_name":"duration","parameter_value":"5 minutes"},"output":{"explanation":"The parameter value \"5 minutes\" is fully compliant with the specification, matching the required string format and exactly aligning with the example provided.","evidence":"Specification for set_timer.duration: \"string\". Example format in spec: \"5 minutes\". Provided value: \"5 minutes\".","output":5,"confidence":0.98,"correction":{}}},{"user_kwargs":{"conversation_context":[{"role":"user","content":"Start a countdown for 5 minutes."}],"tools_inventory":[{"name":"set_timer","description":"Set a countdown timer","parameters":{"duration":"string"}}],"tool_call":{"name":"set_timer","parameters":{"duration":"300000"}},"parameter_name":"duration","parameter_value":"300000"},"output":{"explanation":"The parameter value \"300000\" deviates from the expected format by omitting a time unit and using milliseconds instead of the specified \"number + time unit\" format like \"5 minutes,\" which could cause confusion or misinterpretation.","evidence":"Specification for set_timer.duration: \"string\". Example format in spec: \"5 minutes\". Provided value: \"300000\".","output":2,"confidence":0.93,"correction":{"reason_types":["FORMAT_ERROR","UNIT_ERROR"],"reasons":"Missing time unit and using milliseconds instead of specified format with explicit units","parameter":{"duration":"5 minutes"}}}}]}