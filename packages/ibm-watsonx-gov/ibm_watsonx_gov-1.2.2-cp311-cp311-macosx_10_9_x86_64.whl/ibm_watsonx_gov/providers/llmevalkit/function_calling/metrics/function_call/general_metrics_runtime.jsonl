{"name":"general_hallucination_check","jsonschema":{"title":"general_hallucination_check","description":"GROUNDING REQUIREMENT: You must assess ONLY whether each parameter value in the function call is DIRECTLY supported by the provided conversation history or the API specification. Base your judgment EXCLUSIVELY on the materials provided - do not assume, infer, or hallucinate any information not explicitly present in these sources.\n\nEVALUATE EACH PARAMETER VALUE FOR:\n1. DIRECT GROUNDING: Each value must originate from one of these sources only:\n   - Explicit user statements in conversation history\n   - Assistant confirmations that user acknowledged\n   - Previous tool call outputs\n   - Documented defaults in the provided API specification\n\n2. PARAMETER VALUE CORRECTNESS TYPES:\n   - CORRECT: Value is explicitly mentioned or directly implied in conversation OR is a documented default\n   - NEEDS MORE INFORMATION: Value cannot be determined from available context (e.g., user provided day but parameter requires full date)\n   - HALLUCINATED: Value appears invented with no grounding in conversation or spec\n   - FORMAT ERROR: Value represents correct information but uses wrong format/units compared to specification\n   - CONTRADICTORY: Value conflicts with constraints or relationships with other parameters as defined in tool inventory\n\n3. DEFAULT VALUE HANDLING:\n   - Optional parameters may use defaults ONLY when explicitly defined in the specification\n   - Implicit/assumed defaults without specification documentation are considered hallucinations\n   - When specification is silent on defaults, optional parameters should be omitted rather than invented\n\n4. ACCEPTABLE TRANSFORMATIONS:\n   - Direct synonyms (e.g., \"NYC\" -> \"New York\") are acceptable ONLY if normalized in prior conversation\n   - Unit conversions are acceptable ONLY if explicitly performed in conversation\n   - Format changes require explicit indication in conversation or specification\n\n5. MULTI-CALL CONTEXT:\n   - In chained sequences, parameter values may be grounded in outputs of previous tool calls\n   - Consider the sequence order for parameter value dependencies\n   - Tool call ordering may provide context for parameter values\n\nYOUR ASSESSMENT MUST BE CONSERVATIVE: When in doubt about grounding, flag the parameter value as incorrect. Base your judgment ONLY on explicit evidence in the provided conversation history and tool specifications.","type":"object","properties":{"explanation":{"type":"string","description":"For EACH parameter value, provide a sentence explaining its grounding status by citing specific evidence from the conversation history or tool specification. Address whether the value is correctly grounded, hallucinated, needs more information, has format errors, or contradicts other parameters. Include direct quotes from the materials that either support or contradict each parameter value."},"evidence":{"type":"string","description":"Give a short sentence or two with EXACT quotes from user messages, assistant responses, prior tool outputs, or API specifications that demonstrate whether each parameter value is grounded. Do not paraphrase or interpret - use only direct evidence."},"output":{"type":"integer","minimum":1,"maximum":5,"threshold_low":4,"threshold_high":5,"description":"5 if ALL parameter values are correctly grounded and formatted; 4 if some values may need more information but are not hallucinated; 3 if some values are hallucinated or have format errors; 2 if multiple values are incorrect or contradictory; 1 if all values are incorrect or missing."},"confidence":{"type":"number","minimum":0,"maximum":1,"threshold_low":0.7,"threshold_high":1,"description":"Your confidence in this assessment (0.0-1.0). Lower confidence if evidence is ambiguous or incomplete."},"correction":{"type":"object","properties":{"parameter_issues":{"type":"array","description":"Give a short sentence or two listing the parameters with issues and their details. Leave empty if no issues detected.","items":{"type":"object","properties":{"parameter_name":{"type":"string","description":"Name of the parameter with an issue"},"reason_types":{"type":"array","description":"Categories of issues with this parameter value","items":{"type":"string","enum":["HALLUCINATION","MISSING_INFORMATION","FORMAT_ERROR","CONTRADICTORY_VALUES","DEFAULT_ISSUE","OTHER"]}},"reasons":{"type":"string","description":"Brief explanation of the specific issues with this parameter"},"corrected_value":{"description":"Corrected value for this parameter. Use need_more_information if user input is required, or null if value cannot be determined."}},"required":["parameter_name","reason_types","reasons","corrected_value"]}},"tool_call":{"type":"object","description":"Complete corrected tool call with all fixed parameters. Only include if corrections are possible.","properties":{"name":{"type":"string","description":"Name of the function to call"},"parameters":{"type":"object","description":"Complete set of corrected parameters for the function call","additionalProperties":true}},"required":[]}},"description":"For correctly grounded tool calls (output ≥ 4): Provide an empty object {}. For tool calls with parameter issues (output ≤ 3): Provide an object with parameter_issues array and optionally a corrected tool_call if corrections can be made.","required":[]}},"required":["explanation","evidence","output","confidence","correction"]},"examples":[{"user_kwargs":{"conversation_context":[{"role":"assistant","content":"Logged in as user 55; auth token acquired."},{"role":"assistant","content":"Ready to fetch your profile."}],"tools_inventory":[{"name":"get_user_profile","description":"Retrieves a user's profile details","parameters":{"user_id":"integer"}}],"tool_call":{"name":"get_user_profile","parameters":{"user_id":55}}},"output":{"explanation":"The user_id=55 parameter is properly grounded in the conversation history, as evidenced by the assistant’s explicit statement \"Logged in as user 55.\"","evidence":"Assistant message: \"Logged in as user 55; auth token acquired.\"","output":5,"confidence":0.95,"correction":{}}},{"user_kwargs":{"conversation_context":[{"role":"assistant","content":"Ready to fetch your profile."}],"tools_inventory":[{"name":"get_user_profile","description":"Retrieves a user's profile details","parameters":{"user_id":"integer"}}],"tool_call":{"name":"get_user_profile","parameters":{"user_id":42}}},"output":{"explanation":"The user_id=42 parameter is a hallucinated value with no grounding in the conversation or tool specification.","evidence":"Complete conversation history contains no mention of user ID 42. Tool specification for get_user_profile does not specify any default value for the user_id parameter.","output":1,"confidence":0.89,"correction":{"parameter_issues":[{"parameter_name":"user_id","reason_types":["HALLUCINATION","MISSING_INFORMATION"],"reasons":"Value 42 is invented without any basis in conversation or specification","corrected_value":"need_more_information"}],"tool_call":{}}}}]}
{"name":"agentic_constraints_satisfaction","jsonschema":{"title":"agentic_constraints_satisfaction","description":"GROUNDING REQUIREMENT: Evaluate ONLY whether this specific tool call satisfies all prerequisite constraints and relationships defined in the provided conversation history and tool inventory. Base your judgment EXCLUSIVELY on explicit evidence - DO NOT hallucinate constraints or requirements that aren't clearly documented.\n\nEVALUATE THE FOLLOWING ASPECTS:\n\n1. EXPLICIT PREREQUISITES: \n   - Verify completion of any explicitly required steps (e.g., authentication, data loading) mentioned in conversation or tool descriptions\n   - Look for confirmation messages like \"Auth token acquired,\" \"User info loaded,\" or \"File uploaded successfully\"\n   - Consider prerequisites satisfied ONLY when clear evidence exists of their successful completion\n\n2. TOOL SEQUENCING REQUIREMENTS:\n   - Assess whether semantic ordering requirements (defined in tool descriptions) are satisfied\n   - Examples: language detection must precede translation, file upload must precede processing\n   - Flag issues ONLY when tool descriptions EXPLICITLY state such dependencies\n\n3. TOOL CALL CLASSIFICATIONS:\n   - INDEPENDENT CALLS: Tool calls that can execute simultaneously without order significance\n   - CHAINED CALLS: Sequential tool calls where each depends on previous calls' execution\n   - BASE ASSESSMENT ON TOOL DESCRIPTIONS, not assumptions about typical workflows\n\n4. REDUNDANCY ASSESSMENT:\n   - Determine if this call duplicates the functionality and outcome of a previous tool call\n   - Flag redundancy ONLY when the exact same operation with equivalent parameters was performed\n   - Consider context changes that might justify repeating seemingly identical calls\n\n5. PARAMETER SET COMPLETENESS:\n   - Check that all parameters implied by user requests are included (e.g., \"only flagged\" -> filter parameter)\n   - Verify ONLY parameters clearly implied in the conversation, not those you think might be useful\n\n6. PARAMETER VALUE RELATIONSHIPS:\n   - Ensure relationships between parameters are logically consistent (e.g., startDate ≤ endDate)\n   - Check unit consistency across related parameters (e.g., same temperature units throughout)\n   - Flag contradictions ONLY when they violate logical constraints or explicit rules in tool description\n\nYOUR ASSESSMENT MUST BE CONSERVATIVE: Only flag issues when there is clear, explicit evidence of constraint violations. Do not invent workflows or dependencies not stated in the provided materials.","type":"object","properties":{"explanation":{"type":"string","description":"Provide a sentence or two explaining whether all prerequisite constraints are satisfied for this tool call. Address explicit dependencies, required sequence, parameter relationships, and potential redundancy. Base your explanation SOLELY on evidence from the provided conversation and tool specifications."},"evidence":{"type":"string","description":"Give a short sentence or two with Quotes of SPECIFIC lines from the conversation history or tool specifications that demonstrate whether prerequisites are satisfied or violated. Include exact text showing completions or absences of required steps."},"output":{"type":"integer","minimum":1,"maximum":5,"threshold_low":4,"threshold_high":5,"description":"5 if ALL agentic constraints are satisfied; 4 if there are some minor insignificant issues that do not block the call, or require additional information or tools in the tools inventory; 3 if there are significant issues that block the call but can be resolved with additional information or tools; 2 if there are major issues that prevent the call from being made, but could be resolved with significant changes to the conversation or tools; 1 if the call is completely inappropriate given the conversation context and tool specifications."},"confidence":{"type":"number","minimum":0,"maximum":1,"threshold_low":0.7,"threshold_high":1,"description":"Your confidence in this assessment (0.0-1.0). Lower confidence if evidence is ambiguous or incomplete."},"correction":{"type":"object","properties":{"reason_types":{"type":"array","description":"Types of constraint violations identified","items":{"type":"string","enum":["MISSING_PREREQUISITE","WRONG_SEQUENCE","REDUNDANT_CALL","PARAMETER_RELATIONSHIP","PARAMETER_INCOMPLETENESS","OTHER"]}},"reasons":{"type":"string","description":"Brief explanation of the specific constraint violations"},"prerequisite_tool_calls":{"type":"array","description":"List of prerequisite tool calls that must be executed before this one","items":{"type":"object","properties":{"name":{"type":"string","description":"Name of the prerequisite function"},"parameters":{"type":"object","description":"Parameters for the prerequisite function call","additionalProperties":true}},"required":["name","parameters"]}},"corrected_tool_call":{"type":"object","description":"Corrected version of the current tool call if parameter relationships need fixing","properties":{"name":{"type":"string","description":"Name of the function (same as original if only parameters need correction)"},"parameters":{"type":"object","description":"Corrected parameters for the function call","additionalProperties":true}},"required":[]}},"description":"For satisfied constraints (output ≥ 4): Provide an empty object {}. For constraint violations (output ≤ 3): Provide an object with reason_types, reasons, and either prerequisite_tool_calls (for missing prerequisites) or corrected_tool_call (for parameter issues).","required":[]}},"required":["explanation","evidence","output","confidence","correction"]},"examples":[{"user_kwargs":{"conversation_context":[{"role":"assistant","content":"Auth token acquired for user 42."}],"tools_inventory":[{"name":"get_order_history","description":"Retrieve past orders","parameters":{"user_id":"integer"}}],"tool_call":{"name":"get_order_history","parameters":{"user_id":42}}},"output":{"explanation":"This tool call meets all agentic constraints, with confirmed authentication for user 42, a matching user_id, and no issues with prerequisites, redundancy, or parameter relationships.","evidence":"Assistant message explicitly states: \"Auth token acquired for user 42.\" The tool specification for get_order_history does not mention any additional prerequisites beyond authentication.","output":5,"confidence":0.95,"correction":{}}},{"user_kwargs":{"conversation_context":[{"role":"user","content":"Translate 'Hola' to English."}],"tools_inventory":[{"name":"translate_text","description":"Translate text to target language. REQUIRES: Prior successful call to detect_language for the input text.","parameters":{"text":"string","target":"string"}},{"name":"detect_language","description":"Detect the language of the input text","parameters":{"text":"string"}}],"tool_call":{"name":"translate_text","parameters":{"text":"Hola","target":"en"}}},"output":{"explanation":"This tool call violates an agentic constraint by using translate_text without the required prior detect_language call, as mandated by the tool description and unsupported by the conversation history.","evidence":"Tool description explicitly states: \"translate_text: Translate text to target language. REQUIRES: Prior successful call to detect_language for the input text.\" The conversation history contains no detect_language call or language detection result.","output":2,"confidence":0.95,"correction":{"reason_types":["MISSING_PREREQUISITE","WRONG_SEQUENCE"],"reasons":"Missing required prerequisite detect_language call as explicitly stated in translate_text description","prerequisite_tool_calls":[{"name":"detect_language","parameters":{"text":"Hola"}}]}}}]}