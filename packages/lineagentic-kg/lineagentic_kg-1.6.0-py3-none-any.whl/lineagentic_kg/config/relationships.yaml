# Aspect-Driven Relationship Rules
# This file contains relationship rule definitions for automatic relationship creation

# Aspect-Driven Relationship Rules
aspect_relationships:
  ownership:
    description: "Creates OWNS and GROUP_OWNS relationships from ownership aspect data"
    rules:
      - entity_type: "Dataset"
        relationship_type: "OWNS"
        source_entity: "CorpUser"
        target_entity: "Dataset"
        direction: "incoming"
        field_mapping:
          source_field: "owners[].owner"
          source_entity_type: "CorpUser"
          source_urn_field: "username"
          target_entity_type: "Dataset"
          target_urn_field: "urn"
      - entity_type: "Dataset"
        relationship_type: "GROUP_OWNS"
        source_entity: "CorpGroup"
        target_entity: "Dataset"
        direction: "incoming"
        field_mapping:
          source_field: "groupOwners[].group"
          source_entity_type: "CorpGroup"
          source_urn_field: "name"
          target_entity_type: "Dataset"
          target_urn_field: "urn"

  globalTags:
    description: "Creates TAGGED relationships from globalTags aspect data"
    rules:
      - entity_type: "Dataset"
        relationship_type: "TAGGED"
        source_entity: "Dataset"
        target_entity: "Tag"
        direction: "outgoing"
        field_mapping:
          source_field: "tags[].tag"
          source_entity_type: "Dataset"
          source_urn_field: "urn"
          target_entity_type: "Tag"
          target_urn_field: "key"

  columnTransformation:
    description: "Creates TRANSFORMS relationships from columnTransformation aspect data"
    rules:
      - entity_type: "Column"
        relationship_type: "TRANSFORMS"
        source_entity: "Column"
        target_entity: "Column"
        direction: "incoming"
        field_mapping:
          source_field: "inputColumns[]"
          source_entity_type: "Column"
          source_urn_field: "urn"
          target_entity_type: "Column"
          target_urn_field: "urn"
          # Use direct URN construction instead of templates
          use_direct_urns: true
          # Add transformation properties to the relationship
          relationship_properties:
            transformType: "transformType"
            transformScript: "transformScript"
            sourceDataset: "sourceDataset"

  datasetTransformation:
    description: "Creates DOWNSTREAM_OF relationships from datasetTransformation aspect data"
    rules:
      # Rule that creates DOWNSTREAM_OF relationship from processed dataset to raw dataset
      # The processed dataset (entity) is downstream of the raw dataset (sourceDataset)
      - entity_type: "Dataset"
        relationship_type: "DOWNSTREAM_OF"
        source_entity: "Dataset"
        target_entity: "Dataset"
        direction: "outgoing"
        field_mapping:
          # The entity this aspect is attached to (processed dataset) is the source
          # The sourceDataset field contains the raw dataset that should be the target
          # This creates: processed_dataset -> DOWNSTREAM_OF -> raw_dataset
          source_field: "sourceDataset"
          source_entity_type: "Dataset"
          source_urn_field: "urn"
          target_entity_type: "Dataset"
          target_urn_field: "urn"
          # Explicitly specify that we're using direct URNs, not templates
          use_direct_urns: true

  schemaMetadata:
    description: "Creates HAS_COLUMN relationships from schemaMetadata aspect data"
    rules:
      - entity_type: "Dataset"
        relationship_type: "HAS_COLUMN"
        source_entity: "Dataset"
        target_entity: "Column"
        direction: "outgoing"
        field_mapping:
          source_field: "fields[].fieldPath"
          source_entity_type: "Dataset"
          source_urn_field: "urn"
          target_entity_type: "Column"
          target_urn_field: "urn"
          # Use direct URN construction for columns
          use_direct_urns: true

  corpGroupInfo:
    description: "Creates MEMBER_OF relationships from corpGroupInfo aspect data"
    rules:
      - entity_type: "CorpGroup"
        relationship_type: "MEMBER_OF"
        source_entity: "CorpUser"
        target_entity: "CorpGroup"
        direction: "incoming"
        field_mapping:
          source_field: "members[]"
          source_entity_type: "CorpUser"
          source_urn_field: "username"
          target_entity_type: "CorpGroup"
          target_urn_field: "name"
          # Use template-based URN resolution for CorpUser and CorpGroup
          use_direct_urns: false
          # Add relationship properties
          relationship_properties:
            added_via: "corpGroupInfo"
            added_timestamp: "lastModified"

  dpContract:
    description: "Creates IMPLEMENTS_CONTRACT relationships from dpContract aspect data"
    rules:
      - entity_type: "DataProduct"
        relationship_type: "IMPLEMENTS_CONTRACT"
        source_entity: "Dataset"
        target_entity: "DataProduct"
        direction: "incoming"
        field_mapping:
          source_field: "fields[].dataset_urn"
          source_entity_type: "Dataset"
          source_urn_field: "urn"
          target_entity_type: "DataProduct"
          target_urn_field: "urn"
          use_direct_urns: true

  # Entity Creation Relationships - These are triggered when entities are created
  ColumnCreation:
    description: "Creates HAS_COLUMN relationships when Column entities are created"
    rules:
      - entity_type: "Column"
        relationship_type: "HAS_COLUMN"
        source_entity: "Dataset"
        target_entity: "Column"
        direction: "incoming"
        field_mapping:
          source_field: "dataset_urn"
          source_entity_type: "Dataset"
          source_urn_field: "urn"
          target_entity_type: "Column"
          target_urn_field: "urn"
          use_direct_urns: true
          # Add relationship properties
          relationship_properties:
            field_path: "field_path"


  


