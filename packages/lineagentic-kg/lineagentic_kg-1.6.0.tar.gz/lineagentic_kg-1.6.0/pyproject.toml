[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "lineagentic-kg"
version = "1.6.0"
description = "Turn YAML into a Knowledge Graph in minutes"
readme = "README.md"
license = "Apache-2.0"
authors = [
    {name = "LineAgentic Team", email = "team@lineagentic.com"}
]
maintainers = [
    {name = "LineAgentic Team", email = "team@lineagentic.com"}
]
keywords = ["neo4j", "metadata", "registry", "lineage", "catalog"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",

    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
requires-python = ">=3.8"
dependencies = [
    "fastapi>=0.68.0",
    "pydantic>=1.8.0",
    "neo4j>=4.4.0",
    "pyyaml>=5.4.0",
    "uvicorn>=0.15.0",
    "python-multipart>=0.0.5",
    "click>=8.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0.0",
    "pytest-asyncio>=0.15.0",
    "black>=21.0.0",
    "flake8>=3.8.0",
    "mypy>=0.910",
    "twine>=3.0.0",
    "build>=0.10.0",
]

[project.scripts]
generate-api = "lineagentic_kg.scripts.generate_api:main"
generate-cli = "lineagentic_kg.scripts.generate_cli:main"

[project.urls]
Homepage = "https://lineagentic.com"
Repository = "https://github.com/lineagentic/lineagentic-kg"
Documentation = "https://github.com/lineagentic/lineagentic-kg#readme"
Issues = "https://github.com/lineagentic/lineagentic-kg/issues"

[tool.setuptools.packages.find]
where = ["."]
include = ["lineagentic_kg*"]

[tool.setuptools.package-data]
"lineagentic_kg" = ["config/*.yaml"]

[tool.setuptools.exclude-package-data]
"*" = ["*.pyc", "*.pyo", "*.pyd", "__pycache__", "*.so"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"
