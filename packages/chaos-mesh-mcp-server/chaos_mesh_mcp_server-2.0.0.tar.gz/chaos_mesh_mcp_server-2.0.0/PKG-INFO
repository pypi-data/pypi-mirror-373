Metadata-Version: 2.4
Name: chaos-mesh-mcp-server
Version: 2.0.0
Summary: MCP Server for Chaos Engineering with Chaos Mesh on EKS
Author-email: Kandy Oh <kandy@plaintexting.com>
License: MIT
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.12
Requires-Python: >=3.12
Description-Content-Type: text/markdown
Requires-Dist: mcp>=1.3.0
Requires-Dist: kubernetes>=32.1.0
Requires-Dist: PyJWT>=2.8.0
Requires-Dist: cryptography>=41.0.0
Requires-Dist: requests>=2.31.0
Requires-Dist: pydantic>=2.5.0
Requires-Dist: pyyaml>=6.0.1
Requires-Dist: aiohttp>=3.9.0
Requires-Dist: asyncio-mqtt>=0.16.0
Requires-Dist: python-dotenv>=1.0.0
Requires-Dist: structlog>=23.2.0
Requires-Dist: tenacity>=8.2.3
Requires-Dist: boto3>=1.40.0

# Chaos Mesh MCP Server

An MCP server that enables AI agents to perform chaos engineering through Chaos Mesh on EKS clusters.

## Architecture

```
┌─────────────────┐    ┌──────────────────┐    ┌─────────────────┐
│   AI Agent      │───▶│   MCP Server     │───▶│  EKS Cluster    │
│                 │    │                  │    │                 │
│ - Failure       │    │ - OIDC Auth      │    │ - Chaos Mesh    │
│   Scenarios     │    │ - K8s API Calls  │    │ - Workloads     │
│ - Experiment    │    │ - Experiment     │    │ - Monitoring    │
│   Planning      │    │   Management     │    │                 │
│ - Result        │    │                  │    │                 │
│   Analysis      │    │                  │    │                 │
└─────────────────┘    └──────────────────┘    └─────────────────┘
```

## Key Features

### 1. Authentication and Authorization Management
- OIDC-based EKS cluster authentication
- RBAC permission validation
- Token renewal and management

### 2. Chaos Mesh Experiment Management
- Experiment creation and execution
- Experiment status monitoring
- Experiment termination and cleanup

### 3. Chaos Engineering Tools
- Pod failure injection
- Network failure simulation
- Storage failure testing
- Time and stress testing

## Installation and Setup

1. Install Chaos Mesh on EKS cluster
2. Configure OIDC provider
3. Set up RBAC permissions
4. Deploy MCP server

## Security Considerations

- Apply principle of least privilege
- Limit experiment scope
- Record audit logs
- Implement safety mechanisms
