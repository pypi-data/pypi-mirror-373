from typing import cast
import numpy as np

wims69 = (
    np.array(
        [
            1.00000e01,
            6.06550e00,
            3.67900e00,
            2.23100e00,
            1.35300e00,
            8.21000e-01,
            5.00000e-01,
            3.02500e-01,
            1.83000e-01,
            1.11000e-01,
            6.73400e-02,
            4.08500e-02,
            2.47800e-02,
            1.50300e-02,
            9.11800e-03,
            5.53000e-03,
            3.51910e-03,
            2.23945e-03,
            1.42510e-03,
            9.06899e-04,
            3.67263e-04,
            1.48729e-04,
            7.55014e-05,
            4.80520e-05,
            2.77000e-05,
            1.59680e-05,
            9.87700e-06,
            4.00000e-06,
            3.30000e-06,
            2.60000e-06,
            2.10000e-06,
            1.50000e-06,
            1.30000e-06,
            1.15000e-06,
            1.12300e-06,
            1.09700e-06,
            1.07100e-06,
            1.04500e-06,
            1.02000e-06,
            9.96000e-07,
            9.72000e-07,
            9.50000e-07,
            9.10000e-07,
            8.50000e-07,
            7.80000e-07,
            6.25000e-07,
            5.00000e-07,
            4.00000e-07,
            3.50000e-07,
            3.20000e-07,
            3.00000e-07,
            2.80000e-07,
            2.50000e-07,
            2.20000e-07,
            1.80000e-07,
            1.40000e-07,
            1.00000e-07,
            8.00000e-08,
            6.70000e-08,
            5.80000e-08,
            5.00000e-08,
            4.20000e-08,
            3.50000e-08,
            3.00000e-08,
            2.50000e-08,
            2.00000e-08,
            1.50000e-08,
            1.00000e-08,
            5.00000e-09,
            1.00000e-11,
        ]
    )
    * 1.0e6
)

casmo4 = np.array([0.0, 6.25e-1, 5.53e3, 8.21e5, 2.0e7])
casmo4 = np.flip(casmo4)

casmo8 = np.array([0.0, 5.8e-2, 1.4e-1, 2.8e-1, 6.25e-1, 4.0, 5.53e3, 8.21e5, 2.0e7])
casmo8 = np.flip(casmo8)

casmo16 = np.array(
    [
        0.0,
        3.0e-2,
        5.8e-2,
        1.4e-1,
        2.8e-1,
        3.5e-1,
        6.25e-1,
        8.5e-1,
        9.72e-1,
        1.02,
        1.097,
        1.15,
        1.3,
        4.0,
        5.53e3,
        8.21e5,
        2.0e7,
    ]
)
casmo16 = np.flip(casmo16)

casmo25 = np.array(
    [
        0.0,
        3.0e-2,
        5.8e-2,
        1.4e-1,
        2.8e-1,
        3.5e-1,
        6.25e-1,
        9.72e-1,
        1.02,
        1.097,
        1.15,
        1.855,
        4.0,
        9.877,
        1.5968e1,
        1.4873e2,
        5.53e3,
        9.118e3,
        1.11e5,
        5.0e5,
        8.21e5,
        1.353e6,
        2.231e6,
        3.679e6,
        6.0655e6,
        2.0e7,
    ]
)
casmo25 = np.flip(casmo25)

casmo40 = np.array(
    [
        0.0,
        1.5e-2,
        3.0e-2,
        4.2e-2,
        5.8e-2,
        8.0e-2,
        1.0e-1,
        1.4e-1,
        1.8e-1,
        2.2e-1,
        2.8e-1,
        3.5e-1,
        6.25e-1,
        8.5e-1,
        9.5e-1,
        9.72e-1,
        1.02,
        1.097,
        1.15,
        1.3,
        1.5,
        1.855,
        2.1,
        2.6,
        3.3,
        4.0,
        9.877,
        1.5968e1,
        2.77e1,
        4.8052e1,
        1.4873e2,
        5.53e3,
        9.118e3,
        1.11e5,
        5.0e5,
        8.21e5,
        1.353e6,
        2.231e6,
        3.679e6,
        6.0655e6,
        2.0e7,
    ]
)
casmo40 = np.flip(casmo40)

casmo70 = np.array(
    [
        0.0,
        5.0e-3,
        1.0e-2,
        1.5e-2,
        2.0e-2,
        2.5e-2,
        3.0e-2,
        3.5e-2,
        4.2e-2,
        5.0e-2,
        5.8e-2,
        6.7e-2,
        8.0e-2,
        1.0e-1,
        1.4e-1,
        1.8e-1,
        2.2e-1,
        2.5e-1,
        2.8e-1,
        3.0e-1,
        3.2e-1,
        3.5e-1,
        4.0e-1,
        5.0e-1,
        6.25e-1,
        7.8e-1,
        8.5e-1,
        9.1e-1,
        9.5e-1,
        9.72e-1,
        9.96e-1,
        1.02,
        1.045,
        1.071,
        1.097,
        1.123,
        1.15,
        1.3,
        1.5,
        1.855,
        2.1,
        2.6,
        3.3,
        4.0,
        9.877,
        1.5968e1,
        2.77e1,
        4.8052e1,
        7.5501e1,
        1.4873e2,
        3.6726e2,
        9.069e2,
        1.4251e3,
        2.2395e3,
        3.5191e3,
        5.53e3,
        9.118e3,
        1.503e4,
        2.478e4,
        4.085e4,
        6.734e4,
        1.11e5,
        1.83e5,
        3.025e5,
        5.0e5,
        8.21e5,
        1.353e6,
        2.231e6,
        3.679e6,
        6.0655e6,
        2.0e7,
    ]
)
casmo70 = np.flip(casmo70)

scarabee125 = (
    np.array(
        [
            1.00000e01,
            6.06550e00,
            4.06600e00,
            3.32900e00,
            2.72500e00,
            2.23100e00,
            1.90100e00,
            1.63700e00,
            1.40600e00,
            1.35300e00,
            1.28700e00,
            1.16200e00,
            1.05100e00,
            9.51100e-01,
            8.60000e-01,
            7.06500e-01,
            5.00000e-01,
            4.56000e-01,
            4.12500e-01,
            3.83900e-01,
            3.02500e-01,
            1.83000e-01,
            1.11000e-01,
            6.73400e-02,
            4.08500e-02,
            2.47800e-02,
            1.50300e-02,
            9.11800e-03,
            5.53000e-03,
            3.51910e-03,
            2.23945e-03,
            1.42510e-03,
            9.06899e-04,
            3.67263e-04,
            1.48729e-04,
            7.55014e-05,
            4.80520e-05,
            4.01700e-05,
            3.37200e-05,
            2.77000e-05,
            2.45900e-05,
            2.23800e-05,
            2.17000e-05,
            2.13400e-05,
            2.11400e-05,
            2.10600e-05,
            2.06800e-05,
            2.06000e-05,
            2.04200e-05,
            2.00700e-05,
            1.96000e-05,
            1.93900e-05,
            1.92000e-05,
            1.90800e-05,
            1.59680e-05,
            1.26000e-05,
            1.24700e-05,
            1.23100e-05,
            1.21300e-05,
            1.18200e-05,
            1.17100e-05,
            1.15900e-05,
            9.87700e-06,
            8.98000e-06,
            8.80000e-06,
            8.67400e-06,
            8.52400e-06,
            7.74000e-06,
            7.14000e-06,
            6.99400e-06,
            6.91800e-06,
            6.83500e-06,
            6.77600e-06,
            6.74200e-06,
            6.60600e-06,
            6.55600e-06,
            6.48200e-06,
            6.36000e-06,
            6.16000e-06,
            5.80000e-06,
            5.48800e-06,
            4.93300e-06,
            4.76800e-06,
            4.00000e-06,
            3.30000e-06,
            2.60000e-06,
            2.10000e-06,
            1.50000e-06,
            1.30000e-06,
            1.15000e-06,
            1.12300e-06,
            1.09700e-06,
            1.07100e-06,
            1.04500e-06,
            1.02000e-06,
            9.96000e-07,
            9.72000e-07,
            9.50000e-07,
            9.10000e-07,
            8.50000e-07,
            7.80000e-07,
            6.25000e-07,
            5.00000e-07,
            4.00000e-07,
            3.50000e-07,
            3.20000e-07,
            3.00000e-07,
            2.80000e-07,
            2.50000e-07,
            2.20000e-07,
            1.80000e-07,
            1.40000e-07,
            1.00000e-07,
            8.00000e-08,
            6.70000e-08,
            5.80000e-08,
            5.00000e-08,
            4.20000e-08,
            3.50000e-08,
            3.00000e-08,
            2.50000e-08,
            2.00000e-08,
            1.50000e-08,
            1.00000e-08,
            5.00000e-09,
            1.00000e-11,
        ]
    )
    * 1.0e6
)

scarabee213 = np.array(
    [
        1.000000e07,
        6.065500e06,
        3.679000e06,
        3.328707e06,
        2.725314e06,
        2.231299e06,
        1.901387e06,
        1.636539e06,
        1.405768e06,
        1.336941e06,
        1.286961e06,
        1.162048e06,
        1.051149e06,
        9.511189e05,
        8.600058e05,
        7.065112e05,
        5.784425e05,
        4.940018e05,
        4.560211e05,
        4.125012e05,
        3.838835e05,
        3.206464e05,
        3.025000e05,
        1.830000e05,
        1.110000e05,
        6.734000e04,
        4.085000e04,
        2.478000e04,
        1.503000e04,
        9.118000e03,
        5.530000e03,
        3.519100e03,
        2.239450e03,
        1.425100e03,
        9.068990e02,
        3.672630e02,
        1.487290e02,
        7.550140e01,
        4.805200e01,
        2.770000e01,
        2.253556e01,
        2.237836e01,
        2.215569e01,
        2.200114e01,
        2.170178e01,
        2.148585e01,
        2.133597e01,
        2.122956e01,
        2.114481e01,
        2.106040e01,
        2.097632e01,
        2.076761e01,
        2.068470e01,
        2.060213e01,
        2.051988e01,
        2.041754e01,
        2.027512e01,
        2.007338e01,
        1.959735e01,
        1.939265e01,
        1.919969e01,
        1.908484e01,
        1.795905e01,
        1.775903e01,
        1.756476e01,
        1.744572e01,
        1.683053e01,
        1.655014e01,
        1.604977e01,
        1.577923e01,
        1.486626e01,
        1.473012e01,
        1.459522e01,
        1.447024e01,
        1.425053e01,
        1.404961e01,
        1.354604e01,
        1.332970e01,
        1.259997e01,
        1.247210e01,
        1.230855e01,
        1.213015e01,
        1.197947e01,
        1.181529e01,
        1.170943e01,
        1.158944e01,
        1.126944e01,
        1.105292e01,
        1.080376e01,
        1.057925e01,
        9.500024e00,
        9.140311e00,
        8.979950e00,
        8.800375e00,
        8.673690e00,
        8.524074e00,
        8.300322e00,
        8.130272e00,
        7.970079e00,
        7.839651e00,
        7.739943e00,
        7.600350e00,
        7.380153e00,
        7.139869e00,
        6.994292e00,
        6.917776e00,
        6.870208e00,
        6.835259e00,
        6.810696e00,
        6.791653e00,
        6.776050e00,
        6.759807e00,
        6.742254e00,
        6.716683e00,
        6.631257e00,
        6.606106e00,
        6.588293e00,
        6.571843e00,
        6.556090e00,
        6.539066e00,
        6.514916e00,
        6.481775e00,
        6.432057e00,
        6.359784e00,
        6.280153e00,
        6.160108e00,
        6.059906e00,
        5.960142e00,
        5.800211e00,
        5.720146e00,
        5.619790e00,
        5.530036e00,
        5.488167e00,
        5.410245e00,
        5.380032e00,
        5.320112e00,
        5.210076e00,
        5.109974e00,
        4.933232e00,
        4.767845e00,
        4.419800e00,
        4.309812e00,
        4.219828e00,
        4.000000e00,
        3.882170e00,
        3.712087e00,
        3.543073e00,
        3.142109e00,
        2.884047e00,
        2.775121e00,
        2.740922e00,
        2.719898e00,
        2.700115e00,
        2.640041e00,
        2.620053e00,
        2.590094e00,
        2.550003e00,
        2.469941e00,
        2.330061e00,
        2.272986e00,
        2.217087e00,
        2.156948e00,
        2.070095e00,
        1.989920e00,
        1.900077e00,
        1.779966e00,
        1.668949e00,
        1.588030e00,
        1.519976e00,
        1.443967e00,
        1.410007e00,
        1.380981e00,
        1.330952e00,
        1.293038e00,
        1.250939e00,
        1.213968e00,
        1.169989e00,
        1.147969e00,
        1.123000e00,
        1.097000e00,
        1.071000e00,
        1.045000e00,
        1.020000e00,
        9.960000e-01,
        9.720000e-01,
        9.500000e-01,
        9.100000e-01,
        8.500000e-01,
        7.800000e-01,
        6.250000e-01,
        5.000000e-01,
        4.000000e-01,
        3.500000e-01,
        3.200000e-01,
        3.000000e-01,
        2.800000e-01,
        2.500000e-01,
        2.200000e-01,
        1.800000e-01,
        1.400000e-01,
        1.000000e-01,
        8.000000e-02,
        6.700000e-02,
        5.800000e-02,
        5.000000e-02,
        4.200000e-02,
        3.500000e-02,
        3.000000e-02,
        2.500000e-02,
        2.000000e-02,
        1.500000e-02,
        1.000000e-02,
        5.000000e-03,
        1.000000e-05,
    ]
)

shem281 = np.array(
    [
        1.964030e07,
        1.491823e07,
        1.384029e07,
        1.161833e07,
        9.999987e06,
        9.048363e06,
        8.187297e06,
        7.408173e06,
        6.703192e06,
        6.065299e06,
        4.965847e06,
        4.065691e06,
        3.328707e06,
        2.725314e06,
        2.231299e06,
        1.901387e06,
        1.636539e06,
        1.405768e06,
        1.336941e06,
        1.286961e06,
        1.162048e06,
        1.051149e06,
        9.511189e05,
        8.600058e05,
        7.065112e05,
        5.784425e05,
        4.940018e05,
        4.560211e05,
        4.125012e05,
        3.838835e05,
        3.206464e05,
        2.678264e05,
        2.300137e05,
        1.950077e05,
        1.649989e05,
        1.399995e05,
        1.227732e05,
        1.156235e05,
        9.466450e04,
        8.229736e04,
        6.737938e04,
        5.516557e04,
        4.991587e04,
        4.086766e04,
        3.697859e04,
        3.345961e04,
        2.928101e04,
        2.739441e04,
        2.610010e04,
        2.499908e04,
        2.269941e04,
        1.858471e04,
        1.620045e04,
        1.489967e04,
        1.360366e04,
        1.113774e04,
        9.118808e03,
        7.465848e03,
        6.112520e03,
        5.004508e03,
        4.097345e03,
        3.481068e03,
        2.996183e03,
        2.578838e03,
        2.219627e03,
        1.910451e03,
        1.614038e03,
        1.345061e03,
        1.135007e03,
        1.064962e03,
        9.075007e02,
        7.485173e02,
        6.128342e02,
        5.017462e02,
        4.107950e02,
        3.535746e02,
        3.199275e02,
        2.837502e02,
        2.417960e02,
        1.979658e02,
        1.620807e02,
        1.327005e02,
        1.086459e02,
        8.895177e01,
        7.504548e01,
        6.144204e01,
        5.267255e01,
        4.579131e01,
        4.399581e01,
        4.016895e01,
        3.372011e01,
        2.760769e01,
        2.460856e01,
        2.253556e01,
        2.237836e01,
        2.215569e01,
        2.200114e01,
        2.170178e01,
        2.148585e01,
        2.133597e01,
        2.122956e01,
        2.114481e01,
        2.106040e01,
        2.097632e01,
        2.076761e01,
        2.068470e01,
        2.060213e01,
        2.051988e01,
        2.041754e01,
        2.027512e01,
        2.007338e01,
        1.959735e01,
        1.939265e01,
        1.919969e01,
        1.908484e01,
        1.795905e01,
        1.775903e01,
        1.756476e01,
        1.744572e01,
        1.683053e01,
        1.655014e01,
        1.604977e01,
        1.577923e01,
        1.486626e01,
        1.473012e01,
        1.459522e01,
        1.447024e01,
        1.425053e01,
        1.404961e01,
        1.354604e01,
        1.332970e01,
        1.259997e01,
        1.247210e01,
        1.230855e01,
        1.213015e01,
        1.197947e01,
        1.181529e01,
        1.170943e01,
        1.158944e01,
        1.126944e01,
        1.105292e01,
        1.080376e01,
        1.057925e01,
        9.500024e00,
        9.140311e00,
        8.979950e00,
        8.800375e00,
        8.673690e00,
        8.524074e00,
        8.300322e00,
        8.130272e00,
        7.970079e00,
        7.839651e00,
        7.739943e00,
        7.600350e00,
        7.380153e00,
        7.139869e00,
        6.994292e00,
        6.917776e00,
        6.870208e00,
        6.835259e00,
        6.810696e00,
        6.791653e00,
        6.776050e00,
        6.759807e00,
        6.742254e00,
        6.716683e00,
        6.631257e00,
        6.606106e00,
        6.588293e00,
        6.571843e00,
        6.556090e00,
        6.539066e00,
        6.514916e00,
        6.481775e00,
        6.432057e00,
        6.359784e00,
        6.280153e00,
        6.160108e00,
        6.059906e00,
        5.960142e00,
        5.800211e00,
        5.720146e00,
        5.619790e00,
        5.530036e00,
        5.488167e00,
        5.410245e00,
        5.380032e00,
        5.320112e00,
        5.210076e00,
        5.109974e00,
        4.933232e00,
        4.767845e00,
        4.419800e00,
        4.309812e00,
        4.219828e00,
        4.000000e00,
        3.882170e00,
        3.712087e00,
        3.543073e00,
        3.142109e00,
        2.884047e00,
        2.775121e00,
        2.740922e00,
        2.719898e00,
        2.700115e00,
        2.640041e00,
        2.620053e00,
        2.590094e00,
        2.550003e00,
        2.469941e00,
        2.330061e00,
        2.272986e00,
        2.217087e00,
        2.156948e00,
        2.070095e00,
        1.989920e00,
        1.900077e00,
        1.779966e00,
        1.668949e00,
        1.588030e00,
        1.519976e00,
        1.443967e00,
        1.410007e00,
        1.380981e00,
        1.330952e00,
        1.293038e00,
        1.250939e00,
        1.213968e00,
        1.169989e00,
        1.147969e00,
        1.129974e00,
        1.116049e00,
        1.103950e00,
        1.091982e00,
        1.077986e00,
        1.034993e00,
        1.021012e00,
        1.009035e00,
        9.965005e-01,
        9.819591e-01,
        9.639598e-01,
        9.440222e-01,
        9.199779e-01,
        8.800244e-01,
        8.200371e-01,
        7.199989e-01,
        6.249987e-01,
        5.949930e-01,
        5.549897e-01,
        5.200108e-01,
        4.750165e-01,
        4.315786e-01,
        3.900011e-01,
        3.529935e-01,
        3.250079e-01,
        3.050115e-01,
        2.799888e-01,
        2.549965e-01,
        2.311923e-01,
        2.096102e-01,
        1.900049e-01,
        1.618953e-01,
        1.379994e-01,
        1.199949e-01,
        1.042977e-01,
        8.979683e-02,
        7.649686e-02,
        6.519936e-02,
        5.549815e-02,
        4.730186e-02,
        4.029993e-02,
        3.439976e-02,
        2.929889e-02,
        2.493942e-02,
        2.001035e-02,
        1.482996e-02,
        1.045050e-02,
        7.145263e-03,
        4.556021e-03,
        2.499897e-03,
        1.100027e-04,
    ]
)

apollo99 = np.array(
    [
        1.00000000e07,
        8.18730800e06,
        6.70320100e06,
        5.48811700e06,
        4.49329000e06,
        3.67879400e06,
        3.01194300e06,
        2.46597100e06,
        2.01896600e06,
        1.65299000e06,
        1.35335300e06,
        1.10803200e06,
        9.07179875e05,
        6.08101125e05,
        4.07622094e05,
        2.73237406e05,
        1.83156406e05,
        1.22773500e05,
        8.22975312e04,
        5.51656602e04,
        3.69786602e04,
        2.47875195e04,
        1.66155801e04,
        1.11377598e04,
        7.46585889e03,
        5.00451709e03,
        3.35462598e03,
        2.24867407e03,
        1.50733203e03,
        1.01039398e03,
        6.77287720e02,
        4.53999298e02,
        3.04325012e02,
        2.03995193e02,
        1.36742004e02,
        9.16609268e01,
        6.79040833e01,
        5.55951691e01,
        4.55174789e01,
        3.72665291e01,
        3.05112591e01,
        2.49805107e01,
        2.04523201e01,
        1.67449493e01,
        1.37095900e01,
        1.12244701e01,
        9.18981743e00,
        7.52398682e00,
        6.16012096e00,
        5.04347706e00,
        4.12925005e00,
        3.38074493e00,
        2.76792002e00,
        2.35999990e00,
        2.13000011e00,
        2.01999998e00,
        1.92999995e00,
        1.84000003e00,
        1.75500000e00,
        1.66999996e00,
        1.59000003e00,
        1.50999999e00,
        1.44000006e00,
        1.37000000e00,
        1.30499995e00,
        1.23500001e00,
        1.16999996e00,
        1.11000001e00,
        1.07000005e00,
        1.03499997e00,
        9.86000121e-01,
        9.30000007e-01,
        8.60000014e-01,
        7.90000021e-01,
        7.04999983e-01,
        6.25000000e-01,
        5.40000021e-01,
        4.85000014e-01,
        4.32999998e-01,
        3.91000003e-01,
        3.51999998e-01,
        3.14500004e-01,
        2.82499999e-01,
        2.47999996e-01,
        2.19999999e-01,
        1.88999996e-01,
        1.59999996e-01,
        1.34000003e-01,
        1.15000002e-01,
        9.49999988e-02,
        7.69999996e-02,
        5.90000004e-02,
        4.30000015e-02,
        2.99999993e-02,
        1.99999996e-02,
        1.49999997e-02,
        9.99999978e-03,
        5.49999997e-03,
        3.00000003e-03,
        1.10000001e-04,
    ]
)

xmas172 = (
    np.array(
        [
            1.96403e01,
            1.73325e01,
            1.49182e01,
            1.38403e01,
            1.16183e01,
            1.00000e01,
            8.18731e00,
            6.70320e00,
            6.06531e00,
            5.48812e00,
            4.49329e00,
            3.67879e00,
            3.01194e00,
            2.46597e00,
            2.23130e00,
            2.01897e00,
            1.65299e00,
            1.35335e00,
            1.22456e00,
            1.10803e00,
            1.00259e00,
            9.07180e-01,
            8.20850e-01,
            6.08101e-01,
            5.50232e-01,
            4.97871e-01,
            4.50492e-01,
            4.07622e-01,
            3.01974e-01,
            2.73237e-01,
            2.47235e-01,
            1.83156e-01,
            1.22773e-01,
            1.11090e-01,
            8.22975e-02,
            6.73795e-02,
            5.51656e-02,
            4.08677e-02,
            3.69786e-02,
            2.92830e-02,
            2.73944e-02,
            2.47875e-02,
            1.66156e-02,
            1.50344e-02,
            1.11378e-02,
            9.11882e-03,
            7.46586e-03,
            5.53084e-03,
            5.00451e-03,
            3.52662e-03,
            3.35463e-03,
            2.24867e-03,
            2.03468e-03,
            1.50733e-03,
            1.43382e-03,
            1.23410e-03,
            1.01039e-03,
            9.14242e-04,
            7.48518e-04,
            6.77287e-04,
            4.53999e-04,
            3.71703e-04,
            3.04325e-04,
            2.03995e-04,
            1.48625e-04,
            1.36742e-04,
            9.16609e-05,
            7.56736e-05,
            6.79041e-05,
            5.55951e-05,
            5.15780e-05,
            4.82516e-05,
            4.55174e-05,
            4.01690e-05,
            3.72665e-05,
            3.37201e-05,
            3.05113e-05,
            2.76077e-05,
            2.49805e-05,
            2.26033e-05,
            1.94548e-05,
            1.59283e-05,
            1.37096e-05,
            1.12245e-05,
            9.90555e-06,
            9.18981e-06,
            8.31529e-06,
            7.52398e-06,
            6.16012e-06,
            5.34643e-06,
            5.04348e-06,
            4.12925e-06,
            4.00000e-06,
            3.38075e-06,
            3.30000e-06,
            2.76792e-06,
            2.72000e-06,
            2.60000e-06,
            2.55000e-06,
            2.36000e-06,
            2.13000e-06,
            2.10000e-06,
            2.02000e-06,
            1.93000e-06,
            1.84000e-06,
            1.75500e-06,
            1.67000e-06,
            1.59000e-06,
            1.50000e-06,
            1.47500e-06,
            1.44498e-06,
            1.37000e-06,
            1.33750e-06,
            1.30000e-06,
            1.23500e-06,
            1.17000e-06,
            1.15000e-06,
            1.12535e-06,
            1.11000e-06,
            1.09700e-06,
            1.07100e-06,
            1.04500e-06,
            1.03500e-06,
            1.02000e-06,
            9.96000e-07,
            9.86000e-07,
            9.72000e-07,
            9.50000e-07,
            9.30000e-07,
            9.10000e-07,
            8.60000e-07,
            8.50000e-07,
            7.90000e-07,
            7.80000e-07,
            7.05000e-07,
            6.25000e-07,
            5.40000e-07,
            5.00000e-07,
            4.85000e-07,
            4.33000e-07,
            4.00000e-07,
            3.91000e-07,
            3.50000e-07,
            3.20000e-07,
            3.14500e-07,
            3.00000e-07,
            2.80000e-07,
            2.48000e-07,
            2.20000e-07,
            1.89000e-07,
            1.80000e-07,
            1.60000e-07,
            1.40000e-07,
            1.34000e-07,
            1.15000e-07,
            1.00001e-07,
            9.50000e-08,
            8.00000e-08,
            7.70000e-08,
            6.70000e-08,
            5.80000e-08,
            5.00000e-08,
            4.20000e-08,
            3.50000e-08,
            3.00000e-08,
            2.50000e-08,
            2.00000e-08,
            1.50000e-08,
            1.00000e-08,
            6.90000e-09,
            5.00000e-09,
            3.00000e-09,
            1.00001e-11,
        ]
    )
    * 1.0e6
)

shem361 = np.array(
    [
        1.964030e07,
        1.491823e07,
        1.384029e07,
        1.161833e07,
        9.999987e06,
        9.048363e06,
        8.187297e06,
        7.408173e06,
        6.703192e06,
        6.065299e06,
        4.965847e06,
        4.065691e06,
        3.328707e06,
        2.725314e06,
        2.231299e06,
        1.901387e06,
        1.636539e06,
        1.405768e06,
        1.336941e06,
        1.286961e06,
        1.162048e06,
        1.051149e06,
        9.511189e05,
        8.600058e05,
        7.065112e05,
        5.784425e05,
        4.940018e05,
        4.560211e05,
        4.125012e05,
        3.838835e05,
        3.206464e05,
        2.678264e05,
        2.300598e05,
        1.950662e05,
        1.650650e05,
        1.400976e05,
        1.227732e05,
        1.156235e05,
        9.466450e04,
        8.229736e04,
        6.737938e04,
        5.516557e04,
        4.991587e04,
        4.086766e04,
        3.697859e04,
        3.345961e04,
        2.928101e04,
        2.739441e04,
        2.610010e04,
        2.499908e04,
        2.269941e04,
        1.858471e04,
        1.620045e04,
        1.489967e04,
        1.360366e04,
        1.113774e04,
        9.118808e03,
        7.465848e03,
        6.112520e03,
        5.004508e03,
        4.097345e03,
        3.481068e03,
        2.996183e03,
        2.700236e03,
        2.397290e03,
        2.084104e03,
        1.811833e03,
        1.586197e03,
        1.343582e03,
        1.134667e03,
        1.064323e03,
        9.824941e02,
        9.096813e02,
        8.322179e02,
        7.485173e02,
        6.772865e02,
        6.468370e02,
        6.128342e02,
        6.000988e02,
        5.929407e02,
        5.771455e02,
        5.392042e02,
        5.017462e02,
        4.539987e02,
        4.190936e02,
        3.907603e02,
        3.717027e02,
        3.535746e02,
        3.353230e02,
        3.199275e02,
        2.959215e02,
        2.883267e02,
        2.848875e02,
        2.764678e02,
        2.682969e02,
        2.567478e02,
        2.417960e02,
        2.355903e02,
        2.243247e02,
        2.121077e02,
        2.009577e02,
        1.959960e02,
        1.930780e02,
        1.902035e02,
        1.888767e02,
        1.875592e02,
        1.862508e02,
        1.849516e02,
        1.832945e02,
        1.752291e02,
        1.675186e02,
        1.630561e02,
        1.541759e02,
        1.466567e02,
        1.395042e02,
        1.327005e02,
        1.262286e02,
        1.205536e02,
        1.175771e02,
        1.165237e02,
        1.154797e02,
        1.128539e02,
        1.102879e02,
        1.056461e02,
        1.030376e02,
        1.021145e02,
        1.016052e02,
        1.010984e02,
        1.005942e02,
        9.732874e01,
        9.332559e01,
        8.877405e01,
        8.393934e01,
        7.936793e01,
        7.633216e01,
        7.355948e01,
        7.188692e01,
        6.906820e01,
        6.682614e01,
        6.649285e01,
        6.616121e01,
        6.583123e01,
        6.550290e01,
        6.504598e01,
        6.459225e01,
        6.363059e01,
        6.230828e01,
        5.992503e01,
        5.705949e01,
        5.405999e01,
        5.298953e01,
        5.178468e01,
        4.925911e01,
        4.751732e01,
        4.620529e01,
        4.529037e01,
        4.417214e01,
        4.312463e01,
        4.214409e01,
        4.122704e01,
        3.972951e01,
        3.878736e01,
        3.779188e01,
        3.730377e01,
        3.685880e01,
        3.641914e01,
        3.605676e01,
        3.569799e01,
        3.453918e01,
        3.308547e01,
        3.169295e01,
        2.788515e01,
        2.465783e01,
        2.253556e01,
        2.237836e01,
        2.215569e01,
        2.200114e01,
        2.170178e01,
        2.148585e01,
        2.133597e01,
        2.122956e01,
        2.114481e01,
        2.106040e01,
        2.097632e01,
        2.076761e01,
        2.068470e01,
        2.060213e01,
        2.051988e01,
        2.041754e01,
        2.027512e01,
        2.007338e01,
        1.959735e01,
        1.939265e01,
        1.919969e01,
        1.908484e01,
        1.795905e01,
        1.775903e01,
        1.756476e01,
        1.744572e01,
        1.683053e01,
        1.655014e01,
        1.604977e01,
        1.577923e01,
        1.486626e01,
        1.473012e01,
        1.459522e01,
        1.447024e01,
        1.425053e01,
        1.404961e01,
        1.354604e01,
        1.332970e01,
        1.259997e01,
        1.247210e01,
        1.230855e01,
        1.213015e01,
        1.197947e01,
        1.181529e01,
        1.170943e01,
        1.158944e01,
        1.126944e01,
        1.105292e01,
        1.080376e01,
        1.057925e01,
        9.500024e00,
        9.140311e00,
        8.979950e00,
        8.800375e00,
        8.673690e00,
        8.524074e00,
        8.300322e00,
        8.130272e00,
        7.970079e00,
        7.839651e00,
        7.739943e00,
        7.600350e00,
        7.380153e00,
        7.139869e00,
        6.994292e00,
        6.917776e00,
        6.870208e00,
        6.835259e00,
        6.810696e00,
        6.791653e00,
        6.776050e00,
        6.759807e00,
        6.742254e00,
        6.716683e00,
        6.631257e00,
        6.606106e00,
        6.588293e00,
        6.571843e00,
        6.556090e00,
        6.539066e00,
        6.514916e00,
        6.481775e00,
        6.432057e00,
        6.359784e00,
        6.280153e00,
        6.160108e00,
        6.059906e00,
        5.960142e00,
        5.800211e00,
        5.720146e00,
        5.619790e00,
        5.530036e00,
        5.488167e00,
        5.410245e00,
        5.380032e00,
        5.320112e00,
        5.210076e00,
        5.109974e00,
        4.933232e00,
        4.767845e00,
        4.419800e00,
        4.309812e00,
        4.219828e00,
        4.000000e00,
        3.882170e00,
        3.712087e00,
        3.543073e00,
        3.142109e00,
        2.884047e00,
        2.775121e00,
        2.740922e00,
        2.719898e00,
        2.700115e00,
        2.640041e00,
        2.620053e00,
        2.590094e00,
        2.550003e00,
        2.469941e00,
        2.330061e00,
        2.272986e00,
        2.217087e00,
        2.156948e00,
        2.070095e00,
        1.989920e00,
        1.900077e00,
        1.779966e00,
        1.668949e00,
        1.588030e00,
        1.519976e00,
        1.443967e00,
        1.410007e00,
        1.380981e00,
        1.330952e00,
        1.293038e00,
        1.250939e00,
        1.213968e00,
        1.169989e00,
        1.147969e00,
        1.129974e00,
        1.116049e00,
        1.103950e00,
        1.091982e00,
        1.077986e00,
        1.034993e00,
        1.021012e00,
        1.009035e00,
        9.965005e-01,
        9.819591e-01,
        9.639598e-01,
        9.440222e-01,
        9.199779e-01,
        8.800244e-01,
        8.200371e-01,
        7.199989e-01,
        6.249987e-01,
        5.949930e-01,
        5.549897e-01,
        5.200108e-01,
        4.750165e-01,
        4.315786e-01,
        3.900011e-01,
        3.529935e-01,
        3.250079e-01,
        3.050115e-01,
        2.799888e-01,
        2.549965e-01,
        2.311923e-01,
        2.096102e-01,
        1.900049e-01,
        1.618953e-01,
        1.379994e-01,
        1.199949e-01,
        1.042977e-01,
        8.979683e-02,
        7.649686e-02,
        6.519936e-02,
        5.549815e-02,
        4.730186e-02,
        4.029993e-02,
        3.439976e-02,
        2.929889e-02,
        2.493942e-02,
        2.001035e-02,
        1.482996e-02,
        1.045050e-02,
        7.145263e-03,
        4.556021e-03,
        2.499897e-03,
        1.100027e-04,
    ]
)


def array_is_reverse_sorted(a):
    return np.all(a[:-1] > a[1:])


def generate_condensation_scheme(fine_egrid, coarse_egrid):
    # Make sure the provided grids are reverse sorted
    if array_is_reverse_sorted(fine_egrid) == False:
        raise ValueError("The fine energy grid is not reverse sorted.")
    if array_is_reverse_sorted(coarse_egrid) == False:
        raise ValueError("The coarse energy grid is not reverse sorted.")

    # First, modify the fine grid to align exactly with the coarse_egrid
    fine_egrid = fine_egrid.copy()
    fine_egrid[0] = coarse_egrid[0]
    fine_egrid[-1] = coarse_egrid[-1]

    if array_is_reverse_sorted(fine_egrid) == False:
        raise RuntimeError("Endpoints of grids cannot be aligned.")

    for G in range(1, coarse_egrid.size - 1):
        EG = coarse_egrid[G]

        # Find closes energy in the micro group
        for g in range(1, fine_egrid.size - 1):
            if fine_egrid[g] == EG:
                break
            elif fine_egrid[g] > EG and EG > fine_egrid[g + 1]:
                # Check which is closer
                if fine_egrid[g] - EG < EG - fine_egrid[g + 1]:
                    fine_egrid[g] = EG
                    break
                else:
                    fine_egrid[g + 1] = EG
                    break

    # At this point, the fine_grid copy exactly aligns with the coarse grid.
    # We can now make the condensation scheme.
    cond_scheme = []
    for G in range(coarse_egrid.size - 1):
        EG_hi = coarse_egrid[G]
        EG_low = coarse_egrid[G + 1]

        g_low = None
        g_hi = None

        for g in range(fine_egrid.size - 1):
            Eg_hi = fine_egrid[g]
            Eg_low = fine_egrid[g + 1]

            if Eg_hi == EG_hi:
                g_low = g

            if Eg_low == EG_low:
                g_hi = g

            if g_hi is not None and g_low is not None:
                break

        if g_hi is None and g_low is None:
            raise RuntimeError("g_hi or g_low is None !")

        cond_scheme.append([g_low, g_hi])

    return cond_scheme


print(generate_condensation_scheme(wims69, casmo16))
print(generate_condensation_scheme(scarabee125, casmo16))
print(generate_condensation_scheme(scarabee213, casmo16))
print(generate_condensation_scheme(apollo99, casmo16))
print(generate_condensation_scheme(xmas172, casmo16))
print(generate_condensation_scheme(shem281, casmo16))
print(generate_condensation_scheme(shem361, casmo16))
