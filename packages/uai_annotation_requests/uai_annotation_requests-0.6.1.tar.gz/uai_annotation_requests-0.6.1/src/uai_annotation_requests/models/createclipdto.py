"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
import pydantic
from typing import Any, Dict, Optional
from typing_extensions import Annotated, NotRequired, TypedDict
from uai_annotation_requests.types import BaseModel


class CreateClipDTOTypedDict(TypedDict):
    r"""A clip to annotate"""

    clip_reference_id: str
    r"""A reference to
    data in the client system.

    The value of this field must
    be unique per project.
    """
    parameters: NotRequired[Dict[str, Any]]
    r"""Optional parameters of the clip,
    for example dataURL.

    Additional information to
    be used by UAI backend systems
    for integration specific
    requirements can be provided
    as additional properties
    """
    display_name: NotRequired[str]
    r"""An optional display name
    to show in UAI tooling
    """


class CreateClipDTO(BaseModel):
    r"""A clip to annotate"""

    clip_reference_id: Annotated[str, pydantic.Field(alias="clipReferenceId")]
    r"""A reference to
    data in the client system.

    The value of this field must
    be unique per project.
    """

    parameters: Optional[Dict[str, Any]] = None
    r"""Optional parameters of the clip,
    for example dataURL.

    Additional information to
    be used by UAI backend systems
    for integration specific
    requirements can be provided
    as additional properties
    """

    display_name: Annotated[Optional[str], pydantic.Field(alias="displayName")] = None
    r"""An optional display name
    to show in UAI tooling
    """
