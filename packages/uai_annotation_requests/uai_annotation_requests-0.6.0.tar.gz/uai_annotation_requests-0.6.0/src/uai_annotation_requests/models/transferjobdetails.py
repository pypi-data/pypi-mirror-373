"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from enum import Enum
import pydantic
from typing import Dict
from typing_extensions import Annotated, TypedDict
from uai_annotation_requests.types import BaseModel


class Status(str, Enum):
    SUCCESS = "SUCCESS"
    ABORTED = "ABORTED"
    FAILED = "FAILED"


class TransferJobDetailsTypedDict(TypedDict):
    r"""Details about the transfer job
    that copied data into UAI storage.

    The counters object contains detailed
    information about objects found in source,
    objects copied, skipped and bytes transferred.
    """

    counters: Dict[str, str]
    r"""Construct a type with a set of properties K of type T"""
    end_time: str
    start_time: str
    status: Status


class TransferJobDetails(BaseModel):
    r"""Details about the transfer job
    that copied data into UAI storage.

    The counters object contains detailed
    information about objects found in source,
    objects copied, skipped and bytes transferred.
    """

    counters: Dict[str, str]
    r"""Construct a type with a set of properties K of type T"""

    end_time: Annotated[str, pydantic.Field(alias="endTime")]

    start_time: Annotated[str, pydantic.Field(alias="startTime")]

    status: Status
