"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .clipreferenceidselection import (
    ClipReferenceIDSelection,
    ClipReferenceIDSelectionTypedDict,
)
import pydantic
from typing_extensions import Annotated, TypedDict
from uai_annotation_requests.types import BaseModel
from uai_annotation_requests.utils import (
    FieldMetadata,
    PathParamMetadata,
    RequestMetadata,
)


class RestartAnnotationRequestRequestTypedDict(TypedDict):
    project_id: str
    r"""The ID of the project which is processing the annotation request. Provided by UAI."""
    annotation_request_id: str
    clip_reference_id_selection: ClipReferenceIDSelectionTypedDict
    r"""if only part of the annotation request should be restarted, provide the reference IDs of the clips to be restarted"""


class RestartAnnotationRequestRequest(BaseModel):
    project_id: Annotated[
        str,
        pydantic.Field(alias="projectId"),
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ]
    r"""The ID of the project which is processing the annotation request. Provided by UAI."""

    annotation_request_id: Annotated[
        str,
        pydantic.Field(alias="annotationRequestId"),
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ]

    clip_reference_id_selection: Annotated[
        ClipReferenceIDSelection,
        FieldMetadata(request=RequestMetadata(media_type="application/json")),
    ]
    r"""if only part of the annotation request should be restarted, provide the reference IDs of the clips to be restarted"""
