"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
import httpx
from typing import Optional
from uai_annotation_requests.models import UaiAnnotationRequestsError
from uai_annotation_requests.types import BaseModel


class AnnotationRequestNotFoundDTOData(BaseModel):
    message: str


class AnnotationRequestNotFoundDTO(UaiAnnotationRequestsError):
    r"""A message providing details that the annotation
    request was not found.
    """

    data: AnnotationRequestNotFoundDTOData

    def __init__(
        self,
        data: AnnotationRequestNotFoundDTOData,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        fallback = body or raw_response.text
        message = str(data.message) or fallback
        super().__init__(message, raw_response, body)
        self.data = data
