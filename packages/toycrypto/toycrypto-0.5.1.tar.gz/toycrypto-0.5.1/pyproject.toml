[build-system]
requires = ["hatchling >= 1.26.3"]
build-backend = "hatchling.build"

[project]
name = "toycrypto"
dynamic = ["version"]
description = 'Modules that can be used to illustrate and explore cryptographic concepts. This should never be used for security purposes.'
readme = "README.md"
requires-python = ">=3.12"
license = "MIT"
keywords = []
authors = [
  { name = "Jeffrey Goldberg", email = "jeffrey@goldmark.org" },
]
classifiers = [
  "Development Status :: 3 - Alpha",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
  "Intended Audience :: Developers",
  "Intended Audience :: Education",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Topic :: Scientific/Engineering :: Mathematics",
  "Topic :: Security :: Cryptography",
  "Typing :: Typed",
]
dependencies = [
  "jsonref>=1.1.0",
  "jsonschema>=4.25.0",
  "primefac >= 2.0.12",
  "referencing>=0.36.2",
]

[project.optional-dependencies]
c-deps = [
  "bitarray",
]

[project.urls]
Documentation = "https://jpgoldberg.github.io/toy-crypto-math/"
Issues = "https://github.com/jpgoldberg/toy-crypto-math/issues"
Source = "https://github.com/jpgoldberg/toy-crypto-math"
Changelog = "https://github.com/jpgoldberg/toy-crypto-math/blob/main/CHANGELOG.md"

[tool.hatch.version]
path = "src/toy_crypto/__about__.py"

[tool.hatch.build.targets.wheel]
packages = ["src/toy_crypto"]


[tool.hatch.envs.default]
dependencies = [
  "coverage[toml]>=7.5",
  "pytest",
  "ruff",
  "mypy>=1.12",
  "types-docutiles",
]

[tool.hatch.envs.test]
dependencies = [
  "coverage[toml]>=7.5",
  "pytest",
  "ruff",
  "mypy>=1.12",
]

[[tool.hatch.envs.test.matrix]]
python = ["3.12", "3.13"]

[tool.hatch.envs.test.scripts]
types = "mypy --install-types --non-interactive {args:src/toy_crypto tests}"
test = "pytest {args:tests}"
test-cov = "coverage run -m pytest {args:tests}"
cov-report = [
  "- coverage combine",
  "coverage report",
]
cov = [
  "test-cov",
  "cov-report",
]
lint = "ruff check {args:src/toy_crypto tests}"

[tool.coverage.run]
source_pkgs = ["toy_crypto", "tests"]
branch = true
parallel = true
omit = [
  "src/toy_crypto/__about__.py",
]

[tool.coverage.paths]
toy_crypto = ["src/toy_crypto", "*/toy-crypto-math/src/toy_crypto"]
tests = ["tests", "*/toy-crypto-math/tests"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]

[tool.pytest.ini_options]
testpaths = [ "tests" ]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "statistical: marks tests of a statistical nature (deselect with '-m \"not statistical\"')",
]

[dependency-groups]
dev = [
    "pytest >= 8.3",
    "bitarray>=3.4.2",
    "jsonschema>=4.25.0",
    "types-jsonschema>=4.25.0.20250809",
    "pytest-subtests>=0.14.2",
]
lint = [
    "mypy >= 1.15",
    "ruff >= 0.11.13",
    "types-docutils>=0.21.0.20241128",
    "types-seaborn>=0.13.2.20250111",
    "vermin>=1.6.0",
    "polars>=1.30",
    "sphinx>=8.2.3",
]
docs = [
    "enum-tools[sphinx]>=0.13.0",
    "sphinx_autodoc_typehints",
    "sphinx-toolbox>=3.10.0",
    "sphinxcontrib-bibtex>=2.6.4",
    "sphinx-reredirects>=1.0.0",
    "pydata-sphinx-theme>=0.16.1",
    "sphinx-prompt>=1.10.0",
    "pycryptodome>=3.23.0",
]
prof = [
    "matplotlib>=3.10.1",
    "polars>=1.30",
    "seaborn>=0.13.2",
]
