
name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read

jobs:
  node:
    name: Node CI
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Detect package.json
        id: detect
        run: |
          if [ -f package.json ]; then echo "has_node=true" >> $GITHUB_OUTPUT; else echo "has_node=false" >> $GITHUB_OUTPUT; fi
      - name: Setup Node
        if: steps.detect.outputs.has_node == true
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: npm
      - name: Install deps
        if: steps.detect.outputs.has_node == true
        run: npm ci --ignore-scripts
      - name: Format & Lint
        if: steps.detect.outputs.has_node == true
        run: |
          (npm run -s fmt || npx --yes prettier -c .) || true
          (npm run -s lint || npx --yes eslint .)
      - name: Type Check
        if: steps.detect.outputs.has_node == true && hashFiles(tsconfig.json) != 
        run: (npm run -s typecheck || npx --yes tsc -p . --noEmit)
      - name: Test
        if: steps.detect.outputs.has_node == true
        run: |
          npm test --silent || npm run -s test
      - name: Audit (non-blocking)
        if: steps.detect.outputs.has_node == true
        run: npm audit --audit-level=high || true

  python:
    name: Python CI
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Detect Python project
        id: detect
        run: |
          if [ -f requirements.txt ] || [ -f pyproject.toml ]; then echo "has_py=true" >> $GITHUB_OUTPUT; else echo "has_py=false" >> $GITHUB_OUTPUT; fi
      - name: Setup Python
        if: steps.detect.outputs.has_py == true
        uses: actions/setup-python@v5
        with:
          python-version: 3.11
          cache: pip
      - name: Install deps
        if: steps.detect.outputs.has_py == true
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install ruff pytest mypy pip-audit
      - name: Format & Lint
        if: steps.detect.outputs.has_py == true
        run: |
          ruff format --check . || true
          ruff check .
      - name: Type Check
        if: steps.detect.outputs.has_py == true
        run: mypy . || true
      - name: Test
        if: steps.detect.outputs.has_py == true
        run: pytest -q
      - name: Audit (non-blocking)
        if: steps.detect.outputs.has_py == true
        run: pip-audit || true

  gates:
    name: Quality Gates
    runs-on: ubuntu-latest
    needs: [node, python]
    steps:
      - name: All language jobs completed
        run: echo "Downstream jobs succeeded"
