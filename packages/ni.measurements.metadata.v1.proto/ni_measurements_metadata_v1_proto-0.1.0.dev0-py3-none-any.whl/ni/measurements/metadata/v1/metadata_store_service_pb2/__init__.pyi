"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import ni.measurements.metadata.v1.metadata_store_pb2
import typing

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class GetDutRequest(google.protobuf.message.Message):
    """Message sent to get the device under test associated with the given identifier."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    id: builtins.str
    """Required. The identifier of the desired device under test."""
    def __init__(
        self,
        *,
        id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["id", b"id"]) -> None: ...

global___GetDutRequest = GetDutRequest

@typing.final
class GetDutResponse(google.protobuf.message.Message):
    """Message returned when getting a device under test associated with the given identifier."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DUT_FIELD_NUMBER: builtins.int
    @property
    def dut(self) -> ni.measurements.metadata.v1.metadata_store_pb2.DUTMetadata:
        """The metadata of the requested device under test."""

    def __init__(
        self,
        *,
        dut: ni.measurements.metadata.v1.metadata_store_pb2.DUTMetadata | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["dut", b"dut"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["dut", b"dut"]) -> None: ...

global___GetDutResponse = GetDutResponse

@typing.final
class QueryDutsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ODATA_QUERY_FIELD_NUMBER: builtins.int
    odata_query: builtins.str
    """an OData query string.  example "$filter=name eq 'Value'"
    $expand is not supported
    """
    def __init__(
        self,
        *,
        odata_query: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["odata_query", b"odata_query"]) -> None: ...

global___QueryDutsRequest = QueryDutsRequest

@typing.final
class QueryDutsResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DUTS_FIELD_NUMBER: builtins.int
    @property
    def duts(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[ni.measurements.metadata.v1.metadata_store_pb2.DUTMetadata]: ...
    def __init__(
        self,
        *,
        duts: collections.abc.Iterable[ni.measurements.metadata.v1.metadata_store_pb2.DUTMetadata] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["duts", b"duts"]) -> None: ...

global___QueryDutsResponse = QueryDutsResponse

@typing.final
class CreateDutRequest(google.protobuf.message.Message):
    """Message sent to create a new device under test in the metadata store."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DUT_FIELD_NUMBER: builtins.int
    @property
    def dut(self) -> ni.measurements.metadata.v1.metadata_store_pb2.DUTMetadata:
        """Required. The metadata of the device under test to be created."""

    def __init__(
        self,
        *,
        dut: ni.measurements.metadata.v1.metadata_store_pb2.DUTMetadata | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["dut", b"dut"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["dut", b"dut"]) -> None: ...

global___CreateDutRequest = CreateDutRequest

@typing.final
class CreateDutResponse(google.protobuf.message.Message):
    """Message returned when creating a new device under test in the metadata store."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    id: builtins.str
    """The identifier of the created device under test."""
    def __init__(
        self,
        *,
        id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["id", b"id"]) -> None: ...

global___CreateDutResponse = CreateDutResponse

@typing.final
class GetProductRequest(google.protobuf.message.Message):
    """Message sent to get the product associated with the given identifier."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    id: builtins.str
    """Required. The identifier of the desired product."""
    def __init__(
        self,
        *,
        id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["id", b"id"]) -> None: ...

global___GetProductRequest = GetProductRequest

@typing.final
class GetProductResponse(google.protobuf.message.Message):
    """Message returned when getting a product associated with the given identifier."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PRODUCT_FIELD_NUMBER: builtins.int
    @property
    def product(self) -> ni.measurements.metadata.v1.metadata_store_pb2.ProductMetadata:
        """The metadata of the requested product."""

    def __init__(
        self,
        *,
        product: ni.measurements.metadata.v1.metadata_store_pb2.ProductMetadata | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["product", b"product"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["product", b"product"]) -> None: ...

global___GetProductResponse = GetProductResponse

@typing.final
class QueryProductsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ODATA_QUERY_FIELD_NUMBER: builtins.int
    odata_query: builtins.str
    """an OData query string.  example "$filter=name eq 'Value'"
    $expand is not supported
    """
    def __init__(
        self,
        *,
        odata_query: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["odata_query", b"odata_query"]) -> None: ...

global___QueryProductsRequest = QueryProductsRequest

@typing.final
class QueryProductsResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PRODUCTS_FIELD_NUMBER: builtins.int
    @property
    def products(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[ni.measurements.metadata.v1.metadata_store_pb2.ProductMetadata]: ...
    def __init__(
        self,
        *,
        products: collections.abc.Iterable[ni.measurements.metadata.v1.metadata_store_pb2.ProductMetadata] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["products", b"products"]) -> None: ...

global___QueryProductsResponse = QueryProductsResponse

@typing.final
class CreateProductRequest(google.protobuf.message.Message):
    """Message sent to create a new product in the metadata store."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PRODUCT_FIELD_NUMBER: builtins.int
    @property
    def product(self) -> ni.measurements.metadata.v1.metadata_store_pb2.ProductMetadata:
        """Required. The metadata of the product to be created."""

    def __init__(
        self,
        *,
        product: ni.measurements.metadata.v1.metadata_store_pb2.ProductMetadata | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["product", b"product"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["product", b"product"]) -> None: ...

global___CreateProductRequest = CreateProductRequest

@typing.final
class CreateProductResponse(google.protobuf.message.Message):
    """Message returned when creating a new product in the metadata store."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    id: builtins.str
    """The identifier of the created product."""
    def __init__(
        self,
        *,
        id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["id", b"id"]) -> None: ...

global___CreateProductResponse = CreateProductResponse

@typing.final
class GetOperatorRequest(google.protobuf.message.Message):
    """Message sent to get the operator associated with the given identifier."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    id: builtins.str
    """Required. The identifier of the desired operator."""
    def __init__(
        self,
        *,
        id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["id", b"id"]) -> None: ...

global___GetOperatorRequest = GetOperatorRequest

@typing.final
class GetOperatorResponse(google.protobuf.message.Message):
    """Message returned when getting an operator associated with the given identifier."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    OPERATOR_FIELD_NUMBER: builtins.int
    @property
    def operator(self) -> ni.measurements.metadata.v1.metadata_store_pb2.OperatorMetadata:
        """The metadata of the requested operator."""

    def __init__(
        self,
        *,
        operator: ni.measurements.metadata.v1.metadata_store_pb2.OperatorMetadata | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["operator", b"operator"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["operator", b"operator"]) -> None: ...

global___GetOperatorResponse = GetOperatorResponse

@typing.final
class QueryOperatorsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ODATA_QUERY_FIELD_NUMBER: builtins.int
    odata_query: builtins.str
    """an OData query string.  example "$filter=name eq 'Value'"
    $expand is not supported
    """
    def __init__(
        self,
        *,
        odata_query: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["odata_query", b"odata_query"]) -> None: ...

global___QueryOperatorsRequest = QueryOperatorsRequest

@typing.final
class QueryOperatorsResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    OPERATORS_FIELD_NUMBER: builtins.int
    @property
    def operators(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[ni.measurements.metadata.v1.metadata_store_pb2.OperatorMetadata]: ...
    def __init__(
        self,
        *,
        operators: collections.abc.Iterable[ni.measurements.metadata.v1.metadata_store_pb2.OperatorMetadata] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["operators", b"operators"]) -> None: ...

global___QueryOperatorsResponse = QueryOperatorsResponse

@typing.final
class CreateOperatorRequest(google.protobuf.message.Message):
    """Message sent to create a new operator in the metadata store."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    OPERATOR_FIELD_NUMBER: builtins.int
    @property
    def operator(self) -> ni.measurements.metadata.v1.metadata_store_pb2.OperatorMetadata:
        """Required. The metadata of the operator to be created."""

    def __init__(
        self,
        *,
        operator: ni.measurements.metadata.v1.metadata_store_pb2.OperatorMetadata | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["operator", b"operator"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["operator", b"operator"]) -> None: ...

global___CreateOperatorRequest = CreateOperatorRequest

@typing.final
class CreateOperatorResponse(google.protobuf.message.Message):
    """Message returned when creating a new operator in the metadata store."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    id: builtins.str
    """The identifier of the created operator."""
    def __init__(
        self,
        *,
        id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["id", b"id"]) -> None: ...

global___CreateOperatorResponse = CreateOperatorResponse

@typing.final
class GetTestPlanRequest(google.protobuf.message.Message):
    """Message sent to get the test plan associated with the given identifier."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    id: builtins.str
    """Required. The identifier of the desired test plan."""
    def __init__(
        self,
        *,
        id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["id", b"id"]) -> None: ...

global___GetTestPlanRequest = GetTestPlanRequest

@typing.final
class GetTestPlanResponse(google.protobuf.message.Message):
    """Message returned when getting a test plan associated with the given identifier."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TEST_PLAN_FIELD_NUMBER: builtins.int
    @property
    def test_plan(self) -> ni.measurements.metadata.v1.metadata_store_pb2.TestPlanMetadata:
        """The metadata of the requested test plan."""

    def __init__(
        self,
        *,
        test_plan: ni.measurements.metadata.v1.metadata_store_pb2.TestPlanMetadata | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["test_plan", b"test_plan"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["test_plan", b"test_plan"]) -> None: ...

global___GetTestPlanResponse = GetTestPlanResponse

@typing.final
class QueryTestPlansRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ODATA_QUERY_FIELD_NUMBER: builtins.int
    odata_query: builtins.str
    """an OData query string.  example "$filter=name eq 'Value'"
    $expand is not supported
    """
    def __init__(
        self,
        *,
        odata_query: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["odata_query", b"odata_query"]) -> None: ...

global___QueryTestPlansRequest = QueryTestPlansRequest

@typing.final
class QueryTestPlansResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TEST_PLANS_FIELD_NUMBER: builtins.int
    @property
    def test_plans(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[ni.measurements.metadata.v1.metadata_store_pb2.TestPlanMetadata]: ...
    def __init__(
        self,
        *,
        test_plans: collections.abc.Iterable[ni.measurements.metadata.v1.metadata_store_pb2.TestPlanMetadata] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["test_plans", b"test_plans"]) -> None: ...

global___QueryTestPlansResponse = QueryTestPlansResponse

@typing.final
class CreateTestPlanRequest(google.protobuf.message.Message):
    """Message sent to create a new test plan in the metadata store."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TEST_PLAN_FIELD_NUMBER: builtins.int
    @property
    def test_plan(self) -> ni.measurements.metadata.v1.metadata_store_pb2.TestPlanMetadata:
        """Required. The metadata of the test plan to be created."""

    def __init__(
        self,
        *,
        test_plan: ni.measurements.metadata.v1.metadata_store_pb2.TestPlanMetadata | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["test_plan", b"test_plan"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["test_plan", b"test_plan"]) -> None: ...

global___CreateTestPlanRequest = CreateTestPlanRequest

@typing.final
class CreateTestPlanResponse(google.protobuf.message.Message):
    """Message returned when creating a new test plan in the metadata store."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    id: builtins.str
    """The identifier of the created test plan."""
    def __init__(
        self,
        *,
        id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["id", b"id"]) -> None: ...

global___CreateTestPlanResponse = CreateTestPlanResponse

@typing.final
class GetTestRequest(google.protobuf.message.Message):
    """Message sent to get the test associated with the given identifier."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    id: builtins.str
    """Required. The identifier of the desired test."""
    def __init__(
        self,
        *,
        id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["id", b"id"]) -> None: ...

global___GetTestRequest = GetTestRequest

@typing.final
class GetTestResponse(google.protobuf.message.Message):
    """Message returned when getting a test associated with the given identifier."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TEST_FIELD_NUMBER: builtins.int
    @property
    def test(self) -> ni.measurements.metadata.v1.metadata_store_pb2.TestMetadata:
        """The metadata of the requested test."""

    def __init__(
        self,
        *,
        test: ni.measurements.metadata.v1.metadata_store_pb2.TestMetadata | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["test", b"test"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["test", b"test"]) -> None: ...

global___GetTestResponse = GetTestResponse

@typing.final
class QueryTestsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ODATA_QUERY_FIELD_NUMBER: builtins.int
    odata_query: builtins.str
    """an OData query string.  example "$filter=name eq 'Value'"
    $expand is not supported
    """
    def __init__(
        self,
        *,
        odata_query: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["odata_query", b"odata_query"]) -> None: ...

global___QueryTestsRequest = QueryTestsRequest

@typing.final
class QueryTestsResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TESTS_FIELD_NUMBER: builtins.int
    @property
    def tests(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[ni.measurements.metadata.v1.metadata_store_pb2.TestMetadata]: ...
    def __init__(
        self,
        *,
        tests: collections.abc.Iterable[ni.measurements.metadata.v1.metadata_store_pb2.TestMetadata] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["tests", b"tests"]) -> None: ...

global___QueryTestsResponse = QueryTestsResponse

@typing.final
class CreateTestRequest(google.protobuf.message.Message):
    """Message sent to create a new test in the metadata store."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TEST_FIELD_NUMBER: builtins.int
    @property
    def test(self) -> ni.measurements.metadata.v1.metadata_store_pb2.TestMetadata:
        """Required. The metadata of the test to be created."""

    def __init__(
        self,
        *,
        test: ni.measurements.metadata.v1.metadata_store_pb2.TestMetadata | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["test", b"test"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["test", b"test"]) -> None: ...

global___CreateTestRequest = CreateTestRequest

@typing.final
class CreateTestResponse(google.protobuf.message.Message):
    """Message returned when creating a new test in the metadata store."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    id: builtins.str
    """The identifier of the created test."""
    def __init__(
        self,
        *,
        id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["id", b"id"]) -> None: ...

global___CreateTestResponse = CreateTestResponse

@typing.final
class GetTestStationRequest(google.protobuf.message.Message):
    """Message sent to get the test station associated with the given identifier."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    id: builtins.str
    """Required. The identifier of the desired test station."""
    def __init__(
        self,
        *,
        id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["id", b"id"]) -> None: ...

global___GetTestStationRequest = GetTestStationRequest

@typing.final
class GetTestStationResponse(google.protobuf.message.Message):
    """Message returned when getting a test station associated with the given identifier."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TEST_STATION_FIELD_NUMBER: builtins.int
    @property
    def test_station(self) -> ni.measurements.metadata.v1.metadata_store_pb2.TestStationMetadata:
        """The metadata of the requested test station."""

    def __init__(
        self,
        *,
        test_station: ni.measurements.metadata.v1.metadata_store_pb2.TestStationMetadata | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["test_station", b"test_station"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["test_station", b"test_station"]) -> None: ...

global___GetTestStationResponse = GetTestStationResponse

@typing.final
class QueryTestStationsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ODATA_QUERY_FIELD_NUMBER: builtins.int
    odata_query: builtins.str
    """an OData query string.  example "$filter=name eq 'Value'"
    $expand is not supported
    """
    def __init__(
        self,
        *,
        odata_query: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["odata_query", b"odata_query"]) -> None: ...

global___QueryTestStationsRequest = QueryTestStationsRequest

@typing.final
class QueryTestStationsResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TEST_STATIONS_FIELD_NUMBER: builtins.int
    @property
    def test_stations(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[ni.measurements.metadata.v1.metadata_store_pb2.TestStationMetadata]: ...
    def __init__(
        self,
        *,
        test_stations: collections.abc.Iterable[ni.measurements.metadata.v1.metadata_store_pb2.TestStationMetadata] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["test_stations", b"test_stations"]) -> None: ...

global___QueryTestStationsResponse = QueryTestStationsResponse

@typing.final
class CreateTestStationRequest(google.protobuf.message.Message):
    """Message sent to create a new test station in the metadata store."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TEST_STATION_FIELD_NUMBER: builtins.int
    @property
    def test_station(self) -> ni.measurements.metadata.v1.metadata_store_pb2.TestStationMetadata:
        """Required. The metadata of the test station to be created."""

    def __init__(
        self,
        *,
        test_station: ni.measurements.metadata.v1.metadata_store_pb2.TestStationMetadata | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["test_station", b"test_station"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["test_station", b"test_station"]) -> None: ...

global___CreateTestStationRequest = CreateTestStationRequest

@typing.final
class CreateTestStationResponse(google.protobuf.message.Message):
    """Message returned when creating a new test station in the metadata store."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    id: builtins.str
    """The identifier of the created test station."""
    def __init__(
        self,
        *,
        id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["id", b"id"]) -> None: ...

global___CreateTestStationResponse = CreateTestStationResponse

@typing.final
class GetHardwareRequest(google.protobuf.message.Message):
    """Message sent to get the hardware associated with the given identifier."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    id: builtins.str
    """Required. The identifier of the desired hardware."""
    def __init__(
        self,
        *,
        id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["id", b"id"]) -> None: ...

global___GetHardwareRequest = GetHardwareRequest

@typing.final
class GetHardwareResponse(google.protobuf.message.Message):
    """Message returned when getting the hardware associated with the given identifier."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    HARDWARE_FIELD_NUMBER: builtins.int
    @property
    def hardware(self) -> ni.measurements.metadata.v1.metadata_store_pb2.HardwareMetadata:
        """The metadata of the requested hardware."""

    def __init__(
        self,
        *,
        hardware: ni.measurements.metadata.v1.metadata_store_pb2.HardwareMetadata | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["hardware", b"hardware"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["hardware", b"hardware"]) -> None: ...

global___GetHardwareResponse = GetHardwareResponse

@typing.final
class QueryHardwareRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ODATA_QUERY_FIELD_NUMBER: builtins.int
    odata_query: builtins.str
    """an OData query string.  example "$filter=name eq 'Value'"
    $expand is not supported
    """
    def __init__(
        self,
        *,
        odata_query: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["odata_query", b"odata_query"]) -> None: ...

global___QueryHardwareRequest = QueryHardwareRequest

@typing.final
class QueryHardwareResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    HARDWARE_FIELD_NUMBER: builtins.int
    @property
    def hardware(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[ni.measurements.metadata.v1.metadata_store_pb2.HardwareMetadata]: ...
    def __init__(
        self,
        *,
        hardware: collections.abc.Iterable[ni.measurements.metadata.v1.metadata_store_pb2.HardwareMetadata] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["hardware", b"hardware"]) -> None: ...

global___QueryHardwareResponse = QueryHardwareResponse

@typing.final
class CreateHardwareRequest(google.protobuf.message.Message):
    """Message sent to create new hardware in the metadata store."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    HARDWARE_FIELD_NUMBER: builtins.int
    @property
    def hardware(self) -> ni.measurements.metadata.v1.metadata_store_pb2.HardwareMetadata:
        """Required. The metadata of the hardware to be created."""

    def __init__(
        self,
        *,
        hardware: ni.measurements.metadata.v1.metadata_store_pb2.HardwareMetadata | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["hardware", b"hardware"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["hardware", b"hardware"]) -> None: ...

global___CreateHardwareRequest = CreateHardwareRequest

@typing.final
class CreateHardwareResponse(google.protobuf.message.Message):
    """Message returned when creating new hardware in the metadata store."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    id: builtins.str
    """The identifier of the created hardware."""
    def __init__(
        self,
        *,
        id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["id", b"id"]) -> None: ...

global___CreateHardwareResponse = CreateHardwareResponse

@typing.final
class GetSoftwareRequest(google.protobuf.message.Message):
    """Message sent to get the software associated with the given identifier."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    id: builtins.str
    """Required. The identifier of the desired software."""
    def __init__(
        self,
        *,
        id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["id", b"id"]) -> None: ...

global___GetSoftwareRequest = GetSoftwareRequest

@typing.final
class GetSoftwareResponse(google.protobuf.message.Message):
    """Message returned when getting the software associated with the given identifier."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SOFTWARE_FIELD_NUMBER: builtins.int
    @property
    def software(self) -> ni.measurements.metadata.v1.metadata_store_pb2.SoftwareMetadata:
        """The metadata of the requested software."""

    def __init__(
        self,
        *,
        software: ni.measurements.metadata.v1.metadata_store_pb2.SoftwareMetadata | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["software", b"software"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["software", b"software"]) -> None: ...

global___GetSoftwareResponse = GetSoftwareResponse

@typing.final
class QuerySoftwareRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ODATA_QUERY_FIELD_NUMBER: builtins.int
    odata_query: builtins.str
    """an OData query string.  example "$filter=name eq 'Value'"
    $expand is not supported
    """
    def __init__(
        self,
        *,
        odata_query: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["odata_query", b"odata_query"]) -> None: ...

global___QuerySoftwareRequest = QuerySoftwareRequest

@typing.final
class QuerySoftwareResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SOFTWARE_FIELD_NUMBER: builtins.int
    @property
    def software(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[ni.measurements.metadata.v1.metadata_store_pb2.SoftwareMetadata]: ...
    def __init__(
        self,
        *,
        software: collections.abc.Iterable[ni.measurements.metadata.v1.metadata_store_pb2.SoftwareMetadata] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["software", b"software"]) -> None: ...

global___QuerySoftwareResponse = QuerySoftwareResponse

@typing.final
class CreateSoftwareRequest(google.protobuf.message.Message):
    """Message sent to create new software in the metadata store."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SOFTWARE_FIELD_NUMBER: builtins.int
    @property
    def software(self) -> ni.measurements.metadata.v1.metadata_store_pb2.SoftwareMetadata:
        """Required. The metadata of the software to be created."""

    def __init__(
        self,
        *,
        software: ni.measurements.metadata.v1.metadata_store_pb2.SoftwareMetadata | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["software", b"software"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["software", b"software"]) -> None: ...

global___CreateSoftwareRequest = CreateSoftwareRequest

@typing.final
class CreateSoftwareResponse(google.protobuf.message.Message):
    """Message returned when creating new software in the metadata store."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    id: builtins.str
    """The identifier of the created software."""
    def __init__(
        self,
        *,
        id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["id", b"id"]) -> None: ...

global___CreateSoftwareResponse = CreateSoftwareResponse

@typing.final
class RegisterMetadataSchemaRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SCHEMA_FIELD_NUMBER: builtins.int
    schema: builtins.str
    """The contents of the JSON or TOML schema. This should be a
    well-formed JSON or TOML schema.  Validation will be performed, and
    an error will be returned if the schema is not valid.
    """
    def __init__(
        self,
        *,
        schema: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["schema", b"schema"]) -> None: ...

global___RegisterMetadataSchemaRequest = RegisterMetadataSchemaRequest

@typing.final
class RegisterMetadataSchemaResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SCHEMA_ID_FIELD_NUMBER: builtins.int
    schema_id: builtins.str
    """The id of the schema"""
    def __init__(
        self,
        *,
        schema_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["schema_id", b"schema_id"]) -> None: ...

global___RegisterMetadataSchemaResponse = RegisterMetadataSchemaResponse

@typing.final
class EnumerateMetadataSchemasRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___EnumerateMetadataSchemasRequest = EnumerateMetadataSchemasRequest

@typing.final
class EnumerateMetadataSchemasResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SCHEMAS_FIELD_NUMBER: builtins.int
    @property
    def schemas(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[ni.measurements.metadata.v1.metadata_store_pb2.MetadataSchema]: ...
    def __init__(
        self,
        *,
        schemas: collections.abc.Iterable[ni.measurements.metadata.v1.metadata_store_pb2.MetadataSchema] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["schemas", b"schemas"]) -> None: ...

global___EnumerateMetadataSchemasResponse = EnumerateMetadataSchemasResponse

@typing.final
class ResolveAliasRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ALIAS_NAME_FIELD_NUMBER: builtins.int
    alias_name: builtins.str
    def __init__(
        self,
        *,
        alias_name: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["alias_name", b"alias_name"]) -> None: ...

global___ResolveAliasRequest = ResolveAliasRequest

@typing.final
class ResolveAliasResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ALIAS_FIELD_NUMBER: builtins.int
    @property
    def alias(self) -> ni.measurements.metadata.v1.metadata_store_pb2.Alias: ...
    def __init__(
        self,
        *,
        alias: ni.measurements.metadata.v1.metadata_store_pb2.Alias | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["alias", b"alias"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["alias", b"alias"]) -> None: ...

global___ResolveAliasResponse = ResolveAliasResponse

@typing.final
class QueryAliasesRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ODATA_QUERY_FIELD_NUMBER: builtins.int
    odata_query: builtins.str
    """an OData query string.  example "$filter=name eq 'Value'"
    $expand is not supported
    """
    def __init__(
        self,
        *,
        odata_query: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["odata_query", b"odata_query"]) -> None: ...

global___QueryAliasesRequest = QueryAliasesRequest

@typing.final
class QueryAliasesResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ALIASES_FIELD_NUMBER: builtins.int
    @property
    def aliases(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[ni.measurements.metadata.v1.metadata_store_pb2.Alias]: ...
    def __init__(
        self,
        *,
        aliases: collections.abc.Iterable[ni.measurements.metadata.v1.metadata_store_pb2.Alias] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["aliases", b"aliases"]) -> None: ...

global___QueryAliasesResponse = QueryAliasesResponse

@typing.final
class RegisterAliasRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ALIAS_NAME_FIELD_NUMBER: builtins.int
    DUT_FIELD_NUMBER: builtins.int
    PRODUCT_FIELD_NUMBER: builtins.int
    HARDWARE_FIELD_NUMBER: builtins.int
    SOFTWARE_FIELD_NUMBER: builtins.int
    OPERATOR_FIELD_NUMBER: builtins.int
    TEST_PLAN_FIELD_NUMBER: builtins.int
    TEST_FIELD_NUMBER: builtins.int
    TEST_STATION_FIELD_NUMBER: builtins.int
    alias_name: builtins.str
    """The alias name to register."""
    @property
    def dut(self) -> ni.measurements.metadata.v1.metadata_store_pb2.DUTMetadata: ...
    @property
    def product(self) -> ni.measurements.metadata.v1.metadata_store_pb2.ProductMetadata: ...
    @property
    def hardware(self) -> ni.measurements.metadata.v1.metadata_store_pb2.HardwareMetadata: ...
    @property
    def software(self) -> ni.measurements.metadata.v1.metadata_store_pb2.SoftwareMetadata: ...
    @property
    def operator(self) -> ni.measurements.metadata.v1.metadata_store_pb2.OperatorMetadata: ...
    @property
    def test_plan(self) -> ni.measurements.metadata.v1.metadata_store_pb2.TestPlanMetadata: ...
    @property
    def test(self) -> ni.measurements.metadata.v1.metadata_store_pb2.TestMetadata: ...
    @property
    def test_station(self) -> ni.measurements.metadata.v1.metadata_store_pb2.TestStationMetadata: ...
    def __init__(
        self,
        *,
        alias_name: builtins.str = ...,
        dut: ni.measurements.metadata.v1.metadata_store_pb2.DUTMetadata | None = ...,
        product: ni.measurements.metadata.v1.metadata_store_pb2.ProductMetadata | None = ...,
        hardware: ni.measurements.metadata.v1.metadata_store_pb2.HardwareMetadata | None = ...,
        software: ni.measurements.metadata.v1.metadata_store_pb2.SoftwareMetadata | None = ...,
        operator: ni.measurements.metadata.v1.metadata_store_pb2.OperatorMetadata | None = ...,
        test_plan: ni.measurements.metadata.v1.metadata_store_pb2.TestPlanMetadata | None = ...,
        test: ni.measurements.metadata.v1.metadata_store_pb2.TestMetadata | None = ...,
        test_station: ni.measurements.metadata.v1.metadata_store_pb2.TestStationMetadata | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["alias_target", b"alias_target", "dut", b"dut", "hardware", b"hardware", "operator", b"operator", "product", b"product", "software", b"software", "test", b"test", "test_plan", b"test_plan", "test_station", b"test_station"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["alias_name", b"alias_name", "alias_target", b"alias_target", "dut", b"dut", "hardware", b"hardware", "operator", b"operator", "product", b"product", "software", b"software", "test", b"test", "test_plan", b"test_plan", "test_station", b"test_station"]) -> None: ...
    def WhichOneof(self, oneof_group: typing.Literal["alias_target", b"alias_target"]) -> typing.Literal["dut", "product", "hardware", "software", "operator", "test_plan", "test", "test_station"] | None: ...

global___RegisterAliasRequest = RegisterAliasRequest

@typing.final
class RegisterAliasResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ALIAS_FIELD_NUMBER: builtins.int
    @property
    def alias(self) -> ni.measurements.metadata.v1.metadata_store_pb2.Alias: ...
    def __init__(
        self,
        *,
        alias: ni.measurements.metadata.v1.metadata_store_pb2.Alias | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["alias", b"alias"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["alias", b"alias"]) -> None: ...

global___RegisterAliasResponse = RegisterAliasResponse

@typing.final
class UnregisterAliasRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ALIAS_NAME_FIELD_NUMBER: builtins.int
    alias_name: builtins.str
    """The name of the alias to unregister"""
    def __init__(
        self,
        *,
        alias_name: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["alias_name", b"alias_name"]) -> None: ...

global___UnregisterAliasRequest = UnregisterAliasRequest

@typing.final
class UnregisterAliasResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    UNREGISTERED_FIELD_NUMBER: builtins.int
    unregistered: builtins.bool
    """Whether the action resulted in the specified alias becoming unregistered. (False if the alias does not exist.)"""
    def __init__(
        self,
        *,
        unregistered: builtins.bool = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["unregistered", b"unregistered"]) -> None: ...

global___UnregisterAliasResponse = UnregisterAliasResponse
