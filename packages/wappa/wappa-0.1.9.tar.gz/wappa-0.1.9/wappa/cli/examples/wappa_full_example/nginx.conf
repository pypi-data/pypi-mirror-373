# ================================================================
# NGINX REVERSE PROXY CONFIGURATION FOR WAPPA FULL EXAMPLE
# ================================================================

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    
    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;
    
    # Basic settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 10M;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    
    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=webhook:10m rate=50r/s;
    
    # Upstream backend
    upstream wappa_backend {
        server wappa-app:8000 max_fails=3 fail_timeout=30s;
        # Add more servers for load balancing:
        # server wappa-app-2:8000 max_fails=3 fail_timeout=30s;
        # server wappa-app-3:8000 max_fails=3 fail_timeout=30s;
    }
    
    # HTTP server (redirect to HTTPS)
    server {
        listen 80;
        server_name _;
        
        # Health check endpoint
        location /nginx-health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # Redirect all HTTP traffic to HTTPS
        location / {
            return 301 https://$host$request_uri;
        }
    }
    
    # HTTPS server
    server {
        listen 443 ssl http2;
        server_name your-domain.com;  # Replace with your domain
        
        # SSL configuration
        ssl_certificate /etc/ssl/certs/cert.pem;
        ssl_certificate_key /etc/ssl/certs/key.pem;
        ssl_session_timeout 1d;
        ssl_session_cache shared:MozTLS:10m;
        ssl_session_tickets off;
        
        # Modern SSL configuration
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        
        # Security headers
        add_header Strict-Transport-Security "max-age=63072000" always;
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header Referrer-Policy "no-referrer-when-downgrade";
        
        # WhatsApp webhook endpoint (high rate limit)
        location /webhook {
            limit_req zone=webhook burst=100 nodelay;
            
            proxy_pass http://wappa_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            proxy_read_timeout 90;
            proxy_send_timeout 90;
            proxy_connect_timeout 30;
        }
        
        # API endpoints (standard rate limit)
        location /api {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://wappa_backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 90;
            proxy_send_timeout 90;
            proxy_connect_timeout 30;
        }
        
        # Health check endpoint
        location /health {
            proxy_pass http://wappa_backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            access_log off;
        }
        
        # Documentation and static files
        location /docs {
            proxy_pass http://wappa_backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Default location
        location / {
            limit_req zone=api burst=10 nodelay;
            
            proxy_pass http://wappa_backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 90;
            proxy_send_timeout 90;
            proxy_connect_timeout 30;
        }
        
        # Block common bot requests
        location ~ /\.(git|svn|hg) {
            deny all;
            return 404;
        }
        
        location ~ /\.(env|log)$ {
            deny all;
            return 404;
        }
    }
}

# ================================================================
# CONFIGURATION NOTES:
# ================================================================
# 1. Replace 'your-domain.com' with your actual domain
# 2. Add SSL certificates to ./ssl/cert.pem and ./ssl/key.pem
# 3. For Let's Encrypt: use certbot with nginx plugin
# 4. Scale backend servers by adding more upstream entries
# 5. Adjust rate limits based on your WhatsApp API quotas
# 6. Monitor nginx logs for performance tuning
# ================================================================