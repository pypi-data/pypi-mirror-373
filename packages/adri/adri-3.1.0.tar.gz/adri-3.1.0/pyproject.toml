[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "adri"
version = "3.1.0"
description = "AI Data Reliability Intelligence - Comprehensive data quality assessment and validation framework"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "ThinkEvolveSolve", email = "info@thinkevolvesolve.com"}
]
maintainers = [
    {name = "ThinkEvolveSolve", email = "info@thinkevolvesolve.com"}
]
keywords = ["data-quality", "ai", "validation", "assessment", "reliability"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Quality Assurance",
    "Topic :: Software Development :: Testing",
]
requires-python = ">=3.10"
dependencies = [
    "pandas>=1.5.0",
    "pyyaml>=6.0",
    "click>=8.0",
    "pyarrow>=14.0.0",  # For parquet support
    "tabulate>=0.9.0",  # For benchmark comparison output
    "requests>=2.28.0",  # For HTTP requests in verodat_logger
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "pytest-benchmark>=4.0",
    "pytest-timeout>=2.1.0",  # For test timeout support
    "black>=23.0",
    "isort>=5.12",
    "flake8>=6.0",
    "mypy>=1.0",
    "pylint>=2.17",
    "bandit[toml]>=1.7",
    "safety>=2.3",
    "pip-audit>=2.6",
    "types-requests>=2.28.0",  # Type stubs for requests library
]
test = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "pytest-benchmark>=4.0",
    "pytest-timeout>=2.1.0",  # For test timeout support
    "pyarrow>=14.0.0",  # For parquet support in tests
    "tabulate>=0.9.0",  # For benchmark comparison script
]
security = [
    "bandit[toml]>=1.7",
    "safety>=2.3",
    "pip-audit>=2.6",
]

[project.urls]
Homepage = "https://github.com/ThinkEvolveSolve/adri-validator"
Documentation = "https://github.com/ThinkEvolveSolve/adri-validator/blob/main/README.md"
Repository = "https://github.com/ThinkEvolveSolve/adri-validator"
Issues = "https://github.com/ThinkEvolveSolve/adri-validator/issues"
Changelog = "https://github.com/ThinkEvolveSolve/adri-validator/blob/main/CHANGELOG.md"

[project.scripts]
adri = "adri.cli.commands:main"

[tool.setuptools.packages.find]
include = ["adri*"]
exclude = ["tests*", "docs*", "examples*"]

[tool.setuptools.package-data]
adri = [
    "*.yaml",
    "*.yml",
    "templates/*.yaml",
    "standards/bundled/*.yaml",
    "standards/bundled/*.yml"
]

# Black configuration
[tool.black]
line-length = 88
target-version = ['py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort configuration
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["adri"]
known_third_party = ["pandas", "yaml", "click", "pytest"]
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
force_alphabetical_sort_within_sections = true

# mypy configuration
[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "pandas.*",
    "yaml.*",
    "setuptools.*",
]
ignore_missing_imports = true

# pylint configuration
[tool.pylint.messages_control]
disable = [
    "too-few-public-methods",
    "too-many-arguments",
    "too-many-instance-attributes",
    "too-many-locals",
    "duplicate-code",
    "fixme",
]

[tool.pylint.format]
max-line-length = 88

[tool.pylint.design]
max-args = 8
max-locals = 20
max-returns = 8
max-branches = 15
max-statements = 60

# bandit configuration
[tool.bandit]
exclude_dirs = ["tests", "docs", "examples"]
skips = ["B101", "B601"]  # Skip assert_used and shell_injection_process_args

# pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=adri",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=json",
    "--cov-fail-under=90",
    "--tb=short",  # Shorter traceback format for CI readability
    "-v",  # Verbose output
]
testpaths = ["tests"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "benchmark: marks tests as performance benchmarks",
    "timeout: marks tests with custom timeout values",
    "ci_skip: marks tests to skip in CI environment",
]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]
# Timeout settings for CI (in seconds)
timeout = 30  # Default timeout for all tests
timeout_method = "thread"  # Use thread-based timeout

# coverage configuration
[tool.coverage.run]
source = ["adri"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__main__.py",
    "*/setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
show_missing = true
precision = 2

[tool.coverage.html]
directory = "htmlcov"
