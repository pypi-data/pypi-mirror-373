[project]
name = "bubus"
description = "Advanced Pydantic-powered event bus with async support"
authors = [{ name = "Nick Sweeting" }]
version = "1.5.6"
readme = "README.md"
requires-python = ">=3.11,<4.0"
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
dependencies = [
    "aiofiles>=24.1.0",
    "anyio>=4.9.0",
    "portalocker>=2.7.0",
    "pydantic>=2.11.5",
    "typing-extensions>=4.12.2",
    "uuid7>=0.1.0",
]

[project.urls]
Repository = "https://github.com/browser-use/bubus"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.codespell]
ignore-words-list = "bu,wit,dont,cant,wont,re-use,re-used,re-using,re-usable,thats,doesnt"
skip = "*.json"

[tool.ruff]
line-length = 130
fix = true

[tool.ruff.lint]
preview = true
select = ["ASYNC", "E", "F", "FAST", "I", "PLE"]
ignore = ["ASYNC109", "E101", "E402", "E501", "F841", "E731", "W291"]  # TODO: determine if adding timeouts to all the unbounded async functions is needed / worth-it so we can un-ignore ASYNC109
unfixable = ["E101", "E402", "E501", "F841", "E731"]

[tool.ruff.format]
indent-style = "space"
quote-style = "single"
line-ending = "lf"
docstring-code-format = true
docstring-code-line-length = 140
skip-magic-trailing-comma = false

[tool.pyright]
typeCheckingMode = "strict"
reportMissingImports = "error"
reportMissingTypeStubs = false
venvPath = "."
venv = ".venv"

[tool.hatch.build]
include = [
    "bubus/**/*.py",
    "!tests/**/*.py",
]

[tool.hatch.metadata]
allow-direct-references = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
asyncio_default_test_loop_scope = "function"
testpaths = [
    "tests"
]
python_files = ["test_*.py", "*_test.py"]
addopts = "-svx --strict-markers --tb=short --dist=loadscope"
log_cli = true
log_cli_format = "%(levelname)-8s [%(name)s] %(message)s"
filterwarnings = [
    "ignore::pytest.PytestDeprecationWarning",
    "ignore::DeprecationWarning",
]
log_level = "DEBUG"

[tool.coverage.run]
source = ["bubus"]
omit = [
    "*/tests/*",
    "*/__pycache__/*",
    "*.pyc",
]
parallel = true
data_file = ".coverage"

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "if TYPE_CHECKING:",
    "if __name__ == .__main__.:",
    "raise NotImplementedError",
    "return NotImplemented",
    "assert_never",
    "\\.\\.\\.",
    "^\\s*$",  # Blank lines
]
show_missing = true
skip_covered = false
precision = 2

[tool.coverage.html]
directory = "htmlcov"


[tool.uv]
dev-dependencies = [
    "ruff>=0.11.2",
    "build>=1.2.2",
    "pytest>=8.3.5",
    "pytest-asyncio>=1.1.0",
    "pytest-httpserver>=1.0.8",
    "ipdb>=0.13.13",
    "pre-commit>=4.2.0",
    "codespell>=2.4.1",
    "pyright>=1.1.404",
    "ty>=0.0.1a19",
    "pytest-xdist>=3.7.0",
    "psutil>=7.0.0",
    "pytest-cov>=6.2.1",
]
