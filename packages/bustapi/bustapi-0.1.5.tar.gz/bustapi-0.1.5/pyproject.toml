[build-system]
requires = ["maturin>=1.0,<2.0"]
build-backend = "maturin"

[project]
name = "bustapi"
version = "0.1.5"
description = "High-performance Flask-compatible web framework with async support"
authors = [
    {name = "BustAPI Team", email = "hello@bustapi.dev"}
]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.8"
keywords = ["web", "framework", "async", "performance", "flask"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10", 
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Rust",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Software Development :: Libraries :: Application Frameworks"
]

dependencies = [
    "black>=24.8.0",
    "isort>=5.13.2",
    "maturin>=1.9.3",
    "pytest>=8.3.5",
    "pytest-asyncio>=0.24.0",
    "pytest-cov>=5.0.0",
    "ruff>=0.12.10",
    "typing-extensions>=4.0.0",
    "werkzeug>=2.0.0",
    "jinja2>=3.1",
    "pydantic>=2.10.6",
    "requests>=2.32.4",
    "colorama>=0.4.6",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-asyncio>=0.21.0",
    "black>=22.0",
    "mypy>=1.0",
    "ruff>=0.1.0",
    "pre-commit>=3.0",
    "maturin>=1.0",
]
docs = [
    "mkdocs>=1.5",
    "mkdocs-material>=9.0",
    "mkdocstrings[python]>=0.20",
]

[project.urls]
Homepage = "https://github.com/bustapi/bustapi"
Documentation = "https://bustapi.dev"
Repository = "https://github.com/bustapi/bustapi.git"
Issues = "https://github.com/bustapi/bustapi/issues"

[project.scripts]
bustapi = "bustapi.cli:main"

[tool.maturin]
module-name = "bustapi.bustapi_core"
python-source = "python"

[tool.black]
line-length = 88
target-version = ['py38']

[tool.isort]
profile = "black"
line_length = 88
known_first_party = ["bustapi"]

[tool.mypy]
python_version = "3.8"
strict = true

[tool.ruff]
line-length = 88
target-version = "py38"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
]
ignore = [
    "E501",  # line too long, handled by black
    "E722",  # bare except (sometimes needed for compatibility)
    "F401",  # imported but unused (for availability checks)
    "F841",  # local variable assigned but never used (in tests)
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"tests/*" = ["F401", "F841", "E712"]
"examples/*" = ["F401", "F841", "E722", "E712"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"
