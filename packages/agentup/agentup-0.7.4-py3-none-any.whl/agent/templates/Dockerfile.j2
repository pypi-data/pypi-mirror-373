# Multi-stage build for {{ project_name }}
# Uses Chainguard distroless Python image for security

# Build stage - includes package managers and build tools
FROM cgr.dev/chainguard/python:latest-dev as builder

WORKDIR /app

# Copy dependency files
COPY pyproject.toml ./

# Install dependencies using uv for faster builds
RUN pip install uv && uv sync --frozen

# Minimal distroless image
FROM cgr.dev/chainguard/python:latest

WORKDIR /app

# Copy virtual environment from builder
COPY --from=builder /app/.venv /app/.venv

# Copy application configuration
COPY agentup.yml ./
{% if has_env_file %}COPY .env ./{% endif %}

# Create non-root user for security (Chainguard images include nonroot user)
USER 65532:65532

# Set environment variables
ENV PATH="/app/.venv/bin:$PATH"
ENV PYTHONPATH="/app"
ENV PYTHONUNBUFFERED=1
ENV AGENTUP_CONFIG_PATH="/app/agentup.yml"

# Health check endpoint - using AgentUp's built-in health endpoint
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD python -c "import httpx; httpx.get('http://localhost:8000/health', timeout=5.0)" || exit 1

# Expose the default AgentUp port
EXPOSE 8000

# Run the AgentUp agent using uvicorn (same as agentup run)
CMD ["python", "-m", "uvicorn", "agent.api.app:app", "--host", "0.0.0.0", "--port", "8000"]
