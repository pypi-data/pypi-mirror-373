# CloudStack Orchestrator Module Specification
# Module: Continuous Image Generator
apiVersion: cso.platform/v1alpha1
kind: ModuleSpecification
metadata:
  name: continuous-image-gen
  namespace: cso-modules
  labels:
    app.kubernetes.io/name: continuous-image-gen
    app.kubernetes.io/part-of: cloudstack-orchestrator
spec:
  module:
    name: continuous-image-gen
    version: 1.0.0
    tier: custom
    description: AI-powered continuous image generation system with Flux transformers and plugin architecture
    maintainer:
      name: killerapp
      email: support@killerapp.com
      url: https://github.com/killerapp/continuous-image-gen
    license: MIT
    tags:
      - ai
      - image-generation
      - flux
      - creative
      - automation
  
  repository:
    url: https://github.com/killerapp/continuous-image-gen
    type: github
    branch: main
    path: /cso-deployment
    private: false
  
  deployment:
    type: helm
    path: /cso-deployment/chart
    helm:
      chart: continuous-image-gen
      valuesFiles:
        - values.yaml
        - values-production.yaml
    multiTenant: false
    isolation: namespace
    replicas:
      min: 1
      max: 3
      targetCPUUtilization: 70
  
  testing:
    e2e:
      framework: playwright
      path: /tests/e2e
      entrypoint: test-web-ui.spec.ts
      coverage:
        target: 80
        required: true
    integration:
      path: /tests/integration
      endpoints:
        - path: /api/health
          method: GET
          expectedStatus: 200
        - path: /api/generate
          method: POST
          expectedStatus: 200
        - path: /api/status
          method: GET
          expectedStatus: 200
    unit:
      path: /tests
      command: uv run pytest tests/
      coverage: 90
  
  requirements:
    authentication:
      enabled: true
      provider: keycloak
      clientId: continuous-image-gen
      rbac:
        roles:
          - image-generator-user
          - image-generator-admin
    
    database:
      type: postgresql
      tier: standard
      size: 20Gi
      backup:
        enabled: true
        retention: 30d
    
    storage:
      persistent: true
      size: 100Gi
      storageClass: fast-ssd
      accessMode: ReadWriteMany
    
    monitoring:
      metrics:
        enabled: true
        path: /metrics
        port: 9090
      dashboard:
        enabled: true
        path: /cso-deployment/monitoring/dashboard.json
      alerts:
        enabled: true
        path: /cso-deployment/monitoring/alerts.yaml
      tracing:
        enabled: true
        provider: opentelemetry
    
    networking:
      ingress: true
      serviceMesh: istio
      networkPolicies: true
      egressRules:
        - to: huggingface.co
          ports:
            - protocol: TCP
              port: 443
        - to: ollama.default.svc.cluster.local
          ports:
            - protocol: TCP
              port: 11434
    
    resources:
      requests:
        cpu: 2000m
        memory: 8Gi
      limits:
        cpu: 4000m
        memory: 16Gi
  
  security:
    podSecurityContext:
      runAsNonRoot: true
      runAsUser: 1000
      fsGroup: 1000
      seccompProfile:
        type: RuntimeDefault
    
    containerSecurityContext:
      allowPrivilegeEscalation: false
      readOnlyRootFilesystem: false  # Need write for image generation
      capabilities:
        drop:
          - ALL
    
    serviceAccount:
      create: true
      name: continuous-image-gen
      automountToken: false
    
    secrets:
      provider: sealed-secrets
      externalSecrets:
        - name: huggingface-token
          backend: aws-secrets-manager
          path: /cso/continuous-image-gen/hf-token
        - name: s3-credentials
          backend: aws-secrets-manager
          path: /cso/continuous-image-gen/s3-creds
    
    imagePullPolicy: IfNotPresent
    imageRegistry: ghcr.io/killerapp
  
  compliance:
    frameworks: []
    dataClassification: internal
    encryption:
      atRest: true
      inTransit: true
      keyManagement: platform
    auditLogging: true
    securityScanning:
      enabled: true
      tools:
        - trivy
        - snyk
  
  dependencies:
    modules:
      - name: cso-module-auth
        version: ">=1.0.0"
        optional: false
      - name: cso-module-storage
        version: ">=1.0.0"
        optional: false
    external:
      - name: ollama
        type: service
        endpoint: http://ollama.default.svc.cluster.local:11434
      - name: s3-storage
        type: service
        endpoint: https://s3.amazonaws.com
  
  lifecycle:
    preInstall:
      - echo "Setting up image generation directories..."
      - mkdir -p /data/output /data/models
    postInstall:
      - echo "Downloading initial models..."
      - python -m src.utils.download_models
    preUpgrade:
      - echo "Backing up current configuration..."
    postUpgrade:
      - echo "Reloading plugins..."
      - python -m src.utils.reload_plugins