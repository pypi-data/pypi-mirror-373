version: '3.8'

# Development override configuration
# Use with: docker-compose -f docker-compose.yml -f docker-compose.dev.yml up

services:
  backend:
    env_file:
      - .env.local
    build:
      context: .
      dockerfile: Dockerfile.backend
      target: builder  # Use builder stage for development
    ports:
      - "8000:8000"
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    volumes:
      # Override with full source mount for hot reload
      - ./src:/app/src
      - ./data:/app/data
      - ./pyproject.toml:/app/pyproject.toml
      - ./uv.lock:/app/uv.lock
      
      # Mount models from host
      - ${USERPROFILE}/.cache/huggingface:/app/models
      - ${USERPROFILE}/.cache/torch:/app/.cache/torch
      
      # Mount output and logs
      - ./output:/app/output
      - ./logs:/app/logs
    environment:
      # Development settings
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=1
      - RELOAD=true
      - DEBUG=true
      - LOG_LEVEL=DEBUG
      
      # Use real models in development (if GPU available)
      - USE_MOCK_GENERATOR=${USE_MOCK_GENERATOR:-false}
      - MOCK_MODE=${MOCK_MODE:-false}
      
      # HuggingFace token for model access
      - HF_TOKEN=${HF_TOKEN:-}
      - HF_HOME=/app/models
      - TRANSFORMERS_CACHE=/app/models
    command: ["/opt/venv/bin/python", "-m", "uvicorn", "src.api.server:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]
    
    networks:
      - imagegen-network

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend.dev  # Use development Dockerfile
    ports:
      - "7860:7860"
    volumes:
      # Full source mount for hot reload
      - ./web-ui:/app
      - /app/node_modules  # Exclude node_modules
      - /app/.next         # Exclude build artifacts
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:8000
    command: ["npm", "run", "dev"]
    
    networks:
      - imagegen-network
    
  # Development tools
  adminer:
    image: adminer:latest
    container_name: imagegen-adminer
    ports:
      - "8080:8080"
    networks:
      - imagegen-network
    profiles:
      - tools

networks:
  imagegen-network:
    driver: bridge