{{- if .Values.frontend.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "continuous-image-gen.fullname" . }}-frontend
  labels:
    {{- include "continuous-image-gen.labels" . | nindent 4 }}
    app.kubernetes.io/component: frontend
spec:
  replicas: {{ .Values.frontend.replicaCount }}
  selector:
    matchLabels:
      {{- include "continuous-image-gen.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: frontend
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        sidecar.istio.io/inject: "{{ .Values.serviceMesh.enabled }}"
      labels:
        {{- include "continuous-image-gen.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: frontend
        version: {{ .Values.frontend.image.tag | quote }}
    spec:
      {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "continuous-image-gen.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.security.podSecurityContext | nindent 8 }}
      containers:
        {{- if .Values.auth.oauth2Proxy.enabled }}
        - name: oauth2-proxy
          image: "{{ .Values.auth.oauth2Proxy.image.repository }}:{{ .Values.auth.oauth2Proxy.image.tag }}"
          imagePullPolicy: IfNotPresent
          ports:
            - name: oauth2-proxy
              containerPort: 4180
              protocol: TCP
          env:
            - name: OAUTH2_PROXY_CLIENT_ID
              value: {{ .Values.auth.oauth2Proxy.clientId }}
            - name: OAUTH2_PROXY_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.auth.oauth2Proxy.existingSecret }}
                  key: client-secret
            - name: OAUTH2_PROXY_COOKIE_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.auth.oauth2Proxy.existingSecret }}
                  key: cookie-secret
            - name: OAUTH2_PROXY_PROVIDER
              value: keycloak-oidc
            - name: OAUTH2_PROXY_OIDC_ISSUER_URL
              value: {{ .Values.auth.oauth2Proxy.providerUrl }}
            - name: OAUTH2_PROXY_REDIRECT_URL
              value: {{ .Values.auth.oauth2Proxy.redirectUrl }}
            - name: OAUTH2_PROXY_UPSTREAM
              value: "http://localhost:7860"
            - name: OAUTH2_PROXY_HTTP_ADDRESS
              value: "0.0.0.0:4180"
            - name: OAUTH2_PROXY_COOKIE_SECURE
              value: "{{ .Values.auth.oauth2Proxy.cookieSecure }}"
            - name: OAUTH2_PROXY_COOKIE_DOMAIN
              value: {{ .Values.auth.oauth2Proxy.cookieDomain }}
            {{- if .Values.auth.oauth2Proxy.emailDomains }}
            - name: OAUTH2_PROXY_EMAIL_DOMAINS
              value: {{ join "," .Values.auth.oauth2Proxy.emailDomains }}
            {{- end }}
            {{- if .Values.auth.oauth2Proxy.skipAuthRegex }}
            - name: OAUTH2_PROXY_SKIP_AUTH_REGEX
              value: {{ join "|" .Values.auth.oauth2Proxy.skipAuthRegex }}
            {{- end }}
          resources:
            requests:
              cpu: 10m
              memory: 32Mi
            limits:
              cpu: 100m
              memory: 128Mi
        {{- end }}
        - name: frontend
          securityContext:
            {{- toYaml .Values.security.containerSecurityContext | nindent 12 }}
          image: "{{ .Values.frontend.image.repository }}:{{ .Values.frontend.image.tag }}"
          imagePullPolicy: {{ .Values.frontend.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 7860
              protocol: TCP
          env:
            {{- range $key, $value := .Values.frontend.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
          livenessProbe:
            {{- toYaml .Values.frontend.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.frontend.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.frontend.resources | nindent 12 }}
          volumeMounts:
            - name: config
              mountPath: /app/config
              readOnly: true
      volumes:
        - name: config
          configMap:
            name: {{ include "continuous-image-gen.fullname" . }}-config
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}