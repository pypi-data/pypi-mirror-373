apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "continuous-image-gen.fullname" . }}
  namespace: {{ .Values.namespace | default .Release.Namespace }}
  labels:
    {{- include "continuous-image-gen.labels" . | nindent 4 }}
    app.kubernetes.io/component: image-generator
    cso.platform/module: continuous-image-gen
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount | default 1 }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "continuous-image-gen.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        sidecar.istio.io/inject: "true"
      labels:
        {{- include "continuous-image-gen.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: image-generator
        version: {{ .Chart.AppVersion }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "continuous-image-gen.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: wait-for-database
          image: busybox:1.35
          command: ['sh', '-c', 'until nc -z {{ .Values.database.host }} {{ .Values.database.port }}; do echo waiting for database; sleep 2; done']
        {{- if .Values.models.downloadOnStartup }}
        - name: download-models
          image: {{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}
          command: ['python', '-m', 'src.utils.download_models']
          env:
            - name: HF_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ include "continuous-image-gen.fullname" . }}-secrets
                  key: huggingface-token
          volumeMounts:
            - name: models
              mountPath: {{ .Values.models.storage.mountPath }}
        {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.targetPort }}
              protocol: TCP
            - name: metrics
              containerPort: {{ .Values.monitoring.metrics.port }}
              protocol: TCP
          env:
            - name: CONFIG_PATH
              value: /app/config/config.yaml
            - name: OUTPUT_DIR
              value: {{ .Values.storage.cache.mountPath }}/output
            - name: MODEL_CACHE_DIR
              value: {{ .Values.models.storage.mountPath }}
            - name: GCS_BUCKET
              value: {{ .Values.storage.gcs.bucketName }}
            - name: GCP_PROJECT_ID
              value: {{ .Values.storage.gcs.projectId }}
            - name: OLLAMA_ENDPOINT
              value: {{ .Values.ollama.endpoint }}
            - name: OLLAMA_MODEL
              value: {{ .Values.ollama.model }}
            - name: HF_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ include "continuous-image-gen.fullname" . }}-secrets
                  key: huggingface-token
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: {{ include "continuous-image-gen.fullname" . }}-secrets
                  key: database-url
            - name: LOG_LEVEL
              value: {{ .Values.monitoring.logging.level }}
            {{- if .Values.accelerators.tpu.enabled }}
            - name: TPU_NAME
              value: {{ .Values.accelerators.tpu.name }}
            - name: TPU_ZONE
              value: {{ .Values.accelerators.tpu.zone }}
            {{- end }}
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /ready
              port: http
            initialDelaySeconds: 20
            periodSeconds: 5
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: config
              mountPath: /app/config
            - name: cache
              mountPath: {{ .Values.storage.cache.mountPath }}
            - name: models
              mountPath: {{ .Values.models.storage.mountPath }}
            {{- if .Values.storage.gcs.serviceAccount.keySecretName }}
            - name: gcs-key
              mountPath: /var/secrets/gcs
              readOnly: true
            {{- end }}
        {{- if .Values.database.cloudsql.proxy.enabled }}
        - name: cloud-sql-proxy
          image: {{ .Values.database.cloudsql.proxy.image }}
          command:
            - "/cloud_sql_proxy"
            - "-instances={{ .Values.database.cloudsql.instanceConnectionName }}=tcp:5432"
            - "-credential_file=/secrets/service_account.json"
          securityContext:
            runAsNonRoot: true
          volumeMounts:
            - name: cloudsql-instance-credentials
              mountPath: /secrets/
              readOnly: true
          resources:
            {{- toYaml .Values.database.cloudsql.proxy.resources | nindent 12 }}
        {{- end }}
      volumes:
        - name: config
          configMap:
            name: {{ include "continuous-image-gen.fullname" . }}-config
        - name: cache
          persistentVolumeClaim:
            claimName: {{ include "continuous-image-gen.fullname" . }}-cache
        - name: models
          persistentVolumeClaim:
            claimName: {{ include "continuous-image-gen.fullname" . }}-models
        {{- if .Values.storage.gcs.serviceAccount.keySecretName }}
        - name: gcs-key
          secret:
            secretName: {{ .Values.storage.gcs.serviceAccount.keySecretName }}
        {{- end }}
        {{- if .Values.database.cloudsql.proxy.enabled }}
        - name: cloudsql-instance-credentials
          secret:
            secretName: {{ include "continuous-image-gen.fullname" . }}-cloudsql
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.accelerators.gpu.enabled }}
      nodeSelector:
        cloud.google.com/gke-accelerator: {{ .Values.accelerators.gpu.type }}
      {{- end }}