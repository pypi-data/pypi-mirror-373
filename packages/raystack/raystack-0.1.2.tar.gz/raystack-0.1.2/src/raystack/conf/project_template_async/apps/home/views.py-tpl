from raystack.shortcuts import render_template
from fastapi import Request, Depends
from sqlalchemy.ext.asyncio import AsyncSession
from sqlmodel import select

# Use framework functionality
from raystack.core.database.base import get_async_db
from .models import User

async def home_view(request: Request, session: AsyncSession = Depends(get_async_db)):
    try:
        # Use asynchronous syntax for SQLModel
        result = await session.execute(select(User))
        users = result.scalars().all()
        user_count = len(users)
    except Exception as e:
        # If database is unavailable, show placeholder
        user_count = 0
        users = []
    
    return render_template(request, "home/home.html", context={
        "framework": "Raystack Async", 
        "user_count": user_count,
        "message": "Welcome to Raystack Framework!",
        "users": users
    })
