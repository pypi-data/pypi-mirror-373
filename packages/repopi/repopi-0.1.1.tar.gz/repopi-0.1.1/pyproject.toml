[tool.poetry]
name = "repopi"
version = "0.1.1"
description = "An all-in-one developer assistant for Git workflows, hosting, and AI automation."
authors = ["S M Asiful Islam Saky <saky.aiu22@gmail.com>"]
maintainers = ["S M Asiful Islam Saky <saky.aiu22@gmail.com>"]
readme = "README.md"
license = "MIT"
homepage = "https://pypi.org/project/repopi/"
repository = "https://github.com/saky-semicolon/repopi"
documentation = "https://github.com/saky-semicolon/repopi#readme"
keywords = ["git", "cli", "automation", "ai", "developer-tools", "github", "gitlab"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Version Control :: Git",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Utilities",
    "Typing :: Typed",
]

[tool.poetry.dependencies]
python = "^3.9"
typer = {extras = ["all"], version = "^0.9.0,<0.10.0"}
rich = "^13.3.5,<13.8.0"  # Constrain to avoid markdown-it-py 4.x
GitPython = "^3.1.31,<4.0.0"
PyGithub = "^2.0.0,<3.0.0"
python-gitlab = "^4.0.0,<5.0.0"
openai = "^1.0.0,<2.0.0"
pydantic = "^2.7.0,<3.0.0"
tomli = "^2.0.1,<3.0.0"
tomli-w = "^1.0.0,<2.0.0"
# Explicit constraints to resolve ecosystem conflicts
markdown-it-py = ">=2.2.0,<3.0.0"  # Force compatible version
cachetools = ">=4.0,<6.0"  # Compatible with streamlit
packaging = ">=20,<25"  # Compatible with streamlit  
cryptography = ">=41.0.5,<45"  # Compatible with pyopenssl

[tool.poetry.group.dev.dependencies]
pytest = "^7.3.1"
pytest-cov = "^4.1.0"
pytest-mock = "^3.11.1"
mypy = "^1.3.0"
ruff = "^0.0.272"
black = "^23.3.0"
isort = "^5.12.0"
pre-commit = "^3.3.2"
vcrpy = "^4.3.1"
mkdocs = "^1.4.3"
mkdocs-material = "^9.1.18"
types-requests = "^2.31.0"
bandit = "^1.7.5"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
repopi = "repopi.main:main_cli"

[tool.ruff]
target-version = "py39"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.black]
target-version = ['py39']
line-length = 88
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "git.*",
    "github.*",
    "gitlab.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
markers = [
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["repopi"]
omit = ["*/tests/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
