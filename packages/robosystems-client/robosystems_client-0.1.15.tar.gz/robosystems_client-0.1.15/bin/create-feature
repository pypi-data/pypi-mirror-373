#!/bin/bash
set -e

# Create feature branch script using GitHub Actions
# Creates a new feature/bugfix/hotfix branch and checks it out locally
# Usage: ./bin/tools/create-feature.sh [type] [name] [base_branch]

# Default values
BRANCH_TYPE=${1:-feature}
BRANCH_NAME=${2:-}
BASE_BRANCH=${3:-main}

# Validate branch type
if [[ "$BRANCH_TYPE" != "feature" && "$BRANCH_TYPE" != "bugfix" && "$BRANCH_TYPE" != "hotfix" && "$BRANCH_TYPE" != "chore" && "$BRANCH_TYPE" != "refactor" ]]; then
  echo "‚ùå Invalid branch type: $BRANCH_TYPE"
  echo "Valid types: feature, bugfix, hotfix, chore, refactor"
  exit 1
fi

# Check if branch name was provided
if [ -z "$BRANCH_NAME" ]; then
  echo "‚ùå Branch name is required"
  echo "Usage: $0 [type] [name] [base_branch]"
  echo "Example: $0 feature add-user-auth main"
  exit 1
fi

# Base branch can be any branch, default to main
# No validation needed - allow feature branches from any branch

# Sanitize branch name
SANITIZED_NAME=$(echo "$BRANCH_NAME" | sed 's/[^a-zA-Z0-9._-]/-/g' | sed 's/--*/-/g' | sed 's/^-//;s/-$//')
FULL_BRANCH="${BRANCH_TYPE}/${SANITIZED_NAME}"

echo "üöÄ Creating feature branch via GitHub Actions..."
echo "üìã Details:"
echo "  Type: $BRANCH_TYPE"
echo "  Name: $SANITIZED_NAME"
echo "  Full Branch: $FULL_BRANCH"
echo "  Base Branch: $BASE_BRANCH"
echo ""

# Check for uncommitted changes
if ! git diff --quiet || ! git diff --cached --quiet; then
  echo "‚ö†Ô∏è  You have uncommitted changes."
  read -p "Do you want to stash them? (y/N): " -n 1 -r
  echo
  if [[ $REPLY =~ ^[Yy]$ ]]; then
    git stash push -m "Auto-stash before creating branch $FULL_BRANCH"
    echo "‚úÖ Changes stashed"
  else
    echo "‚ùå Please commit or stash your changes first"
    exit 1
  fi
fi

echo "üöÄ Triggering GitHub Actions workflow to create branch..."
gh workflow run create-feature.yml \
  --field branch_type="$BRANCH_TYPE" \
  --field branch_name="$SANITIZED_NAME" \
  --field branch_from="$BASE_BRANCH"

echo "‚è≥ Waiting for branch to be created..."

# Wait for the branch to be created (check every 5 seconds for up to 1 minute)
MAX_ATTEMPTS=12
ATTEMPT=1

while [ $ATTEMPT -le $MAX_ATTEMPTS ]; do
    echo "Attempt $ATTEMPT/$MAX_ATTEMPTS: Checking if branch exists..."
    
    # Fetch latest changes from remote
    git fetch origin --quiet
    
    # Check if the branch exists on remote
    if git show-ref --verify --quiet refs/remotes/origin/$FULL_BRANCH; then
        echo "‚úÖ Branch $FULL_BRANCH found! Checking it out..."
        git checkout $FULL_BRANCH
        git pull origin $FULL_BRANCH
        
        echo "üéâ Successfully checked out $FULL_BRANCH"
        echo ""
        echo "üìù Next steps:"
        echo "  1. Make your changes and commit them"
        echo "  2. Push your changes: git push origin $FULL_BRANCH"
        echo "  3. Create a PR to merge into main: just create-pr main $BRANCH_TYPE"
        
        # Check if we had stashed changes
        if git stash list | grep -q "Auto-stash before creating branch $FULL_BRANCH"; then
            read -p "Do you want to apply your stashed changes? (y/N): " -n 1 -r
            echo
            if [[ $REPLY =~ ^[Yy]$ ]]; then
                git stash pop
                echo "‚úÖ Stashed changes applied"
            fi
        fi
        
        exit 0
    fi
    
    if [ $ATTEMPT -eq $MAX_ATTEMPTS ]; then
        echo "‚ùå Timeout: Branch $FULL_BRANCH was not created after 1 minute"
        echo "Check the GitHub Actions workflow status: gh run list --workflow=create-feature.yml"
        exit 1
    fi
    
    echo "Branch not yet available, waiting 5 seconds..."
    sleep 5
    ATTEMPT=$((ATTEMPT + 1))
done