name: Create Feature Branch

on:
  workflow_dispatch:
    inputs:
      branch_type:
        description: "Type of branch to create"
        required: true
        type: choice
        options:
          - feature
          - bugfix
          - hotfix
          - chore
          - refactor
        default: feature
      branch_name:
        description: "Branch name (will be prefixed with type/)"
        required: true
        type: string
      branch_from:
        description: "Base branch to create from"
        required: false
        type: string
        default: main

jobs:
  action:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.branch_from }}
          token: ${{ secrets.ACTIONS_TOKEN }}
          fetch-depth: 0

      - name: Set up Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Validate branch name
        id: validate
        run: |
          BRANCH_TYPE="${{ inputs.branch_type }}"
          BRANCH_NAME="${{ inputs.branch_name }}"

          # Sanitize branch name
          # Remove special characters and replace spaces with hyphens
          SANITIZED_NAME=$(echo "$BRANCH_NAME" | sed 's/[^a-zA-Z0-9._-]/-/g' | sed 's/--*/-/g' | sed 's/^-//;s/-$//')

          if [ -z "$SANITIZED_NAME" ]; then
            echo "❌ Invalid branch name"
            exit 1
          fi

          FULL_BRANCH="${BRANCH_TYPE}/${SANITIZED_NAME}"

          echo "branch_type=$BRANCH_TYPE" >> $GITHUB_OUTPUT
          echo "branch_name=$SANITIZED_NAME" >> $GITHUB_OUTPUT
          echo "full_branch=$FULL_BRANCH" >> $GITHUB_OUTPUT
          echo "Branch will be created: $FULL_BRANCH"

      - name: Check if branch exists
        id: check-branch
        run: |
          FULL_BRANCH="${{ steps.validate.outputs.full_branch }}"

          # Check if branch exists locally or remotely
          if git show-ref --verify --quiet refs/heads/$FULL_BRANCH || git show-ref --verify --quiet refs/remotes/origin/$FULL_BRANCH; then
            echo "❌ Branch $FULL_BRANCH already exists"
            exit 1
          else
            echo "✅ Branch $FULL_BRANCH does not exist, proceeding..."
          fi

      - name: Create feature branch
        run: |
          FULL_BRANCH="${{ steps.validate.outputs.full_branch }}"
          BASE_BRANCH="${{ inputs.branch_from }}"

          echo "Creating new branch: $FULL_BRANCH from $BASE_BRANCH"

          # Ensure we have the latest base branch
          git fetch origin $BASE_BRANCH
          git checkout -b "$FULL_BRANCH" origin/$BASE_BRANCH

          # Push the new branch
          git push -u origin "$FULL_BRANCH"

          echo "✅ Branch created: $FULL_BRANCH"
          echo "✅ Based on: $BASE_BRANCH"

      - name: Create summary
        run: |
          FULL_BRANCH="${{ steps.validate.outputs.full_branch }}"
          BASE_BRANCH="${{ inputs.branch_from }}"

          echo "## 🚀 Feature Branch Created" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Branch:** \`$FULL_BRANCH\`" >> $GITHUB_STEP_SUMMARY
          echo "**Base:** \`$BASE_BRANCH\`" >> $GITHUB_STEP_SUMMARY
          echo "**Type:** ${{ inputs.branch_type }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Next Steps" >> $GITHUB_STEP_SUMMARY
          echo "1. Pull the branch locally: \`git fetch origin && git checkout $FULL_BRANCH\`" >> $GITHUB_STEP_SUMMARY
          echo "2. Make your changes and commit them" >> $GITHUB_STEP_SUMMARY
          echo "3. Push your changes: \`git push origin $FULL_BRANCH\`" >> $GITHUB_STEP_SUMMARY
          echo "4. Create a PR to merge into main: \`just create-pr main ${{ inputs.branch_type }}\`" >> $GITHUB_STEP_SUMMARY
