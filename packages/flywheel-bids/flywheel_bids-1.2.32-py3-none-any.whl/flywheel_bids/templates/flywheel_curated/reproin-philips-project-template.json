{
  "namespace": "BIDS",
  "description": "Namespace for BIDS info objects in Flywheel",
  "definitions": {
    "Acq": {
      "type": "string",
      "title": "Acquisition Label",
      "default": "",
      "pattern": "^[a-zA-Z0-9]*$"
    },
    "Ce": {
      "type": "string",
      "title": "Contrast Agent Label",
      "default": "",
      "pattern": "^[a-zA-Z0-9]*$"
    },
    "Dir": {
      "type": "string",
      "label": "Phase-Encoding Direction",
      "default": "",
      "pattern": "^[a-zA-Z0-9]*$"
    },
    "Echo": {
      "type": "string",
      "title": "Echo Index",
      "default": "",
      "pattern": "^[0-9]*$"
    },
    "Filename": {
      "type": "string",
      "title": "Filename",
      "default": "",
      "minLength": 1
    },
    "IntendedFor": {
      "type": "array",
      "title": "IntendedFor",
      "default": [
        {
          "Folder": "func"
        }
      ]
    },
    "Mod": {
      "type": "string",
      "title": "Mod Label",
      "default": "",
      "pattern": "^[a-zA-Z0-9]*$"
    },
    "Rec": {
      "type": "string",
      "title": "Reconstruction Algorithm Label",
      "default": "",
      "pattern": "^[a-zA-Z0-9]*$"
    },
    "Run": {
      "type": "string",
      "title": "Run Index",
      "default": "",
      "pattern": "^[0-9]*$"
    },
    "SeqType": {
      "type": "string",
      "title": "A BIDS sequence type",
      "default": "",
      "pattern": "^[a-zA-Z0-9]+$"
    },
    "Task": {
      "type": "string",
      "title": "Task Label",
      "default": "",
      "pattern": "^[a-zA-Z0-9]+$"
    },
    "reproinString": {
      "type": "string",
      "title": "BIDS string minus the subject",
      "default": ""
    },
    "Custom": {
      "type": "string",
      "title": "__custom",
      "default": "",
      "pattern": ""
    },
    "project": {
      "description": "BIDS project template",
      "properties": {
        "Name": {
          "type": "string",
          "title": "Name",
          "default": "",
          "auto_update": "{project.label}"
        },
        "BIDSVersion": {
          "type": "string",
          "title": "BIDS Version",
          "default": "1.2.0"
        },
        "License": {
          "type": "string",
          "title": "License",
          "default": ""
        },
        "Authors": {
          "type": "string",
          "title": "Authors",
          "default": []
        },
        "Acknowledgements": {
          "type": "string",
          "title": "Acknowledgements",
          "default": ""
        },
        "HowToAcknowledge": {
          "type": "string",
          "title": "How To Acknowledge",
          "default": ""
        },
        "Funding": {
          "type": "string",
          "title": "Funding Sources",
          "default": ""
        },
        "ReferencesAndLinks": {
          "type": "string",
          "title": "Reference and Links",
          "default": []
        },
        "DatasetDOI": {
          "type": "string",
          "title": "Dataset DOI",
          "default": ""
        }
      },
      "required": []
    },
    "project_file": {
      "description": "BIDS project file template",
      "properties": {
        "Filename": {
          "$ref": "#/definitions/Filename"
        },
        "Folder": {
          "type": "string",
          "title": "Folder",
          "default": ""
        },
        "Path": {
          "type": "string",
          "title": "Path",
          "default": ""
        }
      },
      "required": [
        "Filename"
      ]
    },
    "session": {
      "description": "BIDS session template",
      "properties": {
        "Label": {
          "type": "string",
          "title": "Label",
          "default": "",
          "auto_update": "<session.label>"
        },
        "Subject": {
          "type": "string",
          "title": "Subject Code",
          "default": "",
          "auto_update": "<subject.code>"
        }
      },
      "required": []
    },
    "session_file": {
      "description": "BIDS session file template",
      "properties": {
        "Filename": {
          "$ref": "#/definitions/Filename"
        },
        "Folder": {
          "type": "string",
          "title": "Folder",
          "default": "",
          "auto_update": "[_ses-{session.info.BIDS.Label}]"
        },
        "Path": {
          "type": "string",
          "title": "Path",
          "default": "",
          "auto_update": "sub-{subject.code}[/ses-{session.info.BIDS.Label}]"
        }
      },
      "required": [
        "Filename"
      ]
    },
    "acquisition": {
      "description": "BIDS acquisition template",
      "properties": {},
      "required": []
    },
    "anat_file": {
      "description": "BIDS template for anat files",
      "properties": {
        "Filename": {
          "type": "string",
          "title": "Filename",
          "default": "",
          "minLength": 1,
          "auto_update": "sub-{subject.code}[_ses-{session.info.BIDS.Label}][_acq-{file.info.BIDS.Acq}][_ce-{file.info.BIDS.Ce}][_rec-{file.info.BIDS.Rec}][_mod-{file.info.BIDS.Mod}]_{file.info.BIDS.Modality}{ext}"
        },
        "Folder": {
          "type": "string",
          "title": "Folder",
          "default": "anat"
        },
        "Path": {
          "type": "string",
          "title": "Path",
          "default": "",
          "auto_update": "sub-{subject.code}[/ses-{session.info.BIDS.Label}]/{file.info.BIDS.Folder}"
        },
        "Acq": {
          "$ref": "#/definitions/Acq"
        },
        "Ce": {
          "$ref": "#/definitions/Ce"
        },
        "Rec": {
          "$ref": "#/definitions/Rec"
        },
        "Run": {
          "$ref": "#/definitions/Run"
        },
        "Mod": {
          "$ref": "#/definitions/Mod"
        },
        "Modality": {
          "type": "string",
          "title": "Modality Label",
          "default": "NA",
          "enum": [
            "T1w",
            "T2w",
            "T1rho",
            "T1map",
            "T2map",
            "FLAIR",
            "FLASH",
            "PD",
            "PDmap",
            "PDT2",
            "inplaneT1",
            "inplaneT2",
            "angio",
            "defacemask",
            "SWImagandphase"
          ]
        },
        "Custom": {
          "$ref": "#/definitions/Custom"
        }
      },
      "required": [
        "Filename",
        "Modality"
      ]
    },
    "func_file": {
      "description": "BIDS template for func files",
      "properties": {
        "Filename": {
          "type": "string",
          "title": "Filename",
          "default": "",
          "minLength": 1,
          "auto_update": "sub-{subject.code}[_ses-{session.info.BIDS.Label}]_task-{file.info.BIDS.Task}[_acq-{file.info.BIDS.Acq}][_rec-{file.info.BIDS.Rec}][_ce-{file.info.BIDS.Ce}][_dir-{file.info.BIDS.Dir}][_run-{file.info.BIDS.Run}][_echo-{file.info.BIDS.Echo}]_{file.info.BIDS.Modality}{ext}"
        },
        "Folder": {
          "type": "string",
          "title": "Folder",
          "default": "func"
        },
        "Path": {
          "type": "string",
          "title": "Path",
          "default": "",
          "auto_update": "sub-{subject.code}[/ses-{session.info.BIDS.Label}]/{file.info.BIDS.Folder}"
        },
        "Acq": {
          "$ref": "#/definitions/Acq"
        },
        "Ce": {
          "$ref": "#/definitions/Ce"
        },
        "Dir": {
          "$ref": "#/definitions/Dir"
        },
        "Task": {
          "$ref": "#/definitions/Task"
        },
        "Rec": {
          "$ref": "#/definitions/Rec"
        },
        "Run": {
          "$ref": "#/definitions/Run"
        },
        "Echo": {
          "$ref": "#/definitions/Echo"
        },
        "Modality": {
          "type": "string",
          "title": "Modality Label",
          "default": "NA",
          "enum": [
            "bold",
            "sbref",
            "stim",
            "physio"
          ]
        }
      },
      "required": [
        "Filename",
        "Task",
        "Modality"
      ]
    },
    "task_events_file": {
      "description": "BIDS template for task events files",
      "properties": {
        "Filename": {
          "type": "string",
          "title": "Filename",
          "default": "",
          "minLength": 1,
          "auto_update": "sub-{subject.code}[_ses-{session.info.BIDS.Label}]_task-{file.info.BIDS.Task}[_acq-{file.info.BIDS.Acq}][_rec-{file.info.BIDS.Rec}][_ce-{file.info.BIDS.Ce}][_dir-{file.info.BIDS.Dir}][_run-{file.info.BIDS.Run}][_echo-{file.info.BIDS.Echo}]_events.tsv"
        },
        "Folder": {
          "type": "string",
          "title": "Folder",
          "default": "func"
        },
        "Path": {
          "type": "string",
          "title": "Path",
          "default": "",
          "auto_update": "sub-{subject.code}[/ses-{session.info.BIDS.Label}]/{file.info.BIDS.Folder}"
        },
        "Task": {
          "$ref": "#/definitions/Task"
        },
        "Ce": {
          "$ref": "#/definitions/Ce"
        },
        "Dir": {
          "$ref": "#/definitions/Dir"
        },
        "Acq": {
          "$ref": "#/definitions/Acq"
        },
        "Rec": {
          "$ref": "#/definitions/Rec"
        },
        "Run": {
          "$ref": "#/definitions/Run"
        },
        "Echo": {
          "$ref": "#/definitions/Echo"
        },
        "Custom": {
          "$ref": "#/definitions/Custom"
        }
      },
      "required": [
        "Filename",
        "Task"
      ]
    },
    "beh_events_file": {
      "description": "BIDS template for behavioral events files",
      "properties": {
        "Filename": {
          "type": "string",
          "title": "Filename",
          "default": "",
          "minLength": 1,
          "auto_update": "sub-{subject.code}[_ses-{session.info.BIDS.Label}]_task-{file.info.BIDS.Task}_events.tsv"
        },
        "Folder": {
          "type": "string",
          "title": "Folder",
          "default": "beh"
        },
        "Path": {
          "type": "string",
          "title": "Path",
          "default": "",
          "auto_update": "sub-{subject.code}[/ses-{session.info.BIDS.Label}]/{file.info.BIDS.Folder}"
        },
        "Task": {
          "$ref": "#/definitions/Task"
        },
        "Custom": {
          "$ref": "#/definitions/Custom"
        }
      },
      "required": [
        "Filename",
        "Task"
      ]
    },
    "physio_task_file": {
      "description": "BIDS template for physio files",
      "properties": {
        "Filename": {
          "type": "string",
          "title": "Filename",
          "default": "",
          "minLength": 1,
          "auto_update": "sub-{subject.code}[_ses-{session.info.BIDS.Label}]_task-{file.info.BIDS.Task}[_acq-{file.info.BIDS.Acq}][_rec-{file.info.BIDS.Rec}][_run-{file.info.BIDS.Run}][_echo-{file.info.BIDS.Echo}][_recording-{file.info.BIDS.recording}]_{file.info.BIDS.Modality}{ext}"
        },
        "Folder": {
          "type": "string",
          "title": "Folder",
          "default": "func"
        },
        "Path": {
          "type": "string",
          "title": "Path",
          "default": "",
          "auto_update": "sub-{subject.code}[/ses-{session.info.BIDS.Label}]/{file.info.BIDS.Folder}"
        },
        "Acq": {
          "$ref": "#/definitions/Acq"
        },
        "Task": {
          "$ref": "#/definitions/Task"
        },
        "Rec": {
          "$ref": "#/definitions/Rec"
        },
        "Run": {
          "$ref": "#/definitions/Run"
        },
        "Echo": {
          "$ref": "#/definitions/Echo"
        },
        "Recording": {
          "type": "string",
          "title": "Recording Label",
          "default": ""
        },
        "Modality": {
          "type": "string",
          "title": "Modality Label",
          "default": "physio",
          "enum": [
            "stim",
            "physio"
          ]
        },
        "Custom": {
          "$ref": "#/definitions/Custom"
        }
      },
      "required": [
        "Filename",
        "Task",
        "Modality"
      ]
    },
    "diffusion_file": {
      "description": "BIDS template for diffusion files",
      "properties": {
        "Filename": {
          "type": "string",
          "title": "Filename",
          "default": "",
          "minLength": 1,
          "auto_update": "sub-{subject.code}[_ses-{session.info.BIDS.Label}][_acq-{file.info.BIDS.Acq}][_dir-{file.info.BIDS.Dir}][_run-{file.info.BIDS.Run}]_{file.info.BIDS.Modality}{ext}"
        },
        "Folder": {
          "type": "string",
          "title": "Folder",
          "default": "dwi"
        },
        "Path": {
          "type": "string",
          "title": "Path",
          "default": "",
          "auto_update": "sub-{subject.code}[/ses-{session.info.BIDS.Label}]/{file.info.BIDS.Folder}"
        },
        "Dir": {
          "$ref": "#/definitions/Dir"
        },
        "Acq": {
          "$ref": "#/definitions/Acq"
        },
        "Run": {
          "$ref": "#/definitions/Run"
        },
        "Modality": {
          "type": "string",
          "title": "Modality Label",
          "default": "dwi",
          "enum": [
            "dwi"
          ]
        }
      },
      "required": [
        "Filename",
        "Modality"
      ]
    },
    "fieldmap_file": {
      "description": "BIDS template for field map files",
      "properties": {
        "Filename": {
          "type": "string",
          "title": "Filename",
          "default": "",
          "minLength": 1,
          "auto_update": "sub-{subject.code}[_ses-{session.info.BIDS.Label}][_acq-{file.info.BIDS.Acq}][_dir-{file.info.BIDS.Dir}][_run-{file.info.BIDS.Run}]_{file.info.BIDS.Modality}{ext}"
        },
        "Folder": {
          "type": "string",
          "title": "Folder",
          "default": "fmap"
        },
        "Path": {
          "type": "string",
          "title": "Path",
          "default": "",
          "auto_update": "sub-{subject.code}[/ses-{session.info.BIDS.Label}]/{file.info.BIDS.Folder}"
        },
        "Acq": {
          "$ref": "#/definitions/Acq"
        },
        "Run": {
          "$ref": "#/definitions/Run"
        },
        "IntendedFor": {
          "$ref": "#/definitions/IntendedFor"
        },
        "Modality": {
          "type": "string",
          "title": "Modality Label",
          "default": "NA",
          "enum": [
            "phasediff",
            "magnitude1",
            "magnitude2",
            "phase1",
            "phase2",
            "magnitude",
            "fieldmap"
          ]
        },
        "Custom": {
          "$ref": "#/definitions/Custom"
        }
      },
      "required": [
        "Filename",
        "Modality"
      ]
    },
    "fieldmap_phase_encoded_file": {
      "description": "BIDS template for phase encoded field map files",
      "properties": {
        "Filename": {
          "type": "string",
          "label": "Filename",
          "default": "",
          "auto_update": "sub-{subject.code}[_ses-{session.info.BIDS.Label}][_acq-{file.info.BIDS.Acq}][_ce-{file.info.BIDS.Ce}][_run-{file.info.BIDS.Run}]_dir-{file.info.BIDS.Dir}_{file.info.BIDS.Modality}{ext}"
        },
        "Folder": {
          "type": "string",
          "label": "Folder",
          "default": "fmap"
        },
        "Path": {
          "type": "string",
          "label": "Path",
          "default": "",
          "auto_update": "sub-{subject.code}[/ses-{session.info.BIDS.Label}]/{file.info.BIDS.Folder}"
        },
        "Acq": {
          "$ref": "#/definitions/Acq"
        },
        "Ce": {
          "$ref": "#/definitions/Ce"
        },
        "Dir": {
          "type": "string",
          "label": "Phase-Encoding Direction",
          "default": "NA",
          "minLength": 1,
          "pattern": "^[a-zA-Z0-9]*$"
        },
        "Run": {
          "$ref": "#/definitions/Run"
        },
        "IntendedFor": {
          "$ref": "#/definitions/IntendedFor"
        },
        "Modality": {
          "type": "string",
          "label": "Modality Label",
          "default": "",
          "enum": [
            "epi"
          ]
        }
      },
      "required": [
        "Filename",
        "Folder",
        "Path",
        "Modality",
        "Dir"
      ]
    },
    "dicom_file": {
      "description": "BIDS template for DICOM files",
      "properties": {
        "Filename": {
          "type": "string",
          "title": "Filename",
          "auto_update": "sub-{subject.code}_[ses-{session.info.BIDS.Label}][_{file.info.BIDS.reproinString}][_{file.info.BIDS.Modality}]{ext}"
        },
        "reproinString": {
          "$ref": "#/definitions/reproinString"
        },
        "Folder": {
          "type": "string",
          "title": "Folder",
          "default": "sourcedata"
        },
        "Path": {
          "type": "string",
          "title": "Path",
          "default": "",
          "auto_update": "{file.info.BIDS.Folder}/sub-{subject.code}[/ses-{session.info.BIDS.Label}]/{file.info.BIDS.SeqType}"
        },
        "SeqType": {
          "$ref": "#/definitions/SeqType"
        }
      },
      "required": [
        "Filename",
        "Folder"
      ]
    },
    "json_file": {
      "description": "BIDS template for JSON files",
      "properties": {
        "Filename": {
          "$ref": "#/definitions/Filename"
        },
        "Folder": {
          "type": "string",
          "title": "Folder",
          "default": ""
        },
        "Path": {
          "type": "string",
          "title": "Path",
          "default": ""
        }
      },
      "required": [
        "Filename"
      ]
    }
  },
  "rules": [
    {
      "id": "bids_project",
      "template": "project",
      "where": {
        "container_type": "project"
      }
    },
    {
      "id": "bids_project_file",
      "template": "project_file",
      "where": {
        "container_type": "file",
        "parent_container_type": "project"
      }
    },
    {
      "id": "bids_session",
      "template": "session",
      "where": {
        "container_type": "session"
      }
    },
    {
      "id": "bids_session_file",
      "template": "session_file",
      "where": {
        "container_type": "file",
        "parent_container_type": "session"
      }
    },
    {
      "id": "bids_acquisition",
      "template": "acquisition",
      "where": {
        "container_type": "acquisition"
      },
      "initialize": {
        "ignore": {
          "$switch": {
            "$on": "acquisition.label",
            "$cases": [
              {
                "$regex": "(^|_)ignore-BIDS",
                "$value": true
              },
              {
                "$default": true,
                "$value": false
              }
            ]
          }
        }
      }
    },
    {
      "id": "reproin_anat_file",
      "template": "anat_file",
      "where": {
        "acquisition.label": {
          "$regex": ".*(anat(-.+|$))"
        },
        "container_type": "file",
        "parent_container_type": "acquisition",
        "file.type": {
          "$in": [
            "nifti",
            "NIfTI"
          ]
        },
        "file.classification.Intent": {
          "$in": [
            "Structural",
            "Perfusion"
          ]
        }
      },
      "initialize": {
        "Acq": {
          "acquisition.label": {
            "$regex": "(^|_)acq-(?P<value>.*?)(_(acq|ce|dir|echo|mod|proc|rec|recording|run|task)-|$|__)"
          }
        },
        "Ce": {
          "acquisition.label": {
            "$regex": "(^|_)ce-(?P<value>.*?)(_(acq|ce|dir|echo|mod|proc|rec|recording|run|task)-|$|__)"
          }
        },
        "Modality": {
          "acquisition.label": {
            "$regex": ".*anat-(?P<value>.+?)$"
          }
        },
        "Mod": {
          "acquisition.label": {
            "$regex": "(^|_)mod-(?P<value>.*?)(_|$)"
          }
        },
        "Rec": {
          "acquisition.label": {
            "$regex": "(^|_)rec-(?P<value>.*?)(_(acq|ce|dir|echo|mod|proc|rec|recording|run|task)-|$|__)"
          }
        }
      }
    },
    {
      "id": "reproin_func_file",
      "template": "func_file",
      "where": {
        "acquisition.label": {
          "$regex": ".*func(-|$)"
        },
        "container_type": "file",
        "parent_container_type": "acquisition",
        "file.type": {
          "$in": [
            "nifti",
            "NIfTI"
          ]
        }
      },
      "initialize": {
        "Acq": {
          "acquisition.label": {
            "$regex": "(^|_)acq-(?P<value>.*?)(_(acq|ce|dir|echo|mod|proc|rec|recording|run|task)-|$|__)"
          }
        },
        "Ce": {
          "acquisition.label": {
            "$regex": "(^|_)ce-(?P<value>.*?)(_(acq|ce|dir|echo|mod|proc|rec|recording|run|task)-|$|__)"
          }
        },
        "Dir": {
          "acquisition.label": {
            "$regex": "(^|_)dir-(?P<value>.*?)(_(acq|ce|dir|echo|mod|proc|rec|recording|run|task)-|$|__)"
          }
        },
        "Echo": {
          "acquisition.label": {
            "$regex": "(^|_)echo-(?P<value>\\d+)(_|$)"
          }
        },
        "Modality": {
          "acquisition.label": {
            "$regex": ".*func-(?P<value>.+?)$"
          }
        },
        "Rec": {
          "acquisition.label": {
            "$regex": "(^|_)rec-(?P<value>.*?)(_(acq|ce|dir|echo|mod|proc|rec|recording|run|task)-|$|__)"
          }
        },
        "Run": {
          "acquisition.label": {
            "$regex": [
              "(^|_)run-(?P<value>\\d+)(_|$)",
              "(^|_)run(?P<value>[=+])(_|$)"
            ]
          },
          "$run_counter": {
            "key": "functional.{file.info.BIDS.Task}"
          }
        },
        "Task": {
          "acquisition.label": {
            "$regex": "(^|_)task-(?P<value>.*?)(_(acq|ce|dir|echo|mod|proc|rec|recording|run|task)-|$|__)"
          }
        }
      }
    },
    {
      "id": "reproin_task_events_file",
      "template": "task_events_file",
      "where": {
        "container_type": "file",
        "file.type": {
          "$in": [
            "tabular data",
            "Tabular Data"
          ]
        },
        "acquisition.label": {
          "$regex": "^func(-|_)"
        }
      },
      "initialize": {
        "Acq": {
          "acquisition.label": {
            "$regex": "(^|_)acq-(?P<value>.*?)(_(acq|ce|dir|echo|mod|proc|rec|recording|run|task)-|$|__)"
          }
        },
        "Ce": {
          "acquisition.label": {
            "$regex": "(^|_)ce-(?P<value>.*?)(_(acq|ce|dir|echo|mod|proc|rec|recording|run|task)-|$|__)"
          }
        },
        "Dir": {
          "acquisition.label": {
            "$regex": "(^|_)dir-(?P<value>.*?)(_(acq|ce|dir|echo|mod|proc|rec|recording|run|task)-|$|__)"
          }
        },
        "Echo": {
          "acquisition.label": {
            "$regex": "(^|_)echo-(?P<value>\\d+)(_|$)"
          }
        },
        "Modality": {
          "acquisition.label": {
            "$regex": "^func-(?P<value>.*?)(_|$)"
          }
        },
        "Rec": {
          "acquisition.label": {
            "$regex": "(^|_)rec-(?P<value>.*?)(_(acq|ce|dir|echo|mod|proc|rec|recording|run|task)-|$|__)"
          }
        },
        "Run": {
          "acquisition.label": {
            "$regex": [
              "(^|_)run-(?P<value>\\d+)(_|$)",
              "(^|_)run(?P<value>[=+])(_|$)"
            ]
          },
          "$run_counter": {
            "key": "task_events.{file.info.BIDS.Task}"
          }
        },
        "Task": {
          "acquisition.label": {
            "$regex": "(^|_)task-(?P<value>.*?)(_(acq|ce|dir|echo|mod|proc|rec|recording|run|task)-|$|__)"
          }
        }
      }
    },
    {
      "id": "reproin_physio_file",
      "template": "physio_task_file",
      "where": {
        "acquisition.label": {
          "$regex": "^func(-|_)"
        },
        "container_type": "file",
        "parent_container_type": "acquisition",
        "file.name": {
          "$regex": "^Physio"
        },
        "file.type": {
          "$in": [
            "log"
          ]
        }
      },
      "initialize": {
        "Acq": {
          "acquisition.label": {
            "$regex": "(^|_)acq-(?P<value>.*?)(_(acq|ce|dir|echo|mod|proc|rec|recording|run|task)-|$|__)"
          }
        },
        "Echo": {
          "acquisition.label": {
            "$regex": "(^|_)echo-(?P<value>\\d+)(_|$)"
          }
        },
        "Modality": "physio",
        "Rec": {
          "acquisition.label": {
            "$regex": "(^|_)rec-(?P<value>.*?)(_(acq|ce|dir|echo|mod|proc|rec|recording|run|task)-|$|__)"
          }
        },
        "Run": {
          "acquisition.label": {
            "$regex": [
              "(^|_)run-(?P<value>\\d+)(_|$)",
              "(^|_)run(?P<value>[=+])(_|$)"
            ]
          },
          "$run_counter": {
            "key": "physio.{file.info.BIDS.Task}"
          }
        },
        "Task": {
          "acquisition.label": {
            "$regex": "(^|_)task-(?P<value>.*?)(_(acq|ce|dir|echo|mod|proc|rec|recording|run|task)-|$|__)"
          }
        }
      }
    },
    {
      "id": "reproin_fieldmap_file",
      "template": "fieldmap_file",
      "where": {
        "acquisition.label": {
          "$regex": ".*fmap-((?!epi.*))"
        },
        "container_type": "file",
        "parent_container_type": "acquisition",
        "file.type": {
          "$in": [
            "nifti",
            "NIfTI"
          ]
        }
      },
      "initialize": {
        "Acq": {
          "acquisition.label": {
            "$regex": "(^|_)acq-(?P<value>.*?)(_(acq|ce|dir|echo|mod|proc|rec|recording|run|task)-|$|__)"
          }
        },
        "Modality": {
          "acquisition.label": {
            "$regex": ".*fmap-(?P<value>.*?)$"
          }
        },
        "Run": {
          "acquisition.label": {
            "$regex": [
              "(^|_)run-(?P<value>\\d+)(_|$)",
              "(^|_)run(?P<value>[=+])(_|$)"
            ]
          },
          "$run_counter": {
            "key": "field_map"
          }
        }
      }
    },
    {
      "id": "reproin_phase_encoded_fieldmap_file",
      "template": "fieldmap_phase_encoded_file",
      "where": {
        "acquisition.label": {
          "$regex": ".*fmap-epi$"
        },
        "container_type": "file",
        "parent_container_type": "acquisition",
        "file.type": {
          "$in": [
            "nifti",
            "NIfTI"
          ]
        }
      },
      "initialize": {
        "Acq": {
          "acquisition.label": {
            "$regex": "(^|_)acq-(?P<value>.*?)(_(acq|ce|dir|echo|mod|proc|rec|recording|run|task)-|$|__)"
          }
        },
        "Ce": {
          "acquisition.label": {
            "$regex": "(^|_)ce-(?P<value>.*?)(_(acq|ce|dir|echo|mod|proc|rec|recording|run|task)-|$|__)"
          }
        },
        "Dir": {
          "acquisition.label": {
            "$regex": "(^|_)dir-(?P<value>.*?)(_(acq|ce|dir|echo|mod|proc|rec|recording|run|task)-|$|__)"
          }
        },
        "Modality": {
          "acquisition.label": {
            "$regex": ".*fmap-(?P<value>.*?)(_|$)"
          }
        },
        "Run": {
          "acquisition.label": {
            "$regex": [
              "(^|_)run-(?P<value>\\d+)(_|$)",
              "(^|_)run(?P<value>[=+])(_|$)"
            ]
          },
          "$run_counter": {
            "key": "field_map.{file.info.BIDS.Dir}"
          }
        }
      }
    },
    {
      "id": "reproin_diffusion_file",
      "template": "diffusion_file",
      "where": {
        "acquisition.label": {
          "$regex": ".*(dwi(-.+|$))"
        },
        "container_type": "file",
        "parent_container_type": "acquisition",
        "file.type": {
          "$in": [
            "nifti",
            "NIfTI",
            "bvec",
            "bval",
            "BVEC",
            "BVAL"
          ]
        }
      },
      "initialize": {
        "Acq": {
          "acquisition.label": {
            "$regex": "(^|_)acq-(?P<value>.*?)(_(acq|ce|dir|echo|mod|proc|rec|recording|run|task)-|$|__)"
          }
        },
        "Dir": {
          "acquisition.label": {
            "$regex": "(^|_)dir-(?P<value>.*?)(_(acq|ce|dir|echo|mod|proc|rec|recording|run|task)-|$|__)"
          }
        },
        "Run": {
          "acquisition.label": {
            "$regex": [
              "(^|_)run-(?P<value>\\d+)(_|$)",
              "(^|_)run(?P<value>[=+])(_|$)"
            ]
          },
          "$run_counter": {
            "key": "diffusion"
          }
        }
      }
    },
    {
      "id": "bids_dicom_file",
      "template": "dicom_file",
      "where": {
        "container_type": "file",
        "file.type": {
          "$in": [
            "dicom",
            "DICOM"
          ]
        },
        "acquisition.label": {
          "$regex": "(.+_)?(dwi|anat|func|fmap)(-.+|$)"
        },
        "file.classification.Intent": {
          "$in": [
            "Structural",
            "Fieldmap",
            "Functional",
            "Perfusion"
          ]
        }
      },
      "initialize": {
        "Modality": {
          "acquisition.label": {
            "$regex": ".*((func|anat|dwi|fmap)-)(?P<value>.+)?"
          }
        },
        "SeqType": {
          "acquisition.label": {
            "$regex": "(?P<value>dwi|anat|func|fmap)(-.+)?"
          }
        },
        "reproinString": {
          "acquisition.label": {
            "$regex": "((?P<value>.*)_)?(anat|dwi|func|fmap)"
          }
        }
      }
    }
  ],
  "resolvers": [
    {
      "id": "bids_intended_for",
      "templates": [
        "fieldmap_file",
        "fieldmap_phase_encoded_file"
      ],
      "update": "file.info.IntendedFor",
      "filter": "file.info.BIDS.IntendedFor",
      "resolveFor": "session",
      "type": "file",
      "format": "[ses-{session.info.BIDS.Label}/]{file.info.BIDS.Folder}/{file.info.BIDS.Filename}"
    }
  ]
}
