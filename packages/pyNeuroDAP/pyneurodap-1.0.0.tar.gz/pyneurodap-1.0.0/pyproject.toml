[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "pyNeuroDAP"
version = "1.0.0"
description = "Neural Data Analysis Package for spike processing, trial management, and modeling"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Shun Li", email = "shunli@g.harvard.edu"}
]
maintainers = [
    {name = "Shun Li", email = "shunli@g.harvard.edu"}
]
keywords = ["neuroscience", "neural data", "spike analysis", "electrophysiology", "rSLDS", "machine learning"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Operating System :: OS Independent",
    "Operating System :: MacOS",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX :: Linux",
]
requires-python = ">=3.8"
dependencies = [
    "numpy>=1.20.0",
    "scipy>=1.7.0",
    "pandas>=1.3.0",
    "matplotlib>=3.3.0",
    "seaborn>=0.11.0",
    "scikit-learn>=1.0.0",
    "h5py>=3.0.0",
    "tables>=3.7.0",
    "tqdm>=4.60.0",
    "dask>=2022.0.0",
    "PySide6>=6.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov>=2.0",
    "black>=21.0",
    "flake8>=3.8",
    "mypy>=0.800",
    "pre-commit>=2.0",
]
docs = [
    "sphinx>=4.0.0",
    "sphinx-rtd-theme>=1.0.0",
    "numpydoc>=1.1.0",
    "myst-parser>=0.15.0",
]
test = [
    "pytest>=6.0",
    "pytest-cov>=2.0",
    "pytest-mock>=3.0",
]
full = [
    "ssm>=0.3.0",
    "jax>=0.3.0",
    "jaxlib>=0.3.0",
]

[project.urls]
Homepage = "https://github.com/shunnnli/pyNeuroDAP"
Documentation = "https://github.com/shunnnli/pyNeuroDAP#readme"
Repository = "https://github.com/shunnnli/pyNeuroDAP"
"Bug Tracker" = "https://github.com/shunnnli/pyNeuroDAP/issues"
"Source Code" = "https://github.com/shunnnli/pyNeuroDAP"

# CLI script removed - no cli.py module exists

[tool.setuptools]
packages = ["pyNeuroDAP"]

[tool.setuptools.package-data]
pyNeuroDAP = ["*.py", "*.md", "*.txt"]

[tool.setuptools.exclude-package-data]
"*" = ["*.pyc", "*.pyo", "*.pyd", "__pycache__", "*.so", "*.dylib", "*.dll"]

# Version is now static in project section

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312', 'py313']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["pyNeuroDAP"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=pyNeuroDAP",
    "--cov-report=term-missing",
    "--cov-report=html",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

[tool.coverage.run]
source = ["pyNeuroDAP"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/env/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "numpy.*",
    "scipy.*",
    "pandas.*",
    "matplotlib.*",
    "sklearn.*",
    "h5py.*",
    "tables.*",
    "dask.*",
    "PySide6.*",
]
ignore_missing_imports = true
