# This file is part of biomesh licensed under the MIT License.
#
# See the LICENSE file in the top-level for license information.
#
# SPDX-License-Identifier: MIT
"""Test small utilities."""

import numpy as np
import scipy.spatial as sp

import biomesh


def test_bislerp():
    """Test bislerp operation for rotations."""

    random_rotations_1 = sp.transform.Rotation.from_quat(
        np.array(
            [
                [0.10377005, 0.42208032, 0.06739728, 0.20368327],
                [0.42899313, 0.38149584, 0.25978406, 0.18940957],
                [0.44195921, 0.29562431, 0.3516844, 0.2188311],
                [0.17815841, 0.29713605, 0.31167307, 0.14250813],
                [0.44414069, 0.16290792, 0.16563452, 0.4993757],
                [0.26088402, 0.0641587, 0.27387306, 0.11629013],
                [0.37962083, 0.52176654, 0.28088421, 0.34948843],
                [0.02467308, 0.29008909, 0.10773388, 0.46944871],
                [0.17777532, 0.21832771, 0.62441441, 0.21813217],
                [0.36943482, 0.25673186, 0.35257723, 0.44881636],
            ]
        )
    )
    random_rotations_2 = sp.transform.Rotation.from_quat(
        np.array(
            [
                [0.27087052, 0.14185837, 0.32699565, 0.32047239],
                [0.1100865, 0.41477543, 0.4821505, 0.42659205],
                [0.18470968, 0.06425801, 0.4048248, 0.2020325],
                [0.4595524, 0.36257552, 0.01671866, 0.10775836],
                [0.42378484, 0.07148258, 0.09983605, 0.22052701],
                [0.12910392, 0.55275514, 0.09413712, 0.17272525],
                [0.04430284, 0.29633272, 0.13404752, 0.27092465],
                [0.50856929, 0.50803009, 0.36302255, 0.02316184],
                [0.28272705, 0.07699512, 0.14529143, 0.56637091],
                [0.36387167, 0.09881067, 0.55384959, 0.43555581],
            ]
        )
    )
    t = np.linspace(0, 1, 10)

    rotations = biomesh.utils.bislerp(random_rotations_1, random_rotations_2, t)

    expected_quats = np.array(
        [
            [0.21408436, 0.87077918, 0.13904499, 0.42021185],
            [0.60471909, 0.58638292, 0.42994409, 0.32498917],
            [0.60659571, 0.37780372, 0.60421472, 0.35246356],
            [0.53837475, 0.65110534, 0.460768, 0.27185899],
            [0.74262705, 0.1954047, 0.22357685, 0.60027949],
            [0.0116780937, 0.8750763374, 0.016219096, 0.4835720906],
            [0.23619343, 0.69989401, 0.33616745, 0.58425379],
            [0.7281708866, 0.4690390419, 0.4996123626, 0.012530932],
            [0.426744029, 0.076734822, 0.1643270216, 0.8860010896],
            [0.4553292, 0.12364629, 0.69305722, 0.54503083],
        ]
    )

    np.testing.assert_allclose(np.abs(rotations.as_quat()), expected_quats)
