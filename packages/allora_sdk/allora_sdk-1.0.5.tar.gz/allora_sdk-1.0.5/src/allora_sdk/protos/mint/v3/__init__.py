# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: mint/v3/events.proto
# plugin: python-betterproto2
# This file has been @generated

__all__ = (
    "EventEcosystemTokenMintSet",
    "EventRewardCurrentBlockEmission",
    "EventTokenomicsSet",
)

from dataclasses import dataclass

import betterproto2

from ...message_pool import default_message_pool

_COMPILER_VERSION = "0.7.1"
betterproto2.check_compiler_version(_COMPILER_VERSION)


@dataclass(eq=False, repr=False)
class EventEcosystemTokenMintSet(betterproto2.Message):
    block_height: "int" = betterproto2.field(1, betterproto2.TYPE_UINT64)

    token_amount: "str" = betterproto2.field(2, betterproto2.TYPE_STRING)


default_message_pool.register_message(
    "mint.v3", "EventEcosystemTokenMintSet", EventEcosystemTokenMintSet
)


@dataclass(eq=False, repr=False)
class EventRewardCurrentBlockEmission(betterproto2.Message):
    block_height: "int" = betterproto2.field(1, betterproto2.TYPE_UINT64)

    token_amount: "str" = betterproto2.field(2, betterproto2.TYPE_STRING)


default_message_pool.register_message(
    "mint.v3", "EventRewardCurrentBlockEmission", EventRewardCurrentBlockEmission
)


@dataclass(eq=False, repr=False)
class EventTokenomicsSet(betterproto2.Message):
    staked_token_amount: "str" = betterproto2.field(1, betterproto2.TYPE_STRING)

    circulating_supply: "str" = betterproto2.field(2, betterproto2.TYPE_STRING)

    emissions_amount: "str" = betterproto2.field(3, betterproto2.TYPE_STRING)


default_message_pool.register_message(
    "mint.v3", "EventTokenomicsSet", EventTokenomicsSet
)
