name: Primary

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  library:
    name: Library
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Install uv
        uses: astral-sh/setup-uv@v5
      - name: Install Python
        run: uv python install
      - name: Install Dependencies
        run: uv sync --dev
      - name: Run ruff
        run: uv run ruff check .
      - name: Run pytest
        run: uv run pytest --cov --cov-branch --cov-report=xml
        env:
          TESTS_WEBHOOK_URL: ${{ secrets.TESTS_WEBHOOK_URL }}
      - name: Upload Coverage Report
        uses: codecov/codecov-action@v5
        with:
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}
      - name: Build Package
        run: uv build
      # - name: Publish Package to PyPI
      #   env:
      #     PYPI_API_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
      #   run: uv publish --token $PYPI_API_TOKEN
  documentation:
    name: Documentation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Install uv
        uses: astral-sh/setup-uv@v5
      - name: Install Python
        run: uv python install
      - name: Configure Git
        run: |
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com
      - name: Print cache_id
        run: echo "cache_id=$(date --utc '+%V')" >> $GITHUB_ENV 
      - uses: actions/cache@v4
        with:
          key: mkdocs-material-${{ env.cache_id }}
          path: .cache 
          restore-keys: |
            mkdocs-material-
      - name: Install Dependencies
        run: uv add mkdocstrings[python] mkdocs-material
      - name: Build Documentation
        run: uv run mkdocs build
      - name: Deploy Documentation
        run: uv run mkdocs gh-deploy --force
