[project]
name = "reasoning-kernel"
version = "0.0.6"
description = "Model Synthesis Architecture (MSA) reasoning engine built on ReasoningFleet's FastAPI/Semantic Kernel foundation with NumPyro probabilistic programming"
authors = [
    {name = "Qredence", email = "contact@qredence.ai"}
]
maintainers = [
    {name = "Qredence Team", email = "contact@qredence.ai"}
]
readme = "README.md"
license = {text = "Apache-2.0"}
requires-python = ">=3.10,<3.14"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Framework :: FastAPI",
    "Framework :: AsyncIO",
]
keywords = [
    "ai",
    "reasoning",
    "semantic-kernel",
    "msa",
    "probabilistic-programming",
    "numpyro",
    "fastapi",
    "async",
    "machine-learning"
]

dependencies = [
    # Core FastAPI application
    "fastapi>=0.104.0,<1.0.0",
    "uvicorn[standard]>=0.24.0,<1.0.0",
    "pydantic>=2.5.0,<3.0.0",
    "aiohttp>=3.9.0,<4.0.0",
    # Security dependencies
    "bcrypt>=4.0.0",
    "itsdangerous>=2.1.0",
    # Microsoft Semantic Kernel for orchestration
    "semantic-kernel>=1.36.1",
    # NumPyro and JAX for probabilistic modeling
    "numpyro>=0.15.0",
    "jax[cpu]>=0.4.20",
    "jaxlib>=0.4.20",
    "arviz>=0.17.0",
    # Additional AI and ML dependencies
    "numpy>=1.24.0",
    "scipy>=1.11.0",
    # Vector embeddings and search
    "sentence-transformers>=2.2.2",
    # Graph processing and visualization
    "networkx>=3.2.1",
    "graphviz>=0.20.1",
    # Configuration and environment management
    "python-dotenv>=1.0.0",
    "pydantic-settings>=2.1.0",
    # HTTP client for testing and async requests
    "httpx>=0.25.0",
    # OpenAI client
    "openai>=1.10.0",
    # Logging and monitoring
    "structlog>=23.2.0",
    "psutil>=5.9.8",
    # Redis for vector search and memory
    "redis>=6.0.0",
    "hiredis>=2.3.0",
    # PostgreSQL for long-term memory
    "sqlalchemy>=2.0.0",
    "psycopg2-binary>=2.9.0",
    # Additional utilities
    "pandas>=2.0.0",
    "tabulate>=0.9.0",
    "bleach>=6.1.0",
    # Static analysis tool used by tests/tools
    "vulture>=2.7",
    # Daytona SDK
    "daytona-sdk>=0.1.1",
    "daytona>=0.1.1",
    "langextract",
    "redisvl>=0.8.0",
    # CLI framework
    "click>=8.1.0",
    # Rich terminal UI
    "rich>=13.0.0",
    "autoflake>=2.3.1",
    "tiktoken>=0.11.0",
    "jax-metal>=0.1.1",
    "ipython>=8.37.0",
    "langcache>=0.9.9",
    "matplotlib>=3.8,<3.11",
    "sse-starlette>=3.0.2",
    "websockets>=15.0.1",
    "typer>=0.17.3",
    "tqdm>=4.67.1",
    "aiofiles>=24.1.0",
    "tenacity>=9.1.2",
    "prompt-toolkit>=3.0.51",
    "azure-ai-agents>=1.2.0b3",
]

[project.urls]
Homepage = "https://github.com/Qredence/Reasoning-Kernel"
Documentation = "https://github.com/Qredence/Reasoning-Kernel/tree/main/docs"
Repository = "https://github.com/Qredence/Reasoning-Kernel"
"Bug Reports" = "https://github.com/Qredence/Reasoning-Kernel/issues"
"Source Code" = "https://github.com/Qredence/Reasoning-Kernel"
Changelog = "https://github.com/Qredence/Reasoning-Kernel/releases"
"Funding" = "https://github.com/sponsors/Qredence"

[project.optional-dependencies]
# Azure services extras
azure = [
    "azure-identity>=1.15.0",
    "azure-core>=1.29.0",
    "azure-ai-inference>=1.0.0b6",
    "azure-ai-projects",
    "azure-core-tracing-opentelemetry>=1.0.0b11",
    "azure-search-documents>=11.6.0b4",
    "azure-cosmos~=4.7"
]

# Google services extras
google = [
    "google-cloud-aiplatform>=1.60.0,<2.0.0",
    "google-generativeai~=0.8"
]

# HuggingFace integrations
huggingface = [
    "transformers>=4.36.0",
    "sentence-transformers>=2.2.0",
]

# Redis extras
redis = [
    "types-redis~=4.6.0.20240425",
    "aioredis>=2.0.1",
]

# Realtime extras
realtime = [
    "websockets>=13,<16",
    "aiortc>=1.9.0"
]

# Data science extras
data-science = [
    "pandas~=2.2"
]

# Data/IO extras
data-io = [
    "usearch~=2.16",
    "pyarrow>=12.0,<22.0"
]

# Observability extras
observability = [
    "opentelemetry-api~=1.25",
    "opentelemetry-sdk~=1.25",
    "opentelemetry-exporter-otlp~=1.25",
    "opentelemetry-instrumentation-fastapi~=0.46b0",
    "opentelemetry-instrumentation-httpx~=0.46b0",
    "opentelemetry-instrumentation-logging~=0.46b0",
    "prometheus-client>=0.20.0"
]

# Dapr integration extras
dapr = [
    "dapr>=1.14.0",
    "dapr-ext-fastapi>=1.14.0",
    "flask-dapr>=1.14.0"
]

# Development dependencies
dev = [
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.7.0",
    "pre-commit>=3.6.0",
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.12.0",
    "pytest-xdist>=3.5.0",
    "ruff>=0.5.0",
    "jupyter>=1.0.0",
]

# Extended functionality groups
all = [
    "reasoning-kernel[azure,huggingface,redis,realtime,data-science,data-io,google,dapr,observability]",
]

[build-system]
requires = ["hatchling>=1.21.0"]
build-backend = "hatchling.build"

[project.scripts]
reasoning-kernel = "reasoning_kernel.cli.core:main"

[tool.black]
line-length = 120
target-version = ['py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 120
known_first_party = ["reasoning_kernel"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
warn_redundant_casts = true
warn_unused_ignores = true
show_column_numbers = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "numpyro.*",
    "jax.*",
    "semantic_kernel.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["reasoning_kernel"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

# Hatch build configuration
[tool.hatch.build.targets.wheel]
packages = ["reasoning_kernel"]

[tool.hatch.build.targets.sdist]
include = [
    "/reasoning_kernel",
    "/README.md",
    "/LICENSE",
    "/pyproject.toml",
]
exclude = [
    "/.github",
    "/tests",
    "/benchmarks",
    "/examples",
    "/docs",
    "/.venv",
    "/__pycache__",
    "*.pyc",
]

# uv specific configuration
[tool.uv]
dev-dependencies = [
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.7.0",
    "pre-commit>=3.6.0",
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.12.0",
    "pytest-xdist>=3.5.0",
    "ruff>=0.5.0",
    "jupyter>=1.0.0",
    "build>=1.3.0",
    "twine>=6.1.0",
]
