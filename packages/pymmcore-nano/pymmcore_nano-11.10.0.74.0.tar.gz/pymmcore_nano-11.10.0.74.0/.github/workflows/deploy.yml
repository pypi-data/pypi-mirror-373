name: Build wheels

on:
  workflow_dispatch:
  pull_request:
  push:
    branches: [main]
    tags: [v*]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }} ${{ matrix.macos_arch }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        include:
          - os: macos-13
            macos_arch: "x86_64"
          - os: macos-latest
            macos_arch: "arm64"

    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - uses: ilammy/msvc-dev-cmd@v1
        with:
          toolset: "14.29"
      - uses: astral-sh/setup-uv@v6
      - run: uv run --no-dev --group build scripts/extract_version.py --update

      - name: Build wheels
        uses: pypa/cibuildwheel@v3.1
        env:
          CIBW_ARCHS_MACOS: "${{ matrix.macos_arch }}"
          # Python on Linux is usually configured to add debug information,
          # which increases binary size by ~11-fold. Remove for the builds we
          # distribute.
          CIBW_ENVIRONMENT_LINUX: "LDFLAGS=-Wl,--strip-debug"

      - uses: actions/upload-artifact@v4
        with:
          name: artifact-wheels-${{ matrix.os }}${{ matrix.macos_arch }}
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - uses: astral-sh/setup-uv@v6
      - name: Build sdist
        run: |
          uv run --no-dev --group build scripts/extract_version.py --update
          uv build --sdist

      - uses: actions/upload-artifact@v4
        with:
          name: artifact-sdist
          path: dist/*.tar.gz

  publish:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    # publish on every tag
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')

    # https://docs.pypi.org/trusted-publishers/
    permissions:
      id-token: write # for trusted publishing on PyPi
      contents: write # allows writing releases

    steps:
      - uses: actions/download-artifact@v5
        with:
          pattern: artifact-*
          merge-multiple: true
          path: dist

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

      - uses: softprops/action-gh-release@v2
        with:
          generate_release_notes: true
          files: "./dist/*"
