[project]
name = "aws-annoying"
description = "Utils to handle some annoying AWS tasks."
version = "0.8.1"
authors = [{ name = "Yuchan Lee", email = "lasuillard@gmail.com" }]
readme = "README.md"
license = "MIT"
requires-python = ">=3.9, <4.0"
dependencies = [
  "boto3>=1,<2",
  "requests>=2,<3",
  "tqdm>=4,<5",
  "typer>=0,<1",
  "pydantic>=2,<3",
]

[project.scripts]
"aws-annoying" = "aws_annoying.cli.main:entrypoint"

[dependency-groups]
dev = [
  "boto3-stubs[ecs,secretsmanager,ssm,sts,ec2]>=1.37.1",
  "mypy>=1.15,<1.17",
  "ruff>=0.9.9,<0.12.0",
  "types-requests>=2.31.0.6",
]
test = [
  "coverage>=7.6,<7.9",
  "moto[secretsmanager,server,ssm,ecs]~=5.1.8",
  "pytest>=8.3.2,<8.5.0",
  "pytest-cov>=6.0,<6.2",
  "pytest-env~=1.1.1",
  "pytest-snapshot>=0.9.0",
  "pytest-sugar>=1.0,<1.2",
  "pytest-xdist>=3.6.1",
  "testcontainers[localstack]>=4.9.2",
  "toml>=0.10.2",
  "types-toml>=0.10.8.20240310",
]

[project.urls]
Homepage = "https://github.com/lasuillard/aws-annoying"
Repository = "https://github.com/lasuillard/aws-annoying.git"
Issues = "https://github.com/lasuillard/aws-annoying/issues"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.uv]
default-groups = ["dev", "test"]

[tool.hatch.build.targets.wheel]
packages = ["aws_annoying"]

[tool.ruff]
target-version = "py39"
line-length = 120

[tool.ruff.lint]
select = ["ALL"]
ignore = [
  "FIX",
  "TD003",
  "ANN401",
  "D100",
  "D105",
  "D106",
  "ANN204",
  "UP007",  # Available in Python 3.10+
]

[tool.ruff.lint.extend-per-file-ignores]
"__init__.py" = ["D104"]
"tests/*" = ["D", "S101", "PLR2004", "SLF001", "N801"]
"scripts/*" = ["INP001", "T201"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.mypy]
python_version = "3.9"
exclude = ['^\.venv/*']
namespace_packages = true
check_untyped_defs = true
disallow_untyped_defs = true
ignore_missing_imports = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true
warn_return_any = true
show_error_codes = true
strict_optional = true
no_implicit_reexport = true

[tool.pytest.ini_options]
addopts = [
  "--numprocesses=auto",
  "--strict-markers",
  "--doctest-modules",
  "--cov",
  "--cov-report=term",
  "--cov-report=xml",
  "--show-capture=all",
  "--junitxml=junit.xml",
  "--allow-snapshot-deletion",
]
testpaths = ["tests"]
filterwarnings = ["ignore::DeprecationWarning::"]
markers = [
  "unit: Isolated unit tests",
  "integration: Integration tests",
  # Testcontainers require Docker to run but it's too complex for CI environments (macOS / Windows)
  "docker: Tests that require Docker to run",
]

[tool.coverage.run]
include = ["aws_annoying/*"]
omit = ["*tests*"]
branch = true
parallel = true

[tool.coverage.report]
skip_empty = true
show_missing = true
exclude_lines = ["pragma: no cover", "if TYPE_CHECKING"]
