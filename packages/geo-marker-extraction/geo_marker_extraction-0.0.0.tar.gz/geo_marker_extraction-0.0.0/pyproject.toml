[build-system]
requires = ["setuptools>=61.0.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "geo-marker-extraction"
version = "0.0.0"
description = "Extract markers from collections of geo-referenced images"
readme = "README.md"
authors = [
    { name = "John Gardner", email = "gardner.john97@gmail.com" },
    { name = "Harri Ravenscroft", email = "harri.ravenscroft@hotmail.co.uk " },
]
license = { file = "LICENSE" }
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
]
keywords = []
dependencies = [
    "jaxtyping>=0.2.36",
    "locache>=4.0.2",
    "matplotlib>=3.9.4",
    "networkx>=3.5",
    "numpy>=2.0.2",
    "opencv-python>=4.11.0.86",
    "optuna>=4.5.0",
    "pandas>=2.3.2",
    "pillow>=11.3.0",
    "rdp>=0.8",
    "scikit-learn>=1.6.1",
]
requires-python = ">=3.11"

[dependency-groups]
dev = ["ruff>=0.12.10"]

[project.optional-dependencies]
demo = [
    "folium>=0.20.0",
    "ipywidgets>=8.1.7",
 "notebook>=7.4.5",
]

[project.urls]
Homepage = "https://github.com/jla-gardner/geo-marker-extraction"

[tool.ruff]
line-length = 80
indent-width = 4
target-version = "py311"

[tool.ruff.lint]
select = ["E", "F", "UP", "B", "SIM", "I"]
ignore = ["SIM300", "E402", "E703", "F722", "UP037", "F821"]
fixable = ["ALL"]
unfixable = []
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"


[tool.ruff.lint.pydocstyle]
convention = "numpy"
