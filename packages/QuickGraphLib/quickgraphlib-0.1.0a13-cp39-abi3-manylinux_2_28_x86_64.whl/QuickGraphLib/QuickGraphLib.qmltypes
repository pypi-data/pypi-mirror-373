import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by qmltyperegistrar.

Module {
    Component {
        file: "AxisHelper.hpp"
        name: "AxisHelper"
        accessSemantics: "reference"
        prototype: "QObject"
        exports: ["QuickGraphLib/AxisHelper 1.0"]
        exportMetaObjectRevisions: [256]
        Property {
            name: "ticks"
            type: "double"
            isList: true
            bindable: "bindableTicks"
            read: "ticks"
            write: "setTicks"
            notify: "ticksChanged"
            index: 0
            isRequired: true
        }
        Property {
            name: "dataTransform"
            type: "QMatrix4x4"
            bindable: "bindableDataTransform"
            read: "dataTransform"
            write: "setDataTransform"
            notify: "dataTransformChanged"
            index: 1
            isRequired: true
        }
        Property {
            name: "direction"
            type: "int"
            bindable: "bindableDirection"
            read: "direction"
            write: "setDirection"
            notify: "directionChanged"
            index: 2
            isRequired: true
        }
        Property {
            name: "width"
            type: "double"
            bindable: "bindableWidth"
            read: "width"
            write: "setWidth"
            notify: "widthChanged"
            index: 3
            isRequired: true
        }
        Property {
            name: "height"
            type: "double"
            bindable: "bindableHeight"
            read: "height"
            write: "setHeight"
            notify: "heightChanged"
            index: 4
            isRequired: true
        }
        Property {
            name: "tickLength"
            type: "double"
            bindable: "bindableTickLength"
            read: "tickLength"
            write: "setTickLength"
            notify: "tickLengthChanged"
            index: 5
        }
        Property {
            name: "path"
            type: "QPolygonF"
            bindable: "bindablePath"
            read: "path"
            notify: "pathChanged"
            index: 6
            isReadonly: true
        }
        Property {
            name: "tickModel"
            type: "AxisTickModel"
            isPointer: true
            read: "tickModel"
            index: 7
            isReadonly: true
            isPropertyConstant: true
        }
        Signal { name: "ticksChanged" }
        Signal { name: "dataTransformChanged" }
        Signal { name: "directionChanged" }
        Signal { name: "widthChanged" }
        Signal { name: "heightChanged" }
        Signal { name: "tickLengthChanged" }
        Signal { name: "pathChanged" }
    }
    Component {
        file: "AxisHelper.hpp"
        name: "AxisTickModel"
        accessSemantics: "reference"
        prototype: "QAbstractListModel"
        exports: ["QuickGraphLib/AxisTickModel 1.0"]
        exportMetaObjectRevisions: [256]
        Method { name: "_updateToNewTicks" }
    }
    Component {
        file: "ColorMaps.hpp"
        name: "ColorMaps"
        accessSemantics: "reference"
        prototype: "QObject"
        exports: ["QuickGraphLib/ColorMaps 1.0"]
        isCreatable: false
        isSingleton: true
        exportMetaObjectRevisions: [256]
        Enum {
            name: "ColorMapName"
            values: [
                "Grayscale",
                "Magma",
                "Inferno",
                "Plasma",
                "Viridis",
                "Cividis",
                "Twilight",
                "TwilightShifted",
                "Turbo"
            ]
        }
        Method {
            name: "colors"
            type: "QColor"
            isList: true
            isMethodConstant: true
            Parameter { name: "colorMapName"; type: "ColorMapName" }
        }
        Method {
            name: "colorMapName"
            type: "QString"
            isMethodConstant: true
            Parameter { name: "colorMapName"; type: "ColorMapName" }
        }
    }
    Component {
        file: "Helpers.hpp"
        name: "Helpers"
        accessSemantics: "reference"
        prototype: "QObject"
        exports: ["QuickGraphLib/Helpers 1.0"]
        isCreatable: false
        isSingleton: true
        exportMetaObjectRevisions: [256]
        Method {
            name: "linspace"
            type: "double"
            isList: true
            Parameter { name: "min"; type: "double" }
            Parameter { name: "max"; type: "double" }
            Parameter { name: "num"; type: "int" }
        }
        Method {
            name: "range"
            type: "int"
            isList: true
            Parameter { name: "min"; type: "int" }
            Parameter { name: "max"; type: "int" }
            Parameter { name: "step"; type: "int" }
        }
        Method {
            name: "range"
            type: "int"
            isList: true
            isCloned: true
            Parameter { name: "min"; type: "int" }
            Parameter { name: "max"; type: "int" }
        }
        Method {
            name: "tickLocator"
            type: "double"
            isList: true
            Parameter { name: "min"; type: "double" }
            Parameter { name: "max"; type: "double" }
            Parameter { name: "maxNum"; type: "int" }
        }
        Method {
            name: "mapPoints"
            type: "QPolygonF"
            Parameter { name: "points"; type: "QVariant" }
            Parameter { name: "dataTransform"; type: "QMatrix4x4" }
        }
        Method {
            name: "exportToSvg"
            type: "bool"
            Parameter { name: "item"; type: "QQuickItem"; isPointer: true }
            Parameter { name: "path"; type: "QUrl" }
        }
        Method {
            name: "exportToPng"
            type: "bool"
            Parameter { name: "item"; type: "QQuickItem"; isPointer: true }
            Parameter { name: "path"; type: "QUrl" }
            Parameter { name: "dpi"; type: "int" }
        }
        Method {
            name: "exportToPng"
            type: "bool"
            isCloned: true
            Parameter { name: "item"; type: "QQuickItem"; isPointer: true }
            Parameter { name: "path"; type: "QUrl" }
        }
        Method {
            name: "exportToPicture"
            type: "QPicture"
            Parameter { name: "item"; type: "QQuickItem"; isPointer: true }
        }
    }
    Component {
        file: "ImageView.hpp"
        name: "ImageView"
        accessSemantics: "reference"
        defaultProperty: "data"
        parentProperty: "parent"
        prototype: "QQuickItem"
        exports: ["QuickGraphLib/ImageView 1.0"]
        exportMetaObjectRevisions: [256]
        Property {
            name: "fillMode"
            type: "int"
            bindable: "bindableFillMode"
            read: "fillMode"
            write: "setFillMode"
            notify: "fillModeChanged"
            index: 0
        }
        Property {
            name: "alignment"
            type: "int"
            bindable: "bindableAlignment"
            read: "alignment"
            write: "setAlignment"
            notify: "alignmentChanged"
            index: 1
        }
        Property {
            name: "mirrorHorizontally"
            type: "bool"
            bindable: "bindableMirrorHorizontally"
            read: "mirrorHorizontally"
            write: "setMirrorHorizontally"
            notify: "mirrorHorizontallyChanged"
            index: 2
        }
        Property {
            name: "mirrorVertically"
            type: "bool"
            bindable: "bindableMirrorVertically"
            read: "mirrorVertically"
            write: "setMirrorVertically"
            notify: "mirrorVerticallyChanged"
            index: 3
        }
        Property {
            name: "transpose"
            type: "bool"
            bindable: "bindableTranspose"
            read: "transpose"
            write: "setTranspose"
            notify: "transposeChanged"
            index: 4
        }
        Property {
            name: "source"
            type: "QVariant"
            bindable: "bindableSource"
            read: "source"
            write: "setSource"
            notify: "sourceChanged"
            index: 5
        }
        Property {
            name: "colormap"
            type: "QVariant"
            bindable: "bindableColormap"
            read: "colormap"
            write: "setColormap"
            notify: "colormapChanged"
            index: 6
        }
        Property { name: "min"; type: "double"; read: "min"; write: "setMin"; notify: "minChanged"; index: 7 }
        Property { name: "max"; type: "double"; read: "max"; write: "setMax"; notify: "maxChanged"; index: 8 }
        Property {
            name: "autoMin"
            type: "bool"
            bindable: "bindableAutoMin"
            read: "autoMin"
            write: "setAutoMin"
            notify: "autoMinChanged"
            index: 9
        }
        Property {
            name: "autoMax"
            type: "bool"
            bindable: "bindableAutoMax"
            read: "autoMax"
            write: "setAutoMax"
            notify: "autoMaxChanged"
            index: 10
        }
        Property {
            name: "sourceSize"
            type: "QSize"
            read: "sourceSize"
            write: "setSourceSize"
            notify: "sourceSizeChanged"
            index: 11
        }
        Property {
            name: "paintedRect"
            type: "QRectF"
            read: "paintedRect"
            notify: "paintedRectChanged"
            index: 12
            isReadonly: true
        }
        Signal { name: "fillModeChanged" }
        Signal { name: "alignmentChanged" }
        Signal { name: "mirrorHorizontallyChanged" }
        Signal { name: "mirrorVerticallyChanged" }
        Signal { name: "transposeChanged" }
        Signal { name: "sourceChanged" }
        Signal { name: "colormapChanged" }
        Signal { name: "minChanged" }
        Signal { name: "maxChanged" }
        Signal { name: "autoMinChanged" }
        Signal { name: "autoMaxChanged" }
        Signal { name: "sourceSizeChanged" }
        Signal { name: "paintedRectChanged" }
    }
    Component {
        file: "Foreign.hpp"
        name: "QGLDoubleList"
        accessSemantics: "sequence"
        valueType: "qreal"
    }
    Component {
        file: "Foreign.hpp"
        name: "QGLPolygonF"
        accessSemantics: "sequence"
        valueType: "QPointF"
    }
    Component {
        file: "Foreign.hpp"
        name: "QPolygonF"
        accessSemantics: "sequence"
        valueType: "QPointF"
    }
    Component {
        file: "ShapeRepeaterHelper.hpp"
        name: "ShapeRepeaterHelper"
        accessSemantics: "reference"
        prototype: "QObject"
        exports: ["QuickGraphLib/ShapeRepeaterHelper 1.0"]
        isCreatable: false
        isSingleton: true
        exportMetaObjectRevisions: [256]
        Method {
            name: "insertObject"
            Parameter { name: "graphArea"; type: "QQuickItem"; isPointer: true }
            Parameter { name: "repeater"; type: "QObject"; isPointer: true }
            Parameter { name: "obj"; type: "QObject"; isPointer: true }
            Parameter { name: "index"; type: "int" }
        }
        Method {
            name: "removeObject"
            Parameter { name: "graphArea"; type: "QQuickItem"; isPointer: true }
            Parameter { name: "obj"; type: "QObject"; isPointer: true }
        }
    }
}
