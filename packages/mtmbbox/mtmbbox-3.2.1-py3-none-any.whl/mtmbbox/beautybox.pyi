# This file is generated automatically by beautybox.py.
# Do not edit this file manually.

from typing import Any, Union
from .constants import PaymentType
from .request import BBoxCryptoTemplate, AsyncBBoxCryptoTemplate

class BeautyBox:
    @staticmethod
    def user_login(crypto: BBoxCryptoTemplate, username: str, password: str, certcode: str, captcha: str = '9d184bc8a496a52cfdc2594f85f2639a', points: str = '26,37', rtype: str = 'a', **kwargs) -> Any: ...

    @staticmethod
    def user_bind(crypto: BBoxCryptoTemplate, token: str, paypwd: str, **kwargs) -> Any: ...

    @staticmethod
    def user_unbind(crypto: BBoxCryptoTemplate, token: str, paypwd: str, **kwargs) -> Any: ...

    @staticmethod
    def user_assets(crypto: BBoxCryptoTemplate, token: str, **kwargs) -> Any: ...

    @staticmethod
    def txn_market_orders_list(crypto: BBoxCryptoTemplate, token: str, rtype: int, **kwargs) -> Any: ...

    @staticmethod
    def txn_seller_orders_list(crypto: BBoxCryptoTemplate, token: str, **kwargs) -> Any: ...

    @staticmethod
    def txn_seller_orders_place(crypto: BBoxCryptoTemplate, token: str, order_type: int, paypwd: str, **kwargs) -> Any: ...

    @staticmethod
    def txn_seller_orders_confirm(crypto: BBoxCryptoTemplate, token: str, order_id: int, paypwd: str, **kwargs) -> Any: ...

    @staticmethod
    def txn_seller_orders_dispute(crypto: BBoxCryptoTemplate, token: str, order_id: int, paypwd: str, **kwargs) -> Any: ...

    @staticmethod
    def txn_buyer_orders_list(crypto: BBoxCryptoTemplate, token: str, **kwargs) -> Any: ...

    @staticmethod
    def txn_buyer_orders_place(crypto: BBoxCryptoTemplate, token: str, order_id: int, **kwargs) -> Any: ...

    @staticmethod
    def txn_buyer_orders_payment(crypto: BBoxCryptoTemplate, token: str, order_id: int, **kwargs) -> Any: ...

    @staticmethod
    def txn_buyer_orders_nopayment(crypto: BBoxCryptoTemplate, token: str, order_id: int, **kwargs) -> Any: ...

    @staticmethod
    def txn_buyer_orders_cancel(crypto: BBoxCryptoTemplate, token: str, order_id: int, t: str, **kwargs) -> Any: ...

    @staticmethod
    def reg_market_orders_list(crypto: BBoxCryptoTemplate, token: str, **kwargs) -> Any: ...

    @staticmethod
    def reg_buyer_orders_list(crypto: BBoxCryptoTemplate, token: str, **kwargs) -> Any: ...

    @staticmethod
    def reg_buyer_orders_place(crypto: BBoxCryptoTemplate, token: str, order_id: int, **kwargs) -> Any: ...

    @staticmethod
    def reg_buyer_orders_confirm(crypto: BBoxCryptoTemplate, token: str, order_id: int, **kwargs) -> Any: ...

    @staticmethod
    def reg_buyer_orders_cancel(crypto: BBoxCryptoTemplate, token: str, order_id: int, **kwargs) -> Any: ...

    @staticmethod
    def reg_seller_orders_list(crypto: BBoxCryptoTemplate, token: str, **kwargs) -> Any: ...

    @staticmethod
    def reg_seller_orders_place(crypto: BBoxCryptoTemplate, token: str, paypwd: str, **kwargs) -> Any: ...

    @staticmethod
    def reg_seller_orders_confirm(crypto: BBoxCryptoTemplate, token: str, order_id: int, **kwargs) -> Any: ...

    @staticmethod
    def reg_seller_orders_dispute(crypto: BBoxCryptoTemplate, token: str, order_id: int, paypwd: str, **kwargs) -> Any: ...

    @staticmethod
    def notify_isread(crypto: BBoxCryptoTemplate, token: str, **kwargs) -> Any: ...

    @staticmethod
    def notify_remind(crypto: BBoxCryptoTemplate, token: str, page: int = 1, **kwargs) -> Any: ...

    @staticmethod
    def notify_announce(crypto: BBoxCryptoTemplate, token: str, page: int = 1, **kwargs) -> Any: ...

    @staticmethod
    def chat(crypto: BBoxCryptoTemplate, token: str, **kwargs) -> Any: ...

    @staticmethod
    def chat_list(crypto: BBoxCryptoTemplate, token: str, chat_id: int, page: int = 1, **kwargs) -> Any: ...

    @staticmethod
    def chat_send_text(crypto: BBoxCryptoTemplate, token: str, chat_id: int, content: str, **kwargs) -> Any: ...

    @staticmethod
    def chat_send_image(crypto: BBoxCryptoTemplate, token: str, chat_id: int, image_b64: str, **kwargs) -> Any: ...

    @staticmethod
    def chat_pic(crypto: BBoxCryptoTemplate, chat_id: int, **kwargs) -> Any: ...

    @staticmethod
    def user_payment_list(crypto: BBoxCryptoTemplate, token: str, **kwargs) -> Any: ...

    @staticmethod
    def user_payment_edit(crypto: BBoxCryptoTemplate, token: str, payid: int, payurl: str, paypwd: str, **kwargs) -> Any: ...

    @staticmethod
    def user_payment_delete(crypto: BBoxCryptoTemplate, token: str, payid: int, paypwd: str, **kwargs) -> Any: ...

    @staticmethod
    def user_payment_new(crypto: BBoxCryptoTemplate, token: str, aurl: str, atype: Union[PaymentType, int], paypwd: str, **kwargs) -> Any: ...


class AsyncBeautyBox:
    @staticmethod
    async def user_login(crypto: AsyncBBoxCryptoTemplate, username: str, password: str, certcode: str, captcha: str = '9d184bc8a496a52cfdc2594f85f2639a', points: str = '26,37', rtype: str = 'a', **kwargs) -> Any: ...

    @staticmethod
    async def user_bind(crypto: AsyncBBoxCryptoTemplate, token: str, paypwd: str, **kwargs) -> Any: ...

    @staticmethod
    async def user_unbind(crypto: AsyncBBoxCryptoTemplate, token: str, paypwd: str, **kwargs) -> Any: ...

    @staticmethod
    async def user_assets(crypto: AsyncBBoxCryptoTemplate, token: str, **kwargs) -> Any: ...

    @staticmethod
    async def txn_market_orders_list(crypto: AsyncBBoxCryptoTemplate, token: str, rtype: int, **kwargs) -> Any: ...

    @staticmethod
    async def txn_seller_orders_list(crypto: AsyncBBoxCryptoTemplate, token: str, **kwargs) -> Any: ...

    @staticmethod
    async def txn_seller_orders_place(crypto: AsyncBBoxCryptoTemplate, token: str, order_type: int, paypwd: str, **kwargs) -> Any: ...

    @staticmethod
    async def txn_seller_orders_confirm(crypto: AsyncBBoxCryptoTemplate, token: str, order_id: int, paypwd: str, **kwargs) -> Any: ...

    @staticmethod
    async def txn_seller_orders_dispute(crypto: AsyncBBoxCryptoTemplate, token: str, order_id: int, paypwd: str, **kwargs) -> Any: ...

    @staticmethod
    async def txn_buyer_orders_list(crypto: AsyncBBoxCryptoTemplate, token: str, **kwargs) -> Any: ...

    @staticmethod
    async def txn_buyer_orders_place(crypto: AsyncBBoxCryptoTemplate, token: str, order_id: int, **kwargs) -> Any: ...

    @staticmethod
    async def txn_buyer_orders_payment(crypto: AsyncBBoxCryptoTemplate, token: str, order_id: int, **kwargs) -> Any: ...

    @staticmethod
    async def txn_buyer_orders_nopayment(crypto: AsyncBBoxCryptoTemplate, token: str, order_id: int, **kwargs) -> Any: ...

    @staticmethod
    async def txn_buyer_orders_cancel(crypto: AsyncBBoxCryptoTemplate, token: str, order_id: int, t: str, **kwargs) -> Any: ...

    @staticmethod
    async def reg_market_orders_list(crypto: AsyncBBoxCryptoTemplate, token: str, **kwargs) -> Any: ...

    @staticmethod
    async def reg_buyer_orders_list(crypto: AsyncBBoxCryptoTemplate, token: str, **kwargs) -> Any: ...

    @staticmethod
    async def reg_buyer_orders_place(crypto: AsyncBBoxCryptoTemplate, token: str, order_id: int, **kwargs) -> Any: ...

    @staticmethod
    async def reg_buyer_orders_confirm(crypto: AsyncBBoxCryptoTemplate, token: str, order_id: int, **kwargs) -> Any: ...

    @staticmethod
    async def reg_buyer_orders_cancel(crypto: AsyncBBoxCryptoTemplate, token: str, order_id: int, **kwargs) -> Any: ...

    @staticmethod
    async def reg_seller_orders_list(crypto: AsyncBBoxCryptoTemplate, token: str, **kwargs) -> Any: ...

    @staticmethod
    async def reg_seller_orders_place(crypto: AsyncBBoxCryptoTemplate, token: str, paypwd: str, **kwargs) -> Any: ...

    @staticmethod
    async def reg_seller_orders_confirm(crypto: AsyncBBoxCryptoTemplate, token: str, order_id: int, **kwargs) -> Any: ...

    @staticmethod
    async def reg_seller_orders_dispute(crypto: AsyncBBoxCryptoTemplate, token: str, order_id: int, paypwd: str, **kwargs) -> Any: ...

    @staticmethod
    async def notify_isread(crypto: AsyncBBoxCryptoTemplate, token: str, **kwargs) -> Any: ...

    @staticmethod
    async def notify_remind(crypto: AsyncBBoxCryptoTemplate, token: str, page: int = 1, **kwargs) -> Any: ...

    @staticmethod
    async def notify_announce(crypto: AsyncBBoxCryptoTemplate, token: str, page: int = 1, **kwargs) -> Any: ...

    @staticmethod
    async def chat(crypto: AsyncBBoxCryptoTemplate, token: str, **kwargs) -> Any: ...

    @staticmethod
    async def chat_list(crypto: AsyncBBoxCryptoTemplate, token: str, chat_id: int, page: int = 1, **kwargs) -> Any: ...

    @staticmethod
    async def chat_send_text(crypto: AsyncBBoxCryptoTemplate, token: str, chat_id: int, content: str, **kwargs) -> Any: ...

    @staticmethod
    async def chat_send_image(crypto: AsyncBBoxCryptoTemplate, token: str, chat_id: int, image_b64: str, **kwargs) -> Any: ...

    @staticmethod
    async def chat_pic(crypto: AsyncBBoxCryptoTemplate, chat_id: int, **kwargs) -> Any: ...

    @staticmethod
    async def user_payment_list(crypto: AsyncBBoxCryptoTemplate, token: str, **kwargs) -> Any: ...

    @staticmethod
    async def user_payment_edit(crypto: AsyncBBoxCryptoTemplate, token: str, payid: int, payurl: str, paypwd: str, **kwargs) -> Any: ...

    @staticmethod
    async def user_payment_delete(crypto: AsyncBBoxCryptoTemplate, token: str, payid: int, paypwd: str, **kwargs) -> Any: ...

    @staticmethod
    async def user_payment_new(crypto: AsyncBBoxCryptoTemplate, token: str, aurl: str, atype: Union[PaymentType, int], paypwd: str, **kwargs) -> Any: ...

