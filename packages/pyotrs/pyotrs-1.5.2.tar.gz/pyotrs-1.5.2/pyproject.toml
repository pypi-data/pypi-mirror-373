[tool.poetry]
name = "pyotrs"
version = "1.5.2"
description = "Python wrapper for OTRS (using REST API)"
authors = ["Robert Habermann <mail@rhab.de>"]
maintainers = ["Robert Habermann <mail@rhab.de>"]
license = "MIT"
readme = "README.rst"
homepage = "https://gitlab.com/rhab/PyOTRS"
repository = "https://gitlab.com/rhab/PyOTRS"
classifiers = [
    'Development Status :: 4 - Beta',
    'Environment :: Console',
    'Environment :: Web Environment',
    'Framework :: Pytest',
    'Framework :: Sphinx',
    'Intended Audience :: Developers',
    'Intended Audience :: System Administrators',
    'License :: OSI Approved :: MIT License',
    'Operating System :: POSIX :: Linux',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3.8',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
    'Programming Language :: Python :: 3.12',
    'Programming Language :: Python :: 3.13',
    'Topic :: Documentation :: Sphinx',
]
exclude = ["tests", "docs"]

[tool.poetry.scripts]
pyotrs = "cli.PyOTRS:cli"

[tool.poetry.extras]
cli = ["click", "colorama"]

[tool.poetry.dependencies]
python = ">=3.8.1,<3.14"
click = { version = ">=7.0", optional = true }
colorama = { version = ">=0.4.1", optional = true }
deprecation = "^2.1.0"
requests = ">=2.32.4"


[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
appdirs = "^1.4.4"
atomicwrites = "^1.4.1"
attrs = "^23.2.0"
babel = "^2.14.0"
bleach = "^6.1.0"
certifi = "^2024.2.2"
chardet = "^5.2.0"
check-manifest = "^0.49"
configparser = "^6.0.0"
cookies = "^2.2.1"
enum34 = "^1.1.10"
flake8 = "^7.0.0"
flake8-builtins = "^2.2.0"
funcsigs = "^1.0.2"
html5lib = "^1.1"
idna = "^3.6"
imagesize = "^1.4.1"
isort = "^5.13.2"
jinja2 = "^3.1.3"
linecache2 = "^1.0.0"
markupsafe = "^2.1.4"
mccabe = "^0.7.0"
mock = "^5.1.0"
more-itertools = "^10.2.0"
ordereddict = "^1.1"
packaging = "^23.2"
pathlib2 = "^2.3.7.post1"
pbr = "^6.0.0"
pep8 = "^1.7.1"
pockets = "^0.9.1"
pycodestyle = "^2.11.1"
pyflakes = "^3.2.0"
pygments = "^2.17.2"
pyparsing = "^3.1.1"
pytest = "^7.4.4"
pytest-cov = "^4.1.0"
pytz = "^2023.3.post1"
recommonmark = "^0.7.1"
responses = "^0.24.1"
ruff = "^0.1.14"
scandir = "^1.10.0"
six = "^1.16.0"
toml = "^0.10.2"
tox = "^4.12.1"
traceback2 = "^1.4.0"
urllib3 = "^2.1.0"
virtualenv = "^20.25.0"
webencodings = "^0.5.1"


[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
docutils = "^0.20.1"
sphinx-rtd-theme = "^2.0.0"
sphinxcontrib-jquery = "^4.1"
sphinxcontrib-napoleon = "^0.7"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.distutils.bdist_wheel]
universal = true

[tool.pytest]
norecursedirs = ".git"
addopts = "--doctest-modules"

[tool.coverage.run]
include = ["pyotrs/*"]

[tool.coverage.report]
include = ["pyotrs/*"]

[tool.ruff]
# enforce 132 char line length
line-length = 132

# Enforce pyflakes(F), pycodestyle(E, W), isort (I), bugbears (B), pep8-naming (N), flake8-comprehensions (C4) and pyupgrade (UP) rules.
lint.select = ["F", "E", "W", "I", "B", "N", "RET", "C4", "UP"]

# Ignore some errors
lint.ignore = [
    "RET505",  # ToDo(frennkie): unnecessary else after return
    "RET506",  # ToDo(frennkie): unnecessary else after raise
    "B904"  # ToDo(frennkie): raise from err or None in Exceptions
]

[tool.tox]
legacy_tox_ini = """
# --------------------------------------------------------------------
# TOX Setup
# --------------------------------------------------------------------

[tox]
isolated_build = True
envlist =
    py38,
    py39,
    py310,
    py311,
    py312,
    ruff,
    docs

[testenv]
deps =
    pytest
    pytest-cov
    mock
    responses

commands =
    pytest -vv tests

# --------------------------------------------------------------------
# Linting
# --------------------------------------------------------------------
[testenv:ruff]
deps =
    ruff

commands =
    ruff check tests/ pyotrs/

# --------------------------------------------------------------------
# Documentation
# --------------------------------------------------------------------
[testenv:docs]
basepython =
    python3.11

deps =
    sphinx
    sphinxcontrib-napoleon
    sphinx_rtd_theme

commands =
    # sphinx-build -b dirhtml {toxinidir}/docs/ {toxinidir}/build/docs/
    sphinx-build -b html {toxinidir}/docs/ {toxinidir}/build/docs/

"""
