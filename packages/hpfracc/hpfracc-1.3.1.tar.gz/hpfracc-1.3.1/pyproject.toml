[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "hpfracc"
version = "1.3.1"
description = "High-Performance Fractional Calculus Library with Machine Learning Integration and Graph Neural Networks"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Davian R. Chin", email = "d.r.chin@pgr.reading.ac.uk"}
]
maintainers = [
    {name = "Davian R. Chin", email = "d.r.chin@pgr.reading.ac.uk"}
]
keywords = [
    "fractional calculus",
    "machine learning",
    "graph neural networks",
    "gpu acceleration",
    "scientific computing",
    "mathematics",
    "derivatives",
    "integrals",
    "diffusion",
    "wave equations"
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Mathematics",
    "Topic :: Scientific/Engineering :: Physics",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
]
requires-python = ">=3.8"
dependencies = [
    "numpy>=1.21.0",
    "scipy>=1.7.0",
    "matplotlib>=3.5.0",
    "pandas>=1.3.0",
    "sympy>=1.9.0",
    "numba>=0.56.0",
    "joblib>=1.1.0",
    "torch>=1.12.0",
    "jax>=0.3.0",
    "jaxlib>=0.3.0",
    "optax>=0.1.0",
    "flax>=0.5.0",
    "torch-geometric>=2.1.0",
    "cupy-cuda12x>=12.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "flake8>=5.0.0",
    "black>=22.0.0",
    "mypy>=0.991",
    "pre-commit>=2.20.0",
]
docs = [
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.0.0",
    "myst-parser>=0.18.0",
]
ml = [
    "torch>=1.12.0",
    "jax>=0.3.0",
    "jaxlib>=0.3.0",
    "optax>=0.1.0",
    "flax>=0.5.0",
    "torch-geometric>=2.1.0",
    "cupy-cuda12x>=12.0.0",
]
gpu = [
    "cupy-cuda12x>=12.0.0",
    "torch>=1.12.0",
    "jax[cuda12]>=0.3.0",
]

[project.urls]
Homepage = "https://github.com/dave2k77/fractional_calculus_library"
Documentation = "https://fractional-calculus-library.readthedocs.io"
"Bug Tracker" = "https://github.com/dave2k77/fractional_calculus_library/issues"
"Source Code" = "https://github.com/dave2k77/fractional_calculus_library"
"Download" = "https://github.com/dave2k77/fractional_calculus_library/releases"
"Academic Contact" = "https://www.reading.ac.uk/people/d.r.chin"

[tool.setuptools.packages.find]
where = ["."]

[tool.setuptools.package-data]
"*" = ["*.txt", "*.md", "*.rst"]

[tool.setuptools.exclude-package-data]
"*" = ["*.pyc", "*.pyo", "*.pyd", "__pycache__", "*.so", "*.dylib", "*.dll"]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "gpu: marks tests as requiring GPU",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["hpfracc"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/env/*",
    "*/build/*",
    "*/dist/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.coverage.html]
directory = "htmlcov"

[tool.coverage.xml]
output = "coverage.xml"

[tool.setuptools.dynamic]
version = {attr = "hpfracc.__version__"}
