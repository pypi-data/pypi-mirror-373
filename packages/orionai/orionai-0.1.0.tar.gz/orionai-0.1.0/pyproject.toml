[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "orionai"
version = "0.1.0"
description = "AI-powered Python assistant for natural language coding"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "AIMLDev726", email = "aistudentlearn4@gmail.com"}
]
maintainers = [
    {name = "AIMLDev726", email = "aistudentlearn4@gmail.com"}
]
keywords = [
    "ai", "python", "assistant", "llm", "coding", "automation", 
    "data-science", "machine-learning", "natural-language"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Education",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Education",
    "Topic :: Utilities"
]
requires-python = ">=3.8"
dependencies = [
    "requests>=2.25.0",
    "rich>=10.0.0",
    "google-generativeai>=0.3.0",
    "openai>=1.0.0",
    "anthropic>=0.8.0"
]

[project.urls]
Homepage = "https://github.com/AIMLDev726/OrionAI"
Documentation = "https://github.com/AIMLDev726/OrionAI/blob/main/docs/"
Repository = "https://github.com/AIMLDev726/OrionAI"
"Bug Tracker" = "https://github.com/AIMLDev726/OrionAI/issues"
Changelog = "https://github.com/AIMLDev726/OrionAI/blob/main/CHANGELOG.md"

[project.optional-dependencies]
data = [
    "pandas>=1.3.0",
    "numpy>=1.21.0",
    "matplotlib>=3.5.0",
    "seaborn>=0.11.0"
]
ml = [
    "scikit-learn>=1.0.0",
    "scipy>=1.7.0"
]
web = [
    "beautifulsoup4>=4.10.0",
    "lxml>=4.6.0"
]
ui = [
    "streamlit>=1.20.0"
]
dev = [
    "pytest>=6.0.0",
    "pytest-cov>=3.0.0",
    "black>=22.0.0",
    "isort>=5.0.0",
    "flake8>=4.0.0",
    "mypy>=0.900"
]
all = [
    "orionai[data,ml,web,ui,dev]"
]

[project.scripts]
orionai-ui = "orionai.ui:main"

[tool.setuptools]
packages = ["orionai", "orionai.python", "orionai.ui", "orionai.core", "orionai.adapters", "orionai.utils"]

[tool.setuptools.package-data]
orionai = ["*.md", "*.txt", "*.yml", "*.yaml"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose"
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests"
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "google.generativeai.*",
    "anthropic.*",
    "streamlit.*",
    "rich.*"
]
ignore_missing_imports = true

[tool.coverage.run]
source = ["orionai"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "setup.py"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError"
]
